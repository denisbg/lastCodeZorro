{
    "sourceFile": "src/theme/front/navbarUniversesNc.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1705666467427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708114588350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,5 +121,5 @@\n         \r\n       </Container>\r\n     </NavCategories>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1710841205078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useEffect, useRef, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useSelector, useDispatch } from \"react-redux\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import {\r\n+  NavCategories,\r\n+  BlocMenuCats,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions\";\r\n+import { useOutsideAlerter } from \"../../helper/events\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { trimChar } from \"../../helper/functions\";\r\n+\r\n+export default function NavbarUniversesNc({ ...props }) {\r\n+  const isNavBartoDisplay = true;  // Version 2024\r\n+  const { slugIdUniverse } = useParams();\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n+  const [more, setMore] = useState(false);\r\n+  const toggle = () => setMore(!more);\r\n+  const ref = useRef(null);\r\n+  useOutsideAlerter(ref, () => setMore(false));\r\n+  const [maxItems, setMaxItems] = useState(false);\r\n+  const dispatch = useDispatch();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const history = useHistory();\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses === false) {\r\n+      dispatch(getAllUniverses());\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (\r\n+      slugIdUniverse &&\r\n+      universe.allUniverses &&\r\n+      universe.allUniverses.length\r\n+    ) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        let key = -1;\r\n+        const universeData = universe.allUniverses.find((u, index) => {\r\n+          key = index;\r\n+          return parseInt(u.id) === parseInt(id);\r\n+        });\r\n+        if (universeData) {\r\n+          setActiveUniverse({ ...universeData, index: key });\r\n+        }\r\n+      }\r\n+    }\r\n+  }, [slugIdUniverse, universe.allUniverses]);\r\n+\r\n+  const checkSearchEngine = (row) => {\r\n+    let url = window.location.pathname.trim();\r\n+    url = trimChar(url, '/');\r\n+    const isHome = url === '';\r\n+    \r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    setMaxItems(isTabletOrMobile ? universe.allUniverses.length : 10);\r\n+  }, [isTabletOrMobile, universe.allUniverses]);\r\n+\r\n+  const showLink = (row) => {\r\n+    return (\r\n+      <a\r\n+        className={`${\r\n+          activeUniverse && activeUniverse?.id === row.id ? \"active\" : \"\"\r\n+        }`}\r\n+        key={row.id}\r\n+        href=\"#\"\r\n+        onClick={() => {\r\n+          if(activeUniverse && activeUniverse.id!=row.id){\r\n+            //on change universe clear InputSearch\r\n+          }\r\n+          setActiveUniverse(row);\r\n+          checkSearchEngine(row);\r\n+          props.setNav(false);\r\n+        }}\r\n+      >\r\n+        <span>{row.name}</span>\r\n+      </a>\r\n+    );\r\n+  };\r\n+\r\n+  return (\r\n+    <NavCategories>\r\n+      <Container>\r\n+        \r\n+        {isNavBartoDisplay && universe.allUniverses && universe.allUniverses.length ? (\r\n+          <BlocMenuCats>\r\n+            {maxItems &&\r\n+              universe.allUniverses\r\n+                .slice(0, maxItems)\r\n+                .map((row, index) => showLink({ ...row, index }))}\r\n+            {maxItems && universe.allUniverses.length > maxItems && (\r\n+              <div\r\n+                className={`autre-nav ${\r\n+                  more || activeUniverse.index >= maxItems ? \"active\" : \"\"\r\n+                }`}\r\n+                onClick={toggle}\r\n+                ref={ref}\r\n+              >\r\n+                <span>Autres</span>\r\n+                <div className={`sub-menu-nav ${more ? \"open\" : \"\"}`}>\r\n+                  {universe.allUniverses\r\n+                    .slice(maxItems, universe.allUniverses.length)\r\n+                    .map((row, index) =>\r\n+                      showLink({ ...row, index: index + maxItems })\r\n+                    )}\r\n+                </div>\r\n+              </div>\r\n+            )}\r\n+          </BlocMenuCats>\r\n+        ) : (\r\n+          \"\"\r\n+        )}\r\n+        \r\n+        \r\n+      </Container>\r\n+    </NavCategories>\r\n+  );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1710843710503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,133 +11,8 @@\n import { useMediaQuery } from \"react-responsive\";\r\n import { trimChar } from \"../../helper/functions\";\r\n \r\n export default function NavbarUniversesNc({ ...props }) {\r\n-  const isNavBartoDisplay = true;  // Version 2024\r\n-  const { slugIdUniverse } = useParams();\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n-  const [more, setMore] = useState(false);\r\n-  const toggle = () => setMore(!more);\r\n-  const ref = useRef(null);\r\n-  useOutsideAlerter(ref, () => setMore(false));\r\n-  const [maxItems, setMaxItems] = useState(false);\r\n-  const dispatch = useDispatch();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const history = useHistory();\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses === false) {\r\n-      dispatch(getAllUniverses());\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (\r\n-      slugIdUniverse &&\r\n-      universe.allUniverses &&\r\n-      universe.allUniverses.length\r\n-    ) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        let key = -1;\r\n-        const universeData = universe.allUniverses.find((u, index) => {\r\n-          key = index;\r\n-          return parseInt(u.id) === parseInt(id);\r\n-        });\r\n-        if (universeData) {\r\n-          setActiveUniverse({ ...universeData, index: key });\r\n-        }\r\n-      }\r\n-    }\r\n-  }, [slugIdUniverse, universe.allUniverses]);\r\n-\r\n-  const checkSearchEngine = (row) => {\r\n-    let url = window.location.pathname.trim();\r\n-    url = trimChar(url, '/');\r\n-    const isHome = url === '';\r\n-    \r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    setMaxItems(isTabletOrMobile ? universe.allUniverses.length : 10);\r\n-  }, [isTabletOrMobile, universe.allUniverses]);\r\n-\r\n-  const showLink = (row) => {\r\n-    return (\r\n-      <a\r\n-        className={`${\r\n-          activeUniverse && activeUniverse?.id === row.id ? \"active\" : \"\"\r\n-        }`}\r\n-        key={row.id}\r\n-        href=\"#\"\r\n-        onClick={() => {\r\n-          if(activeUniverse && activeUniverse.id!=row.id){\r\n-            //on change universe clear InputSearch\r\n-          }\r\n-          setActiveUniverse(row);\r\n-          checkSearchEngine(row);\r\n-          props.setNav(false);\r\n-        }}\r\n-      >\r\n-        <span>{row.name}</span>\r\n-      </a>\r\n-    );\r\n-  };\r\n-\r\n-  return (\r\n-    <NavCategories>\r\n-      <Container>\r\n-        \r\n-        {isNavBartoDisplay && universe.allUniverses && universe.allUniverses.length ? (\r\n-          <BlocMenuCats>\r\n-            {maxItems &&\r\n-              universe.allUniverses\r\n-                .slice(0, maxItems)\r\n-                .map((row, index) => showLink({ ...row, index }))}\r\n-            {maxItems && universe.allUniverses.length > maxItems && (\r\n-              <div\r\n-                className={`autre-nav ${\r\n-                  more || activeUniverse.index >= maxItems ? \"active\" : \"\"\r\n-                }`}\r\n-                onClick={toggle}\r\n-                ref={ref}\r\n-              >\r\n-                <span>Autres</span>\r\n-                <div className={`sub-menu-nav ${more ? \"open\" : \"\"}`}>\r\n-                  {universe.allUniverses\r\n-                    .slice(maxItems, universe.allUniverses.length)\r\n-                    .map((row, index) =>\r\n-                      showLink({ ...row, index: index + maxItems })\r\n-                    )}\r\n-                </div>\r\n-              </div>\r\n-            )}\r\n-          </BlocMenuCats>\r\n-        ) : (\r\n-          \"\"\r\n-        )}\r\n-        \r\n-        \r\n-      </Container>\r\n-    </NavCategories>\r\n-  );\r\n-}\n-import React, { useEffect, useRef, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useSelector, useDispatch } from \"react-redux\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import {\r\n-  NavCategories,\r\n-  BlocMenuCats,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions\";\r\n-import { useOutsideAlerter } from \"../../helper/events\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { trimChar } from \"../../helper/functions\";\r\n-\r\n-export default function NavbarUniversesNc({ ...props }) {\r\n   const isNavBartoDisplay = false;  // Version 2024\r\n   const { slugIdUniverse } = useParams();\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n   const [more, setMore] = useState(false);\r\n"
                },
                {
                    "date": 1710864805812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n           if(activeUniverse && activeUniverse.id!=row.id){\r\n             //on change universe clear InputSearch\r\n           }\r\n           setActiveUniverse(row);\r\n+          console.log(\"TU set Active unviverse\");\r\n           checkSearchEngine(row);\r\n           props.setNav(false);\r\n         }}\r\n       >\r\n"
                },
                {
                    "date": 1710864816366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n           if(activeUniverse && activeUniverse.id!=row.id){\r\n             //on change universe clear InputSearch\r\n           }\r\n           setActiveUniverse(row);\r\n-          console.log(\"TU set Active unviverse\");\r\n+          console.log(\"TU set Active unviverse\", row);\r\n           checkSearchEngine(row);\r\n           props.setNav(false);\r\n         }}\r\n       >\r\n"
                }
            ],
            "date": 1705666467427,
            "name": "Commit-0",
            "content": "import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  NavCategories,\r\n  BlocMenuCats,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { getAllUniverses } from \"../../store/functions/universeActions\";\r\nimport { useOutsideAlerter } from \"../../helper/events\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { trimChar } from \"../../helper/functions\";\r\n\r\nexport default function NavbarUniversesNc({ ...props }) {\r\n  const isNavBartoDisplay = false;  // Version 2024\r\n  const { slugIdUniverse } = useParams();\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  const [more, setMore] = useState(false);\r\n  const toggle = () => setMore(!more);\r\n  const ref = useRef(null);\r\n  useOutsideAlerter(ref, () => setMore(false));\r\n  const [maxItems, setMaxItems] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const universe = useSelector((state) => state.universe);\r\n  const [activeUniverse, setActiveUniverse] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (universe.allUniverses === false) {\r\n      dispatch(getAllUniverses());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      slugIdUniverse &&\r\n      universe.allUniverses &&\r\n      universe.allUniverses.length\r\n    ) {\r\n      const id = slugIdUniverse.split(\"-\").pop();\r\n      if (id) {\r\n        let key = -1;\r\n        const universeData = universe.allUniverses.find((u, index) => {\r\n          key = index;\r\n          return parseInt(u.id) === parseInt(id);\r\n        });\r\n        if (universeData) {\r\n          setActiveUniverse({ ...universeData, index: key });\r\n        }\r\n      }\r\n    }\r\n  }, [slugIdUniverse, universe.allUniverses]);\r\n\r\n  const checkSearchEngine = (row) => {\r\n    let url = window.location.pathname.trim();\r\n    url = trimChar(url, '/');\r\n    const isHome = url === '';\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    setMaxItems(isTabletOrMobile ? universe.allUniverses.length : 10);\r\n  }, [isTabletOrMobile, universe.allUniverses]);\r\n\r\n  const showLink = (row) => {\r\n    return (\r\n      <a\r\n        className={`${\r\n          activeUniverse && activeUniverse?.id === row.id ? \"active\" : \"\"\r\n        }`}\r\n        key={row.id}\r\n        href=\"#\"\r\n        onClick={() => {\r\n          if(activeUniverse && activeUniverse.id!=row.id){\r\n            //on change universe clear InputSearch\r\n          }\r\n          setActiveUniverse(row);\r\n          checkSearchEngine(row);\r\n          props.setNav(false);\r\n        }}\r\n      >\r\n        <span>{row.name}</span>\r\n      </a>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NavCategories>\r\n      <Container>\r\n        \r\n        {isNavBartoDisplay && universe.allUniverses && universe.allUniverses.length ? (\r\n          <BlocMenuCats>\r\n            {maxItems &&\r\n              universe.allUniverses\r\n                .slice(0, maxItems)\r\n                .map((row, index) => showLink({ ...row, index }))}\r\n            {maxItems && universe.allUniverses.length > maxItems && (\r\n              <div\r\n                className={`autre-nav ${\r\n                  more || activeUniverse.index >= maxItems ? \"active\" : \"\"\r\n                }`}\r\n                onClick={toggle}\r\n                ref={ref}\r\n              >\r\n                <span>Autres</span>\r\n                <div className={`sub-menu-nav ${more ? \"open\" : \"\"}`}>\r\n                  {universe.allUniverses\r\n                    .slice(maxItems, universe.allUniverses.length)\r\n                    .map((row, index) =>\r\n                      showLink({ ...row, index: index + maxItems })\r\n                    )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </BlocMenuCats>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        \r\n        \r\n      </Container>\r\n    </NavCategories>\r\n  );\r\n}\r\n"
        }
    ]
}