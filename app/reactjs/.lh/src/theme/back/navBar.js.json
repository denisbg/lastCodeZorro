{
    "sourceFile": "src/theme/back/navBar.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1714486922775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714486952731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,13 +173,13 @@\n         <Link\r\n           to={\"#\"}\r\n           onClick={(e) => {\r\n             e.preventDefault();\r\n-            setShowModal(false);\r\n+         \r\n             logout();\r\n-            if (isTabletOrMobile) {\r\n+            //if (isTabletOrMobile) {\r\n               window.location.href = '/';\r\n-            }\r\n+            //}\r\n           }}\r\n         >\r\n           <LogoutIcon /> Se déconnecter\r\n         </Link>\r\n"
                },
                {
                    "date": 1716462090004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { getAllThreads } from \"../../store/functions/threadActions\";\r\n import { Redirect } from \"react-router\";\r\n \r\n export default function Navbar({ className }) {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n   const dispatch = useDispatch();\r\n   const auth = useSelector((state) => state.auth);\r\n   const thread = useSelector((state) => state.thread);\r\n"
                },
                {
                    "date": 1716462480593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { getAllThreads } from \"../../store/functions/threadActions\";\r\n import { Redirect } from \"react-router\";\r\n \r\n export default function Navbar({ className }) {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n   const dispatch = useDispatch();\r\n   const auth = useSelector((state) => state.auth);\r\n   const thread = useSelector((state) => state.thread);\r\n"
                },
                {
                    "date": 1718095001688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { getAllThreads } from \"../../store/functions/threadActions\";\r\n import { Redirect } from \"react-router\";\r\n \r\n export default function Navbar({ className }) {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n   const dispatch = useDispatch();\r\n   const auth = useSelector((state) => state.auth);\r\n   const thread = useSelector((state) => state.thread);\r\n"
                }
            ],
            "date": 1714486922775,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actionTypes from \"../../store/functions/actionTypes\";\r\nimport {\r\n  ForumIcon,\r\n  VitrineIcon,\r\n  CommandesIcon,\r\n  DocumentIcon,\r\n  HomeIcon,\r\n  PrestationsIcon,\r\n  ChatIcon,\r\n  SettingsIcon,\r\n  LogoutIcon,\r\n} from \"../../assets/styles/icons\";\r\nimport {\r\n  NavMenu,\r\n  LinkItem,\r\n  NameProfil,\r\n} from \"../../assets/styles/adminStyle/sideNavStyle\";\r\nimport ROUTES from \"../../config/routes\";\r\nimport { LINK_EXTERNAL_Forum, PREFIX_BACKEND, ROLES } from \"../../vars\";\r\nimport { getAllThreads } from \"../../store/functions/threadActions\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport default function Navbar({ className }) {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1199px)\" });\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const thread = useSelector((state) => state.thread);\r\n  const isCompleted = auth.roles.includes(ROLES.ROLE_REPAIRMAN)\r\n    ? auth.user.isCompleted\r\n    : true;\r\n  const [needConnection] = useState(\r\n    window.location.pathname.indexOf(PREFIX_BACKEND) > -1 ||\r\n      window.location.pathname.indexOf(\"/demande\") > -1\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (auth.user) dispatch(getAllThreads());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    dispatch({\r\n      type: actionTypes.LOGOUT,\r\n    });\r\n  };\r\n\r\n  if (auth.token === null && needConnection)\r\n    return <Redirect to={ROUTES.LOGIN.url} />;\r\n\r\n  return (\r\n    <NavMenu className={`nav-menu ${className}`}>\r\n      {isMobile && (\r\n        <NameProfil className=\"full-name-user\">\r\n          Bonjour{\" \"}\r\n          <span>\r\n            {auth.user.firstName} {auth.user.lastName}\r\n          </span>\r\n        </NameProfil>\r\n      )}\r\n\r\n      <LinkItem to={ROUTES.HOME.url} exact activeClassName=\"active\">\r\n        <HomeIcon /> Accueil\r\n      </LinkItem>\r\n      {auth.roles.includes(ROLES.ROLE_REPAIRMAN) && (\r\n        <LinkItem to={ROUTES.REPA_VITRINE.url}>\r\n          <VitrineIcon /> Ma vitrine\r\n        </LinkItem>\r\n      )}\r\n\r\n      <LinkItem\r\n        to={isCompleted ? ROUTES.COMMANDES.url : \"#\"}\r\n        className={!isCompleted ? \"disable\" : \"\"}\r\n      >\r\n        <CommandesIcon /> {auth.roles.includes(ROLES.ROLE_ADMIN) ? \"\" : \"Mes\"}{\" \"}\r\n        Commandes\r\n      </LinkItem>\r\n      <LinkItem\r\n        to={isCompleted ? ROUTES.DEVIS.url : \"#\"}\r\n        className={!isCompleted ? \"disable\" : \"\"}\r\n      >\r\n        <DocumentIcon />\r\n        {auth.roles.includes(ROLES.ROLE_ADMIN) ? \"\" : \"Mes\"} Devis\r\n      </LinkItem>\r\n      {!auth.roles.includes(ROLES.ROLE_ADMIN) && (\r\n        <LinkItem\r\n          to={\r\n            isCompleted &&\r\n            thread.threads &&\r\n            thread.threads.filter((th) => th.messages.length).length\r\n              ? ROUTES.MESSAGERIE.url\r\n              : \"#\"\r\n          }\r\n          className={\r\n            !isCompleted ||\r\n            !thread.threads ||\r\n            !thread.threads.filter((th) => th.messages.length).length\r\n              ? \"disable\"\r\n              : \"s\"\r\n          }\r\n        >\r\n          <ChatIcon /> Messagerie\r\n        </LinkItem>\r\n      )}\r\n\r\n      {auth.roles.includes(ROLES.ROLE_ADMIN) && (\r\n        <LinkItem to={ROUTES.CATEGORIES.url}>\r\n          <DocumentIcon />\r\n          Catégories\r\n        </LinkItem>\r\n      )}\r\n\r\n      {(auth.roles.includes(ROLES.ROLE_ADMIN) ||\r\n        auth.roles.includes(ROLES.ROLE_REPAIRMAN)) && (\r\n        <>\r\n          <LinkItem\r\n            to={isCompleted ? ROUTES.SERVICES.url : \"#\"}\r\n            className={!isCompleted ? \"disable\" : \"\"}\r\n          >\r\n            <DocumentIcon />\r\n            Services\r\n          </LinkItem>\r\n          <LinkItem\r\n            to={isCompleted ? ROUTES.PRESTATIONS.url : \"#\"}\r\n            className={!isCompleted ? \"disable\" : \"\"}\r\n          >\r\n            <PrestationsIcon /> Prestations\r\n          </LinkItem>\r\n\r\n          {auth.roles.includes(ROLES.ROLE_REPAIRMAN) && (\r\n            <LinkItem to={{ pathname: LINK_EXTERNAL_Forum }} target=\"_blank\">\r\n              <ChatIcon /> Forum\r\n            </LinkItem>\r\n          )}\r\n        </>\r\n      )}\r\n      {auth.roles.includes(ROLES.ROLE_ADMIN) && (\r\n        <>\r\n          <LinkItem to={ROUTES.REPARATEURS.url}>\r\n            <ForumIcon /> Réparateurs\r\n          </LinkItem>\r\n          <LinkItem to={ROUTES.CLIENTS.url}>\r\n            <ForumIcon /> Clients\r\n          </LinkItem>\r\n          <LinkItem to={ROUTES.ADMINS.url}>\r\n            <ForumIcon /> Administrateurs\r\n          </LinkItem>\r\n        </>\r\n      )}\r\n\r\n      {!auth.roles.includes(ROLES.ROLE_ADMIN) && (\r\n        <LinkItem\r\n          to={isCompleted ? ROUTES.SETTINGS.url : \"#\"}\r\n          className={!isCompleted ? \"disable\" : \"\"}\r\n        >\r\n          <SettingsIcon /> Paramètres\r\n        </LinkItem>\r\n      )}\r\n\r\n      {auth.roles.includes(ROLES.ROLE_ADMIN) && (\r\n        <LinkItem\r\n          to={ROUTES.SETTINGS.url}\r\n        >\r\n          <SettingsIcon /> Paramètres\r\n        </LinkItem>\r\n      )}\r\n\r\n      <div className=\"logout-bloc\">\r\n        <Link\r\n          to={\"#\"}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setShowModal(false);\r\n            logout();\r\n            if (isTabletOrMobile) {\r\n              window.location.href = '/';\r\n            }\r\n          }}\r\n        >\r\n          <LogoutIcon /> Se déconnecter\r\n        </Link>\r\n      </div>\r\n    </NavMenu>\r\n  );\r\n}\r\n"
        }
    ]
}