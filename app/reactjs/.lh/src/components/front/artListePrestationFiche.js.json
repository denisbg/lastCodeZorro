{
    "sourceFile": "src/components/front/artListePrestationFiche.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 72,
            "patches": [
                {
                    "date": 1706880994831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706881202558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import PrestationFiche from \"./prestationFiche\";\r\n import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n-import PrestationFicheMap from \"./prestationFicheMap\";\r\n+import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n"
                },
                {
                    "date": 1706881219778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n \r\n   const places = benefits.length\r\n     ? benefits.map((row) => {\r\n         return (\r\n-          <PrestationFicheMap\r\n+          <ArtPrestationFicheMap\r\n             key={row.id}\r\n             lat={row.user.latitude}\r\n             lng={row.user.longitude}\r\n             text={\r\n"
                },
                {
                    "date": 1706881295323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect, useRef } from \"react\";\r\n import Select from \"../ui-elements/select\";\r\n import PrestationFiche from \"./prestationFiche\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n@@ -153,9 +153,9 @@\n       },\r\n     ],\r\n   };\r\n   return (\r\n-    <ListFichePrestation>\r\n+    <ArtListFichePrestation>\r\n       <div className=\"head-list-content\">\r\n         <h1 className=\"title-bloc-products\">\r\n           {service ? getTitleService() : \"\"}\r\n         </h1>\r\n"
                },
                {
                    "date": 1706881328953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,7 +194,7 @@\n             {places}\r\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n-    </ListFichePrestation>\r\n+    </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706881392220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,18 +169,9 @@\n           }}\r\n         />\r\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-            <div className=\"lists-prstation-items\">{showData()}</div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n-              {showData()}\r\n-            </Slider>\r\n-          )}\r\n-        </Col>\r\n+       \r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n"
                },
                {
                    "date": 1706881425079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,7 +185,19 @@\n             {places}\r\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n+      <Row>\r\n+      <Col lg={7} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"lists-prstation-items\">{showData()}</div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+              {showData()}\r\n+            </Slider>\r\n+          )}\r\n+        </Col>\r\n+      </Row>\r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706881443504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n       <Row>\r\n-      <Col lg={7} className=\"content-lists-prstation-items\">\r\n+      <Col lg={12} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1706881451366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n       <Row>\r\n-      <Col lg={12} className=\"content-lists-prstation-items\">\r\n+      <Col lg={2} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1706881458252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n       <Row>\r\n-      <Col lg={2} className=\"content-lists-prstation-items\">\r\n+      <Col lg={4} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1706881504898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n         />\r\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n        \r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n+        <Col lg={12} className=\"bloc-map-list\">\r\n           <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n             zoom={state.map.zoom}\r\n"
                },
                {
                    "date": 1706881520697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n       <Row>\r\n-      <Col lg={4} className=\"content-lists-prstation-items\">\r\n+      <Col lg={12} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1706881587140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n       <Row>\r\n-      <Col lg={12} className=\"content-lists-prstation-items\">\r\n+      <Col lg={12} md={6} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1706881870130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n         </h3>\r\n       );\r\n \r\n     return benefits.map((row) => {\r\n-      return rowRender(row);\r\n+      return colRender(row);\r\n     });\r\n   };\r\n \r\n   const _onChildClick = (key, childProps) => {\r\n@@ -186,9 +186,9 @@\n           </GoogleMap>\r\n         </Col>\r\n       </Row>\r\n       <Row>\r\n-      <Col lg={12} md={6} className=\"content-lists-prstation-items\">\r\n+      <Col lg={12}  className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1706881945717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n         </h3>\r\n       );\r\n \r\n     return benefits.map((row) => {\r\n-      return colRender(row);\r\n+      return rowRender(row);\r\n     });\r\n   };\r\n \r\n   const _onChildClick = (key, childProps) => {\r\n"
                },
                {
                    "date": 1706883520398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n \r\n export default function ArtListePrestationFiche({\r\n+  universe= {}\r\n   service = {},\r\n   benefits = [],\r\n   filter,\r\n   setFilter,\r\n"
                },
                {
                    "date": 1706883530752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n \r\n export default function ArtListePrestationFiche({\r\n-  universe= {}\r\n+  universe= {},\r\n   service = {},\r\n   benefits = [],\r\n   filter,\r\n   setFilter,\r\n"
                },
                {
                    "date": 1706892531052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,11 +156,12 @@\n   };\r\n   return (\r\n     <ArtListFichePrestation>\r\n       <div className=\"head-list-content\">\r\n+        {isOlder &&\r\n         <h1 className=\"title-bloc-products\">\r\n           {service ? getTitleService() : \"\"}\r\n-        </h1>\r\n+        </h1>}\r\n         <Select\r\n           {...filter.sortBy}\r\n           onChange={(e) => {\r\n             const cpFilter = { ...filter };\r\n"
                },
                {
                    "date": 1706892567114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n   filter,\r\n   setFilter,\r\n   greatPlaces,\r\n   isPending,\r\n+  isOlder\r\n   ...props\r\n }) {\r\n   let refSlider = useRef(null);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n"
                },
                {
                    "date": 1706892617285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   filter,\r\n   setFilter,\r\n   greatPlaces,\r\n   isPending,\r\n-  isOlder\r\n+  isOlder,\r\n   ...props\r\n }) {\r\n   let refSlider = useRef(null);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n"
                },
                {
                    "date": 1706959267303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,275 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import Select from \"../ui-elements/select\";\r\n+import PrestationFiche from \"./prestationFiche\";\r\n+import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import { Col, Row } from \"react-bootstrap\";\r\n+import GoogleMap from \"google-map-react\";\r\n+import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n+import * as vars from \"../../vars\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import Slider from \"react-slick\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n+export default function ArtListePrestationFiche({\r\n+  universe= {},\r\n+  service = {},\r\n+  benefits = [],\r\n+  filter,\r\n+  setFilter,\r\n+  greatPlaces,\r\n+  isPending,\r\n+  isOlder,\r\n+  ...props\r\n+}) {\r\n+  let refSlider = useRef(null);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [state, setState] = useState({\r\n+    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+  });\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        filter.codePostal.latitude,\r\n+        filter.codePostal.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n+\r\n+  useEffect(() => {\r\n+    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        activeBenefit.user.latitude,\r\n+        activeBenefit.user.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [activeBenefit]);\r\n+\r\n+  const rowRender = (row) => (\r\n+    <PrestationFiche\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.id}\r\n+      row={row}\r\n+    />\r\n+  );\r\n+\r\n+  const showData = () => {\r\n+    if (service === false || isPending)\r\n+      return (\r\n+        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </div>\r\n+      );\r\n+    else if (benefits.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    return benefits.map((row) => {\r\n+      return rowRender(row);\r\n+    });\r\n+  };\r\n+\r\n+  const _onChildClick = (key, childProps) => {\r\n+    let i = null;\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+          if (val.id === childProps.id) {\r\n+            i = index;\r\n+            return true;\r\n+          }\r\n+        })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const getTitleService = () => {\r\n+    return `${service.name} : ${benefits.length} réparateur${\r\n+      benefits.length > 1 ? \"(s)\" : \"\"\r\n+    }`;\r\n+  };\r\n+\r\n+  const places = benefits.length\r\n+    ? benefits.map((row) => {\r\n+        return (\r\n+          <ArtPrestationFicheMap\r\n+            key={row.id}\r\n+            lat={row.user.latitude}\r\n+            lng={row.user.longitude}\r\n+            text={\r\n+              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+            }\r\n+            id={row.id}\r\n+            // use your hover state (from store, react-controllables etc...)\r\n+            activeBenefit={activeBenefit}\r\n+          />\r\n+        );\r\n+      })\r\n+    : \"\";\r\n+\r\n+  const settings = {\r\n+    className: \"slider variable-width\",\r\n+    infinite: false,\r\n+    centerMode: true,\r\n+    slidesToShow: 2,\r\n+    slidesToScroll: 1,\r\n+    variableWidth: true,\r\n+    arrows: false,\r\n+    focusOnSelect: true,\r\n+    initialSlide: 1,\r\n+    responsive: [\r\n+      {\r\n+        breakpoint: 575,\r\n+        settings: {\r\n+          slidesToShow: 1,\r\n+          slidesToScroll: 1,\r\n+          initialSlide: 0,\r\n+        },\r\n+      },\r\n+    ],\r\n+  };\r\n+  /**\r\n+ * @license\r\n+ * Copyright 2019 Google LLC. All Rights Reserved.\r\n+ * SPDX-License-Identifier: Apache-2.0\r\n+ */\r\n+\r\n+\r\n+// [START maps_marker_clustering]\r\n+function initMap() {\r\n+  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n+    zoom: 3,\r\n+    center: { lat: -28.024, lng: 140.887 },\r\n+  });\r\n+  const infoWindow = new google.maps.InfoWindow({\r\n+    content: \"\",\r\n+    disableAutoPan: true,\r\n+  });\r\n+  // Create an array of alphabetical characters used to label the markers.\r\n+  const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n+  // Add some markers to the map.\r\n+  const markers = locations.map((position, i) => {\r\n+    const label = labels[i % labels.length];\r\n+    const marker = new google.maps.Marker({\r\n+      position,\r\n+      label,\r\n+    });\r\n+\r\n+    // markers can only be keyboard focusable when they have click listeners\r\n+    // open info window when marker is clicked\r\n+    marker.addListener(\"click\", () => {\r\n+      infoWindow.setContent(label);\r\n+      infoWindow.open(map, marker);\r\n+    });\r\n+    return marker;\r\n+  });\r\n+\r\n+  // Add a marker clusterer to manage the markers.\r\n+  new MarkerClusterer({ markers, map });\r\n+}\r\n+\r\n+const locations = [\r\n+  { lat: -31.56391, lng: 147.154312 },\r\n+  { lat: -33.718234, lng: 150.363181 },\r\n+  { lat: -33.727111, lng: 150.371124 },\r\n+  { lat: -33.848588, lng: 151.209834 },\r\n+  { lat: -33.851702, lng: 151.216968 },\r\n+  { lat: -34.671264, lng: 150.863657 },\r\n+  { lat: -35.304724, lng: 148.662905 },\r\n+  { lat: -36.817685, lng: 175.699196 },\r\n+  { lat: -36.828611, lng: 175.790222 },\r\n+  { lat: -37.75, lng: 145.116667 },\r\n+  { lat: -37.759859, lng: 145.128708 },\r\n+  { lat: -37.765015, lng: 145.133858 },\r\n+  { lat: -37.770104, lng: 145.143299 },\r\n+  { lat: -37.7737, lng: 145.145187 },\r\n+  { lat: -37.774785, lng: 145.137978 },\r\n+  { lat: -37.819616, lng: 144.968119 },\r\n+  { lat: -38.330766, lng: 144.695692 },\r\n+  { lat: -39.927193, lng: 175.053218 },\r\n+  { lat: -41.330162, lng: 174.865694 },\r\n+  { lat: -42.734358, lng: 147.439506 },\r\n+  { lat: -42.734358, lng: 147.501315 },\r\n+  { lat: -42.735258, lng: 147.438 },\r\n+  { lat: -43.999792, lng: 170.463352 },\r\n+];\r\n+\r\n+window.initMap = initMap;\r\n+// [END maps_marker_clustering]\r\n+  return (\r\n+    <ArtListFichePrestation>\r\n+      <div className=\"head-list-content\">\r\n+        {isOlder &&\r\n+        <h1 className=\"title-bloc-products\">\r\n+          {service ? getTitleService() : \"\"}\r\n+        </h1>}\r\n+        <Select\r\n+          {...filter.sortBy}\r\n+          onChange={(e) => {\r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.codePostal.error = false;\r\n+            cpFilter.sortBy.value = e.value;\r\n+            setFilter(cpFilter);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+       \r\n+        <Col lg={12} className=\"bloc-map-list\">\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+      <Col lg={12}  className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"lists-prstation-items\">{showData()}</div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+              {showData()}\r\n+            </Slider>\r\n+          )}\r\n+        </Col>\r\n+      </Row>\r\n+    </ArtListFichePrestation>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706959487287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-import Slider from \"react-slick\";\r\n+import Slider from \"react-slick\";npm startTransition\r\n import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n export default function ArtListePrestationFiche({\r\n   universe= {},\r\n@@ -272,210 +272,4 @@\n       </Row>\r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import Select from \"../ui-elements/select\";\r\n-import PrestationFiche from \"./prestationFiche\";\r\n-import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import { Col, Row } from \"react-bootstrap\";\r\n-import GoogleMap from \"google-map-react\";\r\n-import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n-import { K_SIZE } from \"./markerStyle\";\r\n-import * as vars from \"../../vars\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import Slider from \"react-slick\";\r\n-\r\n-export default function ArtListePrestationFiche({\r\n-  universe= {},\r\n-  service = {},\r\n-  benefits = [],\r\n-  filter,\r\n-  setFilter,\r\n-  greatPlaces,\r\n-  isPending,\r\n-  isOlder,\r\n-  ...props\r\n-}) {\r\n-  let refSlider = useRef(null);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n-  });\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        filter.codePostal.latitude,\r\n-        filter.codePostal.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n-\r\n-  useEffect(() => {\r\n-    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        activeBenefit.user.latitude,\r\n-        activeBenefit.user.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [activeBenefit]);\r\n-\r\n-  const rowRender = (row) => (\r\n-    <PrestationFiche\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.id}\r\n-      row={row}\r\n-    />\r\n-  );\r\n-\r\n-  const showData = () => {\r\n-    if (service === false || isPending)\r\n-      return (\r\n-        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </div>\r\n-      );\r\n-    else if (benefits.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    return benefits.map((row) => {\r\n-      return rowRender(row);\r\n-    });\r\n-  };\r\n-\r\n-  const _onChildClick = (key, childProps) => {\r\n-    let i = null;\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-          if (val.id === childProps.id) {\r\n-            i = index;\r\n-            return true;\r\n-          }\r\n-        })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const getTitleService = () => {\r\n-    return `${service.name} : ${benefits.length} réparateur${\r\n-      benefits.length > 1 ? \"(s)\" : \"\"\r\n-    }`;\r\n-  };\r\n-\r\n-  const places = benefits.length\r\n-    ? benefits.map((row) => {\r\n-        return (\r\n-          <ArtPrestationFicheMap\r\n-            key={row.id}\r\n-            lat={row.user.latitude}\r\n-            lng={row.user.longitude}\r\n-            text={\r\n-              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-            }\r\n-            id={row.id}\r\n-            // use your hover state (from store, react-controllables etc...)\r\n-            activeBenefit={activeBenefit}\r\n-          />\r\n-        );\r\n-      })\r\n-    : \"\";\r\n-\r\n-  const settings = {\r\n-    className: \"slider variable-width\",\r\n-    infinite: false,\r\n-    centerMode: true,\r\n-    slidesToShow: 2,\r\n-    slidesToScroll: 1,\r\n-    variableWidth: true,\r\n-    arrows: false,\r\n-    focusOnSelect: true,\r\n-    initialSlide: 1,\r\n-    responsive: [\r\n-      {\r\n-        breakpoint: 575,\r\n-        settings: {\r\n-          slidesToShow: 1,\r\n-          slidesToScroll: 1,\r\n-          initialSlide: 0,\r\n-        },\r\n-      },\r\n-    ],\r\n-  };\r\n-  return (\r\n-    <ArtListFichePrestation>\r\n-      <div className=\"head-list-content\">\r\n-        {isOlder &&\r\n-        <h1 className=\"title-bloc-products\">\r\n-          {service ? getTitleService() : \"\"}\r\n-        </h1>}\r\n-        <Select\r\n-          {...filter.sortBy}\r\n-          onChange={(e) => {\r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.codePostal.error = false;\r\n-            cpFilter.sortBy.value = e.value;\r\n-            setFilter(cpFilter);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-       \r\n-        <Col lg={12} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n-      <Col lg={12}  className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-            <div className=\"lists-prstation-items\">{showData()}</div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n-              {showData()}\r\n-            </Slider>\r\n-          )}\r\n-        </Col>\r\n-      </Row>\r\n-    </ArtListFichePrestation>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706959522306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-import Slider from \"react-slick\";npm startTransition\r\n+import Slider from \"react-slick\";\r\n import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n export default function ArtListePrestationFiche({\r\n   universe= {},\r\n"
                },
                {
                    "date": 1706959941819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,69 +162,9 @@\n  * SPDX-License-Identifier: Apache-2.0\r\n  */\r\n \r\n \r\n-// [START maps_marker_clustering]\r\n-function initMap() {\r\n-  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n-    zoom: 3,\r\n-    center: { lat: -28.024, lng: 140.887 },\r\n-  });\r\n-  const infoWindow = new google.maps.InfoWindow({\r\n-    content: \"\",\r\n-    disableAutoPan: true,\r\n-  });\r\n-  // Create an array of alphabetical characters used to label the markers.\r\n-  const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-  // Add some markers to the map.\r\n-  const markers = locations.map((position, i) => {\r\n-    const label = labels[i % labels.length];\r\n-    const marker = new google.maps.Marker({\r\n-      position,\r\n-      label,\r\n-    });\r\n \r\n-    // markers can only be keyboard focusable when they have click listeners\r\n-    // open info window when marker is clicked\r\n-    marker.addListener(\"click\", () => {\r\n-      infoWindow.setContent(label);\r\n-      infoWindow.open(map, marker);\r\n-    });\r\n-    return marker;\r\n-  });\r\n-\r\n-  // Add a marker clusterer to manage the markers.\r\n-  new MarkerClusterer({ markers, map });\r\n-}\r\n-\r\n-const locations = [\r\n-  { lat: -31.56391, lng: 147.154312 },\r\n-  { lat: -33.718234, lng: 150.363181 },\r\n-  { lat: -33.727111, lng: 150.371124 },\r\n-  { lat: -33.848588, lng: 151.209834 },\r\n-  { lat: -33.851702, lng: 151.216968 },\r\n-  { lat: -34.671264, lng: 150.863657 },\r\n-  { lat: -35.304724, lng: 148.662905 },\r\n-  { lat: -36.817685, lng: 175.699196 },\r\n-  { lat: -36.828611, lng: 175.790222 },\r\n-  { lat: -37.75, lng: 145.116667 },\r\n-  { lat: -37.759859, lng: 145.128708 },\r\n-  { lat: -37.765015, lng: 145.133858 },\r\n-  { lat: -37.770104, lng: 145.143299 },\r\n-  { lat: -37.7737, lng: 145.145187 },\r\n-  { lat: -37.774785, lng: 145.137978 },\r\n-  { lat: -37.819616, lng: 144.968119 },\r\n-  { lat: -38.330766, lng: 144.695692 },\r\n-  { lat: -39.927193, lng: 175.053218 },\r\n-  { lat: -41.330162, lng: 174.865694 },\r\n-  { lat: -42.734358, lng: 147.439506 },\r\n-  { lat: -42.734358, lng: 147.501315 },\r\n-  { lat: -42.735258, lng: 147.438 },\r\n-  { lat: -43.999792, lng: 170.463352 },\r\n-];\r\n-\r\n-window.initMap = initMap;\r\n-// [END maps_marker_clustering]\r\n   return (\r\n     <ArtListFichePrestation>\r\n       <div className=\"head-list-content\">\r\n         {isOlder &&\r\n"
                },
                {
                    "date": 1706960035125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,16 +155,12 @@\n         },\r\n       },\r\n     ],\r\n   };\r\n-  /**\r\n- * @license\r\n- * Copyright 2019 Google LLC. All Rights Reserved.\r\n- * SPDX-License-Identifier: Apache-2.0\r\n- */\r\n \r\n \r\n \r\n+\r\n   return (\r\n     <ArtListFichePrestation>\r\n       <div className=\"head-list-content\">\r\n         {isOlder &&\r\n@@ -196,10 +192,28 @@\n           >\r\n             {places}\r\n           </GoogleMap>\r\n         </Col>\r\n+\r\n       </Row>\r\n       <Row>\r\n+      <Col lg={12} className=\"bloc-map-list\">\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+        </Col>\r\n+        \r\n+      </Row>\r\n+      <Row>\r\n       <Col lg={12}  className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n"
                },
                {
                    "date": 1706960102471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n         </Col>\r\n \r\n       </Row>\r\n       <Row>\r\n-      <Col lg={12} className=\"bloc-map-list\">\r\n+      <Col lg={10} className=\"bloc-map-list\">\r\n           <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n             zoom={state.map.zoom}\r\n"
                },
                {
                    "date": 1706960142923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,19 +211,8 @@\n           </GoogleMap>\r\n         </Col>\r\n         \r\n       </Row>\r\n-      <Row>\r\n-      <Col lg={12}  className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-            <div className=\"lists-prstation-items\">{showData()}</div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n-              {showData()}\r\n-            </Slider>\r\n-          )}\r\n-        </Col>\r\n-      </Row>\r\n+      \r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706960164758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,25 +194,9 @@\n           </GoogleMap>\r\n         </Col>\r\n \r\n       </Row>\r\n-      <Row>\r\n-      <Col lg={10} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-        </Col>\r\n-        \r\n-      </Row>\r\n+\r\n       \r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706960255927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,8 +194,24 @@\n           </GoogleMap>\r\n         </Col>\r\n \r\n       </Row>\r\n+      <Row>\r\n+        <Col>\r\n+        <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+        </Col>\r\n+      </Row>\r\n \r\n       \r\n     </ArtListFichePrestation>\r\n   );\r\n"
                },
                {
                    "date": 1706960322713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n         <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n             zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n+            hoverDistance={K_SIZE / 8}\r\n             onChildClick={_onChildClick}\r\n             onGoogleApiLoaded={({ map, maps }) => {\r\n               //console.log(\"map is loaded.\");\r\n             }}\r\n"
                },
                {
                    "date": 1706960446027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n         <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n             zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 8}\r\n+            hoverDistance={K_SIZE }\r\n             onChildClick={_onChildClick}\r\n             onGoogleApiLoaded={({ map, maps }) => {\r\n               //console.log(\"map is loaded.\");\r\n             }}\r\n"
                },
                {
                    "date": 1706961159707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import PrestationFiche from \"./prestationFiche\";\r\n import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n+import Xmap from \"./artXMap\";\r\n import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n"
                },
                {
                    "date": 1706961459871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n import Xmap from \"./artXMap\";\r\n+\r\n import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n"
                },
                {
                    "date": 1706961493686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import PrestationFiche from \"./prestationFiche\";\r\n import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n-import Xmap from \"./artXMap\";\r\n+import Xmap from \"./artXmap\";\r\n \r\n import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n"
                },
                {
                    "date": 1706961516658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,10 @@\n         </Col>\r\n \r\n       </Row>\r\n       <Row>\r\n+        <col>\r\n+        <Xmap></Xmap></col>\r\n         <Col>\r\n         <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n"
                },
                {
                    "date": 1706961542797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,11 +197,11 @@\n         </Col>\r\n \r\n       </Row>\r\n       <Row>\r\n-        <col>\r\n-        <Xmap></Xmap></col>\r\n         <Col>\r\n+        <Xmap></Xmap></Col>\r\n+        <Col>\r\n         <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n             zoom={state.map.zoom}\r\n"
                },
                {
                    "date": 1706963072262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,11 +197,11 @@\n         </Col>\r\n \r\n       </Row>\r\n       <Row>\r\n-        <Col>\r\n-        <Xmap></Xmap></Col>\r\n-        <Col>\r\n+        \r\n+        <ArtXmap></ArtXmap>\r\n+        \r\n         <GoogleMap\r\n             apiKey={vars.mapsApiKey}\r\n             center={state.map.center}\r\n             zoom={state.map.zoom}\r\n"
                },
                {
                    "date": 1706963100026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n           </GoogleMap>\r\n         </Col>\r\n \r\n       </Row>\r\n-      <Row>\r\n+\r\n         \r\n         <ArtXmap></ArtXmap>\r\n         \r\n         <GoogleMap\r\n"
                },
                {
                    "date": 1706963170918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,25 +196,13 @@\n           </GoogleMap>\r\n         </Col>\r\n \r\n       </Row>\r\n-\r\n+      <Row>\r\n+        <Col>\r\n         \r\n         <ArtXmap></ArtXmap>\r\n-        \r\n-        <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE }\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-        </Col>\r\n+     </Col>\r\n       </Row>\r\n \r\n       \r\n     </ArtListFichePrestation>\r\n"
                },
                {
                    "date": 1706963218166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,210 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import Select from \"../ui-elements/select\";\r\n+import PrestationFiche from \"./prestationFiche\";\r\n+import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import { Col, Row } from \"react-bootstrap\";\r\n+import GoogleMap from \"google-map-react\";\r\n+import Xmap from \"./artXmap\";\r\n+\r\n+import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n+import * as vars from \"../../vars\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import Slider from \"react-slick\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n+export default function ArtListePrestationFiche({\r\n+  universe= {},\r\n+  service = {},\r\n+  benefits = [],\r\n+  filter,\r\n+  setFilter,\r\n+  greatPlaces,\r\n+  isPending,\r\n+  isOlder,\r\n+  ...props\r\n+}) {\r\n+  let refSlider = useRef(null);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [state, setState] = useState({\r\n+    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+  });\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        filter.codePostal.latitude,\r\n+        filter.codePostal.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n+\r\n+  useEffect(() => {\r\n+    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        activeBenefit.user.latitude,\r\n+        activeBenefit.user.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [activeBenefit]);\r\n+\r\n+  const rowRender = (row) => (\r\n+    <PrestationFiche\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.id}\r\n+      row={row}\r\n+    />\r\n+  );\r\n+\r\n+  const showData = () => {\r\n+    if (service === false || isPending)\r\n+      return (\r\n+        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </div>\r\n+      );\r\n+    else if (benefits.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    return benefits.map((row) => {\r\n+      return rowRender(row);\r\n+    });\r\n+  };\r\n+\r\n+  const _onChildClick = (key, childProps) => {\r\n+    let i = null;\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+          if (val.id === childProps.id) {\r\n+            i = index;\r\n+            return true;\r\n+          }\r\n+        })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const getTitleService = () => {\r\n+    return `${service.name} : ${benefits.length} réparateur${\r\n+      benefits.length > 1 ? \"(s)\" : \"\"\r\n+    }`;\r\n+  };\r\n+\r\n+  const places = benefits.length\r\n+    ? benefits.map((row) => {\r\n+        return (\r\n+          <ArtPrestationFicheMap\r\n+            key={row.id}\r\n+            lat={row.user.latitude}\r\n+            lng={row.user.longitude}\r\n+            text={\r\n+              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+            }\r\n+            id={row.id}\r\n+            // use your hover state (from store, react-controllables etc...)\r\n+            activeBenefit={activeBenefit}\r\n+          />\r\n+        );\r\n+      })\r\n+    : \"\";\r\n+\r\n+  const settings = {\r\n+    className: \"slider variable-width\",\r\n+    infinite: false,\r\n+    centerMode: true,\r\n+    slidesToShow: 2,\r\n+    slidesToScroll: 1,\r\n+    variableWidth: true,\r\n+    arrows: false,\r\n+    focusOnSelect: true,\r\n+    initialSlide: 1,\r\n+    responsive: [\r\n+      {\r\n+        breakpoint: 575,\r\n+        settings: {\r\n+          slidesToShow: 1,\r\n+          slidesToScroll: 1,\r\n+          initialSlide: 0,\r\n+        },\r\n+      },\r\n+    ],\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <ArtListFichePrestation>\r\n+      <div className=\"head-list-content\">\r\n+        {isOlder &&\r\n+        <h1 className=\"title-bloc-products\">\r\n+          {service ? getTitleService() : \"\"}\r\n+        </h1>}\r\n+        <Select\r\n+          {...filter.sortBy}\r\n+          onChange={(e) => {\r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.codePostal.error = false;\r\n+            cpFilter.sortBy.value = e.value;\r\n+            setFilter(cpFilter);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+       \r\n+        <Col lg={12} className=\"bloc-map-list\">\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+        </Col>\r\n+\r\n+      </Row>\r\n+      <Row>\r\n+        <Col>\r\n+        \r\n+        <ArtXmap></ArtXmap>\r\n+     </Col>\r\n+      </Row>\r\n+\r\n+      </ArtListFichePrestation>\r\n+  \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706963247901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,205 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import Select from \"../ui-elements/select\";\r\n+import PrestationFiche from \"./prestationFiche\";\r\n+import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import { Col, Row } from \"react-bootstrap\";\r\n+import GoogleMap from \"google-map-react\";\r\n+import Xmap from \"./artXmap\";\r\n+\r\n+import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n+import * as vars from \"../../vars\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import Slider from \"react-slick\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n+export default function ArtListePrestationFiche({\r\n+  universe= {},\r\n+  service = {},\r\n+  benefits = [],\r\n+  filter,\r\n+  setFilter,\r\n+  greatPlaces,\r\n+  isPending,\r\n+  isOlder,\r\n+  ...props\r\n+}) {\r\n+  let refSlider = useRef(null);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [state, setState] = useState({\r\n+    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+  });\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        filter.codePostal.latitude,\r\n+        filter.codePostal.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n+\r\n+  useEffect(() => {\r\n+    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        activeBenefit.user.latitude,\r\n+        activeBenefit.user.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [activeBenefit]);\r\n+\r\n+  const rowRender = (row) => (\r\n+    <PrestationFiche\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.id}\r\n+      row={row}\r\n+    />\r\n+  );\r\n+\r\n+  const showData = () => {\r\n+    if (service === false || isPending)\r\n+      return (\r\n+        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </div>\r\n+      );\r\n+    else if (benefits.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    return benefits.map((row) => {\r\n+      return rowRender(row);\r\n+    });\r\n+  };\r\n+\r\n+  const _onChildClick = (key, childProps) => {\r\n+    let i = null;\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+          if (val.id === childProps.id) {\r\n+            i = index;\r\n+            return true;\r\n+          }\r\n+        })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const getTitleService = () => {\r\n+    return `${service.name} : ${benefits.length} réparateur${\r\n+      benefits.length > 1 ? \"(s)\" : \"\"\r\n+    }`;\r\n+  };\r\n+\r\n+  const places = benefits.length\r\n+    ? benefits.map((row) => {\r\n+        return (\r\n+          <ArtPrestationFicheMap\r\n+            key={row.id}\r\n+            lat={row.user.latitude}\r\n+            lng={row.user.longitude}\r\n+            text={\r\n+              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+            }\r\n+            id={row.id}\r\n+            // use your hover state (from store, react-controllables etc...)\r\n+            activeBenefit={activeBenefit}\r\n+          />\r\n+        );\r\n+      })\r\n+    : \"\";\r\n+\r\n+  const settings = {\r\n+    className: \"slider variable-width\",\r\n+    infinite: false,\r\n+    centerMode: true,\r\n+    slidesToShow: 2,\r\n+    slidesToScroll: 1,\r\n+    variableWidth: true,\r\n+    arrows: false,\r\n+    focusOnSelect: true,\r\n+    initialSlide: 1,\r\n+    responsive: [\r\n+      {\r\n+        breakpoint: 575,\r\n+        settings: {\r\n+          slidesToShow: 1,\r\n+          slidesToScroll: 1,\r\n+          initialSlide: 0,\r\n+        },\r\n+      },\r\n+    ],\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <ArtListFichePrestation>\r\n+      <div className=\"head-list-content\">\r\n+        {isOlder &&\r\n+        <h1 className=\"title-bloc-products\">\r\n+          {service ? getTitleService() : \"\"}\r\n+        </h1>}\r\n+        <Select\r\n+          {...filter.sortBy}\r\n+          onChange={(e) => {\r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.codePostal.error = false;\r\n+            cpFilter.sortBy.value = e.value;\r\n+            setFilter(cpFilter);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+       \r\n+        <Col lg={12} className=\"bloc-map-list\">\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+        </Col>\r\n+\r\n+      </Row>\r\n+\r\n+\r\n+      \r\n+    </ArtListFichePrestation>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706963269916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,429 +197,9 @@\n         </Col>\r\n \r\n       </Row>\r\n \r\n-\r\n+<Xmap></Xmap>\r\n       \r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import Select from \"../ui-elements/select\";\r\n-import PrestationFiche from \"./prestationFiche\";\r\n-import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import { Col, Row } from \"react-bootstrap\";\r\n-import GoogleMap from \"google-map-react\";\r\n-import Xmap from \"./artXmap\";\r\n-\r\n-import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n-import { K_SIZE } from \"./markerStyle\";\r\n-import * as vars from \"../../vars\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import Slider from \"react-slick\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-\r\n-export default function ArtListePrestationFiche({\r\n-  universe= {},\r\n-  service = {},\r\n-  benefits = [],\r\n-  filter,\r\n-  setFilter,\r\n-  greatPlaces,\r\n-  isPending,\r\n-  isOlder,\r\n-  ...props\r\n-}) {\r\n-  let refSlider = useRef(null);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n-  });\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        filter.codePostal.latitude,\r\n-        filter.codePostal.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n-\r\n-  useEffect(() => {\r\n-    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        activeBenefit.user.latitude,\r\n-        activeBenefit.user.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [activeBenefit]);\r\n-\r\n-  const rowRender = (row) => (\r\n-    <PrestationFiche\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.id}\r\n-      row={row}\r\n-    />\r\n-  );\r\n-\r\n-  const showData = () => {\r\n-    if (service === false || isPending)\r\n-      return (\r\n-        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </div>\r\n-      );\r\n-    else if (benefits.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    return benefits.map((row) => {\r\n-      return rowRender(row);\r\n-    });\r\n-  };\r\n-\r\n-  const _onChildClick = (key, childProps) => {\r\n-    let i = null;\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-          if (val.id === childProps.id) {\r\n-            i = index;\r\n-            return true;\r\n-          }\r\n-        })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const getTitleService = () => {\r\n-    return `${service.name} : ${benefits.length} réparateur${\r\n-      benefits.length > 1 ? \"(s)\" : \"\"\r\n-    }`;\r\n-  };\r\n-\r\n-  const places = benefits.length\r\n-    ? benefits.map((row) => {\r\n-        return (\r\n-          <ArtPrestationFicheMap\r\n-            key={row.id}\r\n-            lat={row.user.latitude}\r\n-            lng={row.user.longitude}\r\n-            text={\r\n-              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-            }\r\n-            id={row.id}\r\n-            // use your hover state (from store, react-controllables etc...)\r\n-            activeBenefit={activeBenefit}\r\n-          />\r\n-        );\r\n-      })\r\n-    : \"\";\r\n-\r\n-  const settings = {\r\n-    className: \"slider variable-width\",\r\n-    infinite: false,\r\n-    centerMode: true,\r\n-    slidesToShow: 2,\r\n-    slidesToScroll: 1,\r\n-    variableWidth: true,\r\n-    arrows: false,\r\n-    focusOnSelect: true,\r\n-    initialSlide: 1,\r\n-    responsive: [\r\n-      {\r\n-        breakpoint: 575,\r\n-        settings: {\r\n-          slidesToShow: 1,\r\n-          slidesToScroll: 1,\r\n-          initialSlide: 0,\r\n-        },\r\n-      },\r\n-    ],\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  return (\r\n-    <ArtListFichePrestation>\r\n-      <div className=\"head-list-content\">\r\n-        {isOlder &&\r\n-        <h1 className=\"title-bloc-products\">\r\n-          {service ? getTitleService() : \"\"}\r\n-        </h1>}\r\n-        <Select\r\n-          {...filter.sortBy}\r\n-          onChange={(e) => {\r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.codePostal.error = false;\r\n-            cpFilter.sortBy.value = e.value;\r\n-            setFilter(cpFilter);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-       \r\n-        <Col lg={12} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-        </Col>\r\n-\r\n-      </Row>\r\n-      <Row>\r\n-        <Col>\r\n-        \r\n-        <ArtXmap></ArtXmap>\r\n-     </Col>\r\n-      </Row>\r\n-\r\n-      </ArtListFichePrestation>\r\n-  \r\n-  );\r\n-}\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import Select from \"../ui-elements/select\";\r\n-import PrestationFiche from \"./prestationFiche\";\r\n-import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import { Col, Row } from \"react-bootstrap\";\r\n-import GoogleMap from \"google-map-react\";\r\n-import Xmap from \"./artXmap\";\r\n-\r\n-import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n-import { K_SIZE } from \"./markerStyle\";\r\n-import * as vars from \"../../vars\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import Slider from \"react-slick\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-\r\n-export default function ArtListePrestationFiche({\r\n-  universe= {},\r\n-  service = {},\r\n-  benefits = [],\r\n-  filter,\r\n-  setFilter,\r\n-  greatPlaces,\r\n-  isPending,\r\n-  isOlder,\r\n-  ...props\r\n-}) {\r\n-  let refSlider = useRef(null);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n-  });\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        filter.codePostal.latitude,\r\n-        filter.codePostal.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n-\r\n-  useEffect(() => {\r\n-    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        activeBenefit.user.latitude,\r\n-        activeBenefit.user.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [activeBenefit]);\r\n-\r\n-  const rowRender = (row) => (\r\n-    <PrestationFiche\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.id}\r\n-      row={row}\r\n-    />\r\n-  );\r\n-\r\n-  const showData = () => {\r\n-    if (service === false || isPending)\r\n-      return (\r\n-        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </div>\r\n-      );\r\n-    else if (benefits.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    return benefits.map((row) => {\r\n-      return rowRender(row);\r\n-    });\r\n-  };\r\n-\r\n-  const _onChildClick = (key, childProps) => {\r\n-    let i = null;\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-          if (val.id === childProps.id) {\r\n-            i = index;\r\n-            return true;\r\n-          }\r\n-        })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const getTitleService = () => {\r\n-    return `${service.name} : ${benefits.length} réparateur${\r\n-      benefits.length > 1 ? \"(s)\" : \"\"\r\n-    }`;\r\n-  };\r\n-\r\n-  const places = benefits.length\r\n-    ? benefits.map((row) => {\r\n-        return (\r\n-          <ArtPrestationFicheMap\r\n-            key={row.id}\r\n-            lat={row.user.latitude}\r\n-            lng={row.user.longitude}\r\n-            text={\r\n-              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-            }\r\n-            id={row.id}\r\n-            // use your hover state (from store, react-controllables etc...)\r\n-            activeBenefit={activeBenefit}\r\n-          />\r\n-        );\r\n-      })\r\n-    : \"\";\r\n-\r\n-  const settings = {\r\n-    className: \"slider variable-width\",\r\n-    infinite: false,\r\n-    centerMode: true,\r\n-    slidesToShow: 2,\r\n-    slidesToScroll: 1,\r\n-    variableWidth: true,\r\n-    arrows: false,\r\n-    focusOnSelect: true,\r\n-    initialSlide: 1,\r\n-    responsive: [\r\n-      {\r\n-        breakpoint: 575,\r\n-        settings: {\r\n-          slidesToShow: 1,\r\n-          slidesToScroll: 1,\r\n-          initialSlide: 0,\r\n-        },\r\n-      },\r\n-    ],\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  return (\r\n-    <ArtListFichePrestation>\r\n-      <div className=\"head-list-content\">\r\n-        {isOlder &&\r\n-        <h1 className=\"title-bloc-products\">\r\n-          {service ? getTitleService() : \"\"}\r\n-        </h1>}\r\n-        <Select\r\n-          {...filter.sortBy}\r\n-          onChange={(e) => {\r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.codePostal.error = false;\r\n-            cpFilter.sortBy.value = e.value;\r\n-            setFilter(cpFilter);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-       \r\n-        <Col lg={12} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-        </Col>\r\n-\r\n-      </Row>\r\n-      <Row>\r\n-        <Col>\r\n-        \r\n-        <ArtXmap></ArtXmap>\r\n-     </Col>\r\n-      </Row>\r\n-\r\n-      \r\n-    </ArtListFichePrestation>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706963308966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,11 +195,11 @@\n             {places}\r\n           </GoogleMap>\r\n         </Col>\r\n \r\n-      </Row>\r\n+      </Row><Row><Col><Xmap></Xmap></Col></Row>\r\n \r\n-<Xmap></Xmap>\r\n+\r\n       \r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706963572955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+import ArtXmap from \"./artXmap\";\r\n \r\n export default function ArtListePrestationFiche({\r\n   universe= {},\r\n   service = {},\r\n@@ -194,12 +195,12 @@\n           >\r\n             {places}\r\n           </GoogleMap>\r\n         </Col>\r\n+<Col><ArtXmap></ArtXmap></Col>\r\n+</Row>\r\n \r\n-      </Row><Row><Col><Xmap></Xmap></Col></Row>\r\n \r\n-\r\n       \r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706963822326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,12 +195,12 @@\n           >\r\n             {places}\r\n           </GoogleMap>\r\n         </Col>\r\n-<Col><ArtXmap></ArtXmap></Col>\r\n </Row>\r\n \r\n \r\n       \r\n     </ArtListFichePrestation>\r\n+    <ArtXmap></ArtXmap>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706963916667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n import ArtXmap from \"./artXmap\";\r\n \r\n export default function ArtListePrestationFiche({\r\n-  universe= {},\r\n+  universe = {},\r\n   service = {},\r\n   benefits = [],\r\n   filter,\r\n   setFilter,\r\n@@ -99,13 +99,13 @@\n   const _onChildClick = (key, childProps) => {\r\n     let i = null;\r\n     const benefit = benefits.length\r\n       ? benefits.find((val, index) => {\r\n-          if (val.id === childProps.id) {\r\n-            i = index;\r\n-            return true;\r\n-          }\r\n-        })\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n       : { id: null };\r\n     if (benefit.id) {\r\n       setActiveBenefit(benefit);\r\n       if (isTabletOrMobile) {\r\n@@ -114,29 +114,28 @@\n     }\r\n   };\r\n \r\n   const getTitleService = () => {\r\n-    return `${service.name} : ${benefits.length} réparateur${\r\n-      benefits.length > 1 ? \"(s)\" : \"\"\r\n-    }`;\r\n+    return `${service.name} : ${benefits.length} réparateur${benefits.length > 1 ? \"(s)\" : \"\"\r\n+      }`;\r\n   };\r\n \r\n   const places = benefits.length\r\n     ? benefits.map((row) => {\r\n-        return (\r\n-          <ArtPrestationFicheMap\r\n-            key={row.id}\r\n-            lat={row.user.latitude}\r\n-            lng={row.user.longitude}\r\n-            text={\r\n-              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-            }\r\n-            id={row.id}\r\n-            // use your hover state (from store, react-controllables etc...)\r\n-            activeBenefit={activeBenefit}\r\n-          />\r\n-        );\r\n-      })\r\n+      return (\r\n+        <ArtPrestationFicheMap\r\n+          key={row.id}\r\n+          lat={row.user.latitude}\r\n+          lng={row.user.longitude}\r\n+          text={\r\n+            row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+          }\r\n+          id={row.id}\r\n+          // use your hover state (from store, react-controllables etc...)\r\n+          activeBenefit={activeBenefit}\r\n+        />\r\n+      );\r\n+    })\r\n     : \"\";\r\n \r\n   const settings = {\r\n     className: \"slider variable-width\",\r\n@@ -194,13 +193,9 @@\n             }}\r\n           >\r\n             {places}\r\n           </GoogleMap>\r\n-        </Col>\r\n+</Col>\r\n </Row>\r\n-\r\n-\r\n-      \r\n-    </ArtListFichePrestation>\r\n     <ArtXmap></ArtXmap>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706963940288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,6 +196,7 @@\n           </GoogleMap>\r\n </Col>\r\n </Row>\r\n     <ArtXmap></ArtXmap>\r\n+  </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706966910254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,20 +181,9 @@\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n        \r\n         <Col lg={12} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n+        \r\n </Col>\r\n </Row>\r\n     <ArtXmap></ArtXmap>\r\n   </ArtListFichePrestation>\r\n"
                },
                {
                    "date": 1706966925923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,20 @@\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n        \r\n         <Col lg={12} className=\"bloc-map-list\">\r\n-        \r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n </Col>\r\n </Row>\r\n     <ArtXmap></ArtXmap>\r\n   </ArtListFichePrestation>\r\n"
                },
                {
                    "date": 1706966989631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,20 +181,9 @@\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n        \r\n         <Col lg={12} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n+          \r\n </Col>\r\n </Row>\r\n     <ArtXmap></ArtXmap>\r\n   </ArtListFichePrestation>\r\n"
                },
                {
                    "date": 1706968628590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,8 +181,20 @@\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n        \r\n         <Col lg={12} className=\"bloc-map-list\">\r\n+        <GoogleMap\r\n+                apiKey={vars.mapsApiKey}\r\n+                center={state.map.center}\r\n+                zoom={state.map.zoom}\r\n+                hoverDistance={K_SIZE / 2}\r\n+                onChildClick={_onChildClick}\r\n+                onGoogleApiLoaded={({ map, maps }) => {\r\n+                    //console.log(\"map is loaded.\");\r\n+                }}\r\n+            >\r\n+                {places}\r\n+            </GoogleMap>\r\n           \r\n </Col>\r\n </Row>\r\n     <ArtXmap></ArtXmap>\r\n"
                },
                {
                    "date": 1706968668977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,8 +196,8 @@\n             </GoogleMap>\r\n           \r\n </Col>\r\n </Row>\r\n-    <ArtXmap></ArtXmap>\r\n+   \r\n   </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706968723409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,8 +196,12 @@\n             </GoogleMap>\r\n           \r\n </Col>\r\n </Row>\r\n-   \r\n+<Row><Col>\r\n+<ArtXmap></ArtXmap>\r\n+</Col>\r\n+  </Row>\r\n+\r\n   </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706969407936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n import PrestationFiche from \"./prestationFiche\";\r\n import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n-import Xmap from \"./artXmap\";\r\n \r\n-import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n+\r\n+import PrestationFicheMap from \"./prestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n@@ -121,9 +121,9 @@\n \r\n   const places = benefits.length\r\n     ? benefits.map((row) => {\r\n       return (\r\n-        <ArtPrestationFicheMap\r\n+        <PrestationFicheMap\r\n           key={row.id}\r\n           lat={row.user.latitude}\r\n           lng={row.user.longitude}\r\n           text={\r\n"
                },
                {
                    "date": 1706969472190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,8 @@\n import PrestationFiche from \"./prestationFiche\";\r\n import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n-\r\n-\r\n import PrestationFicheMap from \"./prestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n"
                },
                {
                    "date": 1706969803253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useState, useEffect, useRef } from \"react\";\r\n import Select from \"../ui-elements/select\";\r\n import PrestationFiche from \"./prestationFiche\";\r\n-import { ArtListFichePrestation, ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import { ArtListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import { Col, Row } from \"react-bootstrap\";\r\n import GoogleMap from \"google-map-react\";\r\n import PrestationFicheMap from \"./prestationFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n import ArtXmap from \"./artXmap\";\r\n \r\n export default function ArtListePrestationFiche({\r\n   universe = {},\r\n"
                },
                {
                    "date": 1706969874526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n           \r\n </Col>\r\n </Row>\r\n <Row><Col>\r\n-<ArtXmap></ArtXmap>\r\n+\r\n </Col>\r\n   </Row>\r\n \r\n   </ArtListFichePrestation>\r\n"
                },
                {
                    "date": 1706969919060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,11 +163,11 @@\n   return (\r\n     <ArtListFichePrestation>\r\n       <div className=\"head-list-content\">\r\n         {isOlder &&\r\n-        <h1 className=\"title-bloc-products\">\r\n-          {service ? getTitleService() : \"\"}\r\n-        </h1>}\r\n+          <h1 className=\"title-bloc-products\">\r\n+            {service ? getTitleService() : \"\"}\r\n+          </h1>}\r\n         <Select\r\n           {...filter.sortBy}\r\n           onChange={(e) => {\r\n             const cpFilter = { ...filter };\r\n@@ -177,29 +177,26 @@\n           }}\r\n         />\r\n       </div>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n-       \r\n+\r\n         <Col lg={12} className=\"bloc-map-list\">\r\n-        <GoogleMap\r\n-                apiKey={vars.mapsApiKey}\r\n-                center={state.map.center}\r\n-                zoom={state.map.zoom}\r\n-                hoverDistance={K_SIZE / 2}\r\n-                onChildClick={_onChildClick}\r\n-                onGoogleApiLoaded={({ map, maps }) => {\r\n-                    //console.log(\"map is loaded.\");\r\n-                }}\r\n-            >\r\n-                {places}\r\n-            </GoogleMap>\r\n-          \r\n-</Col>\r\n-</Row>\r\n-<Row><Col>\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n \r\n-</Col>\r\n-  </Row>\r\n+        </Col>\r\n+      </Row>\r\n \r\n-  </ArtListFichePrestation>\r\n+\r\n+    </ArtListFichePrestation>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706969949528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n \r\n-import ArtXmap from \"./artXmap\";\r\n \r\n+\r\n export default function ArtListePrestationFiche({\r\n   universe = {},\r\n   service = {},\r\n   benefits = [],\r\n"
                },
                {
                    "date": 1706970444051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n \r\n-\r\n export default function ArtListePrestationFiche({\r\n   universe = {},\r\n   service = {},\r\n   benefits = [],\r\n@@ -22,8 +22,16 @@\n   isPending,\r\n   isOlder,\r\n   ...props\r\n }) {\r\n+\r\n+  //\r\n+ \r\n+\r\n+const markerCluster = new MarkerClusterer({ map, markers });\r\n+  \r\n+  //\r\n+\r\n   let refSlider = useRef(null);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n"
                },
                {
                    "date": 1706970807702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,12 @@\n }) {\r\n \r\n   //\r\n  \r\n-\r\n+  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n+    zoom: 3,\r\n+    center: { lat: -28.024, lng: 140.887 },\r\n+  });\r\n const markerCluster = new MarkerClusterer({ map, markers });\r\n   \r\n   //\r\n \r\n"
                },
                {
                    "date": 1706970876012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,13 @@\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+<script\r\n+src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly\"\r\n+defer\r\n+></script>\r\n \r\n-\r\n export default function ArtListePrestationFiche({\r\n   universe = {},\r\n   service = {},\r\n   benefits = [],\r\n"
                },
                {
                    "date": 1706970940356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,13 +9,10 @@\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-<script\r\n-src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly\"\r\n-defer\r\n-></script>\r\n \r\n+\r\n export default function ArtListePrestationFiche({\r\n   universe = {},\r\n   service = {},\r\n   benefits = [],\r\n"
                },
                {
                    "date": 1706971266344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n import { K_SIZE } from \"./markerStyle\";\r\n import * as vars from \"../../vars\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import Slider from \"react-slick\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n \r\n+\r\n export default function ArtListePrestationFiche({\r\n   universe = {},\r\n   service = {},\r\n   benefits = [],\r\n"
                },
                {
                    "date": 1706971338582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,9 @@\n }) {\r\n \r\n   //\r\n  \r\n-  const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n-    zoom: 3,\r\n-    center: { lat: -28.024, lng: 140.887 },\r\n-  });\r\n-const markerCluster = new MarkerClusterer({ map, markers });\r\n+\r\n   \r\n   //\r\n \r\n   let refSlider = useRef(null);\r\n"
                },
                {
                    "date": 1710435671964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+    map: { center: [48.8534, 2.3488], zoom: 100 },\r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1710435714940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 100 },\r\n+    map: { center: [48.8534, 2.3488], zoom: 1000 },\r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1710435865292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,210 @@\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import Select from \"../ui-elements/select\";\r\n+import PrestationFiche from \"./prestationFiche\";\r\n+import { ArtListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import { Col, Row } from \"react-bootstrap\";\r\n+import GoogleMap from \"google-map-react\";\r\n+import PrestationFicheMap from \"./prestationFicheMap\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n+import * as vars from \"../../vars\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import Slider from \"react-slick\";\r\n+\r\n+\r\n+\r\n+export default function ArtListePrestationFiche({\r\n+  universe = {},\r\n+  service = {},\r\n+  benefits = [],\r\n+  filter,\r\n+  setFilter,\r\n+  greatPlaces,\r\n+  isPending,\r\n+  isOlder,\r\n+  ...props\r\n+}) {\r\n+\r\n+  //\r\n+ \r\n+\r\n+  \r\n+  //\r\n+\r\n+  let refSlider = useRef(null);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [state, setState] = useState({\r\n+    map: { center: [46.80, 46.3488], zoom: 1000 },\r\n+    \r\n+  });\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        filter.codePostal.latitude,\r\n+        filter.codePostal.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n+\r\n+  useEffect(() => {\r\n+    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n+      const cpState = { ...state };\r\n+      cpState.map.center = [\r\n+        activeBenefit.user.latitude,\r\n+        activeBenefit.user.longitude,\r\n+      ];\r\n+      setState(cpState);\r\n+    }\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [activeBenefit]);\r\n+\r\n+  const rowRender = (row) => (\r\n+    <PrestationFiche\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.id}\r\n+      row={row}\r\n+    />\r\n+  );\r\n+\r\n+  const showData = () => {\r\n+    if (service === false || isPending)\r\n+      return (\r\n+        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </div>\r\n+      );\r\n+    else if (benefits.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    return benefits.map((row) => {\r\n+      return rowRender(row);\r\n+    });\r\n+  };\r\n+\r\n+  const _onChildClick = (key, childProps) => {\r\n+    let i = null;\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const getTitleService = () => {\r\n+    return `${service.name} : ${benefits.length} réparateur${benefits.length > 1 ? \"(s)\" : \"\"\r\n+      }`;\r\n+  };\r\n+\r\n+  const places = benefits.length\r\n+    ? benefits.map((row) => {\r\n+      return (\r\n+        <PrestationFicheMap\r\n+          key={row.id}\r\n+          lat={row.user.latitude}\r\n+          lng={row.user.longitude}\r\n+          text={\r\n+            row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+          }\r\n+          id={row.id}\r\n+          // use your hover state (from store, react-controllables etc...)\r\n+          activeBenefit={activeBenefit}\r\n+        />\r\n+      );\r\n+    })\r\n+    : \"\";\r\n+\r\n+  const settings = {\r\n+    className: \"slider variable-width\",\r\n+    infinite: false,\r\n+    centerMode: true,\r\n+    slidesToShow: 2,\r\n+    slidesToScroll: 1,\r\n+    variableWidth: true,\r\n+    arrows: false,\r\n+    focusOnSelect: true,\r\n+    initialSlide: 1,\r\n+    responsive: [\r\n+      {\r\n+        breakpoint: 575,\r\n+        settings: {\r\n+          slidesToShow: 1,\r\n+          slidesToScroll: 1,\r\n+          initialSlide: 0,\r\n+        },\r\n+      },\r\n+    ],\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <ArtListFichePrestation>\r\n+      <div className=\"head-list-content\">\r\n+        {isOlder &&\r\n+          <h1 className=\"title-bloc-products\">\r\n+            {service ? getTitleService() : \"\"}\r\n+          </h1>}\r\n+        <Select\r\n+          {...filter.sortBy}\r\n+          onChange={(e) => {\r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.codePostal.error = false;\r\n+            cpFilter.sortBy.value = e.value;\r\n+            setFilter(cpFilter);\r\n+          }}\r\n+        />\r\n+      </div>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+\r\n+        <Col lg={12} className=\"bloc-map-list\">\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+\r\n+        </Col>\r\n+      </Row>\r\n+\r\n+\r\n+    </ArtListFichePrestation>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710435943839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [46.80, 46.3488], zoom: 1000 },\r\n+    map: { center: [46.80, 46.3488], zoom: 10000 },\r\n     \r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n@@ -207,213 +207,4 @@\n \r\n     </ArtListFichePrestation>\r\n   );\r\n }\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import Select from \"../ui-elements/select\";\r\n-import PrestationFiche from \"./prestationFiche\";\r\n-import { ArtListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import { Col, Row } from \"react-bootstrap\";\r\n-import GoogleMap from \"google-map-react\";\r\n-import PrestationFicheMap from \"./prestationFicheMap\";\r\n-import { K_SIZE } from \"./markerStyle\";\r\n-import * as vars from \"../../vars\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import Slider from \"react-slick\";\r\n-\r\n-\r\n-\r\n-export default function ArtListePrestationFiche({\r\n-  universe = {},\r\n-  service = {},\r\n-  benefits = [],\r\n-  filter,\r\n-  setFilter,\r\n-  greatPlaces,\r\n-  isPending,\r\n-  isOlder,\r\n-  ...props\r\n-}) {\r\n-\r\n-  //\r\n- \r\n-\r\n-  \r\n-  //\r\n-\r\n-  let refSlider = useRef(null);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 1000 },\r\n-  });\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        filter.codePostal.latitude,\r\n-        filter.codePostal.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n-\r\n-  useEffect(() => {\r\n-    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n-      const cpState = { ...state };\r\n-      cpState.map.center = [\r\n-        activeBenefit.user.latitude,\r\n-        activeBenefit.user.longitude,\r\n-      ];\r\n-      setState(cpState);\r\n-    }\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [activeBenefit]);\r\n-\r\n-  const rowRender = (row) => (\r\n-    <PrestationFiche\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.id}\r\n-      row={row}\r\n-    />\r\n-  );\r\n-\r\n-  const showData = () => {\r\n-    if (service === false || isPending)\r\n-      return (\r\n-        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </div>\r\n-      );\r\n-    else if (benefits.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    return benefits.map((row) => {\r\n-      return rowRender(row);\r\n-    });\r\n-  };\r\n-\r\n-  const _onChildClick = (key, childProps) => {\r\n-    let i = null;\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const getTitleService = () => {\r\n-    return `${service.name} : ${benefits.length} réparateur${benefits.length > 1 ? \"(s)\" : \"\"\r\n-      }`;\r\n-  };\r\n-\r\n-  const places = benefits.length\r\n-    ? benefits.map((row) => {\r\n-      return (\r\n-        <PrestationFicheMap\r\n-          key={row.id}\r\n-          lat={row.user.latitude}\r\n-          lng={row.user.longitude}\r\n-          text={\r\n-            row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-          }\r\n-          id={row.id}\r\n-          // use your hover state (from store, react-controllables etc...)\r\n-          activeBenefit={activeBenefit}\r\n-        />\r\n-      );\r\n-    })\r\n-    : \"\";\r\n-\r\n-  const settings = {\r\n-    className: \"slider variable-width\",\r\n-    infinite: false,\r\n-    centerMode: true,\r\n-    slidesToShow: 2,\r\n-    slidesToScroll: 1,\r\n-    variableWidth: true,\r\n-    arrows: false,\r\n-    focusOnSelect: true,\r\n-    initialSlide: 1,\r\n-    responsive: [\r\n-      {\r\n-        breakpoint: 575,\r\n-        settings: {\r\n-          slidesToShow: 1,\r\n-          slidesToScroll: 1,\r\n-          initialSlide: 0,\r\n-        },\r\n-      },\r\n-    ],\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  return (\r\n-    <ArtListFichePrestation>\r\n-      <div className=\"head-list-content\">\r\n-        {isOlder &&\r\n-          <h1 className=\"title-bloc-products\">\r\n-            {service ? getTitleService() : \"\"}\r\n-          </h1>}\r\n-        <Select\r\n-          {...filter.sortBy}\r\n-          onChange={(e) => {\r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.codePostal.error = false;\r\n-            cpFilter.sortBy.value = e.value;\r\n-            setFilter(cpFilter);\r\n-          }}\r\n-        />\r\n-      </div>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-\r\n-        <Col lg={12} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-\r\n-        </Col>\r\n-      </Row>\r\n-\r\n-\r\n-    </ArtListFichePrestation>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710435976707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [46.80, 46.3488], zoom: 10000 },\r\n+    map: { center: [0,0], zoom: 10000 },\r\n     \r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n"
                },
                {
                    "date": 1710435999732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [0,0], zoom: 10000 },\r\n-    \r\n+    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1710436098022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+    map: { center: [48.8534, 2.3488], zoom: 100 },\r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1710436111163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [state, setState] = useState({\r\n-    map: { center: [48.8534, 2.3488], zoom: 100 },\r\n+    map: { center: [48.8534, 2.3488], zoom: 1 },\r\n   });\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n \r\n   useEffect(() => {\r\n"
                }
            ],
            "date": 1706880994831,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect, useRef } from \"react\";\r\nimport Select from \"../ui-elements/select\";\r\nimport PrestationFiche from \"./prestationFiche\";\r\nimport { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport GoogleMap from \"google-map-react\";\r\nimport PrestationFicheMap from \"./prestationFicheMap\";\r\nimport { K_SIZE } from \"./markerStyle\";\r\nimport * as vars from \"../../vars\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function ArtListePrestationFiche({\r\n  service = {},\r\n  benefits = [],\r\n  filter,\r\n  setFilter,\r\n  greatPlaces,\r\n  isPending,\r\n  ...props\r\n}) {\r\n  let refSlider = useRef(null);\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const [state, setState] = useState({\r\n    map: { center: [48.8534, 2.3488], zoom: 10 },\r\n  });\r\n  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n\r\n  useEffect(() => {\r\n    if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n      const cpState = { ...state };\r\n      cpState.map.center = [\r\n        filter.codePostal.latitude,\r\n        filter.codePostal.longitude,\r\n      ];\r\n      setState(cpState);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter.codePostal.latitude, filter.codePostal.longitude]);\r\n\r\n  useEffect(() => {\r\n    if (activeBenefit?.user?.latitude && activeBenefit?.user?.longitude) {\r\n      const cpState = { ...state };\r\n      cpState.map.center = [\r\n        activeBenefit.user.latitude,\r\n        activeBenefit.user.longitude,\r\n      ];\r\n      setState(cpState);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [activeBenefit]);\r\n\r\n  const rowRender = (row) => (\r\n    <PrestationFiche\r\n      activeBenefit={activeBenefit}\r\n      setActiveBenefit={setActiveBenefit}\r\n      key={row.id}\r\n      row={row}\r\n    />\r\n  );\r\n\r\n  const showData = () => {\r\n    if (service === false || isPending)\r\n      return (\r\n        <div className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n          Chargement...\r\n        </div>\r\n      );\r\n    else if (benefits.length === 0)\r\n      return (\r\n        <h3\r\n          style={{\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            fontSize: \"22px\",\r\n            fontWeight: \"600\",\r\n          }}\r\n        >\r\n          Aucune donnée\r\n        </h3>\r\n      );\r\n\r\n    return benefits.map((row) => {\r\n      return rowRender(row);\r\n    });\r\n  };\r\n\r\n  const _onChildClick = (key, childProps) => {\r\n    let i = null;\r\n    const benefit = benefits.length\r\n      ? benefits.find((val, index) => {\r\n          if (val.id === childProps.id) {\r\n            i = index;\r\n            return true;\r\n          }\r\n        })\r\n      : { id: null };\r\n    if (benefit.id) {\r\n      setActiveBenefit(benefit);\r\n      if (isTabletOrMobile) {\r\n        refSlider.slickGoTo(i);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTitleService = () => {\r\n    return `${service.name} : ${benefits.length} réparateur${\r\n      benefits.length > 1 ? \"(s)\" : \"\"\r\n    }`;\r\n  };\r\n\r\n  const places = benefits.length\r\n    ? benefits.map((row) => {\r\n        return (\r\n          <PrestationFicheMap\r\n            key={row.id}\r\n            lat={row.user.latitude}\r\n            lng={row.user.longitude}\r\n            text={\r\n              row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n            }\r\n            id={row.id}\r\n            // use your hover state (from store, react-controllables etc...)\r\n            activeBenefit={activeBenefit}\r\n          />\r\n        );\r\n      })\r\n    : \"\";\r\n\r\n  const settings = {\r\n    className: \"slider variable-width\",\r\n    infinite: false,\r\n    centerMode: true,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 1,\r\n    variableWidth: true,\r\n    arrows: false,\r\n    focusOnSelect: true,\r\n    initialSlide: 1,\r\n    responsive: [\r\n      {\r\n        breakpoint: 575,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          initialSlide: 0,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <ListFichePrestation>\r\n      <div className=\"head-list-content\">\r\n        <h1 className=\"title-bloc-products\">\r\n          {service ? getTitleService() : \"\"}\r\n        </h1>\r\n        <Select\r\n          {...filter.sortBy}\r\n          onChange={(e) => {\r\n            const cpFilter = { ...filter };\r\n            cpFilter.codePostal.error = false;\r\n            cpFilter.sortBy.value = e.value;\r\n            setFilter(cpFilter);\r\n          }}\r\n        />\r\n      </div>\r\n      <Row className=\"bloc-lists-prstation-items\">\r\n        <Col lg={5} className=\"content-lists-prstation-items\">\r\n          {isDesktopOrLaptop && (\r\n            <div className=\"lists-prstation-items\">{showData()}</div>\r\n          )}\r\n          {isTabletOrMobile && (\r\n            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n              {showData()}\r\n            </Slider>\r\n          )}\r\n        </Col>\r\n        <Col lg={7} className=\"bloc-map-list\">\r\n          <GoogleMap\r\n            apiKey={vars.mapsApiKey}\r\n            center={state.map.center}\r\n            zoom={state.map.zoom}\r\n            hoverDistance={K_SIZE / 2}\r\n            onChildClick={_onChildClick}\r\n            onGoogleApiLoaded={({ map, maps }) => {\r\n              //console.log(\"map is loaded.\");\r\n            }}\r\n          >\r\n            {places}\r\n          </GoogleMap>\r\n        </Col>\r\n      </Row>\r\n    </ListFichePrestation>\r\n  );\r\n}\r\n"
        }
    ]
}