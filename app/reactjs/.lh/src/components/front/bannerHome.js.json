{
    "sourceFile": "src/components/front/bannerHome.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 134,
            "patches": [
                {
                    "date": 1705675837283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705675970124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n   }, [filter]);\r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n-      <PageBanner className=\"home-page-banner\" style={{  backgroundColor: '#0000FF'}}>\r\n+      <PageBanner className=\"home-page-banner\" >\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n             {sliderBanner &&\r\n               sliderBanner.map(($val) => (\r\n@@ -455,9 +455,9 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner >\r\n-    <Container>\r\n+    <Container style={{  backgroundColor: '#0000FF'}}>\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n"
                },
                {
                    "date": 1705675981515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,10 +454,10 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner >\r\n-    <Container style={{  backgroundColor: '#0000FF'}}>\r\n+    <PageBanner style={{  backgroundColor: '#0000FF'}}>\r\n+    <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n"
                },
                {
                    "date": 1705676074542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  backgroundColor: '#0000FF'}}>\r\n+    <PageBanner style={{  backgroundColor: '#FEFDFA'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676098724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  backgroundColor: '#FEFDFA'}}>\r\n+    <PageBanner style={{  backgroundColor: '#0000FF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676122728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  backgroundColor: '#0000FF'}}>\r\n+    <PageBanner style={{  backgroundColor: '#FEFDFA'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676150861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  backgroundColor: '#FEFDFA'}}>\r\n+    <PageBanner style={{  backgroundColor: '#ffffff'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676170908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  backgroundColor: '#ffffff'}}>\r\n+    <PageBanner style={{  backgroundColor: '#0000FF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676179840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  backgroundColor: '#0000FF'}}>\r\n+    <PageBanner style={{  background: '#0000FF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676189895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background: '#0000FF'}}>\r\n+    <PageBanner style={{  background: '#0000FG'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676206219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background: '#0000FG'}}>\r\n+    <PageBanner style={{  background: '#fefd'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676244143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background: '#fefd'}}>\r\n+    <PageBanner style={{  background: '#fefddd'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676258389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background: '#fefddd'}}>\r\n+    <PageBanner style={{  background: '#ffffff'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676271848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background: '#ffffff'}}>\r\n+    <PageBanner style={{  background: '#000000'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676357842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background: '#000000'}}>\r\n+    <PageBanner style={{  background : '#00000B'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676370720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#00000B'}}>\r\n+    <PageBanner style={{  background : '#0000'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676377205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#0000'}}>\r\n+    <PageBanner style={{  background : '#00'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676386588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#00'}}>\r\n+    <PageBanner style={{  background : '#221100'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676396878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#221100'}}>\r\n+    <PageBanner style={{  background : '#000001'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676403870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#000001'}}>\r\n+    <PageBanner style={{  background : '#FFFF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676424915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FFFF'}}>\r\n+    <PageBanner style={{  background : '#FFFFFA'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676432158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FFFFFA'}}>\r\n+    <PageBanner style={{  background : '#EE'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676444427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#EE'}}>\r\n+    <PageBanner style={{  background : '#0000ff'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676451759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#0000ff'}}>\r\n+    <PageBanner style={{  background : '#000099'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676483733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#000099'}}>\r\n+    <PageBanner style={{  background : '#FEFDFA'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676507004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FEFDFA'}}>\r\n+    <PageBanner style={{  background : '#FEFD'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676583032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FEFD'}}>\r\n+    <PageBanner style={{  background : \"rgb(254,253,250)\"}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676604909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : \"rgb(254,253,250)\"}}>\r\n+    <PageBanner style={{  color : \"rgb(254,253,250)\"}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676630661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  color : \"rgb(254,253,250)\"}}>\r\n+    <PageBanner style={{  color : \"rgb(0,0,0)\"}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676655778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  color : \"rgb(0,0,0)\"}}>\r\n+    <PageBanner style={{  background : '#999999'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676762807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#999999'}}>\r\n+    <PageBanner style={{  background : '#9999'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676795620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#9999'}}>\r\n+    <PageBanner style={{  background : '#FDFA'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676812514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FDFA'}}>\r\n+    <PageBanner style={{  background : '#FFFF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676819810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FFFF'}}>\r\n+    <PageBanner style={{  background : '#FFFFFF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676891209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FFFFFF'}}>\r\n+    <PageBanner style={{  background : '#0000FF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676906076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#0000FF'}}>\r\n+    <PageBanner style={{  background : '#000FFF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676917081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,580 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner style={{  background : '#00EEFF'}}>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1705676937197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#00EEFF'}}>\r\n+    <PageBanner style={{  background : '#00EE00'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n@@ -577,584 +577,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner style={{  background : '#000FFF'}}>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1705676947972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#00EE00'}}>\r\n+    <PageBanner style={{  background : '#00FFFF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705676959252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#00FFFF'}}>\r\n+    <PageBanner style={{  background : '#FDFEFA'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677144525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#FDFEFA'}}>\r\n+    <PageBanner style={{  background : '#0000FF'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677152377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#0000FF'}}>\r\n+    <PageBanner style={{  background : '#000000'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677164811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#000000'}}>\r\n+    <PageBanner style={{  background : '#fff'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677206681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#fff'}}>\r\n+    <PageBanner style={{  background : '#0000ff'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677224987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#0000ff'}}>\r\n+    <PageBanner >\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677240048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner >\r\n+    <PageBanner style={{  background : '#0000ff'}}>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705677316331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,9 +454,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{  background : '#0000ff'}}>\r\n+    <PageBanner >\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n"
                },
                {
                    "date": 1705681906330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -473,8 +473,14 @@\n             <span></span>\r\n             <span></span>\r\n           </button>\r\n         )}\r\n+           <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n         <div className=\"item-filter\">\r\n           <Select\r\n             {...filter.universe}\r\n             element={filter.universe}\r\n"
                },
                {
                    "date": 1705681919940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,8 +455,14 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n@@ -473,14 +479,9 @@\n             <span></span>\r\n             <span></span>\r\n           </button>\r\n         )}\r\n-           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n+        \r\n         <div className=\"item-filter\">\r\n           <Select\r\n             {...filter.universe}\r\n             element={filter.universe}\r\n"
                },
                {
                    "date": 1707212386317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,9 +459,9 @@\n          <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n+           \r\n           </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n"
                },
                {
                    "date": 1707212395951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,9 +459,9 @@\n          <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n-           \r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n"
                },
                {
                    "date": 1707212404154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,9 +459,9 @@\n          <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n+           \r\n           </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n"
                },
                {
                    "date": 1707212424154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,11 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n+              Faites réparer votre objet\r\n            \r\n           </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1707212462514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,11 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-              Faites réparer votre objet\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'bottom', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1707212479167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'bottom', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{ textAlign: 'bottom', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1707212488229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ textAlign: 'bottom', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{ textAlign: 'top', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1707212560935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ textAlign: 'top', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1707212608065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{ marginTop:50,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1707212626818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginTop:50,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{ marginTop:50, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1707212647083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginTop:50, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1709284047025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,589 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    */\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709284216057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,13 +364,14 @@\n                 }}\r\n                 onChange={(e) => {\r\n                   const cpFilter = { ...filter };\r\n                   cpFilter.universe.value = e.value;\r\n+                  /* DBG\r\n                   cpFilter.universe.nameCategory = e.nameCategory;\r\n                   cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                   cpFilter.universe.requireSearchSubCategory =\r\n                     e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.category = e.category;*/\r\n                   cpFilter.universe.error = false;\r\n                   cpFilter.activeElement = \"universe\";\r\n                   setFilter(cpFilter);\r\n                 }}\r\n@@ -586,591 +587,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709284348901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,14 +364,13 @@\n                 }}\r\n                 onChange={(e) => {\r\n                   const cpFilter = { ...filter };\r\n                   cpFilter.universe.value = e.value;\r\n-                  /* DBG\r\n                   cpFilter.universe.nameCategory = e.nameCategory;\r\n                   cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                   cpFilter.universe.requireSearchSubCategory =\r\n                     e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;*/\r\n+                  cpFilter.universe.category = e.category;\r\n                   cpFilter.universe.error = false;\r\n                   cpFilter.activeElement = \"universe\";\r\n                   setFilter(cpFilter);\r\n                 }}\r\n"
                },
                {
                    "date": 1709284423975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,589 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une kcatégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    */\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709284557645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,607 +199,18 @@\n     if (e.universe !== undefined) {\r\n       cpFilter.universe.error = e.universe;\r\n       cpFilter.universe.infoBull = e.universe;\r\n     }\r\n-    /* DBG\r\n+    \r\n     if (e.category !== undefined) {\r\n       cpFilter.category.error = e.category;\r\n       cpFilter.category.infoBull = e.category;\r\n     }\r\n     if (e.subCategory !== undefined) {\r\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n-    */\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n    \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    /* DBG\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    */\r\n     setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n@@ -855,9 +266,9 @@\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n       cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n+      if (filter.universe.value) {/*\r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n           indexOfValue(\r\n             filter.category.value,\r\n@@ -900,9 +311,9 @@\n         cpFilter.subCategory.value = \"\";\r\n         localStorage.setItem(\"defaultSubCategory\", null);\r\n         setFilter(cpFilter);\r\n       }\r\n-    }\r\n+    }*/\r\n   }, [filter]);\r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n"
                },
                {
                    "date": 1709284595745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n       cpFilter.category.options = [];\r\n-      if (filter.universe.value) {/*\r\n+      /*if (filter.universe.value) {\r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n           indexOfValue(\r\n             filter.category.value,\r\n@@ -290,9 +290,10 @@\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n       }\r\n-    } else if (filter.activeElement === \"category\") {\r\n+    } \r\n+    /*else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n         if (\r\n"
                },
                {
                    "date": 1709284611972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n       cpFilter.category.options = [];\r\n-      /*if (filter.universe.value) {\r\n+      if (filter.universe.value) {\r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n           indexOfValue(\r\n             filter.category.value,\r\n@@ -290,10 +290,9 @@\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n       }\r\n-    } \r\n-    /*else if (filter.activeElement === \"category\") {\r\n+    } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n         if (\r\n@@ -312,9 +311,9 @@\n         cpFilter.subCategory.value = \"\";\r\n         localStorage.setItem(\"defaultSubCategory\", null);\r\n         setFilter(cpFilter);\r\n       }\r\n-    }*/\r\n+    }\r\n   }, [filter]);\r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n"
                },
                {
                    "date": 1709284632736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n   };\r\n \r\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n+    if (filter.activeElement === \"universe\") {/*\r\n       cpFilter.category.options = [];\r\n       if (filter.universe.value) {\r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n@@ -289,9 +289,9 @@\n         cpFilter.activeElement = \"category\";\r\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n-      }\r\n+      }*/\r\n     } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n"
                },
                {
                    "date": 1709284699551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n       }*/\r\n-    } else if (filter.activeElement === \"category\") {\r\n+    } else if (filter.activeElement === \"category\") {/*\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n         if (\r\n@@ -310,9 +310,9 @@\n         cpFilter.activeElement = \"subCategory\";\r\n         cpFilter.subCategory.value = \"\";\r\n         localStorage.setItem(\"defaultSubCategory\", null);\r\n         setFilter(cpFilter);\r\n-      }\r\n+      }*/\r\n     }\r\n   }, [filter]);\r\n \r\n   if (!isDisplayedBottom ) {\r\n"
                },
                {
                    "date": 1709284806760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,591 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une kcatégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    \r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+   \r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {/*\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }*/\r\n+    } else if (filter.activeElement === \"category\") {/*\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }*/\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  \r\n+                    cpFilter.universe.requireSearchSubCategory = false;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709284838451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -368,14 +368,13 @@\n                   cpFilter.universe.nameCategory = e.nameCategory;\r\n                   cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                   cpFilter.universe.requireSearchSubCategory =\r\n                     e.requireSearchSubCategory;\r\n-                  \r\n-                    cpFilter.universe.requireSearchSubCategory = false;\r\n+       \r\n                   cpFilter.universe.category = e.category;\r\n                   cpFilter.universe.error = false;\r\n                   cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n+                 // setFilter(cpFilter);\r\n                 }}\r\n               />\r\n             </div>\r\n \r\n@@ -588,593 +587,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une kcatégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    \r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-   \r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {/*\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }*/\r\n-    } else if (filter.activeElement === \"category\") {/*\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }*/\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709284872206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -395,9 +395,9 @@\n                       cpFilter.category.subCategory = e.subCategory;\r\n                       cpFilter.category.error = false;\r\n                       cpFilter.activeElement = \"category\";\r\n                       localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n+                      //setFilter(cpFilter);\r\n                     }\r\n                   }}\r\n                 />\r\n               </div>\r\n"
                },
                {
                    "date": 1709284893933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -395,16 +395,16 @@\n                       cpFilter.category.subCategory = e.subCategory;\r\n                       cpFilter.category.error = false;\r\n                       cpFilter.activeElement = \"category\";\r\n                       localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      //setFilter(cpFilter);\r\n+                      setFilter(cpFilter);\r\n                     }\r\n                   }}\r\n                 />\r\n               </div>\r\n             )}\r\n \r\n-            {filter.category.value && (\r\n+            {filter.category.value && false &&(\r\n               <div className=\"item-filter\">\r\n                 <SelectCat\r\n                   {...filter.subCategory}\r\n                   element={filter.subCategory}\r\n"
                },
                {
                    "date": 1709285028971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n       isSearchable: true,\r\n       error: false,\r\n       infoBull: false,\r\n       textInfoBulle:\r\n-        \"Veuillez sélectionner une kcatégorie dans la liste pour lancer une recherche\",\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n     },\r\n    \r\n     subCategory: {\r\n       label: \"Sous-catégorie(s)\",\r\n@@ -199,18 +199,18 @@\n     if (e.universe !== undefined) {\r\n       cpFilter.universe.error = e.universe;\r\n       cpFilter.universe.infoBull = e.universe;\r\n     }\r\n-    \r\n+    /* DBG\r\n     if (e.category !== undefined) {\r\n       cpFilter.category.error = e.category;\r\n       cpFilter.category.infoBull = e.category;\r\n     }\r\n     if (e.subCategory !== undefined) {\r\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n-   \r\n+    */\r\n     setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n@@ -264,9 +264,9 @@\n   };\r\n \r\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {/*\r\n+    if (filter.activeElement === \"universe\") {\r\n       cpFilter.category.options = [];\r\n       if (filter.universe.value) {\r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n@@ -289,10 +289,10 @@\n         cpFilter.activeElement = \"category\";\r\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n-      }*/\r\n-    } else if (filter.activeElement === \"category\") {/*\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n         if (\r\n@@ -310,9 +310,9 @@\n         cpFilter.activeElement = \"subCategory\";\r\n         cpFilter.subCategory.value = \"\";\r\n         localStorage.setItem(\"defaultSubCategory\", null);\r\n         setFilter(cpFilter);\r\n-      }*/\r\n+      }\r\n     }\r\n   }, [filter]);\r\n \r\n   if (!isDisplayedBottom ) {\r\n@@ -368,13 +368,12 @@\n                   cpFilter.universe.nameCategory = e.nameCategory;\r\n                   cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                   cpFilter.universe.requireSearchSubCategory =\r\n                     e.requireSearchSubCategory;\r\n-       \r\n                   cpFilter.universe.category = e.category;\r\n                   cpFilter.universe.error = false;\r\n                   cpFilter.activeElement = \"universe\";\r\n-                 // setFilter(cpFilter);\r\n+                  setFilter(cpFilter);\r\n                 }}\r\n               />\r\n             </div>\r\n \r\n@@ -402,9 +401,9 @@\n                 />\r\n               </div>\r\n             )}\r\n \r\n-            {filter.category.value && false &&(\r\n+            {filter.category.value && (\r\n               <div className=\"item-filter\">\r\n                 <SelectCat\r\n                   {...filter.subCategory}\r\n                   element={filter.subCategory}\r\n"
                },
                {
                    "date": 1709285251418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -505,9 +505,9 @@\n               setFilter(cpFilter);\r\n             }}\r\n           />\r\n         </div>\r\n-\r\n+/* 0103\r\n         {filter.universe.value && (\r\n           <div className=\"item-filter\">\r\n             <Select\r\n               {...filter.category}\r\n@@ -530,9 +530,9 @@\n               }}\r\n             />\r\n           </div>\r\n         )}\r\n-\r\n+0103*/\r\n         {filter.category.value && (\r\n           <div className=\"item-filter\">\r\n             <SelectCat\r\n               {...filter.subCategory}\r\n"
                },
                {
                    "date": 1709285307560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -505,9 +505,9 @@\n               setFilter(cpFilter);\r\n             }}\r\n           />\r\n         </div>\r\n-/* 0103\r\n+{/* 01/03\r\n         {filter.universe.value && (\r\n           <div className=\"item-filter\">\r\n             <Select\r\n               {...filter.category}\r\n@@ -530,9 +530,9 @@\n               }}\r\n             />\r\n           </div>\r\n         )}\r\n-0103*/\r\n+ */ }\r\n         {filter.category.value && (\r\n           <div className=\"item-filter\">\r\n             <SelectCat\r\n               {...filter.subCategory}\r\n"
                },
                {
                    "date": 1709285376067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,591 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    */\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+{/* 01/03\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+ */ }\r\n+ {/* 01/03\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+            */}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709285504567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n       isSearchable: true,\r\n       error: false,\r\n       infoBull: false,\r\n       textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n     },\r\n    \r\n     subCategory: {\r\n       label: \"Sous-catégorie(s)\",\r\n@@ -122,9 +122,9 @@\n       isSearchable: true,\r\n       error: false,\r\n       infoBull: false,\r\n       textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n     },\r\n     activeElement: \"\",\r\n   });\r\n \r\n@@ -588,593 +588,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    /* DBG\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    */\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-{/* 01/03\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n- */ }\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709285537827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,18 +199,18 @@\n     if (e.universe !== undefined) {\r\n       cpFilter.universe.error = e.universe;\r\n       cpFilter.universe.infoBull = e.universe;\r\n     }\r\n-    /* DBG\r\n+    \r\n     if (e.category !== undefined) {\r\n       cpFilter.category.error = e.category;\r\n       cpFilter.category.infoBull = e.category;\r\n     }\r\n     if (e.subCategory !== undefined) {\r\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n-    */\r\n+    \r\n     setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n"
                },
                {
                    "date": 1709285580292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,591 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    */\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+{/* 01/03\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+ */ }\r\n+ {/* 01/03\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+            */}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709285691889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n     if (e.universe !== undefined) {\r\n       cpFilter.universe.error = e.universe;\r\n       cpFilter.universe.infoBull = e.universe;\r\n     }\r\n-    /* DBG\r\n+    /* DBG 01/03\r\n     if (e.category !== undefined) {\r\n       cpFilter.category.error = e.category;\r\n       cpFilter.category.infoBull = e.category;\r\n     }\r\n@@ -588,595 +588,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    \r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    \r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-{/* 01/03\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n- */ }\r\n- {/* 01/03\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-            */}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709285746430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,591 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG 01/03\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    */\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+{/* 01/03\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+ */ }\r\n+ {/* 01/03\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+            */}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709285890418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n         setFilter(cpFilter);\r\n       }\r\n     }\r\n   }, [filter]);\r\n-\r\n+{/*\r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n       <PageBanner className=\"home-page-banner\" >\r\n         <div className=\"slider-home-banner\">\r\n@@ -455,9 +455,11 @@\n         </Container>\r\n       </PageBanner>\r\n     );}\r\n   else\r\n-  { return (\r\n+  {\r\n+  */}\r\n+   return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n             <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n@@ -586,597 +588,6 @@\n       </BlocFilterStyle>\r\n     </Container>\r\n   </PageBanner>\r\n   )\r\n-  }\r\n+  //}\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    /* DBG 01/03\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    */\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-{/* 01/03\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n- */ }\r\n- {/* 01/03\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-            */}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709285973655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n         setFilter(cpFilter);\r\n       }\r\n     }\r\n   }, [filter]);\r\n-{/*\r\n+\r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n       <PageBanner className=\"home-page-banner\" >\r\n         <div className=\"slider-home-banner\">\r\n@@ -456,9 +456,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   {\r\n-  */}\r\n+  \r\n    return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n             <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n@@ -588,6 +588,6 @@\n       </BlocFilterStyle>\r\n     </Container>\r\n   </PageBanner>\r\n   )\r\n-  //}\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1709286339418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n     */\r\n-    setFilter(cpFilter);\r\n+    /*setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n       cpFilterMap.codePostal.error = e.codePostal;\r\n"
                },
                {
                    "date": 1709286495297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,19 +199,19 @@\n     if (e.universe !== undefined) {\r\n       cpFilter.universe.error = e.universe;\r\n       cpFilter.universe.infoBull = e.universe;\r\n     }\r\n-    /* DBG 01/03\r\n+    /* DBG 01/03*/\r\n     if (e.category !== undefined) {\r\n       cpFilter.category.error = e.category;\r\n       cpFilter.category.infoBull = e.category;\r\n     }\r\n     if (e.subCategory !== undefined) {\r\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n-    */\r\n-    /*setFilter(cpFilter);\r\n+    /**/\r\n+    setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n       cpFilterMap.codePostal.error = e.codePostal;\r\n@@ -265,33 +265,9 @@\n \r\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n+     \r\n     } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n"
                },
                {
                    "date": 1709286653968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,9 +265,33 @@\n \r\n   useEffect(() => {\r\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n-     \r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n     } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n"
                },
                {
                    "date": 1709286728250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n       infoBull: false,\r\n       textInfoBulle:\r\n         \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n     },\r\n-      \r\n+    /*  \r\n     category: {\r\n       label: \"Catégorie(s)\",\r\n       placeholder: \"Choisir dans la liste\",\r\n       options: [],\r\n@@ -123,9 +123,9 @@\n       error: false,\r\n       infoBull: false,\r\n       textInfoBulle:\r\n         \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n+    },*/\r\n     activeElement: \"\",\r\n   });\r\n \r\n   const [filterMap, setFilterMap] = useState({\r\n"
                },
                {
                    "date": 1709286772555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,9 +375,9 @@\n                   setFilter(cpFilter);\r\n                 }}\r\n               />\r\n             </div>\r\n-\r\n+{/*}\r\n             {filter.universe.value && (\r\n               <div className=\"item-filter\">\r\n                 <Select\r\n                   {...filter.category}\r\n@@ -401,8 +401,10 @@\n                 />\r\n               </div>\r\n             )}\r\n \r\n+            */}\r\n+\r\n             {filter.category.value && (\r\n               <div className=\"item-filter\">\r\n                 <SelectCat\r\n                   {...filter.subCategory}\r\n"
                },
                {
                    "date": 1709286859777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,14 +364,17 @@\n                 }}\r\n                 onChange={(e) => {\r\n                   const cpFilter = { ...filter };\r\n                   cpFilter.universe.value = e.value;\r\n+                  /*\r\n                   cpFilter.universe.nameCategory = e.nameCategory;\r\n                   cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                   cpFilter.universe.requireSearchSubCategory =\r\n                     e.requireSearchSubCategory;\r\n                   cpFilter.universe.category = e.category;\r\n+                  */\r\n                   cpFilter.universe.error = false;\r\n+\r\n                   cpFilter.activeElement = \"universe\";\r\n                   setFilter(cpFilter);\r\n                 }}\r\n               />\r\n"
                },
                {
                    "date": 1709286884681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,598 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    /*  \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n+    },*/\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG 01/03*/\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    /**/\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  {/*\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                */}\r\n+                  cpFilter.universe.error = false;\r\n+\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+{/*}\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            */}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  {\r\n+  \r\n+   return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+{/* 01/03\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+ */ }\r\n+ {/* 01/03\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+            */}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709287038089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,600 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    /*  \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n+    },*/\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    /* DBG 01/03*/\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    /**/\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  {/*\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                */}\r\n+                  cpFilter.universe.error = false;\r\n+\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+{/*}\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            */}\r\n+\r\n+{/*\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+                */}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  {\r\n+  \r\n+   return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+{/* 01/03\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+ */ }\r\n+ {/* 01/03\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+            */}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709287123798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,8 +267,9 @@\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n       cpFilter.category.options = [];\r\n       if (filter.universe.value) {\r\n+        {/*\r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n           indexOfValue(\r\n             filter.category.value,\r\n@@ -282,16 +283,16 @@\n \r\n         cpFilter.category.label =\r\n           filter.universe.nameCategory || \"YCatégorie(s)\";\r\n         cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n+      filter.universe.nameSubCategory || \"YSous-catégorie(s)\"; \r\n       }\r\n       if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n         cpFilter.activeElement = \"category\";\r\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n-      }\r\n+      }*/}\r\n     } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n@@ -597,1200 +598,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    /*  \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n-    },*/\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    /* DBG 01/03*/\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    /**/\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  {/*\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                */}\r\n-                  cpFilter.universe.error = false;\r\n-\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-{/*}\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            */}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  {\r\n-  \r\n-   return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-{/* 01/03\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n- */ }\r\n- {/* 01/03\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-            */}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    /*  \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n-    },*/\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    /* DBG 01/03*/\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    /**/\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"YSous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  /*\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  */\r\n-                  cpFilter.universe.error = false;\r\n-\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-{/*}\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            */}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  {\r\n-  \r\n-   return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-{/* 01/03\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n- */ }\r\n- {/* 01/03\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-            */}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709287176373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n     const cpFilter = copy(filter);\r\n     if (filter.activeElement === \"universe\") {\r\n       cpFilter.category.options = [];\r\n       if (filter.universe.value) {\r\n-        {/*\r\n+        \r\n         cpFilter.category.options.push(...filter.universe.category);\r\n         if (\r\n           indexOfValue(\r\n             filter.category.value,\r\n@@ -290,9 +290,9 @@\n         cpFilter.activeElement = \"category\";\r\n         cpFilter.category.value = \"\";\r\n         localStorage.setItem(\"defaultCategory\", null);\r\n         setFilter(cpFilter);\r\n-      }*/}\r\n+      }\r\n     } else if (filter.activeElement === \"category\") {\r\n       cpFilter.subCategory.options = [];\r\n       if (filter.category.value) {\r\n         cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n"
                },
                {
                    "date": 1709287539987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,587 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir bannershome dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      filter.category.value &&\r\n+      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1709540897465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n     },\r\n       \r\n     category: {\r\n       label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n+      placeholder: \"xChoisir dans la liste\",\r\n       options: [],\r\n       subCategory: [],\r\n       value: null,\r\n       isSearchable: true,\r\n@@ -584,605 +584,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    /*  \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xcatégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une xsous-catégorie dans la liste pour lancer une recherche\",\r\n-    },*/\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    /* DBG 01/03*/\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    /**/\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        \r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"YCatégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-      filter.universe.nameSubCategory || \"YSous-catégorie(s)\"; \r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  {/*\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                */}\r\n-                  cpFilter.universe.error = false;\r\n-\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-{/*}\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            */}\r\n-\r\n-{/*\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-                */}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  {\r\n-  \r\n-   return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-{/* 01/03\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n- */ }\r\n- {/* 01/03\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-            */}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1709540974057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n     },\r\n       \r\n     category: {\r\n       label: \"Catégorie(s)\",\r\n-      placeholder: \"xChoisir dans la liste\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n       options: [],\r\n       subCategory: [],\r\n       value: null,\r\n       isSearchable: true,\r\n"
                },
                {
                    "date": 1709541028978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n     if (e.subCategory !== undefined) {\r\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n-    setFilter(cpFilter);\r\n+   // setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n       cpFilterMap.codePostal.error = e.codePostal;\r\n"
                },
                {
                    "date": 1709541172370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n     if (e.subCategory !== undefined) {\r\n       cpFilter.subCategory.error = e.subCategory;\r\n       cpFilter.subCategory.infoBull = e.subCategory;\r\n     }\r\n-   // setFilter(cpFilter);\r\n+    setFilter(cpFilter);\r\n \r\n     const cpFilterMap = { ...filterMap };\r\n     if (e.codePostal !== undefined) {\r\n       cpFilterMap.codePostal.error = e.codePostal;\r\n"
                },
                {
                    "date": 1709541233609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,8 +200,9 @@\n       cpFilter.universe.error = e.universe;\r\n       cpFilter.universe.infoBull = e.universe;\r\n     }\r\n     if (e.category !== undefined) {\r\n+      console.log(\"STEPERR erreur msg error\",e.category);\r\n       cpFilter.category.error = e.category;\r\n       cpFilter.category.infoBull = e.category;\r\n     }\r\n     if (e.subCategory !== undefined) {\r\n"
                },
                {
                    "date": 1709541413363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,8 +162,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [errorcCodePostal]);\r\n \r\n   const searchServices = () => {\r\n+    console.log(\"STEPER searchservice\");\r\n     setFilter(clearErrors(filter));\r\n     setFilterMap(clearErrors(filterMap));\r\n     if (\r\n       filter.universe.value &&\r\n"
                },
                {
                    "date": 1709541533422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,8 +180,9 @@\n         const u = universe.allUniverses[index];\r\n         history.push(`/univers/${u.slug}-${u.id}`);\r\n       }\r\n     } else {\r\n+      console.log(\"STEPER msgErrorssearchservice\");\r\n       msgErrors({\r\n         universe: !filter.universe.value,\r\n         category: filter.universe.value && !filter.category.value,\r\n         subCategory:\r\n"
                },
                {
                    "date": 1709541797411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,15 +162,15 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [errorcCodePostal]);\r\n \r\n   const searchServices = () => {\r\n-    console.log(\"STEPER searchservice\");\r\n+    console.log(\"STEPER 1 searchservice\");\r\n     setFilter(clearErrors(filter));\r\n     setFilterMap(clearErrors(filterMap));\r\n     if (\r\n       filter.universe.value &&\r\n-      filter.category.value &&\r\n-      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+  //    filter.category.value &&\r\n+   //   ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n       placeIsSelected\r\n     ) {\r\n       const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n       if (index > -1) {\r\n@@ -180,9 +180,9 @@\n         const u = universe.allUniverses[index];\r\n         history.push(`/univers/${u.slug}-${u.id}`);\r\n       }\r\n     } else {\r\n-      console.log(\"STEPER msgErrorssearchservice\");\r\n+      console.log(\"STEPER 2 msgErrors searchservice\");\r\n       msgErrors({\r\n         universe: !filter.universe.value,\r\n         category: filter.universe.value && !filter.category.value,\r\n         subCategory:\r\n"
                },
                {
                    "date": 1710151614577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n \r\n   const [filter, setFilter] = useState({\r\n     universe: {\r\n       label: \"Univers\",\r\n-      placeholder: \"Choisir bannershome dans la liste\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n       options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n       value: \"\",\r\n       category: [],\r\n       nameCategory: \"\",\r\n"
                },
                {
                    "date": 1710170561135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,9 +459,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1710234717850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <Container>\r\n+        <xContainer>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710234734099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -452,9 +452,9 @@\n                 {isTabletOrMobile && <>Recherche</>}\r\n               </button>\r\n             </div>\r\n           </BlocFilterStyle>\r\n-        </Container>\r\n+        </xContainer>\r\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n"
                },
                {
                    "date": 1710234898436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <xContainer>\r\n+        <xContainer style=\"paddingLeft:10;\">\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710234925678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <xContainer style=\"paddingLeft:10;\">\r\n+        <xContainer style={\"paddingLeft:10\"}>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710234938179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <xContainer style={\"paddingLeft:10\"}>\r\n+        <xContainer style=[{\"paddingLeft:10\"}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710234950660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <xContainer style=[{\"paddingLeft:10\"}}>\r\n+        <xContainer style={{paddingLeft:10}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710234972565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <xContainer style={{paddingLeft:10}}>\r\n+        <xContainer>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710235729233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n               ))}\r\n           </Slider>\r\n         </div>\r\n         \r\n-        <xContainer>\r\n+        <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n"
                },
                {
                    "date": 1710235736901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -452,9 +452,9 @@\n                 {isTabletOrMobile && <>Recherche</>}\r\n               </button>\r\n             </div>\r\n           </BlocFilterStyle>\r\n-        </xContainer>\r\n+        </Container>\r\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n"
                },
                {
                    "date": 1710442006912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [errorcCodePostal]);\r\n \r\n   const searchServices = () => {\r\n-    console.log(\"STEPER 1 searchservice\");\r\n+    console.log(\"STEPER 1not nc searchservice\");\r\n     setFilter(clearErrors(filter));\r\n     setFilterMap(clearErrors(filterMap));\r\n     if (\r\n       filter.universe.value &&\r\n"
                },
                {
                    "date": 1710443244148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n         if (isTabletOrMobile) {\r\n           setClick(false);\r\n         }\r\n         const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n+        //history.push(`/univers/${u.slug}-${u.id}`);\r\n       }\r\n     } else {\r\n       console.log(\"STEPER 2 msgErrors searchservice\");\r\n       msgErrors({\r\n"
                },
                {
                    "date": 1710443265860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n         if (isTabletOrMobile) {\r\n           setClick(false);\r\n         }\r\n         const u = universe.allUniverses[index];\r\n-        //history.push(`/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n       }\r\n     } else {\r\n       console.log(\"STEPER 2 msgErrors searchservice\");\r\n       msgErrors({\r\n"
                },
                {
                    "date": 1710443320162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,591 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    console.log(\"STEPER 1not nc searchservice\");\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+  //    filter.category.value &&\r\n+   //   ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        console.log(\"STEP Lets go \"+ `/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      console.log(\"STEPER 2 msgErrors searchservice\");\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      console.log(\"STEPERR erreur msg error\",e.category);\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1710443807994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,591 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      subCategory: [],\r\n+      value: null,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+   \r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    console.log(\"STEPER 1not nc searchservice\");\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+  //    filter.category.value &&\r\n+   //   ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n+      placeIsSelected\r\n+    ) {\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        console.log(\"STEP Lets go \"+ `/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/universervice/${u.slug}-${u.id}`);\r\n+      }\r\n+    } else {\r\n+      console.log(\"STEPER 2 msgErrors searchservice\");\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        category: filter.universe.value && !filter.category.value,\r\n+        subCategory:\r\n+          filter.universe.value &&\r\n+          filter.category.value &&\r\n+          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n+          filter.universe.requireSearchSubCategory,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      console.log(\"STEPERR erreur msg error\",e.category);\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    const cpFilter = copy(filter);\r\n+    if (filter.activeElement === \"universe\") {\r\n+      cpFilter.category.options = [];\r\n+      if (filter.universe.value) {\r\n+        cpFilter.category.options.push(...filter.universe.category);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.category.value,\r\n+            filter.universe.category,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.category.value = \"\";\r\n+          localStorage.setItem(\"defaultCategory\", null);\r\n+        }\r\n+\r\n+        cpFilter.category.label =\r\n+          filter.universe.nameCategory || \"Catégorie(s)\";\r\n+        cpFilter.subCategory.label =\r\n+          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n+      }\r\n+      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n+        cpFilter.activeElement = \"category\";\r\n+        cpFilter.category.value = \"\";\r\n+        localStorage.setItem(\"defaultCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    } else if (filter.activeElement === \"category\") {\r\n+      cpFilter.subCategory.options = [];\r\n+      if (filter.category.value) {\r\n+        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n+        if (\r\n+          indexOfValue(\r\n+            filter.subCategory.value,\r\n+            filter.category.subCategory,\r\n+            \"value\"\r\n+          ) === -1\r\n+        ) {\r\n+          cpFilter.subCategory.value = \"\";\r\n+          localStorage.setItem(\"defaultSubCategory\", null);\r\n+        }\r\n+      }\r\n+      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n+        cpFilter.activeElement = \"subCategory\";\r\n+        cpFilter.subCategory.value = \"\";\r\n+        localStorage.setItem(\"defaultSubCategory\", null);\r\n+        setFilter(cpFilter);\r\n+      }\r\n+    }\r\n+  }, [filter]);\r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\" >\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+            {filter.universe.value && (\r\n+              <div className=\"item-filter\">\r\n+                <Select\r\n+                  {...filter.category}\r\n+                  element={filter.category}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.category = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChange={(e) => {\r\n+                    if (filter.category.value !== e.value) {\r\n+                      let cpFilter = { ...filter };\r\n+                      cpFilter.category.value = e.value;\r\n+                      cpFilter.category.subCategory = e.subCategory;\r\n+                      cpFilter.category.error = false;\r\n+                      cpFilter.activeElement = \"category\";\r\n+                      localStorage.setItem(\"defaultCategory\", e.value);\r\n+                      setFilter(cpFilter);\r\n+                    }\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+\r\n+            {filter.category.value && (\r\n+              <div className=\"item-filter\">\r\n+                <SelectCat\r\n+                  {...filter.subCategory}\r\n+                  element={filter.subCategory}\r\n+                  setElement={(element) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory = element;\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                  onChangeCallback={(response) => {\r\n+                    const cpFilter = { ...filter };\r\n+                    cpFilter.subCategory.value = response;\r\n+                    cpFilter.subCategory.error = false;\r\n+                    cpFilter.activeElement = \"subCategory\";\r\n+                    localStorage.setItem(\r\n+                      \"defaultSubCategory\",\r\n+                      JSON.stringify(response)\r\n+                    );\r\n+                    setFilter(cpFilter);\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner >\r\n+         <div className=\"bloc-title-banner\">\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+           \r\n+          </div>\r\n+    <Container >\r\n+      {isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+\r\n+      <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        \r\n+        <div className=\"item-filter\">\r\n+          <Select\r\n+            {...filter.universe}\r\n+            element={filter.universe}\r\n+            setElement={(element) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe = element;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+            onChange={(e) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.universe.value = e.value;\r\n+              cpFilter.universe.nameCategory = e.nameCategory;\r\n+              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+              cpFilter.universe.requireSearchSubCategory =\r\n+                e.requireSearchSubCategory;\r\n+              cpFilter.universe.category = e.category;\r\n+              cpFilter.universe.error = false;\r\n+              cpFilter.activeElement = \"universe\";\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+\r\n+        {filter.universe.value && (\r\n+          <div className=\"item-filter\">\r\n+            <Select\r\n+              {...filter.category}\r\n+              element={filter.category}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.category = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChange={(e) => {\r\n+                if (filter.category.value !== e.value) {\r\n+                  let cpFilter = { ...filter };\r\n+                  cpFilter.category.value = e.value;\r\n+                  cpFilter.category.subCategory = e.subCategory;\r\n+                  cpFilter.category.error = false;\r\n+                  cpFilter.activeElement = \"category\";\r\n+                  localStorage.setItem(\"defaultCategory\", e.value);\r\n+                  setFilter(cpFilter);\r\n+                }\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+\r\n+        {filter.category.value && (\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.subCategory}\r\n+              element={filter.subCategory}\r\n+              setElement={(element) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory = element;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.subCategory.value = response;\r\n+                cpFilter.subCategory.error = false;\r\n+                cpFilter.activeElement = \"subCategory\";\r\n+                localStorage.setItem(\r\n+                  \"defaultSubCategory\",\r\n+                  JSON.stringify(response)\r\n+                );\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filterMap}\r\n+            setFilter={setFilterMap}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={() => {\r\n+              searchServices();\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+    </Container>\r\n+  </PageBanner>\r\n+  )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1714988090766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,599 +178,8 @@\n           setClick(false);\r\n         }\r\n         const u = universe.allUniverses[index];\r\n         console.log(\"STEP Lets go \"+ `/univers/${u.slug}-${u.id}`);\r\n-        history.push(`/universervice/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      console.log(\"STEPER 2 msgErrors searchservice\");\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      console.log(\"STEPERR erreur msg error\",e.category);\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    console.log(\"STEPER 1not nc searchservice\");\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-  //    filter.category.value &&\r\n-   //   ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        console.log(\"STEP Lets go \"+ `/univers/${u.slug}-${u.id}`);\r\n         history.push(`/univers/${u.slug}-${u.id}`);\r\n       }\r\n     } else {\r\n       console.log(\"STEPER 2 msgErrors searchservice\");\r\n@@ -1179,594 +588,4 @@\n   </PageBanner>\r\n   )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      subCategory: [],\r\n-      value: null,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-   \r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    console.log(\"STEPER 1not nc searchservice\");\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-  //    filter.category.value &&\r\n-   //   ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n-      placeIsSelected\r\n-    ) {\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-      }\r\n-    } else {\r\n-      console.log(\"STEPER 2 msgErrors searchservice\");\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        category: filter.universe.value && !filter.category.value,\r\n-        subCategory:\r\n-          filter.universe.value &&\r\n-          filter.category.value &&\r\n-          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n-          filter.universe.requireSearchSubCategory,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      console.log(\"STEPERR erreur msg error\",e.category);\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    const cpFilter = copy(filter);\r\n-    if (filter.activeElement === \"universe\") {\r\n-      cpFilter.category.options = [];\r\n-      if (filter.universe.value) {\r\n-        cpFilter.category.options.push(...filter.universe.category);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.category.value,\r\n-            filter.universe.category,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.category.value = \"\";\r\n-          localStorage.setItem(\"defaultCategory\", null);\r\n-        }\r\n-\r\n-        cpFilter.category.label =\r\n-          filter.universe.nameCategory || \"Catégorie(s)\";\r\n-        cpFilter.subCategory.label =\r\n-          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n-      }\r\n-      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n-        cpFilter.activeElement = \"category\";\r\n-        cpFilter.category.value = \"\";\r\n-        localStorage.setItem(\"defaultCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    } else if (filter.activeElement === \"category\") {\r\n-      cpFilter.subCategory.options = [];\r\n-      if (filter.category.value) {\r\n-        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n-        if (\r\n-          indexOfValue(\r\n-            filter.subCategory.value,\r\n-            filter.category.subCategory,\r\n-            \"value\"\r\n-          ) === -1\r\n-        ) {\r\n-          cpFilter.subCategory.value = \"\";\r\n-          localStorage.setItem(\"defaultSubCategory\", null);\r\n-        }\r\n-      }\r\n-      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n-        cpFilter.activeElement = \"subCategory\";\r\n-        cpFilter.subCategory.value = \"\";\r\n-        localStorage.setItem(\"defaultSubCategory\", null);\r\n-        setFilter(cpFilter);\r\n-      }\r\n-    }\r\n-  }, [filter]);\r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\" >\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-            {filter.universe.value && (\r\n-              <div className=\"item-filter\">\r\n-                <Select\r\n-                  {...filter.category}\r\n-                  element={filter.category}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.category = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChange={(e) => {\r\n-                    if (filter.category.value !== e.value) {\r\n-                      let cpFilter = { ...filter };\r\n-                      cpFilter.category.value = e.value;\r\n-                      cpFilter.category.subCategory = e.subCategory;\r\n-                      cpFilter.category.error = false;\r\n-                      cpFilter.activeElement = \"category\";\r\n-                      localStorage.setItem(\"defaultCategory\", e.value);\r\n-                      setFilter(cpFilter);\r\n-                    }\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-\r\n-            {filter.category.value && (\r\n-              <div className=\"item-filter\">\r\n-                <SelectCat\r\n-                  {...filter.subCategory}\r\n-                  element={filter.subCategory}\r\n-                  setElement={(element) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory = element;\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                  onChangeCallback={(response) => {\r\n-                    const cpFilter = { ...filter };\r\n-                    cpFilter.subCategory.value = response;\r\n-                    cpFilter.subCategory.error = false;\r\n-                    cpFilter.activeElement = \"subCategory\";\r\n-                    localStorage.setItem(\r\n-                      \"defaultSubCategory\",\r\n-                      JSON.stringify(response)\r\n-                    );\r\n-                    setFilter(cpFilter);\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner >\r\n-         <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-           \r\n-          </div>\r\n-    <Container >\r\n-      {isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-\r\n-      <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        \r\n-        <div className=\"item-filter\">\r\n-          <Select\r\n-            {...filter.universe}\r\n-            element={filter.universe}\r\n-            setElement={(element) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe = element;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-            onChange={(e) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.universe.value = e.value;\r\n-              cpFilter.universe.nameCategory = e.nameCategory;\r\n-              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-              cpFilter.universe.requireSearchSubCategory =\r\n-                e.requireSearchSubCategory;\r\n-              cpFilter.universe.category = e.category;\r\n-              cpFilter.universe.error = false;\r\n-              cpFilter.activeElement = \"universe\";\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-\r\n-        {filter.universe.value && (\r\n-          <div className=\"item-filter\">\r\n-            <Select\r\n-              {...filter.category}\r\n-              element={filter.category}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.category = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChange={(e) => {\r\n-                if (filter.category.value !== e.value) {\r\n-                  let cpFilter = { ...filter };\r\n-                  cpFilter.category.value = e.value;\r\n-                  cpFilter.category.subCategory = e.subCategory;\r\n-                  cpFilter.category.error = false;\r\n-                  cpFilter.activeElement = \"category\";\r\n-                  localStorage.setItem(\"defaultCategory\", e.value);\r\n-                  setFilter(cpFilter);\r\n-                }\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-\r\n-        {filter.category.value && (\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.subCategory}\r\n-              element={filter.subCategory}\r\n-              setElement={(element) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory = element;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.subCategory.value = response;\r\n-                cpFilter.subCategory.error = false;\r\n-                cpFilter.activeElement = \"subCategory\";\r\n-                localStorage.setItem(\r\n-                  \"defaultSubCategory\",\r\n-                  JSON.stringify(response)\r\n-                );\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filterMap}\r\n-            setFilter={setFilterMap}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={() => {\r\n-              searchServices();\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-    </Container>\r\n-  </PageBanner>\r\n-  )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1714988122090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n           setClick(false);\r\n         }\r\n         const u = universe.allUniverses[index];\r\n         console.log(\"STEP Lets go \"+ `/univers/${u.slug}-${u.id}`);\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/universervice/${u.slug}-${u.id}`);\r\n       }\r\n     } else {\r\n       console.log(\"STEPER 2 msgErrors searchservice\");\r\n       msgErrors({\r\n"
                },
                {
                    "date": 1715346984941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n       }\r\n     }\r\n   }, [filter]);\r\n \r\n-  if (!isDisplayedBottom ) {\r\n+  if (true  ) {\r\n     return (\r\n       <PageBanner className=\"home-page-banner\" >\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n"
                },
                {
                    "date": 1715347037640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n       }\r\n     }\r\n   }, [filter]);\r\n \r\n-  if (true  ) {\r\n+  if (!isDisplayedBottom ) {\r\n     return (\r\n       <PageBanner className=\"home-page-banner\" >\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n"
                },
                {
                    "date": 1715348406966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,8 +334,9 @@\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n+            blabla\r\n           </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1715348431143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,9 +334,8 @@\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n-            blabla\r\n           </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1715348488030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         </div>\r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <h1 className=\"title-banner-cat\">{title}blibli</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1715353393102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         </div>\r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <h1 className=\"title-banner-cat\">{title}blibli</h1>\r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1715591056535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [errorcCodePostal]);\r\n \r\n   const searchServices = () => {\r\n-    console.log(\"STEPER 1not nc searchservice\");\r\n+ \r\n     setFilter(clearErrors(filter));\r\n     setFilterMap(clearErrors(filterMap));\r\n     if (\r\n       filter.universe.value &&\r\n"
                },
                {
                    "date": 1716462089464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import Slider from \"react-slick\";\r\n import SelectCat from \"../categories/selectCat\";\r\n \r\n export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [click, setClick] = useState(false);\r\n"
                },
                {
                    "date": 1716462480218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import Slider from \"react-slick\";\r\n import SelectCat from \"../categories/selectCat\";\r\n \r\n export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [click, setClick] = useState(false);\r\n"
                },
                {
                    "date": 1717510649551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 42,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1717511013260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,9 +461,9 @@\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n             <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 42,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+             fontFamily: 'Helvetica Neue LT Std-75Bold ,Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n     <Container >\r\n"
                },
                {
                    "date": 1717511229112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n   else\r\n   { return (\r\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n-            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 42,\r\n+            <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std-75Bold ,Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n            \r\n           </div>\r\n"
                },
                {
                    "date": 1717511684030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -462,9 +462,9 @@\n     <PageBanner >\r\n          <div className=\"bloc-title-banner\">\r\n             <div style={{ marginBottom:0, marginTop:10,  color: '#465a61', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std-75Bold ,Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n+              </div>\r\n            \r\n           </div>\r\n     <Container >\r\n       {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1718095001870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import Slider from \"react-slick\";\r\n import SelectCat from \"../categories/selectCat\";\r\n \r\n export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [click, setClick] = useState(false);\r\n"
                }
            ],
            "date": 1705675837283,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Select from \"../ui-elements/select\";\r\nimport {\r\n  BlocFilterStyle,\r\n  PageBanner,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { SearchIcon } from \"../../assets/styles/icons\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\nimport { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\nimport { clearErrors } from \"../../helper/form\";\r\nimport Slider from \"react-slick\";\r\nimport SelectCat from \"../categories/selectCat\";\r\n\r\nexport default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const [click, setClick] = useState(false);\r\n  const toggleFilter = () => setClick(!click);\r\n  const toogleCloseFilter = () => setClick(false);\r\n  useEffect(() => {\r\n    if (click) {\r\n      document.body.classList.add(\"menu-is-show\");\r\n    } else {\r\n      document.body.classList.remove(\"menu-is-show\");\r\n    }\r\n  }, [click]);\r\n\r\n  const history = useHistory();\r\n  const universe = useSelector((state) => state.universe);\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (universe.allUniverses) {\r\n      let cpFilter = { ...filter };\r\n      cpFilter.universe.options = [];\r\n      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n        let o = universe.allUniverses[i];\r\n        const category = [];\r\n        for (let j = 0; j < o.categories.length; j++) {\r\n          const subCategory = [];\r\n          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n\r\n            subCategory.push({\r\n              label: o.categories[j].children[k].name,\r\n              value: o.categories[j].children[k].id,\r\n            });\r\n          }\r\n          category.push({\r\n            label: o.categories[j].name,\r\n            value: o.categories[j].id,\r\n            subCategory,\r\n          });\r\n        }\r\n\r\n        cpFilter.universe.options.push({\r\n          label: o.name,\r\n          value: o.id,\r\n          category,\r\n          nameCategory: o.nameCategory,\r\n          nameSubCategory: o.nameSubCategory,\r\n          requireSearchSubCategory: o.requireSearchSubCategory,\r\n        });\r\n      }\r\n      setFilter(cpFilter);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [universe]);\r\n\r\n  const [filter, setFilter] = useState({\r\n    universe: {\r\n      label: \"Univers\",\r\n      placeholder: \"Choisir bannershome dans la liste\",\r\n      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n      value: \"\",\r\n      category: [],\r\n      nameCategory: \"\",\r\n      nameSubCategory: \"\",\r\n      requireSearchSubCategory: false,\r\n      isSearchable: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n    },\r\n      \r\n    category: {\r\n      label: \"Catégorie(s)\",\r\n      placeholder: \"Choisir dans la liste\",\r\n      options: [],\r\n      subCategory: [],\r\n      value: null,\r\n      isSearchable: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n    },\r\n   \r\n    subCategory: {\r\n      label: \"Sous-catégorie(s)\",\r\n      placeholder: \"Affiner votre recherche\",\r\n      options: [],\r\n      value: null,\r\n      hideOptions: true,\r\n      isSearchable: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n    },\r\n    activeElement: \"\",\r\n  });\r\n\r\n  const [filterMap, setFilterMap] = useState({\r\n    codePostal: {\r\n      name: \"codePostal\",\r\n      type: \"text\",\r\n      label: \"Où\",\r\n      placeholder: \"Saisir un code postal\",\r\n      value:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultCodePostal\r\n          : \"\",\r\n      latitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLatitude\r\n          : null,\r\n      longitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLongitude\r\n          : null,\r\n      error: false,\r\n      required: true,\r\n      infoBulle: false,\r\n    },\r\n  });\r\n\r\n  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n\r\n  useEffect(() => {\r\n    if (errorcCodePostal) {\r\n      msgErrors({ codePostal: true });\r\n      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errorcCodePostal]);\r\n\r\n  const searchServices = () => {\r\n    setFilter(clearErrors(filter));\r\n    setFilterMap(clearErrors(filterMap));\r\n    if (\r\n      filter.universe.value &&\r\n      filter.category.value &&\r\n      ((Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) || !filter.universe.requireSearchSubCategory) &&\r\n      placeIsSelected\r\n    ) {\r\n      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n      if (index > -1) {\r\n        if (isTabletOrMobile) {\r\n          setClick(false);\r\n        }\r\n        const u = universe.allUniverses[index];\r\n        history.push(`/univers/${u.slug}-${u.id}`);\r\n      }\r\n    } else {\r\n      msgErrors({\r\n        universe: !filter.universe.value,\r\n        category: filter.universe.value && !filter.category.value,\r\n        subCategory:\r\n          filter.universe.value &&\r\n          filter.category.value &&\r\n          !(Array.isArray(filter.subCategory.value) &&  filter.subCategory.value.length>0) &&\r\n          filter.universe.requireSearchSubCategory,\r\n        codePostal: !placeIsSelected,\r\n        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpFilter = { ...filter };\r\n    if (e.universe !== undefined) {\r\n      cpFilter.universe.error = e.universe;\r\n      cpFilter.universe.infoBull = e.universe;\r\n    }\r\n    if (e.category !== undefined) {\r\n      cpFilter.category.error = e.category;\r\n      cpFilter.category.infoBull = e.category;\r\n    }\r\n    if (e.subCategory !== undefined) {\r\n      cpFilter.subCategory.error = e.subCategory;\r\n      cpFilter.subCategory.infoBull = e.subCategory;\r\n    }\r\n    setFilter(cpFilter);\r\n\r\n    const cpFilterMap = { ...filterMap };\r\n    if (e.codePostal !== undefined) {\r\n      cpFilterMap.codePostal.error = e.codePostal;\r\n      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n    }\r\n    setFilterMap(cpFilterMap);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"BannerHome\", function (event) {\r\n      if (event?.detail?.url && event?.detail?.id) {\r\n        if (event.detail.isHome) {\r\n          if (\r\n            localStorage.getItem(\"codePostal\") &&\r\n            localStorage.getItem(\"latitude\") &&\r\n            localStorage.getItem(\"longitude\")\r\n          ) {\r\n            history.push(event.detail.url);\r\n          } else {\r\n            \r\n            const cpFilter = { ...filter };\r\n            cpFilter.universe.value = event.detail.id;\r\n            setFilter(cpFilter);\r\n\r\n            setPlaceIsSelected(false);\r\n            const cpFilterMap = { ...filterMap };\r\n            cpFilterMap.codePostal.error = true;\r\n            cpFilterMap.codePostal.infoBulle = true;\r\n            setFilterMap(cpFilterMap);\r\n\r\n            scrollTop();\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"error event params.\");\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const settings = {\r\n    arrows: false,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    speed: 1000,\r\n    autoplaySpeed: 5000,\r\n    autoplay: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const cpFilter = copy(filter);\r\n    if (filter.activeElement === \"universe\") {\r\n      cpFilter.category.options = [];\r\n      if (filter.universe.value) {\r\n        cpFilter.category.options.push(...filter.universe.category);\r\n        if (\r\n          indexOfValue(\r\n            filter.category.value,\r\n            filter.universe.category,\r\n            \"value\"\r\n          ) === -1\r\n        ) {\r\n          cpFilter.category.value = \"\";\r\n          localStorage.setItem(\"defaultCategory\", null);\r\n        }\r\n\r\n        cpFilter.category.label =\r\n          filter.universe.nameCategory || \"Catégorie(s)\";\r\n        cpFilter.subCategory.label =\r\n          filter.universe.nameSubCategory || \"Sous-catégorie(s)\";\r\n      }\r\n      if (!isEqual(cpFilter.category.options, filter.category.options)) {\r\n        cpFilter.activeElement = \"category\";\r\n        cpFilter.category.value = \"\";\r\n        localStorage.setItem(\"defaultCategory\", null);\r\n        setFilter(cpFilter);\r\n      }\r\n    } else if (filter.activeElement === \"category\") {\r\n      cpFilter.subCategory.options = [];\r\n      if (filter.category.value) {\r\n        cpFilter.subCategory.options.push(...filter.category.subCategory);\r\n        if (\r\n          indexOfValue(\r\n            filter.subCategory.value,\r\n            filter.category.subCategory,\r\n            \"value\"\r\n          ) === -1\r\n        ) {\r\n          cpFilter.subCategory.value = \"\";\r\n          localStorage.setItem(\"defaultSubCategory\", null);\r\n        }\r\n      }\r\n      if (!isEqual(cpFilter.subCategory.options, filter.subCategory.options)) {\r\n        cpFilter.activeElement = \"subCategory\";\r\n        cpFilter.subCategory.value = \"\";\r\n        localStorage.setItem(\"defaultSubCategory\", null);\r\n        setFilter(cpFilter);\r\n      }\r\n    }\r\n  }, [filter]);\r\n\r\n  if (!isDisplayedBottom ) {\r\n    return (\r\n      <PageBanner className=\"home-page-banner\" style={{  backgroundColor: '#0000FF'}}>\r\n        <div className=\"slider-home-banner\">\r\n          <Slider {...settings}>\r\n            {sliderBanner &&\r\n              sliderBanner.map(($val) => (\r\n                <div key={$val.id} className=\"item-slider-banner\">\r\n                  <img src={$val.url} alt={title} />\r\n                </div>\r\n              ))}\r\n          </Slider>\r\n        </div>\r\n        \r\n        <Container>\r\n          <div className=\"bloc-title-banner\">\r\n            <h1 className=\"title-banner-cat\">{title}</h1>\r\n            <p className=\"description-banner-cat\">{description}</p>\r\n          </div>\r\n        \r\n\r\n          {isTabletOrMobile && (\r\n            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n              <SearchIcon /> Rechercher une prestation\r\n            </div>\r\n          )}\r\n\r\n          <BlocFilterStyle open={click}>\r\n            {isTabletOrMobile && (\r\n              <button\r\n                className=\"menu-burger is-opened\"\r\n                onClick={toogleCloseFilter}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            )}\r\n            <div className=\"item-filter\">\r\n              <Select\r\n                {...filter.universe}\r\n                element={filter.universe}\r\n                setElement={(element) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.universe = element;\r\n                  setFilter(cpFilter);\r\n                }}\r\n                onChange={(e) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.universe.value = e.value;\r\n                  cpFilter.universe.nameCategory = e.nameCategory;\r\n                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                  cpFilter.universe.requireSearchSubCategory =\r\n                    e.requireSearchSubCategory;\r\n                  cpFilter.universe.category = e.category;\r\n                  cpFilter.universe.error = false;\r\n                  cpFilter.activeElement = \"universe\";\r\n                  setFilter(cpFilter);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {filter.universe.value && (\r\n              <div className=\"item-filter\">\r\n                <Select\r\n                  {...filter.category}\r\n                  element={filter.category}\r\n                  setElement={(element) => {\r\n                    const cpFilter = { ...filter };\r\n                    cpFilter.category = element;\r\n                    setFilter(cpFilter);\r\n                  }}\r\n                  onChange={(e) => {\r\n                    if (filter.category.value !== e.value) {\r\n                      let cpFilter = { ...filter };\r\n                      cpFilter.category.value = e.value;\r\n                      cpFilter.category.subCategory = e.subCategory;\r\n                      cpFilter.category.error = false;\r\n                      cpFilter.activeElement = \"category\";\r\n                      localStorage.setItem(\"defaultCategory\", e.value);\r\n                      setFilter(cpFilter);\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {filter.category.value && (\r\n              <div className=\"item-filter\">\r\n                <SelectCat\r\n                  {...filter.subCategory}\r\n                  element={filter.subCategory}\r\n                  setElement={(element) => {\r\n                    const cpFilter = { ...filter };\r\n                    cpFilter.subCategory = element;\r\n                    setFilter(cpFilter);\r\n                  }}\r\n                  onChangeCallback={(response) => {\r\n                    const cpFilter = { ...filter };\r\n                    cpFilter.subCategory.value = response;\r\n                    cpFilter.subCategory.error = false;\r\n                    cpFilter.activeElement = \"subCategory\";\r\n                    localStorage.setItem(\r\n                      \"defaultSubCategory\",\r\n                      JSON.stringify(response)\r\n                    );\r\n                    setFilter(cpFilter);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"item-filter\">\r\n              <InputAutoComplete\r\n                filter={filterMap}\r\n                setFilter={setFilterMap}\r\n                placeIsSelected={placeIsSelected}\r\n                setPlaceIsSelected={setPlaceIsSelected}\r\n                isPendingLatLng={isPendingLatLng}\r\n                setIsPendingLatLng={setIsPendingLatLng}\r\n              />\r\n            </div>\r\n            <div className=\"btn-filter-banner\">\r\n              <button\r\n                className=\"btn-search-filter\"\r\n                onClick={() => {\r\n                  searchServices();\r\n                }}\r\n              >\r\n                {isDesktopOrLaptop && (\r\n                  <>\r\n                    <SearchIcon />\r\n                  </>\r\n                )}\r\n                {isTabletOrMobile && <>Recherche</>}\r\n              </button>\r\n            </div>\r\n          </BlocFilterStyle>\r\n        </Container>\r\n      </PageBanner>\r\n    );}\r\n  else\r\n  { return (\r\n    <PageBanner >\r\n    <Container>\r\n      {isTabletOrMobile && (\r\n        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n          <SearchIcon /> Rechercher une prestation\r\n        </div>\r\n      )}\r\n\r\n      <BlocFilterStyle open={click}>\r\n        {isTabletOrMobile && (\r\n          <button\r\n            className=\"menu-burger is-opened\"\r\n            onClick={toogleCloseFilter}\r\n          >\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </button>\r\n        )}\r\n        <div className=\"item-filter\">\r\n          <Select\r\n            {...filter.universe}\r\n            element={filter.universe}\r\n            setElement={(element) => {\r\n              const cpFilter = { ...filter };\r\n              cpFilter.universe = element;\r\n              setFilter(cpFilter);\r\n            }}\r\n            onChange={(e) => {\r\n              const cpFilter = { ...filter };\r\n              cpFilter.universe.value = e.value;\r\n              cpFilter.universe.nameCategory = e.nameCategory;\r\n              cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n              cpFilter.universe.requireSearchSubCategory =\r\n                e.requireSearchSubCategory;\r\n              cpFilter.universe.category = e.category;\r\n              cpFilter.universe.error = false;\r\n              cpFilter.activeElement = \"universe\";\r\n              setFilter(cpFilter);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {filter.universe.value && (\r\n          <div className=\"item-filter\">\r\n            <Select\r\n              {...filter.category}\r\n              element={filter.category}\r\n              setElement={(element) => {\r\n                const cpFilter = { ...filter };\r\n                cpFilter.category = element;\r\n                setFilter(cpFilter);\r\n              }}\r\n              onChange={(e) => {\r\n                if (filter.category.value !== e.value) {\r\n                  let cpFilter = { ...filter };\r\n                  cpFilter.category.value = e.value;\r\n                  cpFilter.category.subCategory = e.subCategory;\r\n                  cpFilter.category.error = false;\r\n                  cpFilter.activeElement = \"category\";\r\n                  localStorage.setItem(\"defaultCategory\", e.value);\r\n                  setFilter(cpFilter);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {filter.category.value && (\r\n          <div className=\"item-filter\">\r\n            <SelectCat\r\n              {...filter.subCategory}\r\n              element={filter.subCategory}\r\n              setElement={(element) => {\r\n                const cpFilter = { ...filter };\r\n                cpFilter.subCategory = element;\r\n                setFilter(cpFilter);\r\n              }}\r\n              onChangeCallback={(response) => {\r\n                const cpFilter = { ...filter };\r\n                cpFilter.subCategory.value = response;\r\n                cpFilter.subCategory.error = false;\r\n                cpFilter.activeElement = \"subCategory\";\r\n                localStorage.setItem(\r\n                  \"defaultSubCategory\",\r\n                  JSON.stringify(response)\r\n                );\r\n                setFilter(cpFilter);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"item-filter\">\r\n          <InputAutoComplete\r\n            filter={filterMap}\r\n            setFilter={setFilterMap}\r\n            placeIsSelected={placeIsSelected}\r\n            setPlaceIsSelected={setPlaceIsSelected}\r\n            isPendingLatLng={isPendingLatLng}\r\n            setIsPendingLatLng={setIsPendingLatLng}\r\n          />\r\n        </div>\r\n        <div className=\"btn-filter-banner\">\r\n          <button\r\n            className=\"btn-search-filter\"\r\n            onClick={() => {\r\n              searchServices();\r\n            }}\r\n          >\r\n            {isDesktopOrLaptop && (\r\n              <>\r\n                <SearchIcon />\r\n              </>\r\n            )}\r\n            {isTabletOrMobile && <>Recherche</>}\r\n          </button>\r\n        </div>\r\n      </BlocFilterStyle>\r\n    </Container>\r\n  </PageBanner>\r\n  )\r\n  }\r\n}\r\n"
        }
    ]
}