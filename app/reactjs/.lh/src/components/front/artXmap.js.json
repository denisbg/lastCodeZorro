{
    "sourceFile": "src/components/front/artXmap.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 76,
            "patches": [
                {
                    "date": 1706961239646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706961284356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React from \"react\";\r\n import { greatPlaceStyleHover, greatPlaceStyle } from \"./markerStyle\";\r\n-export default function ArtPrestationFicheMap({ ...props }) {\r\n+export default function ArtXmap({ ...props }) {\r\n   const style = props.hover ? greatPlaceStyleHover : greatPlaceStyle;\r\n   return (\r\n     <>\r\n       {props.text ? (\r\n"
                },
                {
                    "date": 1706961587449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n               : \"\"\r\n           }`}\r\n           style={style}\r\n         >\r\n+            <div>Prop text</div>\r\n           <div>{props.text}</div>\r\n         </div>\r\n       ) : null}\r\n     </>\r\n"
                },
                {
                    "date": 1706961611863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,11 +12,12 @@\n               : \"\"\r\n           }`}\r\n           style={style}\r\n         >\r\n-            <div>Prop text</div>\r\n+            \r\n           <div>{props.text}</div>\r\n         </div>\r\n       ) : null}\r\n+      <div>Prop text</div>\r\n     </>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706961777336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,27 @@\n+import React from \"react\";\r\n+import { greatPlaceStyleHover, greatPlaceStyle } from \"./markerStyle\";\r\n+export default function ArtXmap({ ...props }) {\r\n+    const style = props.hover ? greatPlaceStyleHover : greatPlaceStyle;\r\n+\r\n+\r\n+    if (loadError) {\r\n+        return <div>Error loading maps</div>;\r\n+    }\r\n+\r\n+    if (!isLoaded) {\r\n+        return <div>Loading maps</div>;\r\n+    }\r\n+\r\n+    return (\r\n+        <div>\r\n+            <GoogleMap\r\n+                mapContainerStyle={mapContainerStyle}\r\n+                zoom={10}\r\n+                center={center}\r\n+            >\r\n+                <Marker position={center} />\r\n+            </GoogleMap>\r\n+        </div>\r\n+    \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706961804122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,21 @@\n-import React from \"react\";\r\n-import { greatPlaceStyleHover, greatPlaceStyle } from \"./markerStyle\";\r\n+import React from 'react';\r\n+import { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\r\n+\r\n+const libraries = ['places'];\r\n+const mapContainerStyle = {\r\n+  width: '100vw',\r\n+  height: '100vh',\r\n+};\r\n+const center = {\r\n+  lat: 7.2905715, // default latitude\r\n+  lng: 80.6337262, // default longitude\r\n+};\r\n+\r\n export default function ArtXmap({ ...props }) {\r\n-    const style = props.hover ? greatPlaceStyleHover : greatPlaceStyle;\r\n \r\n \r\n+\r\n     if (loadError) {\r\n         return <div>Error loading maps</div>;\r\n     }\r\n \r\n@@ -24,27 +35,4 @@\n         </div>\r\n     \r\n   );\r\n }\r\n-import React from \"react\";\r\n-import { greatPlaceStyleHover, greatPlaceStyle } from \"./markerStyle\";\r\n-export default function ArtXmap({ ...props }) {\r\n-  const style = props.hover ? greatPlaceStyleHover : greatPlaceStyle;\r\n-  return (\r\n-    <>\r\n-      {props.text ? (\r\n-        <div\r\n-          className={`item-map-prestation ${\r\n-            parseInt(props.activeBenefit.id) === parseInt(props.id)\r\n-              ? \"active\"\r\n-              : \"\"\r\n-          }`}\r\n-          style={style}\r\n-        >\r\n-            \r\n-          <div>{props.text}</div>\r\n-        </div>\r\n-      ) : null}\r\n-      <div>Prop text</div>\r\n-    </>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706961815282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,8 @@\n export default function ArtXmap({ ...props }) {\r\n \r\n \r\n \r\n-    if (loadError) {\r\n-        return <div>Error loading maps</div>;\r\n-    }\r\n \r\n     if (!isLoaded) {\r\n         return <div>Loading maps</div>;\r\n     }\r\n"
                },
                {
                    "date": 1706962142960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,8 @@\n \r\n \r\n \r\n \r\n-    if (!isLoaded) {\r\n-        return <div>Loading maps</div>;\r\n-    }\r\n-\r\n     return (\r\n         <div>\r\n             <GoogleMap\r\n                 mapContainerStyle={mapContainerStyle}\r\n"
                },
                {
                    "date": 1706962343381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,27 @@\n };\r\n \r\n export default function ArtXmap({ ...props }) {\r\n \r\n+    const map = new google.maps.Map(\r\n+        document.getElementById(\"xmap\") ,\r\n+        {\r\n+          zoom: 3,\r\n+          center: { lat: -28.024, lng: 140.887 },\r\n+        }\r\n+      );\r\n+    \r\n \r\n \r\n-\r\n     return (\r\n         <div>\r\n-            <GoogleMap\r\n+            <xmap\r\n                 mapContainerStyle={mapContainerStyle}\r\n                 zoom={10}\r\n                 center={center}\r\n             >\r\n                 <Marker position={center} />\r\n-            </GoogleMap>\r\n+            </xmap>\r\n         </div>\r\n     \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706962434239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,27 +11,72 @@\n   lng: 80.6337262, // default longitude\r\n };\r\n \r\n export default function ArtXmap({ ...props }) {\r\n-\r\n-    const map = new google.maps.Map(\r\n-        document.getElementById(\"xmap\") ,\r\n-        {\r\n-          zoom: 3,\r\n-          center: { lat: -28.024, lng: 140.887 },\r\n-        }\r\n-      );\r\n+    const map = new google.maps.Map(document.getElementById(\"xmap\"), {\r\n+        zoom: 3,\r\n+        center: { lat: -28.024, lng: 140.887 },\r\n+      });\r\n+      const infoWindow = new google.maps.InfoWindow({\r\n+        content: \"\",\r\n+        disableAutoPan: true,\r\n+      });\r\n+      // Create an array of alphabetical characters used to label the markers.\r\n+      const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n+      // Add some markers to the map.\r\n+      const markers = locations.map((position, i) => {\r\n+        const label = labels[i % labels.length];\r\n+        const marker = new google.maps.Marker({\r\n+          position,\r\n+          label,\r\n+        });\r\n     \r\n+        // markers can only be keyboard focusable when they have click listeners\r\n+        // open info window when marker is clicked\r\n+        marker.addListener(\"click\", () => {\r\n+          infoWindow.setContent(label);\r\n+          infoWindow.open(map, marker);\r\n+        });\r\n+        return marker;\r\n+      });\r\n+    \r\n+      // Add a marker clusterer to manage the markers.\r\n+      new MarkerClusterer({ markers, map });\r\n+    }\r\n+    \r\n+    const locations = [\r\n+      { lat: -31.56391, lng: 147.154312 },\r\n+      { lat: -33.718234, lng: 150.363181 },\r\n+      { lat: -33.727111, lng: 150.371124 },\r\n+      { lat: -33.848588, lng: 151.209834 },\r\n+      { lat: -33.851702, lng: 151.216968 },\r\n+      { lat: -34.671264, lng: 150.863657 },\r\n+      { lat: -35.304724, lng: 148.662905 },\r\n+      { lat: -36.817685, lng: 175.699196 },\r\n+      { lat: -36.828611, lng: 175.790222 },\r\n+      { lat: -37.75, lng: 145.116667 },\r\n+      { lat: -37.759859, lng: 145.128708 },\r\n+      { lat: -37.765015, lng: 145.133858 },\r\n+      { lat: -37.770104, lng: 145.143299 },\r\n+      { lat: -37.7737, lng: 145.145187 },\r\n+      { lat: -37.774785, lng: 145.137978 },\r\n+      { lat: -37.819616, lng: 144.968119 },\r\n+      { lat: -38.330766, lng: 144.695692 },\r\n+      { lat: -39.927193, lng: 175.053218 },\r\n+      { lat: -41.330162, lng: 174.865694 },\r\n+      { lat: -42.734358, lng: 147.439506 },\r\n+      { lat: -42.734358, lng: 147.501315 },\r\n+      { lat: -42.735258, lng: 147.438 },\r\n+      { lat: -43.999792, lng: 170.463352 },\r\n+    ];\r\n+    \r\n+    window.initMap = initMap;\r\n \r\n \r\n     return (\r\n         <div>\r\n-            <xmap\r\n-                mapContainerStyle={mapContainerStyle}\r\n-                zoom={10}\r\n-                center={center}\r\n-            >\r\n-                <Marker position={center} />\r\n+            <xmap>\r\n+            \r\n             </xmap>\r\n         </div>\r\n     \r\n   );\r\n"
                },
                {
                    "date": 1706962649123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,83 +1,39 @@\n import React from 'react';\r\n-import { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n-const libraries = ['places'];\r\n-const mapContainerStyle = {\r\n-  width: '100vw',\r\n-  height: '100vh',\r\n-};\r\n-const center = {\r\n-  lat: 7.2905715, // default latitude\r\n-  lng: 80.6337262, // default longitude\r\n-};\r\n+const markerCluster = new MarkerClusterer({ map, markers });\r\n \r\n-export default function ArtXmap({ ...props }) {\r\n-    const map = new google.maps.Map(document.getElementById(\"xmap\"), {\r\n-        zoom: 3,\r\n-        center: { lat: -28.024, lng: 140.887 },\r\n+\r\n+\r\n+export default function artXMap() {\r\n+    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n+      zoom: 3,\r\n+      center: { lat: -28.024, lng: 140.887 },\r\n+    });\r\n+    const infoWindow = new google.maps.InfoWindow({\r\n+      content: \"\",\r\n+      disableAutoPan: true,\r\n+    });\r\n+    // Create an array of alphabetical characters used to label the markers.\r\n+    const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n+    // Add some markers to the map.\r\n+    const markers = locations.map((position, i) => {\r\n+      const label = labels[i % labels.length];\r\n+      const marker = new google.maps.Marker({\r\n+        position,\r\n+        label,\r\n       });\r\n-      const infoWindow = new google.maps.InfoWindow({\r\n-        content: \"\",\r\n-        disableAutoPan: true,\r\n+  \r\n+      // markers can only be keyboard focusable when they have click listeners\r\n+      // open info window when marker is clicked\r\n+      marker.addListener(\"click\", () => {\r\n+        infoWindow.setContent(label);\r\n+        infoWindow.open(map, marker);\r\n       });\r\n-      // Create an array of alphabetical characters used to label the markers.\r\n-      const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-      // Add some markers to the map.\r\n-      const markers = locations.map((position, i) => {\r\n-        const label = labels[i % labels.length];\r\n-        const marker = new google.maps.Marker({\r\n-          position,\r\n-          label,\r\n-        });\r\n-    \r\n-        // markers can only be keyboard focusable when they have click listeners\r\n-        // open info window when marker is clicked\r\n-        marker.addListener(\"click\", () => {\r\n-          infoWindow.setContent(label);\r\n-          infoWindow.open(map, marker);\r\n-        });\r\n-        return marker;\r\n-      });\r\n-    \r\n-      // Add a marker clusterer to manage the markers.\r\n-      new MarkerClusterer({ markers, map });\r\n-    }\r\n-    \r\n-    const locations = [\r\n-      { lat: -31.56391, lng: 147.154312 },\r\n-      { lat: -33.718234, lng: 150.363181 },\r\n-      { lat: -33.727111, lng: 150.371124 },\r\n-      { lat: -33.848588, lng: 151.209834 },\r\n-      { lat: -33.851702, lng: 151.216968 },\r\n-      { lat: -34.671264, lng: 150.863657 },\r\n-      { lat: -35.304724, lng: 148.662905 },\r\n-      { lat: -36.817685, lng: 175.699196 },\r\n-      { lat: -36.828611, lng: 175.790222 },\r\n-      { lat: -37.75, lng: 145.116667 },\r\n-      { lat: -37.759859, lng: 145.128708 },\r\n-      { lat: -37.765015, lng: 145.133858 },\r\n-      { lat: -37.770104, lng: 145.143299 },\r\n-      { lat: -37.7737, lng: 145.145187 },\r\n-      { lat: -37.774785, lng: 145.137978 },\r\n-      { lat: -37.819616, lng: 144.968119 },\r\n-      { lat: -38.330766, lng: 144.695692 },\r\n-      { lat: -39.927193, lng: 175.053218 },\r\n-      { lat: -41.330162, lng: 174.865694 },\r\n-      { lat: -42.734358, lng: 147.439506 },\r\n-      { lat: -42.734358, lng: 147.501315 },\r\n-      { lat: -42.735258, lng: 147.438 },\r\n-      { lat: -43.999792, lng: 170.463352 },\r\n-    ];\r\n-    \r\n-    window.initMap = initMap;\r\n-\r\n-\r\n-    return (\r\n-        <div>\r\n-            <xmap>\r\n-            \r\n-            </xmap>\r\n-        </div>\r\n-    \r\n-  );\r\n+      return marker;\r\n+    });\r\n+  \r\n+    // Add a marker clusterer to manage the markers.\r\n+    new MarkerClusterer({ markers, map });\r\n }\r\n+  \r\n"
                },
                {
                    "date": 1706962767847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,6 @@\n         infoWindow.setContent(label);\r\n         infoWindow.open(map, marker);\r\n       });\r\n       return marker;\r\n-    });\r\n-  \r\n-    // Add a marker clusterer to manage the markers.\r\n-    new MarkerClusterer({ markers, map });\r\n-}\r\n-  \r\n+    };\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706962813557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,7 @@\n import React from 'react';\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n-const markerCluster = new MarkerClusterer({ map, markers });\r\n \r\n \r\n-\r\n export default function artXMap() {\r\n-    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n-      zoom: 3,\r\n-      center: { lat: -28.024, lng: 140.887 },\r\n-    });\r\n-    const infoWindow = new google.maps.InfoWindow({\r\n-      content: \"\",\r\n-      disableAutoPan: true,\r\n-    });\r\n-    // Create an array of alphabetical characters used to label the markers.\r\n-    const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-    // Add some markers to the map.\r\n-    const markers = locations.map((position, i) => {\r\n-      const label = labels[i % labels.length];\r\n-      const marker = new google.maps.Marker({\r\n-        position,\r\n-        label,\r\n-      });\r\n-  \r\n-      // markers can only be keyboard focusable when they have click listeners\r\n-      // open info window when marker is clicked\r\n-      marker.addListener(\"click\", () => {\r\n-        infoWindow.setContent(label);\r\n-        infoWindow.open(map, marker);\r\n-      });\r\n-      return marker;\r\n-    };\r\n+ return <></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706962868316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \r\n \r\n \r\n export default function artXMap() {\r\n- return <></>\r\n+ return <>BEgin MAP</>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706962892660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \r\n \r\n \r\n export default function artXMap() {\r\n- return <>BEgin MAP</>\r\n+ return <><div>BEgin map</div></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706962926702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,5 @@\n import React from 'react';\r\n \r\n-\r\n-\r\n export default function artXMap() {\r\n  return <><div>BEgin map</div></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706962957888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n \r\n export default function artXMap() {\r\n- return <><div>BEgin map</div></>\r\n+ return <><Row><Col></Col>BEgin map</Row></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706962976275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n-\r\n+import { Col, Row } from \"react-bootstrap\";\r\n export default function artXMap() {\r\n  return <><Row><Col></Col>BEgin map</Row></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963045738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n-export default function artXMap() {\r\n+export default function ArtXMap() {\r\n  return <><Row><Col></Col>BEgin map</Row></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963319999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n-export default function ArtXMap() {\r\n+export default function XMap() {\r\n  return <><Row><Col></Col>BEgin map</Row></>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963345192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function XMap() {\r\n- return <><Row><Col></Col>BEgin map</Row></>\r\n+ return <> TOTOT</>\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963378681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function XMap() {\r\n- return <> TOTOT</>\r\n+ return (<> TOTOT</>)\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963412202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function XMap() {\r\n- return (<> TOTOT</>)\r\n+ return (<> <Container>Totto</Container></>)\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963437273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function XMap() {\r\n- return (<> <Container>Totto</Container></>)\r\n+ return (<> <div>Totto</div></>)\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963498982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function XMap() {\r\n- return (<> <div>Totto</div></>)\r\n+ return (<div>Totto</div>)\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963531129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n-export default function XMap() {\r\n+export default function ArtXmap() {\r\n  return (<div>Totto</div>)\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963649416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,21 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function ArtXmap() {\r\n- return (<div>Totto</div>)\r\n+    return (\r\n+        <>\r\n+          {props.text ? (\r\n+            <div\r\n+              className={`item-map-prestation ${\r\n+                parseInt(props.activeBenefit.id) === parseInt(props.id)\r\n+                  ? \"active\"\r\n+                  : \"\"\r\n+              }`}\r\n+              style={style}\r\n+            >\r\n+              <div>{props.text}</div>\r\n+            </div>\r\n+          ) : null}\r\n+          TOTOTOTOTOT\r\n+        </>\r\n+      );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963659215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+import React from 'react';\r\n+import { Col, Row } from \"react-bootstrap\";\r\n+export default function ArtXmap() {\r\n+    return (\r\n+        <>\r\n+         \r\n+          TOTOTOTOTOT\r\n+        </>\r\n+      );\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963673517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,29 +3,8 @@\n export default function ArtXmap() {\r\n     return (\r\n         <>\r\n          \r\n-          TOTOTOTOTOT\r\n+          MAP\r\n         </>\r\n       );\r\n-}\n-import React from 'react';\r\n-import { Col, Row } from \"react-bootstrap\";\r\n-export default function ArtXmap() {\r\n-    return (\r\n-        <>\r\n-          {props.text ? (\r\n-            <div\r\n-              className={`item-map-prestation ${\r\n-                parseInt(props.activeBenefit.id) === parseInt(props.id)\r\n-                  ? \"active\"\r\n-                  : \"\"\r\n-              }`}\r\n-              style={style}\r\n-            >\r\n-              <div>{props.text}</div>\r\n-            </div>\r\n-          ) : null}\r\n-          TOTOTOTOTOT\r\n-        </>\r\n-      );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963684902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,8 @@\n export default function ArtXmap() {\r\n     return (\r\n         <>\r\n          \r\n-          MAP\r\n+          MAPPA\r\n         </>\r\n       );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706963735688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function ArtXmap() {\r\n+    const none = \"non\";\r\n     return (\r\n         <>\r\n          \r\n           MAPPA\r\n"
                },
                {
                    "date": 1706963749576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,8 @@\n     const none = \"non\";\r\n     return (\r\n         <>\r\n          \r\n-          MAPPA\r\n+          {none}\r\n         </>\r\n       );\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706964508287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,39 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function ArtXmap() {\r\n     const none = \"non\";\r\n+    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n+        zoom: 3,\r\n+        center: { lat: -28.024, lng: 140.887 },\r\n+      });\r\n+      const infoWindow = new google.maps.InfoWindow({\r\n+        content: \"\",\r\n+        disableAutoPan: true,\r\n+      });\r\n+      // Create an array of alphabetical characters used to label the markers.\r\n+      const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n+      // Add some markers to the map.\r\n+      const markers = locations.map((position, i) => {\r\n+        const label = labels[i % labels.length];\r\n+        const marker = new google.maps.Marker({\r\n+          position,\r\n+          label,\r\n+        });\r\n+    \r\n+        // markers can only be keyboard focusable when they have click listeners\r\n+        // open info window when marker is clicked\r\n+        marker.addListener(\"click\", () => {\r\n+          infoWindow.setContent(label);\r\n+          infoWindow.open(map, marker);\r\n+        });\r\n+        return marker;\r\n+      });\r\n+    \r\n+      // Add a marker clusterer to manage the markers.\r\n+      new MarkerClusterer({ markers, map });\r\n+    }\r\n+    \r\n     return (\r\n         <>\r\n          \r\n           {none}\r\n"
                },
                {
                    "date": 1706964543515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,13 @@\n       });\r\n     \r\n       // Add a marker clusterer to manage the markers.\r\n       new MarkerClusterer({ markers, map });\r\n-    }\r\n-    \r\n-    return (\r\n+      return (\r\n         <>\r\n          \r\n           {none}\r\n         </>\r\n       );\r\n\\ No newline at end of file\n-}\n+    }\r\n+    \r\n+   \r\n"
                },
                {
                    "date": 1706964647521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,39 +4,38 @@\n     const none = \"non\";\r\n     const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n         zoom: 3,\r\n         center: { lat: -28.024, lng: 140.887 },\r\n-      });\r\n-      const infoWindow = new google.maps.InfoWindow({\r\n+    });\r\n+    const infoWindow = new google.maps.InfoWindow({\r\n         content: \"\",\r\n         disableAutoPan: true,\r\n-      });\r\n-      // Create an array of alphabetical characters used to label the markers.\r\n-      const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-      // Add some markers to the map.\r\n-      const markers = locations.map((position, i) => {\r\n+    });\r\n+    // Create an array of alphabetical characters used to label the markers.\r\n+    const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n+    // Add some markers to the map.\r\n+    const markers = locations.map((position, i) => {\r\n         const label = labels[i % labels.length];\r\n         const marker = new google.maps.Marker({\r\n-          position,\r\n-          label,\r\n+            position,\r\n+            label,\r\n         });\r\n-    \r\n+\r\n         // markers can only be keyboard focusable when they have click listeners\r\n         // open info window when marker is clicked\r\n         marker.addListener(\"click\", () => {\r\n-          infoWindow.setContent(label);\r\n-          infoWindow.open(map, marker);\r\n+            infoWindow.setContent(label);\r\n+            infoWindow.open(map, marker);\r\n         });\r\n-        return marker;\r\n-      });\r\n\\ No newline at end of file\n+        return (\r\n+            <>\r\n     \r\n-      // Add a marker clusterer to manage the markers.\r\n-      new MarkerClusterer({ markers, map });\r\n-      return (\r\n-        <>\r\n-         \r\n-          {none}\r\n-        </>\r\n-      );\r\n-    }\r\n+                {none}\r\n+            </>\r\n+        );\r\n+    });\r\n+\r\n+\r\n     \r\n-   \n+}\r\n+\r\n+\r\n"
                },
                {
                    "date": 1706964695869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n             infoWindow.open(map, marker);\r\n         });\r\n         return (\r\n             <>\r\n-    \r\n                 {none}\r\n             </>\r\n         );\r\n     });\r\n"
                },
                {
                    "date": 1706964714533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,22 +11,9 @@\n         disableAutoPan: true,\r\n     });\r\n     // Create an array of alphabetical characters used to label the markers.\r\n     const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-    // Add some markers to the map.\r\n-    const markers = locations.map((position, i) => {\r\n-        const label = labels[i % labels.length];\r\n-        const marker = new google.maps.Marker({\r\n-            position,\r\n-            label,\r\n-        });\r\n-\r\n-        // markers can only be keyboard focusable when they have click listeners\r\n-        // open info window when marker is clicked\r\n-        marker.addListener(\"click\", () => {\r\n-            infoWindow.setContent(label);\r\n-            infoWindow.open(map, marker);\r\n-        });\r\n+    \r\n         return (\r\n             <>\r\n                 {none}\r\n             </>\r\n"
                },
                {
                    "date": 1706964752204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,17 +11,30 @@\n         disableAutoPan: true,\r\n     });\r\n     // Create an array of alphabetical characters used to label the markers.\r\n     const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-    \r\n-        return (\r\n-            <>\r\n-                {none}\r\n-            </>\r\n-        );\r\n+    // Add some markers to the map.\r\n+    const markers = locations.map((position, i) => {\r\n+        const label = labels[i % labels.length];\r\n+        const marker = new google.maps.Marker({\r\n+            position,\r\n+            label,\r\n+        });\r\n+\r\n+        // markers can only be keyboard focusable when they have click listeners\r\n+        // open info window when marker is clicked\r\n+        marker.addListener(\"click\", () => {\r\n+            infoWindow.setContent(label);\r\n+            infoWindow.open(map, marker);\r\n+        });\r\n+       \r\n     });\r\n+    return (\r\n+        <>\r\n+            {none}\r\n+        </>\r\n+    );\r\n \r\n \r\n-    \r\n }\r\n \r\n \r\n"
                },
                {
                    "date": 1706964835837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,9 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n export default function ArtXmap() {\r\n-    const none = \"non\";\r\n-    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n-        zoom: 3,\r\n-        center: { lat: -28.024, lng: 140.887 },\r\n-    });\r\n-    const infoWindow = new google.maps.InfoWindow({\r\n-        content: \"\",\r\n-        disableAutoPan: true,\r\n-    });\r\n-    // Create an array of alphabetical characters used to label the markers.\r\n-    const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n-    // Add some markers to the map.\r\n-    const markers = locations.map((position, i) => {\r\n-        const label = labels[i % labels.length];\r\n-        const marker = new google.maps.Marker({\r\n-            position,\r\n-            label,\r\n-        });\r\n-\r\n-        // markers can only be keyboard focusable when they have click listeners\r\n-        // open info window when marker is clicked\r\n-        marker.addListener(\"click\", () => {\r\n-            infoWindow.setContent(label);\r\n-            infoWindow.open(map, marker);\r\n-        });\r\n-       \r\n-    });\r\n+    const none = \"Regroupement de repères\";\r\n+   \r\n     return (\r\n         <>\r\n             {none}\r\n         </>\r\n"
                },
                {
                    "date": 1706964886204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,32 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n+const locations = [\r\n+    { lat: -31.56391, lng: 147.154312 },\r\n+    { lat: -33.718234, lng: 150.363181 },\r\n+    { lat: -33.727111, lng: 150.371124 },\r\n+    { lat: -33.848588, lng: 151.209834 },\r\n+    { lat: -33.851702, lng: 151.216968 },\r\n+    { lat: -34.671264, lng: 150.863657 },\r\n+    { lat: -35.304724, lng: 148.662905 },\r\n+    { lat: -36.817685, lng: 175.699196 },\r\n+    { lat: -36.828611, lng: 175.790222 },\r\n+    { lat: -37.75, lng: 145.116667 },\r\n+    { lat: -37.759859, lng: 145.128708 },\r\n+    { lat: -37.765015, lng: 145.133858 },\r\n+    { lat: -37.770104, lng: 145.143299 },\r\n+    { lat: -37.7737, lng: 145.145187 },\r\n+    { lat: -37.774785, lng: 145.137978 },\r\n+    { lat: -37.819616, lng: 144.968119 },\r\n+    { lat: -38.330766, lng: 144.695692 },\r\n+    { lat: -39.927193, lng: 175.053218 },\r\n+    { lat: -41.330162, lng: 174.865694 },\r\n+    { lat: -42.734358, lng: 147.439506 },\r\n+    { lat: -42.734358, lng: 147.501315 },\r\n+    { lat: -42.735258, lng: 147.438 },\r\n+    { lat: -43.999792, lng: 170.463352 },\r\n+  ];\r\n+  \r\n export default function ArtXmap() {\r\n     const none = \"Regroupement de repères\";\r\n    \r\n     return (\r\n"
                },
                {
                    "date": 1706964924326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,35 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n-const locations = [\r\n-    { lat: -31.56391, lng: 147.154312 },\r\n-    { lat: -33.718234, lng: 150.363181 },\r\n-    { lat: -33.727111, lng: 150.371124 },\r\n-    { lat: -33.848588, lng: 151.209834 },\r\n-    { lat: -33.851702, lng: 151.216968 },\r\n-    { lat: -34.671264, lng: 150.863657 },\r\n-    { lat: -35.304724, lng: 148.662905 },\r\n-    { lat: -36.817685, lng: 175.699196 },\r\n-    { lat: -36.828611, lng: 175.790222 },\r\n-    { lat: -37.75, lng: 145.116667 },\r\n-    { lat: -37.759859, lng: 145.128708 },\r\n-    { lat: -37.765015, lng: 145.133858 },\r\n-    { lat: -37.770104, lng: 145.143299 },\r\n-    { lat: -37.7737, lng: 145.145187 },\r\n-    { lat: -37.774785, lng: 145.137978 },\r\n-    { lat: -37.819616, lng: 144.968119 },\r\n-    { lat: -38.330766, lng: 144.695692 },\r\n-    { lat: -39.927193, lng: 175.053218 },\r\n-    { lat: -41.330162, lng: 174.865694 },\r\n-    { lat: -42.734358, lng: 147.439506 },\r\n-    { lat: -42.734358, lng: 147.501315 },\r\n-    { lat: -42.735258, lng: 147.438 },\r\n-    { lat: -43.999792, lng: 170.463352 },\r\n-  ];\r\n+\r\n   \r\n export default function ArtXmap() {\r\n     const none = \"Regroupement de repères\";\r\n-   \r\n+    const locations = [\r\n+        { lat: -31.56391, lng: 147.154312 },\r\n+        { lat: -33.718234, lng: 150.363181 },\r\n+        { lat: -33.727111, lng: 150.371124 },\r\n+        { lat: -33.848588, lng: 151.209834 },\r\n+        { lat: -33.851702, lng: 151.216968 },\r\n+        { lat: -34.671264, lng: 150.863657 },\r\n+        { lat: -35.304724, lng: 148.662905 },\r\n+        { lat: -36.817685, lng: 175.699196 },\r\n+        { lat: -36.828611, lng: 175.790222 },\r\n+        { lat: -37.75, lng: 145.116667 },\r\n+        { lat: -37.759859, lng: 145.128708 },\r\n+        { lat: -37.765015, lng: 145.133858 },\r\n+        { lat: -37.770104, lng: 145.143299 },\r\n+        { lat: -37.7737, lng: 145.145187 },\r\n+        { lat: -37.774785, lng: 145.137978 },\r\n+        { lat: -37.819616, lng: 144.968119 },\r\n+        { lat: -38.330766, lng: 144.695692 },\r\n+        { lat: -39.927193, lng: 175.053218 },\r\n+        { lat: -41.330162, lng: 174.865694 },\r\n+        { lat: -42.734358, lng: 147.439506 },\r\n+        { lat: -42.734358, lng: 147.501315 },\r\n+        { lat: -42.735258, lng: 147.438 },\r\n+        { lat: -43.999792, lng: 170.463352 },\r\n+      ];\r\n     return (\r\n         <>\r\n             {none}\r\n         </>\r\n"
                },
                {
                    "date": 1706965172480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,13 @@\n         { lat: -43.999792, lng: 170.463352 },\r\n       ];\r\n     return (\r\n         <>\r\n-            {none}\r\n+             Object.keys(locations).map((item, i) => (\r\n+        <li className=\"travelcompany-input\" key={i}>\r\n+            <span className=\"input-label\">{ locations[item].lat }</span>\r\n+        </li>\r\n+    ))\r\n         </>\r\n     );\r\n \r\n \r\n"
                },
                {
                    "date": 1706965321773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,12 +30,13 @@\n         { lat: -43.999792, lng: 170.463352 },\r\n       ];\r\n     return (\r\n         <>\r\n-             Object.keys(locations).map((item, i) => (\r\n-        <li className=\"travelcompany-input\" key={i}>\r\n-            <span className=\"input-label\">{ locations[item].lat }</span>\r\n-        </li>\r\n+        {Object.entries(subjects).map(([key, locations], i) => (\r\n+    <li className=\"travelcompany-input\" key={i}>\r\n+        <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n+    </li>\r\n+))}\r\n     ))\r\n         </>\r\n     );\r\n \r\n"
                },
                {
                    "date": 1706965338385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         { lat: -43.999792, lng: 170.463352 },\r\n       ];\r\n     return (\r\n         <>\r\n-        {Object.entries(subjects).map(([key, locations], i) => (\r\n+        {Object.entries(locations).map(([key, locations], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n         <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n     </li>\r\n ))}\r\n"
                },
                {
                    "date": 1706965556196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n-\r\n+import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n   \r\n export default function ArtXmap() {\r\n     const none = \"Regroupement de repères\";\r\n     const locations = [\r\n"
                },
                {
                    "date": 1706965654413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,14 +28,23 @@\n         { lat: -42.734358, lng: 147.501315 },\r\n         { lat: -42.735258, lng: 147.438 },\r\n         { lat: -43.999792, lng: 170.463352 },\r\n       ];\r\n+      const position = {\r\n+        lat: -6.175878,\r\n+        lng: 106.827196,\r\n+      };\r\n+      const onLoad = (marker) => {\r\n+        console.log(\"marker: \", marker);\r\n+      };\r\n+   \r\n     return (\r\n         <>\r\n         {Object.entries(locations).map(([key, locations], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n         <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n     </li>\r\n+\r\n ))}\r\n     ))\r\n         </>\r\n     );\r\n"
                },
                {
                    "date": 1706965832664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,15 +41,11 @@\n         <>\r\n         {Object.entries(locations).map(([key, locations], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n         <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n-    </li>\r\n+    </li> )}\r\n+</>\r\n \r\n-))}\r\n-    ))\r\n-        </>\r\n-    );\r\n+)\r\n+        }\r\n \r\n \r\n-}\r\n-\r\n-\r\n"
                },
                {
                    "date": 1706965941833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,24 +28,16 @@\n         { lat: -42.734358, lng: 147.501315 },\r\n         { lat: -42.735258, lng: 147.438 },\r\n         { lat: -43.999792, lng: 170.463352 },\r\n       ];\r\n-      const position = {\r\n-        lat: -6.175878,\r\n-        lng: 106.827196,\r\n-      };\r\n-      const onLoad = (marker) => {\r\n-        console.log(\"marker: \", marker);\r\n-      };\r\n+    \r\n    \r\n     return (\r\n-        <>\r\n-        {Object.entries(locations).map(([key, locations], i) => (\r\n+ <>     {Object.entries(locations).map(([key, locations], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n         <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n-    </li> )}\r\n+    </li> \r\n+ )}\r\n </>\r\n-\r\n-)\r\n-        }\r\n-\r\n-\r\n+   \r\n+ )\r\n+}\r\n"
                },
                {
                    "date": 1706966011800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,13 +31,14 @@\n       ];\r\n     \r\n    \r\n     return (\r\n- <>     {Object.entries(locations).map(([key, locations], i) => (\r\n+ <>  \r\n+    {Object.entries(locations).map(([key, locations], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n         <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n     </li> \r\n- )}\r\n+ ))}\r\n </>\r\n    \r\n  )\r\n }\r\n"
                },
                {
                    "date": 1706966107555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,11 +32,11 @@\n     \r\n    \r\n     return (\r\n  <>  \r\n-    {Object.entries(locations).map(([key, locations], i) => (\r\n+    {Object.entries(locations).map(([key, location], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n-        <span className=\"input-label\">key: {i} Name: {locations.lat}</span>\r\n+        <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n     </li> \r\n  ))}\r\n </>\r\n    \r\n"
                },
                {
                    "date": 1706966264213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,22 @@\n     \r\n    \r\n     return (\r\n  <>  \r\n-    {Object.entries(locations).map(([key, location], i) => (\r\n+  \r\n+     <GoogleMap\r\n+     apiKey={vars.mapsApiKey}\r\n+     center={state.map.center}\r\n+     zoom={state.map.zoom}\r\n+     hoverDistance={K_SIZE / 2}\r\n+     onChildClick={_onChildClick}\r\n+     onGoogleApiLoaded={({ map, maps }) => {\r\n+       //console.log(\"map is loaded.\");\r\n+     }}\r\n+   >\r\n+     {places}\r\n+   </GoogleMap>\r\n+   {Object.entries(locations).map(([key, location], i) => (\r\n     <li className=\"travelcompany-input\" key={i}>\r\n         <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n     </li> \r\n  ))}\r\n"
                },
                {
                    "date": 1706966308910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React from 'react';\r\n import { Col, Row } from \"react-bootstrap\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n-  \r\n+import * as vars from \"../../vars\";\r\n export default function ArtXmap() {\r\n     const none = \"Regroupement de repères\";\r\n     const locations = [\r\n         { lat: -31.56391, lng: 147.154312 },\r\n"
                },
                {
                    "date": 1706966362851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,11 @@\n import { Col, Row } from \"react-bootstrap\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n export default function ArtXmap() {\r\n+    const [state, setState] = useState({\r\n+        map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+      });\r\n     const none = \"Regroupement de repères\";\r\n     const locations = [\r\n         { lat: -31.56391, lng: 147.154312 },\r\n         { lat: -33.718234, lng: 150.363181 },\r\n"
                },
                {
                    "date": 1706966390829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n-import React from 'react';\r\n+\r\n import { Col, Row } from \"react-bootstrap\";\r\n+import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n export default function ArtXmap() {\r\n     const [state, setState] = useState({\r\n"
                },
                {
                    "date": 1706966486013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Col, Row } from \"react-bootstrap\";\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n export default function ArtXmap() {\r\n     const [state, setState] = useState({\r\n         map: { center: [48.8534, 2.3488], zoom: 10 },\r\n       });\r\n"
                },
                {
                    "date": 1706966556060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,12 @@\n export default function ArtXmap() {\r\n     const [state, setState] = useState({\r\n         map: { center: [48.8534, 2.3488], zoom: 10 },\r\n       });\r\n+      const _onChildClick = (key, childProps) => {\r\n+        let i = null;\r\n+     \r\n+      };\r\n     const none = \"Regroupement de repères\";\r\n     const locations = [\r\n         { lat: -31.56391, lng: 147.154312 },\r\n         { lat: -33.718234, lng: 150.363181 },\r\n"
                },
                {
                    "date": 1706966657308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,8 @@\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n export default function ArtXmap() {\r\n-    const [state, setState] = useState({\r\n-        map: { center: [48.8534, 2.3488], zoom: 10 },\r\n-      });\r\n-      const _onChildClick = (key, childProps) => {\r\n-        let i = null;\r\n-     \r\n-      };\r\n-    const none = \"Regroupement de repères\";\r\n     const locations = [\r\n         { lat: -31.56391, lng: 147.154312 },\r\n         { lat: -33.718234, lng: 150.363181 },\r\n         { lat: -33.727111, lng: 150.371124 },\r\n@@ -36,31 +28,58 @@\n         { lat: -42.734358, lng: 147.439506 },\r\n         { lat: -42.734358, lng: 147.501315 },\r\n         { lat: -42.735258, lng: 147.438 },\r\n         { lat: -43.999792, lng: 170.463352 },\r\n-      ];\r\n-    \r\n-   \r\n+    ];\r\n+\r\n+    const [state, setState] = useState({\r\n+        map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+    });\r\n+    const _onChildClick = (key, childProps) => {\r\n+        let i = null;\r\n+\r\n+    };\r\n+\r\n+    const places = locations.length\r\n+        ? locations.map((row) => {\r\n+            return (\r\n+                <ArtPrestationFicheMap\r\n+                    key={row.id}\r\n+                    lat={row.user.latitude}\r\n+                    lng={row.user.longitude}\r\n+                    text={\r\n+                        row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+                    }\r\n+                    id={row.id}\r\n+                    // use your hover state (from store, react-controllables etc...)\r\n+                    //activeBenefit={activeBenefit}\r\n+                />\r\n+            );\r\n+        })\r\n+        : \"\";\r\n+    const none = \"Regroupement de repères\";\r\n+\r\n+\r\n     return (\r\n- <>  \r\n-  \r\n-     <GoogleMap\r\n-     apiKey={vars.mapsApiKey}\r\n-     center={state.map.center}\r\n-     zoom={state.map.zoom}\r\n-     hoverDistance={K_SIZE / 2}\r\n-     onChildClick={_onChildClick}\r\n-     onGoogleApiLoaded={({ map, maps }) => {\r\n-       //console.log(\"map is loaded.\");\r\n-     }}\r\n-   >\r\n-     {places}\r\n-   </GoogleMap>\r\n-   {Object.entries(locations).map(([key, location], i) => (\r\n-    <li className=\"travelcompany-input\" key={i}>\r\n-        <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n-    </li> \r\n- ))}\r\n-</>\r\n-   \r\n- )\r\n+        <>\r\n+\r\n+            <GoogleMap\r\n+                apiKey={vars.mapsApiKey}\r\n+                center={state.map.center}\r\n+                zoom={state.map.zoom}\r\n+                hoverDistance={K_SIZE / 2}\r\n+                onChildClick={_onChildClick}\r\n+                onGoogleApiLoaded={({ map, maps }) => {\r\n+                    //console.log(\"map is loaded.\");\r\n+                }}\r\n+            >\r\n+                {places}\r\n+            </GoogleMap>\r\n+            {Object.entries(locations).map(([key, location], i) => (\r\n+                <li className=\"travelcompany-input\" key={i}>\r\n+                    <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n+                </li>\r\n+            ))}\r\n+        </>\r\n+\r\n+    )\r\n }\r\n"
                },
                {
                    "date": 1706966715337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,14 +42,11 @@\n     const places = locations.length\r\n         ? locations.map((row) => {\r\n             return (\r\n                 <ArtPrestationFicheMap\r\n-                    key={row.id}\r\n-                    lat={row.user.latitude}\r\n-                    lng={row.user.longitude}\r\n-                    text={\r\n-                        row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-                    }\r\n+                    key={row.lat}\r\n+                    lat={row.lng}\r\n+                 \r\n                     id={row.id}\r\n                     // use your hover state (from store, react-controllables etc...)\r\n                     //activeBenefit={activeBenefit}\r\n                 />\r\n"
                },
                {
                    "date": 1706966834532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n \r\n import { Col, Row } from \"react-bootstrap\";\r\n+import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n"
                },
                {
                    "date": 1706967018074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,11 @@\n                 onGoogleApiLoaded={({ map, maps }) => {\r\n                     //console.log(\"map is loaded.\");\r\n                 }}\r\n             >\r\n-                {places}\r\n+                {locations}\r\n             </GoogleMap>\r\n+            \r\n             {Object.entries(locations).map(([key, location], i) => (\r\n                 <li className=\"travelcompany-input\" key={i}>\r\n                     <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n                 </li>\r\n"
                },
                {
                    "date": 1706967131135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+\r\n+import { Col, Row } from \"react-bootstrap\";\r\n+import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n+import React, { useState, useEffect, useRef } from \"react\";\r\n+import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n+import * as vars from \"../../vars\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n+export default function ArtXmap() {\r\n+    const locations = [\r\n+        { lat: -31.56391, lng: 147.154312 },\r\n+        { lat: -33.718234, lng: 150.363181 },\r\n+        { lat: -33.727111, lng: 150.371124 },\r\n+        { lat: -33.848588, lng: 151.209834 },\r\n+        { lat: -33.851702, lng: 151.216968 },\r\n+        { lat: -34.671264, lng: 150.863657 },\r\n+        { lat: -35.304724, lng: 148.662905 },\r\n+        { lat: -36.817685, lng: 175.699196 },\r\n+        { lat: -36.828611, lng: 175.790222 },\r\n+        { lat: -37.75, lng: 145.116667 },\r\n+        { lat: -37.759859, lng: 145.128708 },\r\n+        { lat: -37.765015, lng: 145.133858 },\r\n+        { lat: -37.770104, lng: 145.143299 },\r\n+        { lat: -37.7737, lng: 145.145187 },\r\n+        { lat: -37.774785, lng: 145.137978 },\r\n+        { lat: -37.819616, lng: 144.968119 },\r\n+        { lat: -38.330766, lng: 144.695692 },\r\n+        { lat: -39.927193, lng: 175.053218 },\r\n+        { lat: -41.330162, lng: 174.865694 },\r\n+        { lat: -42.734358, lng: 147.439506 },\r\n+        { lat: -42.734358, lng: 147.501315 },\r\n+        { lat: -42.735258, lng: 147.438 },\r\n+        { lat: -43.999792, lng: 170.463352 },\r\n+    ];\r\n+\r\n+    const [state, setState] = useState({\r\n+        map: { center: [48.8534, 2.3488], zoom: 10 },\r\n+    });\r\n+    const _onChildClick = (key, childProps) => {\r\n+        let i = null;\r\n+\r\n+    };\r\n+\r\n+    const places = locations.length\r\n+        ? locations.map((row) => {\r\n+            return (\r\n+                <ArtPrestationFicheMap\r\n+                    key={row.lat}\r\n+                    lat={row.lng}\r\n+                 \r\n+                    id={row.id}\r\n+                    // use your hover state (from store, react-controllables etc...)\r\n+                    //activeBenefit={activeBenefit}\r\n+                />\r\n+            );\r\n+        })\r\n+        : \"\";\r\n+    const none = \"Regroupement de repères\";\r\n+\r\n+\r\n+    return (\r\n+        <>\r\n+\r\n+            <GoogleMap\r\n+                apiKey={vars.mapsApiKey}\r\n+                center={state.map.center}\r\n+                zoom={state.map.zoom}\r\n+                hoverDistance={K_SIZE / 2}\r\n+                onChildClick={_onChildClick}\r\n+                onGoogleApiLoaded={({ map, maps }) => {\r\n+                    //console.log(\"map is loaded.\");\r\n+                }}\r\n+            >\r\n+                {places}\r\n+            </GoogleMap>\r\n+            \r\n+            {Object.entries(locations).map(([key, location], i) => (\r\n+                <li className=\"travelcompany-input\" key={i}>\r\n+                    <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n+                </li>\r\n+            ))}\r\n+        </>\r\n+\r\n+    )\r\n+}\r\n"
                },
                {
                    "date": 1706967190251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n-export default function ArtXmap() {\r\n+export default function ArtXmap({ ...props }) {\r\n     const locations = [\r\n         { lat: -31.56391, lng: 147.154312 },\r\n         { lat: -33.718234, lng: 150.363181 },\r\n         { lat: -33.727111, lng: 150.371124 },\r\n@@ -81,88 +81,4 @@\n         </>\r\n \r\n     )\r\n }\r\n-\r\n-import { Col, Row } from \"react-bootstrap\";\r\n-import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n-import React, { useState, useEffect, useRef } from \"react\";\r\n-import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n-import * as vars from \"../../vars\";\r\n-import { K_SIZE } from \"./markerStyle\";\r\n-export default function ArtXmap() {\r\n-    const locations = [\r\n-        { lat: -31.56391, lng: 147.154312 },\r\n-        { lat: -33.718234, lng: 150.363181 },\r\n-        { lat: -33.727111, lng: 150.371124 },\r\n-        { lat: -33.848588, lng: 151.209834 },\r\n-        { lat: -33.851702, lng: 151.216968 },\r\n-        { lat: -34.671264, lng: 150.863657 },\r\n-        { lat: -35.304724, lng: 148.662905 },\r\n-        { lat: -36.817685, lng: 175.699196 },\r\n-        { lat: -36.828611, lng: 175.790222 },\r\n-        { lat: -37.75, lng: 145.116667 },\r\n-        { lat: -37.759859, lng: 145.128708 },\r\n-        { lat: -37.765015, lng: 145.133858 },\r\n-        { lat: -37.770104, lng: 145.143299 },\r\n-        { lat: -37.7737, lng: 145.145187 },\r\n-        { lat: -37.774785, lng: 145.137978 },\r\n-        { lat: -37.819616, lng: 144.968119 },\r\n-        { lat: -38.330766, lng: 144.695692 },\r\n-        { lat: -39.927193, lng: 175.053218 },\r\n-        { lat: -41.330162, lng: 174.865694 },\r\n-        { lat: -42.734358, lng: 147.439506 },\r\n-        { lat: -42.734358, lng: 147.501315 },\r\n-        { lat: -42.735258, lng: 147.438 },\r\n-        { lat: -43.999792, lng: 170.463352 },\r\n-    ];\r\n-\r\n-    const [state, setState] = useState({\r\n-        map: { center: [48.8534, 2.3488], zoom: 10 },\r\n-    });\r\n-    const _onChildClick = (key, childProps) => {\r\n-        let i = null;\r\n-\r\n-    };\r\n-\r\n-    const places = locations.length\r\n-        ? locations.map((row) => {\r\n-            return (\r\n-                <ArtPrestationFicheMap\r\n-                    key={row.lat}\r\n-                    lat={row.lng}\r\n-                 \r\n-                    id={row.id}\r\n-                    // use your hover state (from store, react-controllables etc...)\r\n-                    //activeBenefit={activeBenefit}\r\n-                />\r\n-            );\r\n-        })\r\n-        : \"\";\r\n-    const none = \"Regroupement de repères\";\r\n-\r\n-\r\n-    return (\r\n-        <>\r\n-\r\n-            <GoogleMap\r\n-                apiKey={vars.mapsApiKey}\r\n-                center={state.map.center}\r\n-                zoom={state.map.zoom}\r\n-                hoverDistance={K_SIZE / 2}\r\n-                onChildClick={_onChildClick}\r\n-                onGoogleApiLoaded={({ map, maps }) => {\r\n-                    //console.log(\"map is loaded.\");\r\n-                }}\r\n-            >\r\n-                {locations}\r\n-            </GoogleMap>\r\n-            \r\n-            {Object.entries(locations).map(([key, location], i) => (\r\n-                <li className=\"travelcompany-input\" key={i}>\r\n-                    <span className=\"input-label\">key: {i} Name: {location.lat}</span>\r\n-                </li>\r\n-            ))}\r\n-        </>\r\n-\r\n-    )\r\n-}\r\n"
                },
                {
                    "date": 1706967362168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             return (\r\n                 <ArtPrestationFicheMap\r\n                     key={row.lat}\r\n                     lat={row.lng}\r\n-                 \r\n+                    text='dedde'\r\n                     id={row.id}\r\n                     // use your hover state (from store, react-controllables etc...)\r\n                     //activeBenefit={activeBenefit}\r\n                 />\r\n"
                },
                {
                    "date": 1706967379815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n             return (\r\n                 <ArtPrestationFicheMap\r\n                     key={row.lat}\r\n                     lat={row.lng}\r\n-                    text='dedde'\r\n+                    text={'dedde'}\r\n                     id={row.id}\r\n                     // use your hover state (from store, react-controllables etc...)\r\n                     //activeBenefit={activeBenefit}\r\n                 />\r\n"
                },
                {
                    "date": 1706967520530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n                     key={row.lat}\r\n                     lat={row.lng}\r\n                     text={'dedde'}\r\n                     id={row.id}\r\n+                    activeBenefit = {row.id}\r\n                     // use your hover state (from store, react-controllables etc...)\r\n                     //activeBenefit={activeBenefit}\r\n                 />\r\n             );\r\n"
                },
                {
                    "date": 1706967663596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import { Col, Row } from \"react-bootstrap\";\r\n-import ArtPrestationFicheMap from \"./artPrestationFicheMap\";\r\n+import ArtPrestFicheXMap from \"./artPrestationFicheMap\";\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n@@ -42,9 +42,9 @@\n \r\n     const places = locations.length\r\n         ? locations.map((row) => {\r\n             return (\r\n-                <ArtPrestationFicheMap\r\n+                <ArtPrestFicheXMap\r\n                     key={row.lat}\r\n                     lat={row.lng}\r\n                     text={'dedde'}\r\n                     id={row.id}\r\n"
                },
                {
                    "date": 1706968257479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,13 +34,10 @@\n \r\n     const [state, setState] = useState({\r\n         map: { center: [48.8534, 2.3488], zoom: 10 },\r\n     });\r\n-    const _onChildClick = (key, childProps) => {\r\n-        let i = null;\r\n+   \r\n \r\n-    };\r\n-\r\n     const places = locations.length\r\n         ? locations.map((row) => {\r\n             return (\r\n                 <ArtPrestFicheXMap\r\n"
                },
                {
                    "date": 1706968449237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,19 +52,31 @@\n             );\r\n         })\r\n         : \"\";\r\n     const none = \"Regroupement de repères\";\r\n+    const _onXChildClick = (key, childProps) => {\r\n+        let i = null;\r\n+        const benefit = locations.length\r\n+          ? locations.find((val, index) => {\r\n+            if (val.id === childProps.id) {\r\n+              i = index;\r\n+              return true;\r\n+            }\r\n+          })\r\n+          : { id: null };\r\n+    \r\n+      };\r\n+    \r\n \r\n-\r\n     return (\r\n         <>\r\n \r\n             <GoogleMap\r\n                 apiKey={vars.mapsApiKey}\r\n                 center={state.map.center}\r\n                 zoom={state.map.zoom}\r\n                 hoverDistance={K_SIZE / 2}\r\n-                onChildClick={_onChildClick}\r\n+                onChildClick={_onXChildClick}\r\n                 onGoogleApiLoaded={({ map, maps }) => {\r\n                     //console.log(\"map is loaded.\");\r\n                 }}\r\n             >\r\n"
                },
                {
                    "date": 1706968815009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         map: { center: [48.8534, 2.3488], zoom: 10 },\r\n     });\r\n    \r\n \r\n-    const places = locations.length\r\n+    const xplaces = locations.length\r\n         ? locations.map((row) => {\r\n             return (\r\n                 <ArtPrestFicheXMap\r\n                     key={row.lat}\r\n@@ -79,9 +79,9 @@\n                 onGoogleApiLoaded={({ map, maps }) => {\r\n                     //console.log(\"map is loaded.\");\r\n                 }}\r\n             >\r\n-                {places}\r\n+                {xplaces}\r\n             </GoogleMap>\r\n             \r\n             {Object.entries(locations).map(([key, location], i) => (\r\n                 <li className=\"travelcompany-input\" key={i}>\r\n"
                },
                {
                    "date": 1706968871129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,16 +54,9 @@\n         : \"\";\r\n     const none = \"Regroupement de repères\";\r\n     const _onXChildClick = (key, childProps) => {\r\n         let i = null;\r\n-        const benefit = locations.length\r\n-          ? locations.find((val, index) => {\r\n-            if (val.id === childProps.id) {\r\n-              i = index;\r\n-              return true;\r\n-            }\r\n-          })\r\n-          : { id: null };\r\n+  \r\n     \r\n       };\r\n     \r\n \r\n"
                },
                {
                    "date": 1706968906945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,16 @@\n         : \"\";\r\n     const none = \"Regroupement de repères\";\r\n     const _onXChildClick = (key, childProps) => {\r\n         let i = null;\r\n-  \r\n+        const benefit = locations.length\r\n+          ? locations.find((val, index) => {\r\n+            if (val.id === childProps.id) {\r\n+              i = index;\r\n+              return true;\r\n+            }\r\n+          })\r\n+          : { id: null };\r\n     \r\n       };\r\n     \r\n \r\n"
                },
                {
                    "date": 1706968924102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,16 +54,9 @@\n         : \"\";\r\n     const none = \"Regroupement de repères\";\r\n     const _onXChildClick = (key, childProps) => {\r\n         let i = null;\r\n-        const benefit = locations.length\r\n-          ? locations.find((val, index) => {\r\n-            if (val.id === childProps.id) {\r\n-              i = index;\r\n-              return true;\r\n-            }\r\n-          })\r\n-          : { id: null };\r\n+        return true;\r\n     \r\n       };\r\n     \r\n \r\n"
                },
                {
                    "date": 1706969069656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n     \r\n \r\n     return (\r\n         <>\r\n-\r\n+<div> TOTO</div>\r\n             <GoogleMap\r\n                 apiKey={vars.mapsApiKey}\r\n                 center={state.map.center}\r\n                 zoom={state.map.zoom}\r\n"
                },
                {
                    "date": 1706969609174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import { Col, Row } from \"react-bootstrap\";\r\n-import ArtPrestFicheXMap from \"./artPrestationFicheMap\";\r\n+\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n"
                },
                {
                    "date": 1706969623640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import { Col, Row } from \"react-bootstrap\";\r\n-\r\n+import ArtPrestFicheXMap from \"./artPrestationFicheMap\";\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n"
                },
                {
                    "date": 1706969713320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import { Col, Row } from \"react-bootstrap\";\r\n-import ArtPrestFicheXMap from \"./artPrestationFicheMap\";\r\n+import ArtPrestFicheXMap from \"./PrestationFicheMap\";\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n"
                },
                {
                    "date": 1706969724620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n import { Col, Row } from \"react-bootstrap\";\r\n-import ArtPrestFicheXMap from \"./PrestationFicheMap\";\r\n+import ArtPrestFicheXMap from \"./artPrestationFicheMap\";\r\n import React, { useState, useEffect, useRef } from \"react\";\r\n import { GoogleMap, Marker } from \"@react-google-maps/api\";\r\n import * as vars from \"../../vars\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n"
                }
            ],
            "date": 1706961239645,
            "name": "Commit-0",
            "content": "import React from \"react\";\r\nimport { greatPlaceStyleHover, greatPlaceStyle } from \"./markerStyle\";\r\nexport default function ArtPrestationFicheMap({ ...props }) {\r\n  const style = props.hover ? greatPlaceStyleHover : greatPlaceStyle;\r\n  return (\r\n    <>\r\n      {props.text ? (\r\n        <div\r\n          className={`item-map-prestation ${\r\n            parseInt(props.activeBenefit.id) === parseInt(props.id)\r\n              ? \"active\"\r\n              : \"\"\r\n          }`}\r\n          style={style}\r\n        >\r\n          <div>{props.text}</div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"
        }
    ]
}