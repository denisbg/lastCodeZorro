{
    "sourceFile": "src/components/front/bannerHomeNc.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 71,
            "patches": [
                {
                    "date": 1704969877937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704969901903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -423,8 +423,7 @@\n             </div>\r\n           </BlocFilterStyle>\r\n         </Container>\r\n       </PageBanner>\r\n-    );}\r\n-      )\r\n+    )\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1704969934152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,18 +333,9 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-banner\">\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n+      \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n"
                },
                {
                    "date": 1704970211215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,14 +336,10 @@\n     <PageBanner className=\"home-page-banner\">\r\n       \r\n         \r\n         <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n \r\n+\r\n           {isTabletOrMobile && (\r\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n"
                },
                {
                    "date": 1704970261963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,421 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Services\",\r\n+      placeholder: \"Choisir l'univers dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      placeIsSelected\r\n+    ) {\r\n+\r\n+\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        //history.push(`/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+        console.log(history.location);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  \r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\">\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner className=\"home-page-banner\">\r\n+      \r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1704970428507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n   \r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n-      <PageBanner className=\"home-page-banner\">\r\n+      <PageBanner className=\"home-page-banner\" style={{height: 74px;}}>\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n             {sliderBanner &&\r\n               sliderBanner.map(($val) => (\r\n@@ -418,420 +418,4 @@\n       </PageBanner>\r\n     )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Services\",\r\n-      placeholder: \"Choisir l'univers dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      placeIsSelected\r\n-    ) {\r\n-\r\n-\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        //history.push(`/univers/${u.slug}-${u.id}`);\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-        console.log(history.location);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  \r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\">\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner className=\"home-page-banner\">\r\n-      \r\n-        \r\n-        <Container>\r\n-\r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1704970456035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n   \r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n-      <PageBanner className=\"home-page-banner\" style={{height: 74px;}}>\r\n+      <PageBanner className=\"home-page-banner\" style={{height: 74}}>\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n             {sliderBanner &&\r\n               sliderBanner.map(($val) => (\r\n"
                },
                {
                    "date": 1704970499838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n   \r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n-      <PageBanner className=\"home-page-banner\" style={{height: 74}}>\r\n+      <PageBanner style={{height: 74}}>\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n             {sliderBanner &&\r\n               sliderBanner.map(($val) => (\r\n"
                },
                {
                    "date": 1704970527213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n   \r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n-      <PageBanner style={{height: 74}}>\r\n+      <PageBanner className=\"home-page-banner\" style={{height: 74}}>\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n             {sliderBanner &&\r\n               sliderBanner.map(($val) => (\r\n"
                },
                {
                    "date": 1704970549507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n   \r\n \r\n   if (!isDisplayedBottom ) {\r\n     return (\r\n-      <PageBanner className=\"home-page-banner\" style={{height: 74}}>\r\n+      <PageBanner className=\"home-page-banner\">\r\n         <div className=\"slider-home-banner\">\r\n           <Slider {...settings}>\r\n             {sliderBanner &&\r\n               sliderBanner.map(($val) => (\r\n"
                },
                {
                    "date": 1704970570245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-banner\">\r\n+    <PageBanner className=\"home-page-banner\" style={{height: 74px}}>\r\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n"
                },
                {
                    "date": 1704970576124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-banner\" style={{height: 74px}}>\r\n+    <PageBanner className=\"home-page-banner\" style={{height: 74}}>\r\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n"
                },
                {
                    "date": 1704970590233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-banner\" style={{height: 74}}>\r\n+    <PageBanner style={{height: 74}}>\r\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n"
                },
                {
                    "date": 1704970711960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner style={{height: 74}}>\r\n+    <PageBanner className=\"home-page-banner_bottom\"}>\r\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n"
                },
                {
                    "date": 1704970718474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-banner_bottom\"}>\r\n+    <PageBanner className=\"home-page-banner_bottom\">\r\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n"
                },
                {
                    "date": 1704970809727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-banner_bottom\">\r\n+    <PageBanner className=\"home-page-bottom-banner\">\r\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n"
                },
                {
                    "date": 1704972040881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,9 +337,9 @@\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704972069592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,9 +337,9 @@\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'green', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704972095172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,9 +337,9 @@\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'green', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: rgb(70, 90, 97), backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704972104088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,9 +337,9 @@\n       \r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: rgb(70, 90, 97), backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704972242258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,11 +333,9 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\">\r\n-      \r\n-        \r\n-        <Container>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n"
                },
                {
                    "date": 1704972414210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\">\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704972444446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n+    <PageBanner  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704972459283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner  style={{  backgroundColor: '#fff'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973574220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n+    <PageBanner   style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973583182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner   style={{  backgroundColor: '#fff'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973912459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#000'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973924581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#000'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973943366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#0fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973957461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#0fff'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973968529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'yellow'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704973982812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'yellow'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'tranparent'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704974003070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'tranparent'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'blue'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704974010430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'blue'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704974049815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,11 +333,11 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)' }}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704974063489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,11 +333,11 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)' }}>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704974077558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1704974336792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 42, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704974351448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,419 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Services\",\r\n+      placeholder: \"Choisir l'univers dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      placeIsSelected\r\n+    ) {\r\n+\r\n+\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        //history.push(`/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+        console.log(history.location);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  \r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\">\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 42, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1704974385281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,11 +333,11 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 42, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 42, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n@@ -416,423 +416,4 @@\n       </PageBanner>\r\n     )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Services\",\r\n-      placeholder: \"Choisir l'univers dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      placeIsSelected\r\n-    ) {\r\n-\r\n-\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        //history.push(`/univers/${u.slug}-${u.id}`);\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-        console.log(history.location);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  \r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\">\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 42, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1704974402839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,12 +332,12 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#fff'}}>\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 42, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1704974441585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1705674995039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: 'white'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#FEFDFA'}}>\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1705675016762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  style={{  backgroundColor: '#FEFDFA'}}>\r\n+    <PageBanner className=\"home-page-bottom-banner\"  >\r\n         <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1705675039993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,11 +333,11 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff'}}>\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', backgroundColor: '#fff', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1705675064404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,419 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Services\",\r\n+      placeholder: \"Choisir l'univers dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      placeIsSelected\r\n+    ) {\r\n+\r\n+\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        //history.push(`/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+        console.log(history.location);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  \r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\">\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner className=\"home-page-bottom-banner\"  >\r\n+        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1705675091351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n+        <Container style={{  backgroundColor: '', width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n@@ -416,423 +416,4 @@\n       </PageBanner>\r\n     )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Services\",\r\n-      placeholder: \"Choisir l'univers dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      placeIsSelected\r\n-    ) {\r\n-\r\n-\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        //history.push(`/univers/${u.slug}-${u.id}`);\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-        console.log(history.location);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  \r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\">\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  >\r\n-        <Container style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1705675110485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n-        <Container style={{  backgroundColor: '', width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n+        <Container style={{  backgroundColor: '#0000FF', width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n"
                },
                {
                    "date": 1705675206811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,12 +332,13 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  >\r\n+    <PageBanner className=\"home-page-bottom-banner\" style={{  backgroundColor: '#0000FF'}}  >\r\n         <Container style={{  backgroundColor: '#0000FF', width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n             <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1705675226554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n     );}\r\n   else\r\n   { return (\r\n     <PageBanner className=\"home-page-bottom-banner\" style={{  backgroundColor: '#0000FF'}}  >\r\n-        <Container style={{  backgroundColor: '#0000FF', width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n+        <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n"
                },
                {
                    "date": 1705675275606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n       </PageBanner>\r\n     );}\r\n   else\r\n   { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\" style={{  backgroundColor: '#0000FF'}}  >\r\n+    <PageBanner className=\"home-page-bottom-banner\"  >\r\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n"
                },
                {
                    "date": 1705905715281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,421 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { useHistory } from \"react-router-dom\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import Select from \"../ui-elements/select\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  PageBanner,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n+import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Slider from \"react-slick\";\r\n+import SelectCat from \"../categories/selectCat\";\r\n+\r\n+\r\n+export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const history = useHistory();\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n+        let o = universe.allUniverses[i];\r\n+        const category = [];\r\n+        for (let j = 0; j < o.categories.length; j++) {\r\n+          const subCategory = [];\r\n+          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n+\r\n+            subCategory.push({\r\n+              label: o.categories[j].children[k].name,\r\n+              value: o.categories[j].children[k].id,\r\n+            });\r\n+          }\r\n+          category.push({\r\n+            label: o.categories[j].name,\r\n+            value: o.categories[j].id,\r\n+            subCategory,\r\n+          });\r\n+        }\r\n+\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          category,\r\n+          nameCategory: o.nameCategory,\r\n+          nameSubCategory: o.nameSubCategory,\r\n+          requireSearchSubCategory: o.requireSearchSubCategory,\r\n+        });\r\n+      }\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Services\",\r\n+      placeholder: \"Choisir l'univers dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+      \r\n+\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n+\r\n+  useEffect(() => {\r\n+    if (errorcCodePostal) {\r\n+      msgErrors({ codePostal: true });\r\n+      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [errorcCodePostal]);\r\n+\r\n+  const searchServices = () => {\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+    if (\r\n+      filter.universe.value &&\r\n+      placeIsSelected\r\n+    ) {\r\n+\r\n+\r\n+      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n+\r\n+      if (index > -1) {\r\n+        if (isTabletOrMobile) {\r\n+          setClick(false);\r\n+        }\r\n+        const u = universe.allUniverses[index];\r\n+        //history.push(`/univers/${u.slug}-${u.id}`);\r\n+        history.push(`/univers/${u.slug}-${u.id}`);\r\n+        console.log(history.location);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        universe: !filter.universe.value,\r\n+        codePostal: !placeIsSelected,\r\n+        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"BannerHome\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        if (event.detail.isHome) {\r\n+          if (\r\n+            localStorage.getItem(\"codePostal\") &&\r\n+            localStorage.getItem(\"latitude\") &&\r\n+            localStorage.getItem(\"longitude\")\r\n+          ) {\r\n+            history.push(event.detail.url);\r\n+          } else {\r\n+            \r\n+            const cpFilter = { ...filter };\r\n+            cpFilter.universe.value = event.detail.id;\r\n+            setFilter(cpFilter);\r\n+\r\n+            setPlaceIsSelected(false);\r\n+            const cpFilterMap = { ...filterMap };\r\n+            cpFilterMap.codePostal.error = true;\r\n+            cpFilterMap.codePostal.infoBulle = true;\r\n+            setFilterMap(cpFilterMap);\r\n+\r\n+            scrollTop();\r\n+          }\r\n+        }\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  const settings = {\r\n+    arrows: false,\r\n+    infinite: true,\r\n+    slidesToShow: 1,\r\n+    slidesToScroll: 1,\r\n+    speed: 1000,\r\n+    autoplaySpeed: 5000,\r\n+    autoplay: true,\r\n+  };\r\n+\r\n+  \r\n+\r\n+  if (!isDisplayedBottom ) {\r\n+    return (\r\n+      <PageBanner className=\"home-page-banner\">\r\n+        <div className=\"slider-home-banner\">\r\n+          <Slider {...settings}>\r\n+            {sliderBanner &&\r\n+              sliderBanner.map(($val) => (\r\n+                <div key={$val.id} className=\"item-slider-banner\">\r\n+                  <img src={$val.url} alt={title} />\r\n+                </div>\r\n+              ))}\r\n+          </Slider>\r\n+        </div>\r\n+        \r\n+        <Container>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    );}\r\n+  else\r\n+  { return (\r\n+    <PageBanner className=\"home-page-bottom-banner\"  >\r\n+        <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n+          <div className=\"bloc-title-banner\">\r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n+             color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+              Faites réparer votre objet</div>\r\n+            <p className=\"description-banner-cat\">{description}</p>\r\n+          </div>\r\n+        \r\n+\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <Select\r\n+                {...filter.universe}\r\n+                element={filter.universe}\r\n+                setElement={(element) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe = element;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+                onChange={(e) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.universe.value = e.value;\r\n+                  cpFilter.universe.nameCategory = e.nameCategory;\r\n+                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n+                  cpFilter.universe.requireSearchSubCategory =\r\n+                    e.requireSearchSubCategory;\r\n+                  cpFilter.universe.category = e.category;\r\n+                  cpFilter.universe.error = false;\r\n+                  cpFilter.activeElement = \"universe\";\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+\r\n+           \r\n+\r\n+           \r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filterMap}\r\n+                setFilter={setFilterMap}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={() => {\r\n+                  searchServices();\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+        </Container>\r\n+      </PageBanner>\r\n+    )\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1708340410465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,10 +253,9 @@\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n+           </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n@@ -339,9 +338,8 @@\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n              color: 'rgb(70, 90, 97)', fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n           </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n@@ -418,424 +416,4 @@\n       </PageBanner>\r\n     )\r\n   }\r\n }\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { useHistory } from \"react-router-dom\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import Select from \"../ui-elements/select\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  PageBanner,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\n-import { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Slider from \"react-slick\";\r\n-import SelectCat from \"../categories/selectCat\";\r\n-\r\n-\r\n-export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const history = useHistory();\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n-        let o = universe.allUniverses[i];\r\n-        const category = [];\r\n-        for (let j = 0; j < o.categories.length; j++) {\r\n-          const subCategory = [];\r\n-          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n-\r\n-            subCategory.push({\r\n-              label: o.categories[j].children[k].name,\r\n-              value: o.categories[j].children[k].id,\r\n-            });\r\n-          }\r\n-          category.push({\r\n-            label: o.categories[j].name,\r\n-            value: o.categories[j].id,\r\n-            subCategory,\r\n-          });\r\n-        }\r\n-\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          category,\r\n-          nameCategory: o.nameCategory,\r\n-          nameSubCategory: o.nameSubCategory,\r\n-          requireSearchSubCategory: o.requireSearchSubCategory,\r\n-        });\r\n-      }\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Services\",\r\n-      placeholder: \"Choisir l'univers dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-      \r\n-\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n-\r\n-  useEffect(() => {\r\n-    if (errorcCodePostal) {\r\n-      msgErrors({ codePostal: true });\r\n-      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [errorcCodePostal]);\r\n-\r\n-  const searchServices = () => {\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-    if (\r\n-      filter.universe.value &&\r\n-      placeIsSelected\r\n-    ) {\r\n-\r\n-\r\n-      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n-\r\n-      if (index > -1) {\r\n-        if (isTabletOrMobile) {\r\n-          setClick(false);\r\n-        }\r\n-        const u = universe.allUniverses[index];\r\n-        //history.push(`/univers/${u.slug}-${u.id}`);\r\n-        history.push(`/univers/${u.slug}-${u.id}`);\r\n-        console.log(history.location);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        universe: !filter.universe.value,\r\n-        codePostal: !placeIsSelected,\r\n-        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"BannerHome\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        if (event.detail.isHome) {\r\n-          if (\r\n-            localStorage.getItem(\"codePostal\") &&\r\n-            localStorage.getItem(\"latitude\") &&\r\n-            localStorage.getItem(\"longitude\")\r\n-          ) {\r\n-            history.push(event.detail.url);\r\n-          } else {\r\n-            \r\n-            const cpFilter = { ...filter };\r\n-            cpFilter.universe.value = event.detail.id;\r\n-            setFilter(cpFilter);\r\n-\r\n-            setPlaceIsSelected(false);\r\n-            const cpFilterMap = { ...filterMap };\r\n-            cpFilterMap.codePostal.error = true;\r\n-            cpFilterMap.codePostal.infoBulle = true;\r\n-            setFilterMap(cpFilterMap);\r\n-\r\n-            scrollTop();\r\n-          }\r\n-        }\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  const settings = {\r\n-    arrows: false,\r\n-    infinite: true,\r\n-    slidesToShow: 1,\r\n-    slidesToScroll: 1,\r\n-    speed: 1000,\r\n-    autoplaySpeed: 5000,\r\n-    autoplay: true,\r\n-  };\r\n-\r\n-  \r\n-\r\n-  if (!isDisplayedBottom ) {\r\n-    return (\r\n-      <PageBanner className=\"home-page-banner\">\r\n-        <div className=\"slider-home-banner\">\r\n-          <Slider {...settings}>\r\n-            {sliderBanner &&\r\n-              sliderBanner.map(($val) => (\r\n-                <div key={$val.id} className=\"item-slider-banner\">\r\n-                  <img src={$val.url} alt={title} />\r\n-                </div>\r\n-              ))}\r\n-          </Slider>\r\n-        </div>\r\n-        \r\n-        <Container>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    );}\r\n-  else\r\n-  { return (\r\n-    <PageBanner className=\"home-page-bottom-banner\"  >\r\n-        <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n-          <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)', fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n-            <p className=\"description-banner-cat\">{description}</p>\r\n-          </div>\r\n-        \r\n-\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <Select\r\n-                {...filter.universe}\r\n-                element={filter.universe}\r\n-                setElement={(element) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe = element;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-                onChange={(e) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.universe.value = e.value;\r\n-                  cpFilter.universe.nameCategory = e.nameCategory;\r\n-                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n-                  cpFilter.universe.requireSearchSubCategory =\r\n-                    e.requireSearchSubCategory;\r\n-                  cpFilter.universe.category = e.category;\r\n-                  cpFilter.universe.error = false;\r\n-                  cpFilter.activeElement = \"universe\";\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-\r\n-           \r\n-\r\n-           \r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filterMap}\r\n-                setFilter={setFilterMap}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={() => {\r\n-                  searchServices();\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-        </Container>\r\n-      </PageBanner>\r\n-    )\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1710156633861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n-             color: 'rgb(70, 90, 97)', fontSize: 40,\r\n+             color:\"465a61\", fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1710156909373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n-             color:\"465a61\", fontSize: 40,\r\n+             color:\"#465a61\", fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1710236260557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,10 @@\n         </div>\r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n+            \r\n+            <h1 className=\"title-banner-cat\">{title}</h1>\r\n            </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1710237163467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,8 +254,9 @@\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             \r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            <h2>Hello world</h2>\r\n            </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1710237232730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,11 +252,11 @@\n         </div>\r\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n-            \r\n+            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n+           \r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            <h2>Hello world</h2>\r\n            </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1710237317742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,9 @@\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-           \r\n+           <h1>Hello world</h1>\r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n            </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1710237377296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,9 @@\n         \r\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n-           <h1>Hello world</h1>\r\n+       \r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n            </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1715348449378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -255,8 +255,9 @@\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n        \r\n             <h1 className=\"title-banner-cat\">{title}</h1>\r\n+            blabla\r\n            </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1715348467567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,10 +254,10 @@\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n        \r\n-            <h1 className=\"title-banner-cat\">{title}</h1>\r\n-            blabla\r\n+            <h1 className=\"title-banner-cat\">{title}     blabla</h1>\r\n+       \r\n            </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1715348608065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n         <Container>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n        \r\n-            <h1 className=\"title-banner-cat\">{title}     blabla</h1>\r\n+            <h1 className=\"title-banner-cat\">{title}     </h1>\r\n        \r\n            </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1716462089327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n import SelectCat from \"../categories/selectCat\";\r\n \r\n \r\n export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [click, setClick] = useState(false);\r\n"
                },
                {
                    "date": 1716462480127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n import SelectCat from \"../categories/selectCat\";\r\n \r\n \r\n export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [click, setClick] = useState(false);\r\n"
                },
                {
                    "date": 1717510655222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,9 @@\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n-             color:\"#465a61\", fontSize: 40,\r\n+             color:\"#465a61\", fontSize: 42,\r\n              fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1717510761433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n              color:\"#465a61\", fontSize: 42,\r\n-             fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+             fontFamily: 'Helvetica Neue LT Std-75Bold\",Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1717510837238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n              color:\"#465a61\", fontSize: 42,\r\n-             fontFamily: 'Helvetica Neue LT Std-75Bold\",Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+             fontFamily: 'Helvetica Neue LT Std-75Bold,Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1717510879918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,9 @@\n     <PageBanner className=\"home-page-bottom-banner\"  >\r\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n-             color:\"#465a61\", fontSize: 42,\r\n+             color:\"#465a61\", fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std-75Bold,Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n"
                },
                {
                    "date": 1717510975748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n         <Container style={{  width: '100%', height: '100%', textAlign: 'center', color: 'rgb(70, 90, 97)'}}>\r\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n              color:\"#465a61\", fontSize: 40,\r\n-             fontFamily: 'Helvetica Neue LT Std-75Bold,Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n+             fontFamily: 'Helvetica Neue LT Std-75Bold , Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n               Faites réparer votre objet</div>\r\n           </div>\r\n         \r\n \r\n"
                },
                {
                    "date": 1717511682418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -340,9 +340,9 @@\n           <div className=\"bloc-title-banner\">\r\n             <div style={{width: '100%', height: '100%', textAlign: 'center',\r\n              color:\"#465a61\", fontSize: 40,\r\n              fontFamily: 'Helvetica Neue LT Std-75Bold , Helvetica', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'}}>\r\n-              Faites réparer votre objet</div>\r\n+              </div>\r\n           </div>\r\n         \r\n \r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1718095001546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n import SelectCat from \"../categories/selectCat\";\r\n \r\n \r\n export default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const [click, setClick] = useState(false);\r\n"
                }
            ],
            "date": 1704969877937,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Select from \"../ui-elements/select\";\r\nimport {\r\n  BlocFilterStyle,\r\n  PageBanner,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { SearchIcon } from \"../../assets/styles/icons\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport InputAutoComplete from \"../ui-elements/inputAutoComplete\";\r\nimport { indexOfValue, isEqual, scrollTop, copy } from \"../../helper/functions\";\r\nimport { clearErrors } from \"../../helper/form\";\r\nimport Slider from \"react-slick\";\r\nimport SelectCat from \"../categories/selectCat\";\r\n\r\n\r\nexport default function BannerHome({ sliderBanner = [], title, description, isDisplayedBottom  }) {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const [click, setClick] = useState(false);\r\n  const toggleFilter = () => setClick(!click);\r\n  const toogleCloseFilter = () => setClick(false);\r\n  useEffect(() => {\r\n    if (click) {\r\n      document.body.classList.add(\"menu-is-show\");\r\n    } else {\r\n      document.body.classList.remove(\"menu-is-show\");\r\n    }\r\n  }, [click]);\r\n\r\n  const history = useHistory();\r\n  const universe = useSelector((state) => state.universe);\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (universe.allUniverses) {\r\n      let cpFilter = { ...filter };\r\n      cpFilter.universe.options = [];\r\n      for (let i = 0; i < universe.allUniverses.length; i++) {\r\n        let o = universe.allUniverses[i];\r\n        const category = [];\r\n        for (let j = 0; j < o.categories.length; j++) {\r\n          const subCategory = [];\r\n          for (let k = 0; k < o.categories[j].children.length; k++) {\r\n\r\n            subCategory.push({\r\n              label: o.categories[j].children[k].name,\r\n              value: o.categories[j].children[k].id,\r\n            });\r\n          }\r\n          category.push({\r\n            label: o.categories[j].name,\r\n            value: o.categories[j].id,\r\n            subCategory,\r\n          });\r\n        }\r\n\r\n        cpFilter.universe.options.push({\r\n          label: o.name,\r\n          value: o.id,\r\n          category,\r\n          nameCategory: o.nameCategory,\r\n          nameSubCategory: o.nameSubCategory,\r\n          requireSearchSubCategory: o.requireSearchSubCategory,\r\n        });\r\n      }\r\n      setFilter(cpFilter);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [filter, setFilter] = useState({\r\n    universe: {\r\n      label: \"Services\",\r\n      placeholder: \"Choisir l'univers dans la liste\",\r\n      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n      value: \"\",\r\n      category: [],\r\n      nameCategory: \"\",\r\n      nameSubCategory: \"\",\r\n      requireSearchSubCategory: false,\r\n      isSearchable: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n    },\r\n      \r\n\r\n    activeElement: \"\",\r\n  });\r\n\r\n  const [filterMap, setFilterMap] = useState({\r\n    codePostal: {\r\n      name: \"codePostal\",\r\n      type: \"text\",\r\n      label: \"Où\",\r\n      placeholder: \"Saisir un code postal\",\r\n      value:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultCodePostal\r\n          : \"\",\r\n      latitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLatitude\r\n          : null,\r\n      longitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLongitude\r\n          : null,\r\n      error: false,\r\n      required: true,\r\n      infoBulle: false,\r\n    },\r\n  });\r\n\r\n  const [errorcCodePostal] = useState(localStorage.getItem(\"errorcCodePostal\"));\r\n\r\n  useEffect(() => {\r\n    if (errorcCodePostal) {\r\n      msgErrors({ codePostal: true });\r\n      localStorage.setItem(\"errorcCodePostal\", \"\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [errorcCodePostal]);\r\n\r\n  const searchServices = () => {\r\n    setFilter(clearErrors(filter));\r\n    setFilterMap(clearErrors(filterMap));\r\n    if (\r\n      filter.universe.value &&\r\n      placeIsSelected\r\n    ) {\r\n\r\n\r\n      const index = indexOfValue(filter.universe.value, universe.allUniverses);\r\n\r\n      if (index > -1) {\r\n        if (isTabletOrMobile) {\r\n          setClick(false);\r\n        }\r\n        const u = universe.allUniverses[index];\r\n        //history.push(`/univers/${u.slug}-${u.id}`);\r\n        history.push(`/univers/${u.slug}-${u.id}`);\r\n        console.log(history.location);\r\n      }\r\n    } else {\r\n      msgErrors({\r\n        universe: !filter.universe.value,\r\n        codePostal: !placeIsSelected,\r\n        notice: \"Veuillez svp renseigner les champs du filtre.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpFilter = { ...filter };\r\n    if (e.universe !== undefined) {\r\n      cpFilter.universe.error = e.universe;\r\n      cpFilter.universe.infoBull = e.universe;\r\n    }\r\n    if (e.category !== undefined) {\r\n      cpFilter.category.error = e.category;\r\n      cpFilter.category.infoBull = e.category;\r\n    }\r\n    if (e.subCategory !== undefined) {\r\n      cpFilter.subCategory.error = e.subCategory;\r\n      cpFilter.subCategory.infoBull = e.subCategory;\r\n    }\r\n    setFilter(cpFilter);\r\n\r\n    const cpFilterMap = { ...filterMap };\r\n    if (e.codePostal !== undefined) {\r\n      cpFilterMap.codePostal.error = e.codePostal;\r\n      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n    }\r\n    setFilterMap(cpFilterMap);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"BannerHome\", function (event) {\r\n      if (event?.detail?.url && event?.detail?.id) {\r\n        if (event.detail.isHome) {\r\n          if (\r\n            localStorage.getItem(\"codePostal\") &&\r\n            localStorage.getItem(\"latitude\") &&\r\n            localStorage.getItem(\"longitude\")\r\n          ) {\r\n            history.push(event.detail.url);\r\n          } else {\r\n            \r\n            const cpFilter = { ...filter };\r\n            cpFilter.universe.value = event.detail.id;\r\n            setFilter(cpFilter);\r\n\r\n            setPlaceIsSelected(false);\r\n            const cpFilterMap = { ...filterMap };\r\n            cpFilterMap.codePostal.error = true;\r\n            cpFilterMap.codePostal.infoBulle = true;\r\n            setFilterMap(cpFilterMap);\r\n\r\n            scrollTop();\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"error event params.\");\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const settings = {\r\n    arrows: false,\r\n    infinite: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    speed: 1000,\r\n    autoplaySpeed: 5000,\r\n    autoplay: true,\r\n  };\r\n\r\n  \r\n\r\n  if (!isDisplayedBottom ) {\r\n    return (\r\n      <PageBanner className=\"home-page-banner\">\r\n        <div className=\"slider-home-banner\">\r\n          <Slider {...settings}>\r\n            {sliderBanner &&\r\n              sliderBanner.map(($val) => (\r\n                <div key={$val.id} className=\"item-slider-banner\">\r\n                  <img src={$val.url} alt={title} />\r\n                </div>\r\n              ))}\r\n          </Slider>\r\n        </div>\r\n        \r\n        <Container>\r\n          <div className=\"bloc-title-banner\">\r\n            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n            <p className=\"description-banner-cat\">{description}</p>\r\n          </div>\r\n        \r\n\r\n          {isTabletOrMobile && (\r\n            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n              <SearchIcon /> Rechercher une prestation\r\n            </div>\r\n          )}\r\n\r\n          <BlocFilterStyle open={click}>\r\n            {isTabletOrMobile && (\r\n              <button\r\n                className=\"menu-burger is-opened\"\r\n                onClick={toogleCloseFilter}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            )}\r\n            <div className=\"item-filter\">\r\n              <Select\r\n                {...filter.universe}\r\n                element={filter.universe}\r\n                setElement={(element) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.universe = element;\r\n                  setFilter(cpFilter);\r\n                }}\r\n                onChange={(e) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.universe.value = e.value;\r\n                  cpFilter.universe.nameCategory = e.nameCategory;\r\n                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                  cpFilter.universe.requireSearchSubCategory =\r\n                    e.requireSearchSubCategory;\r\n                  cpFilter.universe.category = e.category;\r\n                  cpFilter.universe.error = false;\r\n                  cpFilter.activeElement = \"universe\";\r\n                  setFilter(cpFilter);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n           \r\n\r\n           \r\n            <div className=\"item-filter\">\r\n              <InputAutoComplete\r\n                filter={filterMap}\r\n                setFilter={setFilterMap}\r\n                placeIsSelected={placeIsSelected}\r\n                setPlaceIsSelected={setPlaceIsSelected}\r\n                isPendingLatLng={isPendingLatLng}\r\n                setIsPendingLatLng={setIsPendingLatLng}\r\n              />\r\n            </div>\r\n            <div className=\"btn-filter-banner\">\r\n              <button\r\n                className=\"btn-search-filter\"\r\n                onClick={() => {\r\n                  searchServices();\r\n                }}\r\n              >\r\n                {isDesktopOrLaptop && (\r\n                  <>\r\n                    <SearchIcon />\r\n                  </>\r\n                )}\r\n                {isTabletOrMobile && <>Recherche</>}\r\n              </button>\r\n            </div>\r\n          </BlocFilterStyle>\r\n        </Container>\r\n      </PageBanner>\r\n    );}\r\n  else\r\n  { return (\r\n    <PageBanner className=\"home-page-banner\">\r\n        <div className=\"slider-home-banner\">\r\n          <Slider {...settings}>\r\n            {sliderBanner &&\r\n              sliderBanner.map(($val) => (\r\n                <div key={$val.id} className=\"item-slider-banner\">\r\n                  <img src={$val.url} alt={title} />\r\n                </div>\r\n              ))}\r\n          </Slider>\r\n        </div>\r\n        \r\n        <Container>\r\n          <div className=\"bloc-title-banner\">\r\n            <div style={{width: '100%', height: '100%', textAlign: 'center', color: 'white', fontSize: 52, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 2, wordWrap: 'break-word'}}>{title}</div>\r\n            <p className=\"description-banner-cat\">{description}</p>\r\n          </div>\r\n        \r\n\r\n          {isTabletOrMobile && (\r\n            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n              <SearchIcon /> Rechercher une prestation\r\n            </div>\r\n          )}\r\n\r\n          <BlocFilterStyle open={click}>\r\n            {isTabletOrMobile && (\r\n              <button\r\n                className=\"menu-burger is-opened\"\r\n                onClick={toogleCloseFilter}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            )}\r\n            <div className=\"item-filter\">\r\n              <Select\r\n                {...filter.universe}\r\n                element={filter.universe}\r\n                setElement={(element) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.universe = element;\r\n                  setFilter(cpFilter);\r\n                }}\r\n                onChange={(e) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.universe.value = e.value;\r\n                  cpFilter.universe.nameCategory = e.nameCategory;\r\n                  cpFilter.universe.nameSubCategory = e.nameSubCategory;\r\n                  cpFilter.universe.requireSearchSubCategory =\r\n                    e.requireSearchSubCategory;\r\n                  cpFilter.universe.category = e.category;\r\n                  cpFilter.universe.error = false;\r\n                  cpFilter.activeElement = \"universe\";\r\n                  setFilter(cpFilter);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n           \r\n\r\n           \r\n            <div className=\"item-filter\">\r\n              <InputAutoComplete\r\n                filter={filterMap}\r\n                setFilter={setFilterMap}\r\n                placeIsSelected={placeIsSelected}\r\n                setPlaceIsSelected={setPlaceIsSelected}\r\n                isPendingLatLng={isPendingLatLng}\r\n                setIsPendingLatLng={setIsPendingLatLng}\r\n              />\r\n            </div>\r\n            <div className=\"btn-filter-banner\">\r\n              <button\r\n                className=\"btn-search-filter\"\r\n                onClick={() => {\r\n                  searchServices();\r\n                }}\r\n              >\r\n                {isDesktopOrLaptop && (\r\n                  <>\r\n                    <SearchIcon />\r\n                  </>\r\n                )}\r\n                {isTabletOrMobile && <>Recherche</>}\r\n              </button>\r\n            </div>\r\n          </BlocFilterStyle>\r\n        </Container>\r\n      </PageBanner>\r\n    );}\r\n      )\r\n  }\r\n}\r\n"
        }
    ]
}