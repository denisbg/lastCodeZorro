{
    "sourceFile": "src/components/categories/selectUnivers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1711321093614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711321110964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n const Placeholder = (props) => {\r\n   return <components.Placeholder {...props} />;\r\n };\r\n \r\n-export default function SelectCat({\r\n+export default function SelectUnivers({\r\n   label = null,\r\n   infoLabel = null,\r\n   onChangeCallback,\r\n   className = \"\",\r\n"
                },
                {
                    "date": 1711322135859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     menu: (provided, state) => ({\r\n       backgroundColor: \"#FFF\",\r\n       borderRadius: \"0 0 15px 15px\",\r\n       position: \"static\",\r\n-      width: \"100%\",\r\n+      width: \"25%\",\r\n       boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n     }),\r\n     menuList: (provided, state) => ({\r\n       maxHeight: \"145px\",\r\n"
                },
                {
                    "date": 1711322143396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     menu: (provided, state) => ({\r\n       backgroundColor: \"#FFF\",\r\n       borderRadius: \"0 0 15px 15px\",\r\n       position: \"static\",\r\n-      width: \"25%\",\r\n+      width: \"5%\",\r\n       boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n     }),\r\n     menuList: (provided, state) => ({\r\n       maxHeight: \"145px\",\r\n"
                },
                {
                    "date": 1711322165695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n       width: \"5%\",\r\n       boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n     }),\r\n     menuList: (provided, state) => ({\r\n-      maxHeight: \"145px\",\r\n+      maxHeight: \"15px\",\r\n       overflowY: \"auto\",\r\n       paddingBottom: \"4px\",\r\n       paddingTop: \"4px\",\r\n       position: \"relative\",\r\n"
                },
                {
                    "date": 1711322214042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n       width: \"5%\",\r\n       boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n     }),\r\n     menuList: (provided, state) => ({\r\n-      maxHeight: \"15px\",\r\n+      maxHeight: \"145px\",\r\n       overflowY: \"auto\",\r\n       paddingBottom: \"4px\",\r\n       paddingTop: \"4px\",\r\n       position: \"relative\",\r\n"
                },
                {
                    "date": 1711322293287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   errorMessage = \"\",\r\n   placeholder = \"\",\r\n   options = [],\r\n   style = {},\r\n-  value = [],\r\n+  value = [\"Cordonnerie\",\"Vélos\"],\r\n   hideOptions = false,\r\n   infoBull = false,\r\n   textInfoBulle = \"\",\r\n   element = false,\r\n"
                },
                {
                    "date": 1711322348267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         </label>\r\n       ) : null}\r\n       <Select\r\n         closeMenuOnSelect={false}\r\n-        isMulti\r\n+        isMulti={false}\r\n         placeholder={placeholder}\r\n         components={{\r\n           Option,\r\n           MultiValue,\r\n"
                },
                {
                    "date": 1711322399704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     menu: (provided, state) => ({\r\n       backgroundColor: \"#FFF\",\r\n       borderRadius: \"0 0 15px 15px\",\r\n       position: \"static\",\r\n-      width: \"5%\",\r\n+      width: \"15%\",\r\n       boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n     }),\r\n     menuList: (provided, state) => ({\r\n       maxHeight: \"145px\",\r\n"
                },
                {
                    "date": 1711322492254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,9 +154,9 @@\n         hideSelectedOptions={false}\r\n         backspaceRemovesValue={false}\r\n         onChange={(e) => onChangeCallback(e)}\r\n         styles={customStyles}\r\n-        value={value}\r\n+        value={\"value\"}\r\n         noOptionsMessage={() => \"Aucune donnée\"}\r\n         classNamePrefix=\"react-select\"\r\n       />\r\n       {infoBull && (\r\n"
                },
                {
                    "date": 1711322510800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     menu: (provided, state) => ({\r\n       backgroundColor: \"#FFF\",\r\n       borderRadius: \"0 0 15px 15px\",\r\n       position: \"static\",\r\n-      width: \"15%\",\r\n+      width: \"50%\",\r\n       boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n     }),\r\n     menuList: (provided, state) => ({\r\n       maxHeight: \"145px\",\r\n"
                },
                {
                    "date": 1711322535162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   errorMessage = \"\",\r\n   placeholder = \"\",\r\n   options = [],\r\n   style = {},\r\n-  value = [\"Cordonnerie\",\"Vélos\"],\r\n+  value = [\"Cordonnerie\"],\r\n   hideOptions = false,\r\n   infoBull = false,\r\n   textInfoBulle = \"\",\r\n   element = false,\r\n"
                },
                {
                    "date": 1711323647471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,169 +1,22 @@\n-import React, { useRef } from \"react\";\r\n-import Select, { components } from \"react-select\";\r\n-import { GroupInput } from \"../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { useOutsideAlerter } from '../../helper/events';\r\n+import React, { useState } from 'react';\r\n+import Select from 'react-select';\r\n \r\n-const Option = (props) => (\r\n-  <div>\r\n-    <components.Option className=\"option-select-check\" {...props}>\r\n-      <input type=\"checkbox\" checked={props.isSelected} onChange={() => null} />{\" \"}\r\n-      <label>{props.label}</label>\r\n-    </components.Option>\r\n-  </div>\r\n-);\r\n+const options = [\r\n+  { value: 'chocolate', label: 'Chocolate' },\r\n+  { value: 'strawberry', label: 'Strawberry' },\r\n+  { value: 'vanilla', label: 'Vanilla' },\r\n+];\r\n \r\n-const MultiValue = (props) => (\r\n-  <components.MultiValue {...props}>\r\n-    <span>{props.data.label}</span>\r\n-  </components.MultiValue>\r\n-);\r\n+export default function App() {\r\n+  const [selectedOption, setSelectedOption] = useState(null);\r\n \r\n-const Placeholder = (props) => {\r\n-  return <components.Placeholder {...props} />;\r\n-};\r\n-\r\n-export default function SelectUnivers({\r\n-  label = null,\r\n-  infoLabel = null,\r\n-  onChangeCallback,\r\n-  className = \"\",\r\n-  error = false,\r\n-  disabled = false,\r\n-  isSearchable = false,\r\n-  errorMessage = \"\",\r\n-  placeholder = \"\",\r\n-  options = [],\r\n-  style = {},\r\n-  value = [\"Cordonnerie\"],\r\n-  hideOptions = false,\r\n-  infoBull = false,\r\n-  textInfoBulle = \"\",\r\n-  element = false,\r\n-  setElement = () => {},\r\n-  ...props\r\n-}) {\r\n-  const customStyles = {\r\n-    menu: (provided, state) => ({\r\n-      backgroundColor: \"#FFF\",\r\n-      borderRadius: \"0 0 15px 15px\",\r\n-      position: \"static\",\r\n-      width: \"50%\",\r\n-      boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n-    }),\r\n-    menuList: (provided, state) => ({\r\n-      maxHeight: \"145px\",\r\n-      overflowY: \"auto\",\r\n-      paddingBottom: \"4px\",\r\n-      paddingTop: \"4px\",\r\n-      position: \"relative\",\r\n-      scrolling: \"touch\",\r\n-      boxSizing: \"border-box\",\r\n-      padding: \"10px 20px\",\r\n-    }),\r\n-    control: (provided, state) => ({\r\n-      backgroundColor: \"#f5f5fa\",\r\n-      boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n-      border: \"1px solid transparent\",\r\n-      color: \"#000\",\r\n-      borderRadius: state.isFocused ? \"20px 20px 0 0\" : \" 20px\",\r\n-      minHeight: \"40px\",\r\n-      display: \"flex\",\r\n-      alignItems: \"flex-start\",\r\n-    }),\r\n-    indicatorsContainer: (provided, state) => ({\r\n-      ...provided,\r\n-      display: \"flex\",\r\n-      alignItems: \"center\",\r\n-      transformOrigin: \"center\",\r\n-      transform: state.isFocused ? \"rotate(-180deg)\" : \"rotate(0deg)\",\r\n-    }),\r\n-    valueContainer: (base) => ({\r\n-      ...base,\r\n-      padding: \"6px 20px\",\r\n-    }),\r\n-    group: (provided, state) => ({\r\n-      padding: \"5px 0\",\r\n-    }),\r\n-    groupHeading: (provided, state) => ({\r\n-      color: \"#000\",\r\n-      marginBottom: \"10px\",\r\n-      fontSize: \"14px\",\r\n-      fontWeight: \"600\",\r\n-    }),\r\n-\r\n-    multiValue: (base) => ({\r\n-      ...base,\r\n-      borderRadius: \"12px\",\r\n-      fontSize: \"10px\",\r\n-      color: \"#b8b8bb\",\r\n-      padding: \"0 0 0 6px\",\r\n-      overflow: \"hidden\",\r\n-    }),\r\n-\r\n-    placeholder: (base) => ({\r\n-      ...base,\r\n-      fontSize: \"11px\",\r\n-      color: \"#b8b8bb\",\r\n-    }),\r\n-  };\r\n-  const MultiValueContainer = (props) => {\r\n-    return (\r\n-      <div className={hideOptions ? \"show-count-select\" : \"\"}>\r\n-        <components.MultiValueContainer {...props} />\r\n-\r\n-        {hideOptions && value.length > 1 ? (\r\n-          <span className=\"count-select\">{value.length}</span>\r\n-        ) : null}\r\n-      </div>\r\n-    );\r\n-  };\r\n-  const ClearIndicator = (props) => {\r\n-    return (\r\n-      <div className=\"clear-indicators\">\r\n-        <components.ClearIndicator {...props} />\r\n-      </div>\r\n-    );\r\n-  };\r\n-  const refMessgs = useRef(null);\r\n-  useOutsideAlerter(refMessgs, () => {\r\n-    const cpElement = { ...element };\r\n-    cpElement.infoBull = false;\r\n-    setElement(cpElement);\r\n-  });\r\n   return (\r\n-    <GroupInput className={`select-multi-values ${error ? \"form-error\" : \"\"}`}>\r\n-      {label ? (\r\n-        <label>\r\n-          {label} {props.required ? <i>*</i> : null}\r\n-          {infoLabel ? <span className=\"info-label\">{infoLabel}</span> : null}\r\n-        </label>\r\n-      ) : null}\r\n+    <div className=\"App\">\r\n       <Select\r\n-        closeMenuOnSelect={false}\r\n-        isMulti={false}\r\n-        placeholder={placeholder}\r\n-        components={{\r\n-          Option,\r\n-          MultiValue,\r\n-          Placeholder,\r\n-          MultiValueContainer,\r\n-          ClearIndicator,\r\n-        }}\r\n-        className=\"react-select__container\"\r\n+        defaultValue={selectedOption}\r\n+        onChange={setSelectedOption}\r\n         options={options}\r\n-        hideSelectedOptions={false}\r\n-        backspaceRemovesValue={false}\r\n-        onChange={(e) => onChangeCallback(e)}\r\n-        styles={customStyles}\r\n-        value={\"value\"}\r\n-        noOptionsMessage={() => \"Aucune donnée\"}\r\n-        classNamePrefix=\"react-select\"\r\n       />\r\n-      {infoBull && (\r\n-          <div className=\"message-infobulle\" ref={refMessgs}>\r\n-            {textInfoBulle}\r\n-          </div>\r\n-        )}\r\n-    </GroupInput>\r\n+    </div>\r\n   );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711323714495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n   { value: 'strawberry', label: 'Strawberry' },\r\n   { value: 'vanilla', label: 'Vanilla' },\r\n ];\r\n \r\n-export default function App() {\r\n+export default function SelectUnivers() {\r\n   const [selectedOption, setSelectedOption] = useState(null);\r\n \r\n   return (\r\n     <div className=\"App\">\r\n"
                },
                {
                    "date": 1711323862498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n   { value: 'strawberry', label: 'Strawberry' },\r\n   { value: 'vanilla', label: 'Vanilla' },\r\n ];\r\n \r\n-export default function SelectUnivers() {\r\n+export default function SelectUnivers( listeunivers) {\r\n+  let options = listeunivers; \r\n   const [selectedOption, setSelectedOption] = useState(null);\r\n \r\n   return (\r\n     <div className=\"App\">\r\n"
                },
                {
                    "date": 1711324626293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n   { value: 'strawberry', label: 'Strawberry' },\r\n   { value: 'vanilla', label: 'Vanilla' },\r\n ];\r\n \r\n-export default function SelectUnivers( listeunivers) {\r\n-  let options = listeunivers; \r\n+export default function SelectUnivers( ) {\r\n+\r\n   const [selectedOption, setSelectedOption] = useState(null);\r\n \r\n   return (\r\n     <div className=\"App\">\r\n"
                }
            ],
            "date": 1711321093614,
            "name": "Commit-0",
            "content": "import React, { useRef } from \"react\";\r\nimport Select, { components } from \"react-select\";\r\nimport { GroupInput } from \"../../assets/styles/adminStyle/adminGlobalStyle\";\r\nimport { useOutsideAlerter } from '../../helper/events';\r\n\r\nconst Option = (props) => (\r\n  <div>\r\n    <components.Option className=\"option-select-check\" {...props}>\r\n      <input type=\"checkbox\" checked={props.isSelected} onChange={() => null} />{\" \"}\r\n      <label>{props.label}</label>\r\n    </components.Option>\r\n  </div>\r\n);\r\n\r\nconst MultiValue = (props) => (\r\n  <components.MultiValue {...props}>\r\n    <span>{props.data.label}</span>\r\n  </components.MultiValue>\r\n);\r\n\r\nconst Placeholder = (props) => {\r\n  return <components.Placeholder {...props} />;\r\n};\r\n\r\nexport default function SelectCat({\r\n  label = null,\r\n  infoLabel = null,\r\n  onChangeCallback,\r\n  className = \"\",\r\n  error = false,\r\n  disabled = false,\r\n  isSearchable = false,\r\n  errorMessage = \"\",\r\n  placeholder = \"\",\r\n  options = [],\r\n  style = {},\r\n  value = [],\r\n  hideOptions = false,\r\n  infoBull = false,\r\n  textInfoBulle = \"\",\r\n  element = false,\r\n  setElement = () => {},\r\n  ...props\r\n}) {\r\n  const customStyles = {\r\n    menu: (provided, state) => ({\r\n      backgroundColor: \"#FFF\",\r\n      borderRadius: \"0 0 15px 15px\",\r\n      position: \"static\",\r\n      width: \"100%\",\r\n      boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n    }),\r\n    menuList: (provided, state) => ({\r\n      maxHeight: \"145px\",\r\n      overflowY: \"auto\",\r\n      paddingBottom: \"4px\",\r\n      paddingTop: \"4px\",\r\n      position: \"relative\",\r\n      scrolling: \"touch\",\r\n      boxSizing: \"border-box\",\r\n      padding: \"10px 20px\",\r\n    }),\r\n    control: (provided, state) => ({\r\n      backgroundColor: \"#f5f5fa\",\r\n      boxShadow: \"0 2px 9px 0 rgba(182, 172, 251, 0.42)\",\r\n      border: \"1px solid transparent\",\r\n      color: \"#000\",\r\n      borderRadius: state.isFocused ? \"20px 20px 0 0\" : \" 20px\",\r\n      minHeight: \"40px\",\r\n      display: \"flex\",\r\n      alignItems: \"flex-start\",\r\n    }),\r\n    indicatorsContainer: (provided, state) => ({\r\n      ...provided,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      transformOrigin: \"center\",\r\n      transform: state.isFocused ? \"rotate(-180deg)\" : \"rotate(0deg)\",\r\n    }),\r\n    valueContainer: (base) => ({\r\n      ...base,\r\n      padding: \"6px 20px\",\r\n    }),\r\n    group: (provided, state) => ({\r\n      padding: \"5px 0\",\r\n    }),\r\n    groupHeading: (provided, state) => ({\r\n      color: \"#000\",\r\n      marginBottom: \"10px\",\r\n      fontSize: \"14px\",\r\n      fontWeight: \"600\",\r\n    }),\r\n\r\n    multiValue: (base) => ({\r\n      ...base,\r\n      borderRadius: \"12px\",\r\n      fontSize: \"10px\",\r\n      color: \"#b8b8bb\",\r\n      padding: \"0 0 0 6px\",\r\n      overflow: \"hidden\",\r\n    }),\r\n\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      fontSize: \"11px\",\r\n      color: \"#b8b8bb\",\r\n    }),\r\n  };\r\n  const MultiValueContainer = (props) => {\r\n    return (\r\n      <div className={hideOptions ? \"show-count-select\" : \"\"}>\r\n        <components.MultiValueContainer {...props} />\r\n\r\n        {hideOptions && value.length > 1 ? (\r\n          <span className=\"count-select\">{value.length}</span>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n  const ClearIndicator = (props) => {\r\n    return (\r\n      <div className=\"clear-indicators\">\r\n        <components.ClearIndicator {...props} />\r\n      </div>\r\n    );\r\n  };\r\n  const refMessgs = useRef(null);\r\n  useOutsideAlerter(refMessgs, () => {\r\n    const cpElement = { ...element };\r\n    cpElement.infoBull = false;\r\n    setElement(cpElement);\r\n  });\r\n  return (\r\n    <GroupInput className={`select-multi-values ${error ? \"form-error\" : \"\"}`}>\r\n      {label ? (\r\n        <label>\r\n          {label} {props.required ? <i>*</i> : null}\r\n          {infoLabel ? <span className=\"info-label\">{infoLabel}</span> : null}\r\n        </label>\r\n      ) : null}\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        isMulti\r\n        placeholder={placeholder}\r\n        components={{\r\n          Option,\r\n          MultiValue,\r\n          Placeholder,\r\n          MultiValueContainer,\r\n          ClearIndicator,\r\n        }}\r\n        className=\"react-select__container\"\r\n        options={options}\r\n        hideSelectedOptions={false}\r\n        backspaceRemovesValue={false}\r\n        onChange={(e) => onChangeCallback(e)}\r\n        styles={customStyles}\r\n        value={value}\r\n        noOptionsMessage={() => \"Aucune donnée\"}\r\n        classNamePrefix=\"react-select\"\r\n      />\r\n      {infoBull && (\r\n          <div className=\"message-infobulle\" ref={refMessgs}>\r\n            {textInfoBulle}\r\n          </div>\r\n        )}\r\n    </GroupInput>\r\n  );\r\n}\r\n"
        }
    ]
}