{
    "sourceFile": "src/views/back/admin/reparateurs.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 30,
            "patches": [
                {
                    "date": 1707087312029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707087480229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -397,9 +397,9 @@\n                 break;\r\n               }\r\n             }\r\n           }\r\n-          console.log(arrayObj);\r\n+   \r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         },\r\n@@ -425,8 +425,9 @@\n             value: o.id,\r\n           });\r\n         }\r\n         setFilter(cpFilter);\r\n+        console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1708465240229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,8 +278,19 @@\n         { value: 0, label: \"En attente\", id: \"EnAttente_radio\" },\r\n         { value: 2, label: \"Hors ligne\", id: \"HorsLigne_radio\" },\r\n       ],\r\n     },\r\n+    bonusReparation: {\r\n+      name: \"bonusrepa\",\r\n+      label: \"Bonus réparation\",\r\n+      required: true,\r\n+      id: \"bonusrepa\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: 1, label: \"Aucune prestation\", id: \"prestation_radio\" },\r\n+        { value: 1, label: \"avec des prestations eligibles\", id: \"sansprestation_radio\" },\r\n+      ],\r\n+    },\r\n     plainPassword: {\r\n       label: \"Mot de passe\",\r\n       name: \"plainPassword\",\r\n       value: \"\",\r\n"
                },
                {
                    "date": 1708465502012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1165,8 +1165,19 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+\r\n+              <RadioButton\r\n+              {...state.bonusReparation}\r\n+              onChange={(val) => {\r\n+                const cpState = { ...state };\r\n+                cpState.bonusReparation.value = val.value;\r\n+                cpState.bonusReparation.error = false;\r\n+                setState(cpState);\r\n+                setMessage(null);\r\n+              }}\r\n+              />\r\n               <div className=\"btns-alings service-btns-action\">\r\n                 <ButtonDef\r\n                   textButton=\"Enregistrer\"\r\n                   spinner={isPending}\r\n"
                },
                {
                    "date": 1708465807128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,16 +281,27 @@\n     },\r\n     bonusReparation: {\r\n       name: \"bonusrepa\",\r\n       label: \"Bonus réparation\",\r\n-      required: true,\r\n+      required: false,\r\n       id: \"bonusrepa\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 1, label: \"Aucune prestation\", id: \"prestation_radio\" },\r\n-        { value: 1, label: \"avec des prestations eligibles\", id: \"sansprestation_radio\" },\r\n+        { value: 1, label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: 1, label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n       ],\r\n     },\r\n+    reparActeur: {\r\n+      name: \"reparacteur\",\r\n+      label: \"Répar'Acteur\",\r\n+      required: false,\r\n+      id: \"reparacteur\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: 1, label: \"aucun label\", id: \"sanslabel_radio\" },\r\n+        { value: 1, label: \"Labellisé\", id: \"reparacteur_radio\" },\r\n+      ],\r\n+    },\r\n     plainPassword: {\r\n       label: \"Mot de passe\",\r\n       name: \"plainPassword\",\r\n       value: \"\",\r\n"
                },
                {
                    "date": 1708465992318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n       required: false,\r\n       id: \"bonusrepa\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 1, label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: 0, label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n         { value: 1, label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n       ],\r\n     },\r\n     reparActeur: {\r\n@@ -296,9 +296,9 @@\n       required: false,\r\n       id: \"reparacteur\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 1, label: \"aucun label\", id: \"sanslabel_radio\" },\r\n+        { value: 0, label: \"aucun label\", id: \"sanslabel_radio\" },\r\n         { value: 1, label: \"Labellisé\", id: \"reparacteur_radio\" },\r\n       ],\r\n     },\r\n     plainPassword: {\r\n@@ -1187,8 +1187,18 @@\n                 setState(cpState);\r\n                 setMessage(null);\r\n               }}\r\n               />\r\n+                <RadioButton\r\n+              {...state.reparActeur}\r\n+              onChange={(val) => {\r\n+                const cpState = { ...state };\r\n+                cpState.reparActeur.value = val.value;\r\n+                cpState.reparActeur.error = false;\r\n+                setState(cpState);\r\n+                setMessage(null);\r\n+              }}\r\n+              />\r\n               <div className=\"btns-alings service-btns-action\">\r\n                 <ButtonDef\r\n                   textButton=\"Enregistrer\"\r\n                   spinner={isPending}\r\n"
                },
                {
                    "date": 1708469157238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,8 +300,29 @@\n         { value: 0, label: \"aucun label\", id: \"sanslabel_radio\" },\r\n         { value: 1, label: \"Labellisé\", id: \"reparacteur_radio\" },\r\n       ],\r\n     },\r\n+    lundimatin: {\r\n+      name: \"Lundimatin\",\r\n+      label: \"Lundi Matin\",\r\n+      required: false,\r\n+      id: \"Lundimatin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    lundiapresmidi: {\r\n+      name: \"Lundiapresmidi\",\r\n+      label: \"Lundi après midi\",\r\n+      required: false,\r\n+      id: \"Lundiapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n     plainPassword: {\r\n       label: \"Mot de passe\",\r\n       name: \"plainPassword\",\r\n       value: \"\",\r\n"
                },
                {
                    "date": 1708469347880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,23 +301,23 @@\n         { value: 1, label: \"Labellisé\", id: \"reparacteur_radio\" },\r\n       ],\r\n     },\r\n     lundimatin: {\r\n-      name: \"Lundimatin\",\r\n+      name: \"lundimatin\",\r\n       label: \"Lundi Matin\",\r\n       required: false,\r\n-      id: \"Lundimatin\",\r\n+      id: \"lundimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n     lundiapresmidi: {\r\n-      name: \"Lundiapresmidi\",\r\n+      name: \"lundiapresmidi\",\r\n       label: \"Lundi après midi\",\r\n       required: false,\r\n-      id: \"Lundiapresmidi\",\r\n+      id: \"lundiapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -1208,9 +1208,9 @@\n                 setState(cpState);\r\n                 setMessage(null);\r\n               }}\r\n               />\r\n-                <RadioButton\r\n+              <RadioButton\r\n               {...state.reparActeur}\r\n               onChange={(val) => {\r\n                 const cpState = { ...state };\r\n                 cpState.reparActeur.value = val.value;\r\n@@ -1218,8 +1218,28 @@\n                 setState(cpState);\r\n                 setMessage(null);\r\n               }}\r\n               />\r\n+               <Input\r\n+                {...state.lundimatin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.lundimatin.value = e.target.value;\r\n+                  cpState.lundimatin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+                <Input\r\n+                {...state.lundiapresmdi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.lundiapresmdi.value = e.target.value;\r\n+                  cpState.lundiapresmdi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n               <div className=\"btns-alings service-btns-action\">\r\n                 <ButtonDef\r\n                   textButton=\"Enregistrer\"\r\n                   spinner={isPending}\r\n"
                },
                {
                    "date": 1708469472199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1229,13 +1229,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n                 <Input\r\n-                {...state.lundiapresmdi}\r\n+                {...state.lundiapresmidi}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.lundiapresmdi.value = e.target.value;\r\n-                  cpState.lundiapresmdi.error = false;\r\n+                  cpState.lundiapresmidi.value = e.target.value;\r\n+                  cpState.lundiapresmidi.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n"
                },
                {
                    "date": 1708470019275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,13 +413,11 @@\n     if ([0, 1, 2].includes(parseInt(filter.status.value))) {\r\n       condition += `&status=${filter.status.value}`;\r\n     }\r\n \r\n-    const cpParamsUrl = `page=${\r\n-      parseInt(pageIndex) + 1\r\n-    }&itemsPerPage=${perPage}&order[${activeSort}]=${\r\n-      switshSort ? \"desc\" : \"asc\"\r\n-    }${condition}`;\r\n+    const cpParamsUrl = `page=${parseInt(pageIndex) + 1\r\n+      }&itemsPerPage=${perPage}&order[${activeSort}]=${switshSort ? \"desc\" : \"asc\"\r\n+      }${condition}`;\r\n \r\n     if (refresh || cpParamsUrl !== paramsUrl) {\r\n       setParamsUrl(cpParamsUrl);\r\n       setUsers(false);\r\n@@ -428,9 +426,9 @@\n         method: \"get\",\r\n         url: `${endPoints.USERS_REPAIRMAN}?${cpParamsUrl}`,\r\n         success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n-          \r\n+\r\n           setUsers(arrayObj);\r\n           setTotalUsers(response.data[\"hydra:totalItems\"] || 0);\r\n           if (defaultUser) {\r\n             for (let i = 0; i < arrayObj.length; i++) {\r\n@@ -440,9 +438,9 @@\n                 break;\r\n               }\r\n             }\r\n           }\r\n-   \r\n+\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         },\r\n@@ -738,10 +736,10 @@\n   const getPathImage = (image) =>\r\n     image.file\r\n       ? URL.createObjectURL(image.file)\r\n       : image.value\r\n-      ? pathImage + image.value\r\n-      : noImage;\r\n+        ? pathImage + image.value\r\n+        : noImage;\r\n \r\n   const setActiveRow = (item = {}) => {\r\n     if (user && parseInt(item.id) === parseInt(user.id)) {\r\n       setUser(false);\r\n@@ -1199,28 +1197,28 @@\n                 }}\r\n               />\r\n \r\n               <RadioButton\r\n-              {...state.bonusReparation}\r\n-              onChange={(val) => {\r\n-                const cpState = { ...state };\r\n-                cpState.bonusReparation.value = val.value;\r\n-                cpState.bonusReparation.error = false;\r\n-                setState(cpState);\r\n-                setMessage(null);\r\n-              }}\r\n+                {...state.bonusReparation}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.bonusReparation.value = val.value;\r\n+                  cpState.bonusReparation.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n               />\r\n               <RadioButton\r\n-              {...state.reparActeur}\r\n-              onChange={(val) => {\r\n-                const cpState = { ...state };\r\n-                cpState.reparActeur.value = val.value;\r\n-                cpState.reparActeur.error = false;\r\n-                setState(cpState);\r\n-                setMessage(null);\r\n-              }}\r\n+                {...state.reparActeur}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.reparActeur.value = val.value;\r\n+                  cpState.reparActeur.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n               />\r\n-               <Input\r\n+              <Input\r\n                 {...state.lundimatin}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.lundimatin.value = e.target.value;\r\n@@ -1228,9 +1226,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-                <Input\r\n+              <Input\r\n                 {...state.lundiapresmidi}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.lundiapresmidi.value = e.target.value;\r\n@@ -1238,8 +1236,129 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+              <Input\r\n+                {...state.mardimatin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.mardimatin.value = e.target.value;\r\n+                  cpState.mardimatin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.mardiapresmidi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.mardiapresmidi.value = e.target.value;\r\n+                  cpState.mardiapresmidi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+             \r\n+              <Input\r\n+                {...state.mercredimatin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.mercredimatin.value = e.target.value;\r\n+                  cpState.mercredimatin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.mercrediapresmidi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.mercrediapresmidi.value = e.target.value;\r\n+                  cpState.mercrediapresmidi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.jeudimatin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.jeudimatin.value = e.target.value;\r\n+                  cpState.jeudimatin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.jeudiapresmidi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.jeudiapresmidi.value = e.target.value;\r\n+                  cpState.jeudiapresmidi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.vendredimatin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.vendredimatin.value = e.target.value;\r\n+                  cpState.vendredimatin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.vendrediapresmidi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.vendrediapresmidi.value = e.target.value;\r\n+                  cpState.vendrediapresmidi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.samedimatin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.samedimatin.value = e.target.value;\r\n+                  cpState.samedimatin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.samediapresmidi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.samediapresmidi.value = e.target.value;\r\n+                  cpState.samediapresmidi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.dimanchematin}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.dimanchematin.value = e.target.value;\r\n+                  cpState.dimanchematin.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.dimancheapresmidi}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.dimancheapresmidi.value = e.target.value;\r\n+                  cpState.dimancheapresmidi.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n               <div className=\"btns-alings service-btns-action\">\r\n                 <ButtonDef\r\n                   textButton=\"Enregistrer\"\r\n                   spinner={isPending}\r\n"
                },
                {
                    "date": 1708470247368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,8 +321,134 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n+    mardimatin: {\r\n+      name: \"mardimatin\",\r\n+      label: \"mardi Matin\",\r\n+      required: false,\r\n+      id: \"mardimatin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    mardiapresmidi: {\r\n+      name: \"mardiapresmidi\",\r\n+      label: \"mardi après midi\",\r\n+      required: false,\r\n+      id: \"mardiapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    mercredimatin: {\r\n+      name: \"mercredimatin\",\r\n+      label: \"mercredi Matin\",\r\n+      required: false,\r\n+      id: \"mercredimatin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    mercrediapresmidi: {\r\n+      name: \"mercrediapresmidi\",\r\n+      label: \"mercredi après midi\",\r\n+      required: false,\r\n+      id: \"mercrediapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    jeudimatin: {\r\n+      name: \"jeudimatin\",\r\n+      label: \"jeudi Matin\",\r\n+      required: false,\r\n+      id: \"jeudimatin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    jeudiapresmidi: {\r\n+      name: \"jeudiapresmidi\",\r\n+      label: \"jeudi après midi\",\r\n+      required: false,\r\n+      id: \"jeudiapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    vendredimatin: {\r\n+      name: \"vendredimatin\",\r\n+      label: \"vendredi Matin\",\r\n+      required: false,\r\n+      id: \"vendredimatin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    vendrediapresmidi: {\r\n+      name: \"vendrediapresmidi\",\r\n+      label: \"vendredi après midi\",\r\n+      required: false,\r\n+      id: \"vendrediapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    samedimatin: {\r\n+      name: \"samedimatin\",\r\n+      label: \"samedi Matin\",\r\n+      required: false,\r\n+      id: \"samedimatin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    samediapresmidi: {\r\n+      name: \"samediapresmidi\",\r\n+      label: \"samedi après midi\",\r\n+      required: false,\r\n+      id: \"samediapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    dimanchematin: {\r\n+      name: \"dimanchematin\",\r\n+      label: \"dimanche Matin\",\r\n+      required: false,\r\n+      id: \"dimanchematin\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    dimancheapresmidi: {\r\n+      name: \"dimancheapresmidi\",\r\n+      label: \"dimanche après midi\",\r\n+      required: false,\r\n+      id: \"dimancheapresmidi\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n     plainPassword: {\r\n       label: \"Mot de passe\",\r\n       name: \"plainPassword\",\r\n       value: \"\",\r\n"
                },
                {
                    "date": 1708470344446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,9 +323,9 @@\n       required: false,\r\n     },\r\n     mardimatin: {\r\n       name: \"mardimatin\",\r\n-      label: \"mardi Matin\",\r\n+      label: \"Mardi Matin\",\r\n       required: false,\r\n       id: \"mardimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -334,9 +334,9 @@\n       required: false,\r\n     },\r\n     mardiapresmidi: {\r\n       name: \"mardiapresmidi\",\r\n-      label: \"mardi après midi\",\r\n+      label: \"Mardi après midi\",\r\n       required: false,\r\n       id: \"mardiapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -344,9 +344,9 @@\n       required: false,\r\n     },\r\n     mercredimatin: {\r\n       name: \"mercredimatin\",\r\n-      label: \"mercredi Matin\",\r\n+      label: \"Mercredi Matin\",\r\n       required: false,\r\n       id: \"mercredimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -355,9 +355,9 @@\n       required: false,\r\n     },\r\n     mercrediapresmidi: {\r\n       name: \"mercrediapresmidi\",\r\n-      label: \"mercredi après midi\",\r\n+      label: \"Mercredi après midi\",\r\n       required: false,\r\n       id: \"mercrediapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -365,9 +365,9 @@\n       required: false,\r\n     },\r\n     jeudimatin: {\r\n       name: \"jeudimatin\",\r\n-      label: \"jeudi Matin\",\r\n+      label: \"Jeudi Matin\",\r\n       required: false,\r\n       id: \"jeudimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -376,9 +376,9 @@\n       required: false,\r\n     },\r\n     jeudiapresmidi: {\r\n       name: \"jeudiapresmidi\",\r\n-      label: \"jeudi après midi\",\r\n+      label: \"Jeudi après midi\",\r\n       required: false,\r\n       id: \"jeudiapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -386,9 +386,9 @@\n       required: false,\r\n     },\r\n     vendredimatin: {\r\n       name: \"vendredimatin\",\r\n-      label: \"vendredi Matin\",\r\n+      label: \"Vendredi Matin\",\r\n       required: false,\r\n       id: \"vendredimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -397,9 +397,9 @@\n       required: false,\r\n     },\r\n     vendrediapresmidi: {\r\n       name: \"vendrediapresmidi\",\r\n-      label: \"vendredi après midi\",\r\n+      label: \"Vendredi après midi\",\r\n       required: false,\r\n       id: \"vendrediapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -407,9 +407,9 @@\n       required: false,\r\n     },\r\n     samedimatin: {\r\n       name: \"samedimatin\",\r\n-      label: \"samedi Matin\",\r\n+      label: \"Samedi Matin\",\r\n       required: false,\r\n       id: \"samedimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -418,9 +418,9 @@\n       required: false,\r\n     },\r\n     samediapresmidi: {\r\n       name: \"samediapresmidi\",\r\n-      label: \"samedi après midi\",\r\n+      label: \"Samedi après midi\",\r\n       required: false,\r\n       id: \"samediapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -428,9 +428,9 @@\n       required: false,\r\n     },\r\n     dimanchematin: {\r\n       name: \"dimanchematin\",\r\n-      label: \"dimanche Matin\",\r\n+      label: \"Dimanche Matin\",\r\n       required: false,\r\n       id: \"dimanchematin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -439,9 +439,9 @@\n       required: false,\r\n     },\r\n     dimancheapresmidi: {\r\n       name: \"dimancheapresmidi\",\r\n-      label: \"dimanche après midi\",\r\n+      label: \"Dimanche après midi\",\r\n       required: false,\r\n       id: \"dimancheapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n"
                },
                {
                    "date": 1708471310433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,11 +297,31 @@\n       id: \"reparacteur\",\r\n       value: \"0\",\r\n       options: [\r\n         { value: 0, label: \"aucun label\", id: \"sanslabel_radio\" },\r\n-        { value: 1, label: \"Labellisé\", id: \"reparacteur_radio\" },\r\n+        { value: 1, label: \"Labelisé\", id: \"reparacteur_radio\" },\r\n       ],\r\n     },\r\n+    boutiqueFermee: {\r\n+      name: \"boutiquefermee\",\r\n+      label: \"Boutique fermée\",\r\n+      required: false,\r\n+      id: \"boutiquefermee\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: 0, label: \"Ouverte\", id: \"boutiqueouverte_radio\" },\r\n+        { value: 1, label: \"Fermée\", id: \"boutiquefermee_radio\" },\r\n+      ],\r\n+    },\r\n+    libelleFermeture: {\r\n+      name: \"libelleFermeture\",\r\n+      label: \"Libellé fermeture\",\r\n+      placeholder: \"Libellé fermeture\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n     lundimatin: {\r\n       name: \"lundimatin\",\r\n       label: \"Lundi Matin\",\r\n       required: false,\r\n@@ -1342,8 +1362,28 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+              <RadioButton\r\n+                {...state.boutiqueFermee}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.boutiqueFermee.value = val.value;\r\n+                  cpState.boutiqueFermee.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+             <Input\r\n+                {...state.libelleFermeture}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.libelleFermeture.value = e.target.value;\r\n+                  cpState.libelleFermeture.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n               <Input\r\n                 {...state.lundimatin}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1708471514391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -322,9 +322,9 @@\n       errorMessage: \"\",\r\n     },\r\n     lundimatin: {\r\n       name: \"lundimatin\",\r\n-      label: \"Lundi Matin\",\r\n+      label: \"Horaire Lundi Matin\",\r\n       required: false,\r\n       id: \"lundimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -333,9 +333,9 @@\n       required: false,\r\n     },\r\n     lundiapresmidi: {\r\n       name: \"lundiapresmidi\",\r\n-      label: \"Lundi après midi\",\r\n+      label: \"Horaire Lundi après midi\",\r\n       required: false,\r\n       id: \"lundiapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -343,9 +343,9 @@\n       required: false,\r\n     },\r\n     mardimatin: {\r\n       name: \"mardimatin\",\r\n-      label: \"Mardi Matin\",\r\n+      label: \"Horaire Mardi Matin\",\r\n       required: false,\r\n       id: \"mardimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -354,9 +354,9 @@\n       required: false,\r\n     },\r\n     mardiapresmidi: {\r\n       name: \"mardiapresmidi\",\r\n-      label: \"Mardi après midi\",\r\n+      label: \"Horaire Mardi après midi\",\r\n       required: false,\r\n       id: \"mardiapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -364,9 +364,9 @@\n       required: false,\r\n     },\r\n     mercredimatin: {\r\n       name: \"mercredimatin\",\r\n-      label: \"Mercredi Matin\",\r\n+      label: \"Horaire Mercredi Matin\",\r\n       required: false,\r\n       id: \"mercredimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -375,9 +375,9 @@\n       required: false,\r\n     },\r\n     mercrediapresmidi: {\r\n       name: \"mercrediapresmidi\",\r\n-      label: \"Mercredi après midi\",\r\n+      label: \"Horaire Mercredi après midi\",\r\n       required: false,\r\n       id: \"mercrediapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -385,9 +385,9 @@\n       required: false,\r\n     },\r\n     jeudimatin: {\r\n       name: \"jeudimatin\",\r\n-      label: \"Jeudi Matin\",\r\n+      label: \"Horaire Jeudi Matin\",\r\n       required: false,\r\n       id: \"jeudimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -396,9 +396,9 @@\n       required: false,\r\n     },\r\n     jeudiapresmidi: {\r\n       name: \"jeudiapresmidi\",\r\n-      label: \"Jeudi après midi\",\r\n+      label: \"Horaire Jeudi après midi\",\r\n       required: false,\r\n       id: \"jeudiapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -406,9 +406,9 @@\n       required: false,\r\n     },\r\n     vendredimatin: {\r\n       name: \"vendredimatin\",\r\n-      label: \"Vendredi Matin\",\r\n+      label: \"Horaire Vendredi Matin\",\r\n       required: false,\r\n       id: \"vendredimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -417,9 +417,9 @@\n       required: false,\r\n     },\r\n     vendrediapresmidi: {\r\n       name: \"vendrediapresmidi\",\r\n-      label: \"Vendredi après midi\",\r\n+      label: \"Horaire Vendredi après midi\",\r\n       required: false,\r\n       id: \"vendrediapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -427,9 +427,9 @@\n       required: false,\r\n     },\r\n     samedimatin: {\r\n       name: \"samedimatin\",\r\n-      label: \"Samedi Matin\",\r\n+      label: \"Horaire Samedi Matin\",\r\n       required: false,\r\n       id: \"samedimatin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -438,9 +438,9 @@\n       required: false,\r\n     },\r\n     samediapresmidi: {\r\n       name: \"samediapresmidi\",\r\n-      label: \"Samedi après midi\",\r\n+      label: \"Horaire Samedi après midi\",\r\n       required: false,\r\n       id: \"samediapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -448,9 +448,9 @@\n       required: false,\r\n     },\r\n     dimanchematin: {\r\n       name: \"dimanchematin\",\r\n-      label: \"Dimanche Matin\",\r\n+      label: \"Horaire Dimanche Matin\",\r\n       required: false,\r\n       id: \"dimanchematin\",\r\n       value: \"\",\r\n       type: \"text\",\r\n@@ -459,9 +459,9 @@\n       required: false,\r\n     },\r\n     dimancheapresmidi: {\r\n       name: \"dimancheapresmidi\",\r\n-      label: \"Dimanche après midi\",\r\n+      label: \"Horaire Dimanche après midi\",\r\n       required: false,\r\n       id: \"dimancheapresmidi\",\r\n       value: \"\",\r\n       error: false,\r\n"
                },
                {
                    "date": 1708471905693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,12 +279,12 @@\n         { value: 2, label: \"Hors ligne\", id: \"HorsLigne_radio\" },\r\n       ],\r\n     },\r\n     bonusReparation: {\r\n-      name: \"bonusrepa\",\r\n+      name: \"bonusreparation\",\r\n       label: \"Bonus réparation\",\r\n       required: false,\r\n-      id: \"bonusrepa\",\r\n+      id: \"bonusreparation\",\r\n       value: \"0\",\r\n       options: [\r\n         { value: 0, label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n         { value: 1, label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n@@ -296,9 +296,9 @@\n       required: false,\r\n       id: \"reparacteur\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 0, label: \"aucun label\", id: \"sanslabel_radio\" },\r\n+        { value: 0, label: \"Aucun label\", id: \"sanslabel_radio\" },\r\n         { value: 1, label: \"Labelisé\", id: \"reparacteur_radio\" },\r\n       ],\r\n     },\r\n     boutiqueFermee: {\r\n@@ -1201,9 +1201,9 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <div className=\"bloc-file-form\">\r\n-                <label>Photo de la société</label>\r\n+                <label>Logo/Photo devanture</label>\r\n                 <div className=\"image-service\">\r\n                   <img src={getPathImage(state.picture)} alt=\"\" />\r\n                   <input\r\n                     type=\"file\"\r\n"
                },
                {
                    "date": 1708599304613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n         { value: 1, label: \"Fermée\", id: \"boutiquefermee_radio\" },\r\n       ],\r\n     },\r\n     libelleFermeture: {\r\n-      name: \"libelleFermeture\",\r\n+      name: \"libellefermeture\",\r\n       label: \"Libellé fermeture\",\r\n       placeholder: \"Libellé fermeture\",\r\n       value: \"\",\r\n       type: \"text\",\r\n"
                },
                {
                    "date": 1708599510201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,13 +331,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    lundiapresmidi: {\r\n-      name: \"lundiapresmidi\",\r\n+    lundiapm: {\r\n+      name: \"lundiapm\",\r\n       label: \"Horaire Lundi après midi\",\r\n       required: false,\r\n-      id: \"lundiapresmidi\",\r\n+      id: \"lundiapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -352,13 +352,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    mardiapresmidi: {\r\n-      name: \"mardiapresmidi\",\r\n+    mardiapm: {\r\n+      name: \"mardiapm\",\r\n       label: \"Horaire Mardi après midi\",\r\n       required: false,\r\n-      id: \"mardiapresmidi\",\r\n+      id: \"mardiapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -373,13 +373,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    mercrediapresmidi: {\r\n-      name: \"mercrediapresmidi\",\r\n+    mercrediapm: {\r\n+      name: \"mercrediapm\",\r\n       label: \"Horaire Mercredi après midi\",\r\n       required: false,\r\n-      id: \"mercrediapresmidi\",\r\n+      id: \"mercrediapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -394,13 +394,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    jeudiapresmidi: {\r\n-      name: \"jeudiapresmidi\",\r\n+    jeudiapm: {\r\n+      name: \"jeudiapm\",\r\n       label: \"Horaire Jeudi après midi\",\r\n       required: false,\r\n-      id: \"jeudiapresmidi\",\r\n+      id: \"jeudiapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -415,13 +415,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    vendrediapresmidi: {\r\n-      name: \"vendrediapresmidi\",\r\n+    vendrediapm: {\r\n+      name: \"vendrediapm\",\r\n       label: \"Horaire Vendredi après midi\",\r\n       required: false,\r\n-      id: \"vendrediapresmidi\",\r\n+      id: \"vendrediapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -436,13 +436,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    samediapresmidi: {\r\n-      name: \"samediapresmidi\",\r\n+    samediapm: {\r\n+      name: \"samediapm\",\r\n       label: \"Horaire Samedi après midi\",\r\n       required: false,\r\n-      id: \"samediapresmidi\",\r\n+      id: \"samediapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -457,13 +457,13 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-    dimancheapresmidi: {\r\n-      name: \"dimancheapresmidi\",\r\n+    dimancheapm: {\r\n+      name: \"dimancheapm\",\r\n       label: \"Horaire Dimanche après midi\",\r\n       required: false,\r\n-      id: \"dimancheapresmidi\",\r\n+      id: \"dimancheapm\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -1393,13 +1393,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.lundiapresmidi}\r\n+                {...state.lundiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.lundiapresmidi.value = e.target.value;\r\n-                  cpState.lundiapresmidi.error = false;\r\n+                  cpState.lundiapm.value = e.target.value;\r\n+                  cpState.lundiapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n@@ -1413,13 +1413,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.mardiapresmidi}\r\n+                {...state.mardiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.mardiapresmidi.value = e.target.value;\r\n-                  cpState.mardiapresmidi.error = false;\r\n+                  cpState.mardiapm.value = e.target.value;\r\n+                  cpState.mardiapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n@@ -1434,13 +1434,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.mercrediapresmidi}\r\n+                {...state.mercrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.mercrediapresmidi.value = e.target.value;\r\n-                  cpState.mercrediapresmidi.error = false;\r\n+                  cpState.mercrediapm.value = e.target.value;\r\n+                  cpState.mercrediapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n@@ -1454,13 +1454,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.jeudiapresmidi}\r\n+                {...state.jeudiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.jeudiapresmidi.value = e.target.value;\r\n-                  cpState.jeudiapresmidi.error = false;\r\n+                  cpState.jeudiapm.value = e.target.value;\r\n+                  cpState.jeudiapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n@@ -1474,13 +1474,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.vendrediapresmidi}\r\n+                {...state.vendrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.vendrediapresmidi.value = e.target.value;\r\n-                  cpState.vendrediapresmidi.error = false;\r\n+                  cpState.vendrediapm.value = e.target.value;\r\n+                  cpState.vendrediapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n@@ -1494,13 +1494,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.samediapresmidi}\r\n+                {...state.samediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.samediapresmidi.value = e.target.value;\r\n-                  cpState.samediapresmidi.error = false;\r\n+                  cpState.samediapm.value = e.target.value;\r\n+                  cpState.samediapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n@@ -1514,13 +1514,13 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.dimancheapresmidi}\r\n+                {...state.dimancheapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.dimancheapresmidi.value = e.target.value;\r\n-                  cpState.dimancheapresmidi.error = false;\r\n+                  cpState.dimancheapm.value = e.target.value;\r\n+                  cpState.dimancheapm.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n"
                },
                {
                    "date": 1708600101442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,10 +285,10 @@\n       required: false,\r\n       id: \"bonusreparation\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 0, label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: 1, label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n       ],\r\n     },\r\n     reparActeur: {\r\n       name: \"reparacteur\",\r\n@@ -296,10 +296,10 @@\n       required: false,\r\n       id: \"reparacteur\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 0, label: \"Aucun label\", id: \"sanslabel_radio\" },\r\n-        { value: 1, label: \"Labelisé\", id: \"reparacteur_radio\" },\r\n+        { value: \"0\", label: \"Aucun label\", id: \"sanslabel_radio\" },\r\n+        { value: \"1\", label: \"Labelisé\", id: \"reparacteur_radio\" },\r\n       ],\r\n     },\r\n     boutiqueFermee: {\r\n       name: \"boutiquefermee\",\r\n@@ -307,10 +307,10 @@\n       required: false,\r\n       id: \"boutiquefermee\",\r\n       value: \"0\",\r\n       options: [\r\n-        { value: 0, label: \"Ouverte\", id: \"boutiqueouverte_radio\" },\r\n-        { value: 1, label: \"Fermée\", id: \"boutiquefermee_radio\" },\r\n+        { value: \"0\", label: \"Ouverte\", id: \"boutiqueouverte_radio\" },\r\n+        { value: \"1\", label: \"Fermée\", id: \"boutiquefermee_radio\" },\r\n       ],\r\n     },\r\n     libelleFermeture: {\r\n       name: \"libellefermeture\",\r\n"
                },
                {
                    "date": 1708624013120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1442 @@\n+import moment from \"moment\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Link, useLocation } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAdminContent,\r\n+  ServicesTableStyle,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import {\r\n+  AddGreenIcon,\r\n+  DeleteIcon,\r\n+  EditIcon,\r\n+} from \"../../../assets/styles/icons\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import FilterDefault from \"../../../components/filterDefault\";\r\n+import { ButtonDef, Input } from \"../../../components/ui\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import Select from \"../../../components/ui-elements/select\";\r\n+import Tableau from \"../../../components/ui-elements/tableau\";\r\n+import endPoints from \"../../../config/endPoints\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import connector from \"../../../connector\";\r\n+import { clearErrors, validForm } from \"../../../helper/form\";\r\n+import { getDigits, getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import { pathImage, STRIPE_PUBLIC_KEY } from \"../../../vars\";\r\n+import InputAddress from \"../../../components/ui-elements/inputAddress\";\r\n+import InputAddressBilling from \"../../../components/ui-elements/inputAddressBilling\";\r\n+\r\n+export default function Reparateurs() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const query = new URLSearchParams(useLocation().search);\r\n+  const [defaultUser, setDefaultUser] = useState(\r\n+    query.get(\"user\") ? parseInt(query.get(\"user\")) : \"\"\r\n+  );\r\n+  const perPageDesMob = isMobile ? 8 : 20;\r\n+  const [users, setUsers] = useState(false);\r\n+  const [totalUsers, setTotalUsers] = useState(0);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [user, setUser] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [activeSort, setActiveSort] = useState(\"enterprise\");\r\n+  const [switshSort, setSwitshSort] = useState(false);\r\n+  const [paramsUrl, setParamsUrl] = useState(\"\");\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [state, setState] = useState({\r\n+    id: { value: null, name: \"id\" },\r\n+    stripeAccountToken: { value: null, name: \"stripeAccountToken\" },\r\n+    stripePersonToken: { value: null, name: \"stripePersonToken\" },\r\n+    gender: {\r\n+      name: \"gender\",\r\n+      label: \"Civilité\",\r\n+      required: true,\r\n+      id: \"civilite\",\r\n+      value: \"\",\r\n+      options: [\r\n+        { value: \"Monsieur\", label: \"Monsieur\", id: \"monsieur_radio\" },\r\n+        { value: \"Madame\", label: \"Madame\", id: \"madame_radio\" },\r\n+      ],\r\n+    },\r\n+    firstName: {\r\n+      name: \"firstName\",\r\n+      label: \"Prénom\",\r\n+      placeholder: \"Prénom\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    lastName: {\r\n+      name: \"lastName\",\r\n+      label: \"Nom\",\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    phone: {\r\n+      name: \"phone\",\r\n+      label: \"Téléphone\",\r\n+      placeholder: \"Téléphone\",\r\n+      value: \"\",\r\n+      type: \"phone\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    email: {\r\n+      name: \"email\",\r\n+      label: \"Email\",\r\n+      placeholder: \"Email\",\r\n+      value: \"\",\r\n+      type: \"email\",\r\n+      error: false,\r\n+      errorEmail: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n+    enterprise: {\r\n+      name: \"enterprise\",\r\n+      label: \"Entreprise\",\r\n+      placeholder: \"Entreprise\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    TypeCompany: {\r\n+      name: \"TypeCompany\",\r\n+      label: \"Type d'entreprise\",\r\n+      placeholder: \"Type d'entreprise\",\r\n+      height: \"53px\",\r\n+      options: [],\r\n+      value: \"\",\r\n+      className: \"select-uppercase\",\r\n+      required: true,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    SIRET: {\r\n+      label: \"N° Siret\",\r\n+      name: \"SIRET\",\r\n+      placeholder: \"Siret\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      autocomplete: false,\r\n+      empty: true,\r\n+      isNumber: true,\r\n+    },\r\n+    intraCommunityVAT: {\r\n+      name: \"intraCommunityVAT\",\r\n+      label: \"N° TVA intracommunautaire\",\r\n+      placeholder: \"FR12345678912\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    address: {\r\n+      name: \"address\",\r\n+      label: \"Adresse de la vitrine\",\r\n+      placeholder: \"Adresse de la vitrine\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      autoComplete: \"false\",\r\n+    },\r\n+    latitude: {\r\n+      name: \"latitude\",\r\n+      value: \"\",\r\n+    },\r\n+    longitude: {\r\n+      name: \"longitude\",\r\n+      value: \"\",\r\n+    },\r\n+    placeId: {\r\n+      name: \"placeId\",\r\n+      value: \"\",\r\n+    },\r\n+    additionalAddress: {\r\n+      name: \"additionalAddress\",\r\n+      label: \"Complément d’adresse\",\r\n+      placeholder: \"Complément d’adresse\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    postalCode: {\r\n+      label: \"Code postal\",\r\n+      name: \"postalCode\",\r\n+      placeholder: \"Code postal\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      disabled: true,\r\n+      editable: true,\r\n+      empty: true,\r\n+      size: 5,\r\n+      isNumber: true,\r\n+    },\r\n+    city: {\r\n+      label: \"Ville\",\r\n+      name: \"city\",\r\n+      placeholder: \"Ville\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      disabled: true,\r\n+      editable: true,\r\n+    },\r\n+    addressBilling: {\r\n+      name: \"addressBilling\",\r\n+      label: \"Adresse de facturation\",\r\n+      placeholder: \"Adresse de facturation\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      autoComplete: \"false\",\r\n+    },\r\n+    latitudeBilling: {\r\n+      name: \"latitudeBilling\",\r\n+      value: \"\",\r\n+    },\r\n+    longitudeBilling: {\r\n+      name: \"longitudeBilling\",\r\n+      value: \"\",\r\n+    },\r\n+    placeIdBilling: {\r\n+      name: \"placeIdBilling\",\r\n+      value: \"\",\r\n+    },\r\n+    additionalAddressBilling: {\r\n+      name: \"additionalAddressBilling\",\r\n+      label: \"Complément d’adresse\",\r\n+      placeholder: \"Complément d’adresse\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    postalCodeBilling: {\r\n+      name: \"postalCodeBilling\",\r\n+      label: \"Code postal\",\r\n+      placeholder: \"Code postal\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      disabled: true,\r\n+      editable: true,\r\n+      empty: true,\r\n+      size: 5,\r\n+      isNumber: true,\r\n+    },\r\n+    cityBilling: {\r\n+      name: \"cityBilling\",\r\n+      label: \"Ville\",\r\n+      placeholder: \"Ville\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      disabled: true,\r\n+      editable: true,\r\n+    },\r\n+    status: {\r\n+      name: \"status\",\r\n+      label: \"Statut\",\r\n+      required: true,\r\n+      id: \"statut\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: 1, label: \"En ligne\", id: \"EnLigne_radio\" },\r\n+        { value: 0, label: \"En attente\", id: \"EnAttente_radio\" },\r\n+        { value: 2, label: \"Hors ligne\", id: \"HorsLigne_radio\" },\r\n+      ],\r\n+    },\r\n+    bonusReparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    reparActeur: {\r\n+      name: \"reparacteur\",\r\n+      label: \"Répar'Acteur\",\r\n+      required: false,\r\n+      id: \"reparacteur\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucun label\", id: \"sanslabel_radio\" },\r\n+        { value: \"1\", label: \"Labelisé\", id: \"reparacteur_radio\" },\r\n+      ],\r\n+    },\r\n+    boutiqueFermee: {\r\n+      name: \"boutiquefermee\",\r\n+      label: \"Boutique fermée\",\r\n+      required: false,\r\n+      id: \"boutiquefermee\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Ouverte\", id: \"boutiqueouverte_radio\" },\r\n+        { value: \"1\", label: \"Fermée\", id: \"boutiquefermee_radio\" },\r\n+      ],\r\n+    },\r\n+    libelleFermeture: {\r\n+      name: \"libellefermeture\",\r\n+      label: \"Libellé fermeture\",\r\n+      placeholder: \"Libellé fermeture\",\r\n+      value: \"\",\r\n+      type: \"text\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    \r\n+    lundiapm: {\r\n+      name: \"lundiapm\",\r\n+      label: \"Lundi \",\r\n+      required: false,\r\n+      id: \"lundiapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+ \r\n+    mardiapm: {\r\n+      name: \"mardiapm\",\r\n+      label: \"Mardi \",\r\n+      required: false,\r\n+      id: \"mardiapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+\r\n+    mercrediapm: {\r\n+      name: \"mercrediapm\",\r\n+      label: \"Mercredi \",\r\n+      required: false,\r\n+      id: \"mercrediapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+ \r\n+    jeudiapm: {\r\n+      name: \"jeudiapm\",\r\n+      label: \"Jeudi \",\r\n+      required: false,\r\n+      id: \"jeudiapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+ \r\n+    vendrediapm: {\r\n+      name: \"vendrediapm\",\r\n+      label: \"Vendredi \",\r\n+      required: false,\r\n+      id: \"vendrediapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+   \r\n+    samediapm: {\r\n+      name: \"samediapm\",\r\n+      label: \"Samedi \",\r\n+      required: false,\r\n+      id: \"samediapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+  \r\n+    dimancheapm: {\r\n+      name: \"dimancheapm\",\r\n+      label: \"Dimanche \",\r\n+      required: false,\r\n+      id: \"dimancheapm\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    plainPassword: {\r\n+      label: \"Mot de passe\",\r\n+      name: \"plainPassword\",\r\n+      value: \"\",\r\n+      type: \"password\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      autocomplete: \"new-password\",\r\n+      required: false,\r\n+      setType: (e) => {\r\n+        const cpState = { ...state };\r\n+        cpState.plainPassword.type = e;\r\n+        setState(cpState);\r\n+      },\r\n+    },\r\n+    confirmPassword: {\r\n+      label: \"Confirmation du mot de passe\",\r\n+      name: \"confirmPassword\",\r\n+      value: \"\",\r\n+      type: \"password\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      autocomplete: \"new-password\",\r\n+      required: false,\r\n+      notice:\r\n+        \"Votre mot de passe doit contenir au moins 8 caractères, 1 majuscule, 1 chiffre et 1 caractère spécial.\",\r\n+      setType: (e) => {\r\n+        const cpState = { ...state };\r\n+        cpState.confirmPassword.type = e;\r\n+        setState(cpState);\r\n+      },\r\n+    },\r\n+  });\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [placeBillingIsSelected, setPlaceBillingIsSelected] = useState(false);\r\n+  const [filter, setFilter] = useState({\r\n+    repairMan: {\r\n+      placeholder: \"Réparateurs\",\r\n+      options: [{ label: \"Tous les réparateurs\", value: \"\" }],\r\n+      value: \"\",\r\n+      isSearchable: true,\r\n+    },\r\n+    status: {\r\n+      placeholder: \"Statut\",\r\n+      options: [\r\n+        { label: \"Tous les statuts\", value: \"\" },\r\n+        { label: \"En ligne\", value: 1 },\r\n+        { label: \"En attente\", value: 0 },\r\n+        { label: \"Hors ligne\", value: 2 },\r\n+      ],\r\n+      value: \"\",\r\n+      isSearchable: true,\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    getTypeCompanies();\r\n+    getRepairMans();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    getUsers(false);\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [pageIndex, perPage, activeSort, switshSort, filter]);\r\n+\r\n+  const [stripe, setStripe] = useState(null);\r\n+  useEffect(() => {\r\n+    const script = document.createElement(\"script\");\r\n+    script.src = \"https://js.stripe.com/v3/\";\r\n+    script.async = true;\r\n+    script.addEventListener(\"load\", function () {\r\n+      setStripe(window.Stripe(STRIPE_PUBLIC_KEY));\r\n+    });\r\n+    document.body.appendChild(script);\r\n+  }, []);\r\n+\r\n+  const getUsers = (refresh = false) => {\r\n+    let condition = \"\";\r\n+    if (defaultUser) {\r\n+      condition = `&active=${defaultUser}`;\r\n+    }\r\n+\r\n+    if (filter.repairMan.value) {\r\n+      condition += `&id=${filter.repairMan.value}`;\r\n+    }\r\n+\r\n+    if ([0, 1, 2].includes(parseInt(filter.status.value))) {\r\n+      condition += `&status=${filter.status.value}`;\r\n+    }\r\n+\r\n+    const cpParamsUrl = `page=${parseInt(pageIndex) + 1\r\n+      }&itemsPerPage=${perPage}&order[${activeSort}]=${switshSort ? \"desc\" : \"asc\"\r\n+      }${condition}`;\r\n+\r\n+    if (refresh || cpParamsUrl !== paramsUrl) {\r\n+      setParamsUrl(cpParamsUrl);\r\n+      setUsers(false);\r\n+      setTotalUsers(0);\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.USERS_REPAIRMAN}?${cpParamsUrl}`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+\r\n+          setUsers(arrayObj);\r\n+          setTotalUsers(response.data[\"hydra:totalItems\"] || 0);\r\n+          if (defaultUser) {\r\n+            for (let i = 0; i < arrayObj.length; i++) {\r\n+              if (arrayObj[i].id === defaultUser) {\r\n+                setDefaultUser(null);\r\n+                setActiveUser(arrayObj[i]);\r\n+                break;\r\n+              }\r\n+            }\r\n+          }\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const getRepairMans = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.repairMan.options = [\r\n+          { label: \"Tous les réparateurs\", value: \"\" },\r\n+        ];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let o = arrayObj[i];\r\n+          cpFilter.repairMan.options.push({\r\n+            label: o.enterprise,\r\n+            value: o.id,\r\n+          });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+        console.log(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getTypeCompanies = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.TYPE_COMPANIES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpState = { ...state };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({\r\n+            label: arrayObj[i].name,\r\n+            value: arrayObj[i].id,\r\n+            requireNoTva: arrayObj[i].requireNoTva,\r\n+          });\r\n+        }\r\n+        cpState.TypeCompany.options = options;\r\n+        setState(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const submitUser = async (validation) => {\r\n+    if (!validation.rawData.stripeAccountToken) {\r\n+      if (!stripe) {\r\n+        msgErrors({ msg: \"Stripe.js has not yet loaded.\" });\r\n+      }\r\n+\r\n+      const accountResult = await stripe.createToken(\"account\", {\r\n+        business_type: \"company\",\r\n+        company: {\r\n+          name: validation.rawData.enterprise,\r\n+          address: {\r\n+            city: validation.rawData.cityBilling,\r\n+            postal_code: validation.rawData.postalCodeBilling,\r\n+            line1: validation.rawData.addressBilling,\r\n+            line2: validation.rawData.additionalAddressBilling,\r\n+          },\r\n+          phone: validation.rawData.phone || \"0000000000\",\r\n+          registration_number: validation.rawData.SIRET,\r\n+          tax_id: validation.rawData.intraCommunityVAT,\r\n+        },\r\n+        tos_shown_and_accepted: true,\r\n+      });\r\n+\r\n+      const personResult = await stripe.createToken(\"person\", {\r\n+        person: {\r\n+          first_name: validation.rawData.firstName,\r\n+          last_name: validation.rawData.lastName,\r\n+          address: {\r\n+            city: validation.rawData.cityBilling,\r\n+            postal_code: validation.rawData.postalCodeBilling,\r\n+            line1: validation.rawData.addressBilling,\r\n+            line2: validation.rawData.additionalAddressBilling,\r\n+          },\r\n+        },\r\n+      });\r\n+\r\n+      if (accountResult.token && personResult.token) {\r\n+        validation.rawData.stripeAccountToken = accountResult.token.id;\r\n+        validation.rawData.stripePersonToken = personResult.token.id;\r\n+      }\r\n+    }\r\n+\r\n+    if (validation.rawData.stripeAccountToken) {\r\n+      validation.rawData.TypeCompany = `${endPoints.TYPE_COMPANY}/${validation.rawData.TypeCompany}`;\r\n+      connector({\r\n+        method: user.id ? \"put\" : \"post\",\r\n+        url: user.id\r\n+          ? `${endPoints.USER_ADMIN_REPAIRMAN}/${user.id}`\r\n+          : endPoints.USER_ADMIN_REPAIRMAN,\r\n+        data: validation.rawData,\r\n+        success: (response) => {\r\n+          setIsPending(false);\r\n+          getUsers(true);\r\n+          getRepairMans();\r\n+          setActiveUser({\r\n+            ...response.data,\r\n+            TypeCompany: { id: state.TypeCompany.value },\r\n+          });\r\n+          msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    } else {\r\n+      msgErrors({ msg: \"Le token stripe n'a pas pu être creer.\" });\r\n+    }\r\n+  };\r\n+\r\n+  const saveUser = () => {\r\n+    if (!isPending) {\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      const validation = validForm(state);\r\n+      setState(validation.form);\r\n+      if (\r\n+        validation.form.phone.value?.length &&\r\n+        validation.form.phone.value.length != 10\r\n+      ) {\r\n+        msgErrors({\r\n+          msg: \"Le numéro de téléphone doit contenir 10 chiffres.\",\r\n+        });\r\n+        validation.form.phone.error = true;\r\n+        setState(validation.form);\r\n+        return;\r\n+      }\r\n+      if (validation.form.SIRET.value.length !== 14) {\r\n+        msgErrors({\r\n+          msg: \"Le siret doit avoir 14 caractères\",\r\n+        });\r\n+        validation.form.SIRET.error = true;\r\n+        setState(validation.form);\r\n+        return;\r\n+      }\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          address: true,\r\n+          msg: \"Veuillez sélectionner une adresse dans la liste.\",\r\n+        });\r\n+        return;\r\n+      } else if (\r\n+        validation.form.address.error ||\r\n+        validation.form.postalCode.error ||\r\n+        validation.form.city.error\r\n+      ) {\r\n+        setState(validation.form);\r\n+        msgErrors({\r\n+          msg: \"Veuillez sélectionner une adresse valide dans la liste.\",\r\n+        });\r\n+        return;\r\n+      }\r\n+      if (!placeBillingIsSelected) {\r\n+        msgErrors({\r\n+          addressBilling: true,\r\n+          msg: \"Veuillez sélectionner une adresse de facturation dans la liste.\",\r\n+        });\r\n+        return;\r\n+      } else if (\r\n+        validation.form.addressBilling.error ||\r\n+        validation.form.postalCodeBilling.error ||\r\n+        validation.form.cityBilling.error\r\n+      ) {\r\n+        setState(validation.form);\r\n+        msgErrors({\r\n+          msg: \"Veuillez sélectionner une adresse facturation valide dans la liste.\",\r\n+        });\r\n+        return;\r\n+      }\r\n+      if (\r\n+        validation.form.postalCode.error ||\r\n+        validation.form.postalCode.value.length !== 5\r\n+      ) {\r\n+        msgErrors({\r\n+          msg: \"Le code postal doit avoir 5 caractères\",\r\n+        });\r\n+        validation.form.postalCode.error = true;\r\n+        setState(validation.form);\r\n+        return;\r\n+      }\r\n+      if (\r\n+        validation.form.postalCodeBilling.error ||\r\n+        validation.form.postalCodeBilling.value.length !== 5\r\n+      ) {\r\n+        msgErrors({\r\n+          msg: \"Le code postal doit avoir 5 caractères\",\r\n+        });\r\n+        validation.form.postalCodeBilling.error = true;\r\n+        setState(validation.form);\r\n+        return;\r\n+      }\r\n+      if (validation.form.email.errorEmail) {\r\n+        msgErrors({\r\n+          msg: \"Adresse email invalide.\",\r\n+        });\r\n+        validation.form.email.error = true;\r\n+        setState(validation.form);\r\n+        return;\r\n+      }\r\n+      const plainPassword = state.plainPassword.value;\r\n+      const confirmPassword = state.confirmPassword.value;\r\n+      if (plainPassword?.length || confirmPassword?.length) {\r\n+        let errorMsg = \"\";\r\n+        if (plainPassword && validation.form.plainPassword.error) {\r\n+          errorMsg = \"Veuillez respecter les conditions du mot de passe\";\r\n+        } else if (plainPassword !== confirmPassword) {\r\n+          errorMsg = \"Le mot de passe et sa confirmation ne sont pas identique\";\r\n+          validation.form.confirmPassword.error = true;\r\n+        }\r\n+        if (errorMsg) {\r\n+          msgErrors({\r\n+            msg: errorMsg,\r\n+          });\r\n+          setState(validation.form);\r\n+          return;\r\n+        }\r\n+      }\r\n+\r\n+      if (validation.valid) {\r\n+        setIsPending(true);\r\n+        if (state.picture.file) {\r\n+          saveImage(validation);\r\n+        } else {\r\n+          submitUser(validation);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          msg: \"Vérifier si les champs obligatoires sont remplis.\",\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (validation) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", state.picture.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        const cpState = { ...state };\r\n+        cpState.picture.file = null;\r\n+        cpState.picture.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        validation.rawData.picture = response.data.contentUrl;\r\n+        submitUser(validation);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpState = { ...state };\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    if (e.address !== undefined) cpState.address.error = e.address;\r\n+    if (e.addressBilling !== undefined)\r\n+      cpState.addressBilling.error = e.addressBilling;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    scrollTop(\"side-content-dashboard\");\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const setActiveRow = (item = {}) => {\r\n+    if (user && parseInt(item.id) === parseInt(user.id)) {\r\n+      setUser(false);\r\n+    } else {\r\n+      setActiveUser(item);\r\n+    }\r\n+  };\r\n+\r\n+  const setActiveUser = (item = {}) => {\r\n+    setMessage(null);\r\n+    const cpState = { ...clearErrors(state) };\r\n+    if (!item.id) {\r\n+      for (const key in cpState) {\r\n+        item[key] = \"\";\r\n+      }\r\n+      item = {\r\n+        ...item,\r\n+        id: null,\r\n+        gender: \"Monsieur\",\r\n+        status: 0,\r\n+        createdAt: null,\r\n+        totalCommands: 0,\r\n+        totalDevis: 0,\r\n+        plainPassword: \"\",\r\n+        confirmPassword: \"\",\r\n+      };\r\n+    } else {\r\n+      item.plainPassword = \"\";\r\n+      item.confirmPassword = \"\";\r\n+    }\r\n+    for (const key in item) {\r\n+      if (cpState[key]) {\r\n+        if (key === \"TypeCompany\") {\r\n+          cpState.TypeCompany.value = item.TypeCompany.id\r\n+            ? item.TypeCompany.id\r\n+            : null;\r\n+          cpState.intraCommunityVAT.required = item.TypeCompany.id\r\n+            ? item.TypeCompany.requireNoTva\r\n+            : true;\r\n+        } else {\r\n+          cpState[key].value = item[key];\r\n+        }\r\n+      }\r\n+    }\r\n+    setState(cpState);\r\n+    setUser(item);\r\n+    if (cpState.address.value) {\r\n+      setPlaceIsSelected(true);\r\n+    }\r\n+    if (cpState.addressBilling.value) {\r\n+      setPlaceBillingIsSelected(true);\r\n+    }\r\n+  };\r\n+\r\n+  const getUrlCommands = (item) => {\r\n+    return `${ROUTES.COMMANDES.url}?repairman=${item.id}`;\r\n+  };\r\n+\r\n+  const getUrlDevis = (item) => {\r\n+    return `${ROUTES.DEVIS.url}?repairman=${item.id}`;\r\n+  };\r\n+\r\n+  const rowRender = (row) => (\r\n+    <div\r\n+      onClick={() => setActiveRow(row)}\r\n+      className={`divTableRow ${user.id === row.id ? \"active\" : \"\"}`}\r\n+      key={`row-${row.id}`}\r\n+    >\r\n+      <div className=\"divTableCell\">\r\n+        {isMobile && <label> Société: </label>}\r\n+        <div>{row.enterprise}</div>\r\n+      </div>\r\n+      <div className=\"divTableCell\">\r\n+        {isMobile && <label> Nom: </label>}\r\n+        <div>{row.lastName}</div>\r\n+      </div>\r\n+      <div className=\"divTableCell\">\r\n+        {isMobile && <label> Prénom: </label>}\r\n+        <div>{row.firstName}</div>\r\n+      </div>\r\n+      <div className=\"divTableCell\">\r\n+        {isMobile && <label> Email: </label>}\r\n+        <div>{row.email}</div>\r\n+      </div>\r\n+      <div className=\"divTableCell\">\r\n+        {isMobile && <label> Statut: </label>}\r\n+        <div>\r\n+          {row.status == 1 && \"En ligne\"}\r\n+          {row.status == 0 && \"En attente\"}\r\n+          {row.status == 2 && \"Hors ligne\"}\r\n+        </div>\r\n+      </div>\r\n+      <div className=\"divTableCell\">\r\n+        {isMobile && <label> Date dernière connexion: </label>}\r\n+        <div>\r\n+          {row.lastConnection\r\n+            ? moment(row.lastConnection).format(\"DD/MM/YYYY\")\r\n+            : \"\"}\r\n+        </div>\r\n+      </div>\r\n+      {isMobile && (\r\n+        <div className=\"divTableCell m-action\">\r\n+          <div>\r\n+            <ButtonDef textButton=\"Editer\" onClick={() => setActiveUser(row)} />\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+\r\n+  const closeSide = () => {\r\n+    setUser(false);\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent\r\n+          titlePage=\"Réparateurs\"\r\n+          className=\"reparateur-admin-page\"\r\n+        >\r\n+          <ServicesTableStyle>\r\n+            <ButtonDef\r\n+              spinner={isPending}\r\n+              onClick={() => setActiveUser({})}\r\n+              textButton={\r\n+                <>\r\n+                  {!isMobile && \"Nouveau réparateur\"}\r\n+                  <AddGreenIcon />{\" \"}\r\n+                </>\r\n+              }\r\n+              className=\"btn-add\"\r\n+            />\r\n+\r\n+            <FilterDefault\r\n+              className=\"services-filter\"\r\n+              formItems={\r\n+                <>\r\n+                  <Select\r\n+                    {...filter.repairMan}\r\n+                    onChange={(e) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.repairMan.value = e.value;\r\n+                      cpFilter.activeElement = \"repairMan\";\r\n+                      setFilter(cpFilter);\r\n+                      setPageIndex(0);\r\n+                    }}\r\n+                  />\r\n+                  <Select\r\n+                    {...filter.status}\r\n+                    onChange={(e) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.status.value = e.value;\r\n+                      cpFilter.activeElement = \"status\";\r\n+                      setFilter(cpFilter);\r\n+                      setPageIndex(0);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              }\r\n+            />\r\n+\r\n+            <Tableau\r\n+              columns={[\r\n+                { key: \"enterprise\", text: \"Société\", sort: true },\r\n+                { key: \"lastName\", text: \"Nom\", sort: true },\r\n+                { key: \"firstName\", text: \"Prénom\", sort: true },\r\n+                { key: \"email\", text: \"Email\", sort: true },\r\n+                { key: \"status\", text: \"Statut\", sort: true },\r\n+                {\r\n+                  key: \"lastConnection\",\r\n+                  text: \"Date dernière connexion\",\r\n+                  sort: false,\r\n+                },\r\n+              ]}\r\n+              perPage={perPage}\r\n+              setPerPage={setPerPage}\r\n+              pageIndex={pageIndex}\r\n+              setPageIndex={setPageIndex}\r\n+              activeSort={activeSort}\r\n+              setActiveSort={setActiveSort}\r\n+              switshSort={switshSort}\r\n+              setSwitshSort={setSwitshSort}\r\n+              pagination={true}\r\n+              totalItemsLength={totalUsers}\r\n+              data={users}\r\n+              rowRender={rowRender}\r\n+            />\r\n+          </ServicesTableStyle>\r\n+        </DashboardContent>\r\n+\r\n+        {user ? (\r\n+          <DashboardSide className=\"reparateur-side\">\r\n+            {isMobile && (\r\n+              <>\r\n+                <CloseButton\r\n+                  onClick={(e) => {\r\n+                    e.preventDefault();\r\n+                    closeSide();\r\n+                  }}\r\n+                />\r\n+              </>\r\n+            )}\r\n+            <h2 className=\"title-side-dashboard\">\r\n+              {user.id ? `${user.enterprise}` : \"Nouveau réparateur\"}\r\n+            </h2>\r\n+            <Form>\r\n+              {message && message.type && message.text ? (\r\n+                <span\r\n+                  className={\r\n+                    message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                  }\r\n+                >\r\n+                  {message.text}\r\n+                </span>\r\n+              ) : (\r\n+                \"\"\r\n+              )}\r\n+              <Input\r\n+                {...state.SIRET}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  if (e.target.value.length <= 14)\r\n+                    cpState.SIRET.value = e.target.value;\r\n+                  cpState.SIRET.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.enterprise}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.enterprise.value = e.target.value;\r\n+                  cpState.enterprise.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <InputAddress\r\n+                state={state}\r\n+                setState={setState}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                message={message}\r\n+                setMessage={setMessage}\r\n+              />\r\n+              <Input\r\n+                {...state.additionalAddress}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.additionalAddress.value = e.target.value;\r\n+                  cpState.additionalAddress.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.postalCode}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.postalCode.value = e.target.value;\r\n+                  cpState.postalCode.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.city}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.city.value = e.target.value;\r\n+                  cpState.city.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <InputAddressBilling\r\n+                state={state}\r\n+                setState={setState}\r\n+                placeIsSelected={placeBillingIsSelected}\r\n+                setPlaceIsSelected={setPlaceBillingIsSelected}\r\n+                message={message}\r\n+                setMessage={setMessage}\r\n+              />\r\n+              <Input\r\n+                {...state.additionalAddressBilling}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.additionalAddressBilling.value = e.target.value;\r\n+                  cpState.additionalAddressBilling.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.postalCodeBilling}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.postalCodeBilling.value = e.target.value;\r\n+                  cpState.postalCodeBilling.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.cityBilling}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.cityBilling.value = e.target.value;\r\n+                  cpState.cityBilling.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <div className=\"bloc-file-form\">\r\n+                <label>Logo/Photo devanture</label>\r\n+                <div className=\"image-service\">\r\n+                  <img src={getPathImage(state.picture)} alt=\"\" />\r\n+                  <input\r\n+                    type=\"file\"\r\n+                    name=\"file\"\r\n+                    id=\"uploadImage\"\r\n+                    accept=\"image/png, image/jpeg\"\r\n+                    onChange={(e) => {\r\n+                      const cpState = { ...state };\r\n+                      cpState.picture.file = e.target.files[0];\r\n+                      e.target.value = \"\";\r\n+                      setState(cpState);\r\n+                    }}\r\n+                  />\r\n+                  <div className=\"btns-file\">\r\n+                    <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                      <EditIcon />\r\n+                    </label>\r\n+                    {state.picture.value || state.picture.file ? (\r\n+                      <button\r\n+                        className=\"delete-image\"\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          const cpState = { ...state };\r\n+                          cpState.picture.value = \"\";\r\n+                          cpState.picture.file = null;\r\n+                          setState(cpState);\r\n+                        }}\r\n+                      >\r\n+                        <DeleteIcon />\r\n+                      </button>\r\n+                    ) : (\r\n+                      \"\"\r\n+                    )}\r\n+                  </div>\r\n+                </div>\r\n+              </div>\r\n+              <Select\r\n+                {...state.TypeCompany}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.TypeCompany.value = e.value;\r\n+                  cpState.TypeCompany.error = false;\r\n+                  cpState.intraCommunityVAT.required = e.requireNoTva;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.intraCommunityVAT}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.intraCommunityVAT.value = e.target.value;\r\n+                  cpState.intraCommunityVAT.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <RadioButton\r\n+                {...state.gender}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.gender.value = val.value;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.lastName}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.lastName.value = e.target.value;\r\n+                  cpState.lastName.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.firstName}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.firstName.value = e.target.value;\r\n+                  cpState.firstName.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.phone}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.phone.value = getDigits(e.target.value);\r\n+                  cpState.phone.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.email}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.email.value = e.target.value;\r\n+                  cpState.email.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+\r\n+              <Input\r\n+                className=\"password-input\"\r\n+                {...state.plainPassword}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.plainPassword.value = e.target.value;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                className=\"password-input\"\r\n+                {...state.confirmPassword}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.confirmPassword.value = e.target.value;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+\r\n+              <RadioButton\r\n+                {...state.status}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.status.value = val.value;\r\n+                  cpState.status.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+\r\n+              <RadioButton\r\n+                {...state.bonusReparation}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.bonusReparation.value = val.value;\r\n+                  cpState.bonusReparation.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <RadioButton\r\n+                {...state.reparActeur}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.reparActeur.value = val.value;\r\n+                  cpState.reparActeur.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <RadioButton\r\n+                {...state.boutiqueFermee}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.boutiqueFermee.value = val.value;\r\n+                  cpState.boutiqueFermee.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+             <Input\r\n+                {...state.libelleFermeture}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.libelleFermeture.value = e.target.value;\r\n+                  cpState.libelleFermeture.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              \r\n+              <Input\r\n+                {...state.lundiapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.lundiapm.value = e.target.value;\r\n+                  cpState.lundiapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+            \r\n+              <Input\r\n+                {...state.mardiapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.mardiapm.value = e.target.value;\r\n+                  cpState.mardiapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+           \r\n+              <Input\r\n+                {...state.mercrediapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.mercrediapm.value = e.target.value;\r\n+                  cpState.mercrediapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              \r\n+              <Input\r\n+                {...state.jeudiapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.jeudiapm.value = e.target.value;\r\n+                  cpState.jeudiapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+             \r\n+              <Input\r\n+                {...state.vendrediapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.vendrediapm.value = e.target.value;\r\n+                  cpState.vendrediapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+            \r\n+              <Input\r\n+                {...state.samediapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.samediapm.value = e.target.value;\r\n+                  cpState.samediapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <Input\r\n+                {...state.dimancheapm}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.dimancheapm.value = e.target.value;\r\n+                  cpState.dimancheapm.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n+              <div className=\"btns-alings service-btns-action\">\r\n+                <ButtonDef\r\n+                  textButton=\"Enregistrer\"\r\n+                  spinner={isPending}\r\n+                  onClick={(e) => {\r\n+                    e.preventDefault();\r\n+                    saveUser();\r\n+                  }}\r\n+                />\r\n+              </div>\r\n+              {state.id.value ? (\r\n+                <>\r\n+                  <div className=\"date-create\">\r\n+                    créé le :{\" \"}\r\n+                    {user.createdAt\r\n+                      ? moment(user.createdAt).format(\"DD/MM/YYYY\")\r\n+                      : \"\"}\r\n+                  </div>\r\n+\r\n+                  <div className=\"link-voir\">\r\n+                    <div>\r\n+                      <Link to={getUrlCommands(user)}>\r\n+                        {\" \"}\r\n+                        {user.totalCommands} commande(s) lié(s){\" \"}\r\n+                      </Link>\r\n+                    </div>\r\n+                    <div>\r\n+                      <Link to={getUrlDevis(user)}>\r\n+                        {\" \"}\r\n+                        {user.totalDevis} devis lié(s){\" \"}\r\n+                      </Link>\r\n+                    </div>\r\n+                  </div>\r\n+                </>\r\n+              ) : (\r\n+                <div className=\"link-voir\">\r\n+                  <div>\r\n+                    <Link to={\"#\"}> 0 commande(s) lié(s) </Link>\r\n+                  </div>\r\n+                  <div>\r\n+                    <Link to={\"#\"}> 0 devis lié(s) </Link>\r\n+                  </div>\r\n+                </div>\r\n+              )}\r\n+            </Form>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708626663085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,20 @@\n       errorEmail: false,\r\n       errorMessage: \"\",\r\n       required: true,\r\n     },\r\n+    evaluation: {\r\n+      name: \"evaluation\",\r\n+      label: \"Evaluation\",\r\n+      placeholder: \"evaluation\",\r\n+      value: \"\",\r\n+      type: \"integer\",\r\n+      error: false,\r\n+      errorEvaluation: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    \r\n     picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n     enterprise: {\r\n       name: \"enterprise\",\r\n       label: \"Entreprise\",\r\n@@ -1241,1520 +1253,19 @@\n                 }}\r\n               />\r\n \r\n               <Input\r\n-                className=\"password-input\"\r\n-                {...state.plainPassword}\r\n+                {...state.evaluation}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.plainPassword.value = e.target.value;\r\n+                  cpState.evaluation.value = e.target.value;\r\n+                  cpState.evaluation.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-              <Input\r\n-                className=\"password-input\"\r\n-                {...state.confirmPassword}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.confirmPassword.value = e.target.value;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n \r\n-              <RadioButton\r\n-                {...state.status}\r\n-                onChange={(val) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.status.value = val.value;\r\n-                  cpState.status.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-\r\n-              <RadioButton\r\n-                {...state.bonusReparation}\r\n-                onChange={(val) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.bonusReparation.value = val.value;\r\n-                  cpState.bonusReparation.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <RadioButton\r\n-                {...state.reparActeur}\r\n-                onChange={(val) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.reparActeur.value = val.value;\r\n-                  cpState.reparActeur.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <RadioButton\r\n-                {...state.boutiqueFermee}\r\n-                onChange={(val) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.boutiqueFermee.value = val.value;\r\n-                  cpState.boutiqueFermee.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-             <Input\r\n-                {...state.libelleFermeture}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.libelleFermeture.value = e.target.value;\r\n-                  cpState.libelleFermeture.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              \r\n               <Input\r\n-                {...state.lundiapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.lundiapm.value = e.target.value;\r\n-                  cpState.lundiapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-            \r\n-              <Input\r\n-                {...state.mardiapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.mardiapm.value = e.target.value;\r\n-                  cpState.mardiapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-           \r\n-              <Input\r\n-                {...state.mercrediapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.mercrediapm.value = e.target.value;\r\n-                  cpState.mercrediapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              \r\n-              <Input\r\n-                {...state.jeudiapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.jeudiapm.value = e.target.value;\r\n-                  cpState.jeudiapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-             \r\n-              <Input\r\n-                {...state.vendrediapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.vendrediapm.value = e.target.value;\r\n-                  cpState.vendrediapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-            \r\n-              <Input\r\n-                {...state.samediapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.samediapm.value = e.target.value;\r\n-                  cpState.samediapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.dimancheapm}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.dimancheapm.value = e.target.value;\r\n-                  cpState.dimancheapm.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <div className=\"btns-alings service-btns-action\">\r\n-                <ButtonDef\r\n-                  textButton=\"Enregistrer\"\r\n-                  spinner={isPending}\r\n-                  onClick={(e) => {\r\n-                    e.preventDefault();\r\n-                    saveUser();\r\n-                  }}\r\n-                />\r\n-              </div>\r\n-              {state.id.value ? (\r\n-                <>\r\n-                  <div className=\"date-create\">\r\n-                    créé le :{\" \"}\r\n-                    {user.createdAt\r\n-                      ? moment(user.createdAt).format(\"DD/MM/YYYY\")\r\n-                      : \"\"}\r\n-                  </div>\r\n-\r\n-                  <div className=\"link-voir\">\r\n-                    <div>\r\n-                      <Link to={getUrlCommands(user)}>\r\n-                        {\" \"}\r\n-                        {user.totalCommands} commande(s) lié(s){\" \"}\r\n-                      </Link>\r\n-                    </div>\r\n-                    <div>\r\n-                      <Link to={getUrlDevis(user)}>\r\n-                        {\" \"}\r\n-                        {user.totalDevis} devis lié(s){\" \"}\r\n-                      </Link>\r\n-                    </div>\r\n-                  </div>\r\n-                </>\r\n-              ) : (\r\n-                <div className=\"link-voir\">\r\n-                  <div>\r\n-                    <Link to={\"#\"}> 0 commande(s) lié(s) </Link>\r\n-                  </div>\r\n-                  <div>\r\n-                    <Link to={\"#\"}> 0 devis lié(s) </Link>\r\n-                  </div>\r\n-                </div>\r\n-              )}\r\n-            </Form>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n-import moment from \"moment\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Link, useLocation } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAdminContent,\r\n-  ServicesTableStyle,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import {\r\n-  AddGreenIcon,\r\n-  DeleteIcon,\r\n-  EditIcon,\r\n-} from \"../../../assets/styles/icons\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import FilterDefault from \"../../../components/filterDefault\";\r\n-import { ButtonDef, Input } from \"../../../components/ui\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import Select from \"../../../components/ui-elements/select\";\r\n-import Tableau from \"../../../components/ui-elements/tableau\";\r\n-import endPoints from \"../../../config/endPoints\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import connector from \"../../../connector\";\r\n-import { clearErrors, validForm } from \"../../../helper/form\";\r\n-import { getDigits, getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import { pathImage, STRIPE_PUBLIC_KEY } from \"../../../vars\";\r\n-import InputAddress from \"../../../components/ui-elements/inputAddress\";\r\n-import InputAddressBilling from \"../../../components/ui-elements/inputAddressBilling\";\r\n-\r\n-export default function Reparateurs() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const query = new URLSearchParams(useLocation().search);\r\n-  const [defaultUser, setDefaultUser] = useState(\r\n-    query.get(\"user\") ? parseInt(query.get(\"user\")) : \"\"\r\n-  );\r\n-  const perPageDesMob = isMobile ? 8 : 20;\r\n-  const [users, setUsers] = useState(false);\r\n-  const [totalUsers, setTotalUsers] = useState(0);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [user, setUser] = useState(false);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [activeSort, setActiveSort] = useState(\"enterprise\");\r\n-  const [switshSort, setSwitshSort] = useState(false);\r\n-  const [paramsUrl, setParamsUrl] = useState(\"\");\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [state, setState] = useState({\r\n-    id: { value: null, name: \"id\" },\r\n-    stripeAccountToken: { value: null, name: \"stripeAccountToken\" },\r\n-    stripePersonToken: { value: null, name: \"stripePersonToken\" },\r\n-    gender: {\r\n-      name: \"gender\",\r\n-      label: \"Civilité\",\r\n-      required: true,\r\n-      id: \"civilite\",\r\n-      value: \"\",\r\n-      options: [\r\n-        { value: \"Monsieur\", label: \"Monsieur\", id: \"monsieur_radio\" },\r\n-        { value: \"Madame\", label: \"Madame\", id: \"madame_radio\" },\r\n-      ],\r\n-    },\r\n-    firstName: {\r\n-      name: \"firstName\",\r\n-      label: \"Prénom\",\r\n-      placeholder: \"Prénom\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-    },\r\n-    lastName: {\r\n-      name: \"lastName\",\r\n-      label: \"Nom\",\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-    },\r\n-    phone: {\r\n-      name: \"phone\",\r\n-      label: \"Téléphone\",\r\n-      placeholder: \"Téléphone\",\r\n-      value: \"\",\r\n-      type: \"phone\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    email: {\r\n-      name: \"email\",\r\n-      label: \"Email\",\r\n-      placeholder: \"Email\",\r\n-      value: \"\",\r\n-      type: \"email\",\r\n-      error: false,\r\n-      errorEmail: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-    },\r\n-    picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n-    enterprise: {\r\n-      name: \"enterprise\",\r\n-      label: \"Entreprise\",\r\n-      placeholder: \"Entreprise\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-    },\r\n-    TypeCompany: {\r\n-      name: \"TypeCompany\",\r\n-      label: \"Type d'entreprise\",\r\n-      placeholder: \"Type d'entreprise\",\r\n-      height: \"53px\",\r\n-      options: [],\r\n-      value: \"\",\r\n-      className: \"select-uppercase\",\r\n-      required: true,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    SIRET: {\r\n-      label: \"N° Siret\",\r\n-      name: \"SIRET\",\r\n-      placeholder: \"Siret\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      autocomplete: false,\r\n-      empty: true,\r\n-      isNumber: true,\r\n-    },\r\n-    intraCommunityVAT: {\r\n-      name: \"intraCommunityVAT\",\r\n-      label: \"N° TVA intracommunautaire\",\r\n-      placeholder: \"FR12345678912\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-    },\r\n-    address: {\r\n-      name: \"address\",\r\n-      label: \"Adresse de la vitrine\",\r\n-      placeholder: \"Adresse de la vitrine\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      autoComplete: \"false\",\r\n-    },\r\n-    latitude: {\r\n-      name: \"latitude\",\r\n-      value: \"\",\r\n-    },\r\n-    longitude: {\r\n-      name: \"longitude\",\r\n-      value: \"\",\r\n-    },\r\n-    placeId: {\r\n-      name: \"placeId\",\r\n-      value: \"\",\r\n-    },\r\n-    additionalAddress: {\r\n-      name: \"additionalAddress\",\r\n-      label: \"Complément d’adresse\",\r\n-      placeholder: \"Complément d’adresse\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    postalCode: {\r\n-      label: \"Code postal\",\r\n-      name: \"postalCode\",\r\n-      placeholder: \"Code postal\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      disabled: true,\r\n-      editable: true,\r\n-      empty: true,\r\n-      size: 5,\r\n-      isNumber: true,\r\n-    },\r\n-    city: {\r\n-      label: \"Ville\",\r\n-      name: \"city\",\r\n-      placeholder: \"Ville\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      disabled: true,\r\n-      editable: true,\r\n-    },\r\n-    addressBilling: {\r\n-      name: \"addressBilling\",\r\n-      label: \"Adresse de facturation\",\r\n-      placeholder: \"Adresse de facturation\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      autoComplete: \"false\",\r\n-    },\r\n-    latitudeBilling: {\r\n-      name: \"latitudeBilling\",\r\n-      value: \"\",\r\n-    },\r\n-    longitudeBilling: {\r\n-      name: \"longitudeBilling\",\r\n-      value: \"\",\r\n-    },\r\n-    placeIdBilling: {\r\n-      name: \"placeIdBilling\",\r\n-      value: \"\",\r\n-    },\r\n-    additionalAddressBilling: {\r\n-      name: \"additionalAddressBilling\",\r\n-      label: \"Complément d’adresse\",\r\n-      placeholder: \"Complément d’adresse\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    postalCodeBilling: {\r\n-      name: \"postalCodeBilling\",\r\n-      label: \"Code postal\",\r\n-      placeholder: \"Code postal\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      disabled: true,\r\n-      editable: true,\r\n-      empty: true,\r\n-      size: 5,\r\n-      isNumber: true,\r\n-    },\r\n-    cityBilling: {\r\n-      name: \"cityBilling\",\r\n-      label: \"Ville\",\r\n-      placeholder: \"Ville\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      disabled: true,\r\n-      editable: true,\r\n-    },\r\n-    status: {\r\n-      name: \"status\",\r\n-      label: \"Statut\",\r\n-      required: true,\r\n-      id: \"statut\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: 1, label: \"En ligne\", id: \"EnLigne_radio\" },\r\n-        { value: 0, label: \"En attente\", id: \"EnAttente_radio\" },\r\n-        { value: 2, label: \"Hors ligne\", id: \"HorsLigne_radio\" },\r\n-      ],\r\n-    },\r\n-    bonusReparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    reparActeur: {\r\n-      name: \"reparacteur\",\r\n-      label: \"Répar'Acteur\",\r\n-      required: false,\r\n-      id: \"reparacteur\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucun label\", id: \"sanslabel_radio\" },\r\n-        { value: \"1\", label: \"Labelisé\", id: \"reparacteur_radio\" },\r\n-      ],\r\n-    },\r\n-    boutiqueFermee: {\r\n-      name: \"boutiquefermee\",\r\n-      label: \"Boutique fermée\",\r\n-      required: false,\r\n-      id: \"boutiquefermee\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Ouverte\", id: \"boutiqueouverte_radio\" },\r\n-        { value: \"1\", label: \"Fermée\", id: \"boutiquefermee_radio\" },\r\n-      ],\r\n-    },\r\n-    libelleFermeture: {\r\n-      name: \"libellefermeture\",\r\n-      label: \"Libellé fermeture\",\r\n-      placeholder: \"Libellé fermeture\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    lundimatin: {\r\n-      name: \"lundimatin\",\r\n-      label: \"Horaire Lundi Matin\",\r\n-      required: false,\r\n-      id: \"lundimatin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    lundiapm: {\r\n-      name: \"lundiapm\",\r\n-      label: \"Horaire Lundi après midi\",\r\n-      required: false,\r\n-      id: \"lundiapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    mardimatin: {\r\n-      name: \"mardimatin\",\r\n-      label: \"Horaire Mardi Matin\",\r\n-      required: false,\r\n-      id: \"mardimatin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    mardiapm: {\r\n-      name: \"mardiapm\",\r\n-      label: \"Horaire Mardi après midi\",\r\n-      required: false,\r\n-      id: \"mardiapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    mercredimatin: {\r\n-      name: \"mercredimatin\",\r\n-      label: \"Horaire Mercredi Matin\",\r\n-      required: false,\r\n-      id: \"mercredimatin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    mercrediapm: {\r\n-      name: \"mercrediapm\",\r\n-      label: \"Horaire Mercredi après midi\",\r\n-      required: false,\r\n-      id: \"mercrediapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    jeudimatin: {\r\n-      name: \"jeudimatin\",\r\n-      label: \"Horaire Jeudi Matin\",\r\n-      required: false,\r\n-      id: \"jeudimatin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    jeudiapm: {\r\n-      name: \"jeudiapm\",\r\n-      label: \"Horaire Jeudi après midi\",\r\n-      required: false,\r\n-      id: \"jeudiapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    vendredimatin: {\r\n-      name: \"vendredimatin\",\r\n-      label: \"Horaire Vendredi Matin\",\r\n-      required: false,\r\n-      id: \"vendredimatin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    vendrediapm: {\r\n-      name: \"vendrediapm\",\r\n-      label: \"Horaire Vendredi après midi\",\r\n-      required: false,\r\n-      id: \"vendrediapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    samedimatin: {\r\n-      name: \"samedimatin\",\r\n-      label: \"Horaire Samedi Matin\",\r\n-      required: false,\r\n-      id: \"samedimatin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    samediapm: {\r\n-      name: \"samediapm\",\r\n-      label: \"Horaire Samedi après midi\",\r\n-      required: false,\r\n-      id: \"samediapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    dimanchematin: {\r\n-      name: \"dimanchematin\",\r\n-      label: \"Horaire Dimanche Matin\",\r\n-      required: false,\r\n-      id: \"dimanchematin\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    dimancheapm: {\r\n-      name: \"dimancheapm\",\r\n-      label: \"Horaire Dimanche après midi\",\r\n-      required: false,\r\n-      id: \"dimancheapm\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    plainPassword: {\r\n-      label: \"Mot de passe\",\r\n-      name: \"plainPassword\",\r\n-      value: \"\",\r\n-      type: \"password\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      autocomplete: \"new-password\",\r\n-      required: false,\r\n-      setType: (e) => {\r\n-        const cpState = { ...state };\r\n-        cpState.plainPassword.type = e;\r\n-        setState(cpState);\r\n-      },\r\n-    },\r\n-    confirmPassword: {\r\n-      label: \"Confirmation du mot de passe\",\r\n-      name: \"confirmPassword\",\r\n-      value: \"\",\r\n-      type: \"password\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      autocomplete: \"new-password\",\r\n-      required: false,\r\n-      notice:\r\n-        \"Votre mot de passe doit contenir au moins 8 caractères, 1 majuscule, 1 chiffre et 1 caractère spécial.\",\r\n-      setType: (e) => {\r\n-        const cpState = { ...state };\r\n-        cpState.confirmPassword.type = e;\r\n-        setState(cpState);\r\n-      },\r\n-    },\r\n-  });\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [placeBillingIsSelected, setPlaceBillingIsSelected] = useState(false);\r\n-  const [filter, setFilter] = useState({\r\n-    repairMan: {\r\n-      placeholder: \"Réparateurs\",\r\n-      options: [{ label: \"Tous les réparateurs\", value: \"\" }],\r\n-      value: \"\",\r\n-      isSearchable: true,\r\n-    },\r\n-    status: {\r\n-      placeholder: \"Statut\",\r\n-      options: [\r\n-        { label: \"Tous les statuts\", value: \"\" },\r\n-        { label: \"En ligne\", value: 1 },\r\n-        { label: \"En attente\", value: 0 },\r\n-        { label: \"Hors ligne\", value: 2 },\r\n-      ],\r\n-      value: \"\",\r\n-      isSearchable: true,\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    getTypeCompanies();\r\n-    getRepairMans();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    getUsers(false);\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [pageIndex, perPage, activeSort, switshSort, filter]);\r\n-\r\n-  const [stripe, setStripe] = useState(null);\r\n-  useEffect(() => {\r\n-    const script = document.createElement(\"script\");\r\n-    script.src = \"https://js.stripe.com/v3/\";\r\n-    script.async = true;\r\n-    script.addEventListener(\"load\", function () {\r\n-      setStripe(window.Stripe(STRIPE_PUBLIC_KEY));\r\n-    });\r\n-    document.body.appendChild(script);\r\n-  }, []);\r\n-\r\n-  const getUsers = (refresh = false) => {\r\n-    let condition = \"\";\r\n-    if (defaultUser) {\r\n-      condition = `&active=${defaultUser}`;\r\n-    }\r\n-\r\n-    if (filter.repairMan.value) {\r\n-      condition += `&id=${filter.repairMan.value}`;\r\n-    }\r\n-\r\n-    if ([0, 1, 2].includes(parseInt(filter.status.value))) {\r\n-      condition += `&status=${filter.status.value}`;\r\n-    }\r\n-\r\n-    const cpParamsUrl = `page=${parseInt(pageIndex) + 1\r\n-      }&itemsPerPage=${perPage}&order[${activeSort}]=${switshSort ? \"desc\" : \"asc\"\r\n-      }${condition}`;\r\n-\r\n-    if (refresh || cpParamsUrl !== paramsUrl) {\r\n-      setParamsUrl(cpParamsUrl);\r\n-      setUsers(false);\r\n-      setTotalUsers(0);\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.USERS_REPAIRMAN}?${cpParamsUrl}`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n-          setUsers(arrayObj);\r\n-          setTotalUsers(response.data[\"hydra:totalItems\"] || 0);\r\n-          if (defaultUser) {\r\n-            for (let i = 0; i < arrayObj.length; i++) {\r\n-              if (arrayObj[i].id === defaultUser) {\r\n-                setDefaultUser(null);\r\n-                setActiveUser(arrayObj[i]);\r\n-                break;\r\n-              }\r\n-            }\r\n-          }\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const getRepairMans = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.repairMan.options = [\r\n-          { label: \"Tous les réparateurs\", value: \"\" },\r\n-        ];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let o = arrayObj[i];\r\n-          cpFilter.repairMan.options.push({\r\n-            label: o.enterprise,\r\n-            value: o.id,\r\n-          });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-        console.log(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getTypeCompanies = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.TYPE_COMPANIES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpState = { ...state };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({\r\n-            label: arrayObj[i].name,\r\n-            value: arrayObj[i].id,\r\n-            requireNoTva: arrayObj[i].requireNoTva,\r\n-          });\r\n-        }\r\n-        cpState.TypeCompany.options = options;\r\n-        setState(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const submitUser = async (validation) => {\r\n-    if (!validation.rawData.stripeAccountToken) {\r\n-      if (!stripe) {\r\n-        msgErrors({ msg: \"Stripe.js has not yet loaded.\" });\r\n-      }\r\n-\r\n-      const accountResult = await stripe.createToken(\"account\", {\r\n-        business_type: \"company\",\r\n-        company: {\r\n-          name: validation.rawData.enterprise,\r\n-          address: {\r\n-            city: validation.rawData.cityBilling,\r\n-            postal_code: validation.rawData.postalCodeBilling,\r\n-            line1: validation.rawData.addressBilling,\r\n-            line2: validation.rawData.additionalAddressBilling,\r\n-          },\r\n-          phone: validation.rawData.phone || \"0000000000\",\r\n-          registration_number: validation.rawData.SIRET,\r\n-          tax_id: validation.rawData.intraCommunityVAT,\r\n-        },\r\n-        tos_shown_and_accepted: true,\r\n-      });\r\n-\r\n-      const personResult = await stripe.createToken(\"person\", {\r\n-        person: {\r\n-          first_name: validation.rawData.firstName,\r\n-          last_name: validation.rawData.lastName,\r\n-          address: {\r\n-            city: validation.rawData.cityBilling,\r\n-            postal_code: validation.rawData.postalCodeBilling,\r\n-            line1: validation.rawData.addressBilling,\r\n-            line2: validation.rawData.additionalAddressBilling,\r\n-          },\r\n-        },\r\n-      });\r\n-\r\n-      if (accountResult.token && personResult.token) {\r\n-        validation.rawData.stripeAccountToken = accountResult.token.id;\r\n-        validation.rawData.stripePersonToken = personResult.token.id;\r\n-      }\r\n-    }\r\n-\r\n-    if (validation.rawData.stripeAccountToken) {\r\n-      validation.rawData.TypeCompany = `${endPoints.TYPE_COMPANY}/${validation.rawData.TypeCompany}`;\r\n-      connector({\r\n-        method: user.id ? \"put\" : \"post\",\r\n-        url: user.id\r\n-          ? `${endPoints.USER_ADMIN_REPAIRMAN}/${user.id}`\r\n-          : endPoints.USER_ADMIN_REPAIRMAN,\r\n-        data: validation.rawData,\r\n-        success: (response) => {\r\n-          setIsPending(false);\r\n-          getUsers(true);\r\n-          getRepairMans();\r\n-          setActiveUser({\r\n-            ...response.data,\r\n-            TypeCompany: { id: state.TypeCompany.value },\r\n-          });\r\n-          msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    } else {\r\n-      msgErrors({ msg: \"Le token stripe n'a pas pu être creer.\" });\r\n-    }\r\n-  };\r\n-\r\n-  const saveUser = () => {\r\n-    if (!isPending) {\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      const validation = validForm(state);\r\n-      setState(validation.form);\r\n-      if (\r\n-        validation.form.phone.value?.length &&\r\n-        validation.form.phone.value.length != 10\r\n-      ) {\r\n-        msgErrors({\r\n-          msg: \"Le numéro de téléphone doit contenir 10 chiffres.\",\r\n-        });\r\n-        validation.form.phone.error = true;\r\n-        setState(validation.form);\r\n-        return;\r\n-      }\r\n-      if (validation.form.SIRET.value.length !== 14) {\r\n-        msgErrors({\r\n-          msg: \"Le siret doit avoir 14 caractères\",\r\n-        });\r\n-        validation.form.SIRET.error = true;\r\n-        setState(validation.form);\r\n-        return;\r\n-      }\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          address: true,\r\n-          msg: \"Veuillez sélectionner une adresse dans la liste.\",\r\n-        });\r\n-        return;\r\n-      } else if (\r\n-        validation.form.address.error ||\r\n-        validation.form.postalCode.error ||\r\n-        validation.form.city.error\r\n-      ) {\r\n-        setState(validation.form);\r\n-        msgErrors({\r\n-          msg: \"Veuillez sélectionner une adresse valide dans la liste.\",\r\n-        });\r\n-        return;\r\n-      }\r\n-      if (!placeBillingIsSelected) {\r\n-        msgErrors({\r\n-          addressBilling: true,\r\n-          msg: \"Veuillez sélectionner une adresse de facturation dans la liste.\",\r\n-        });\r\n-        return;\r\n-      } else if (\r\n-        validation.form.addressBilling.error ||\r\n-        validation.form.postalCodeBilling.error ||\r\n-        validation.form.cityBilling.error\r\n-      ) {\r\n-        setState(validation.form);\r\n-        msgErrors({\r\n-          msg: \"Veuillez sélectionner une adresse facturation valide dans la liste.\",\r\n-        });\r\n-        return;\r\n-      }\r\n-      if (\r\n-        validation.form.postalCode.error ||\r\n-        validation.form.postalCode.value.length !== 5\r\n-      ) {\r\n-        msgErrors({\r\n-          msg: \"Le code postal doit avoir 5 caractères\",\r\n-        });\r\n-        validation.form.postalCode.error = true;\r\n-        setState(validation.form);\r\n-        return;\r\n-      }\r\n-      if (\r\n-        validation.form.postalCodeBilling.error ||\r\n-        validation.form.postalCodeBilling.value.length !== 5\r\n-      ) {\r\n-        msgErrors({\r\n-          msg: \"Le code postal doit avoir 5 caractères\",\r\n-        });\r\n-        validation.form.postalCodeBilling.error = true;\r\n-        setState(validation.form);\r\n-        return;\r\n-      }\r\n-      if (validation.form.email.errorEmail) {\r\n-        msgErrors({\r\n-          msg: \"Adresse email invalide.\",\r\n-        });\r\n-        validation.form.email.error = true;\r\n-        setState(validation.form);\r\n-        return;\r\n-      }\r\n-      const plainPassword = state.plainPassword.value;\r\n-      const confirmPassword = state.confirmPassword.value;\r\n-      if (plainPassword?.length || confirmPassword?.length) {\r\n-        let errorMsg = \"\";\r\n-        if (plainPassword && validation.form.plainPassword.error) {\r\n-          errorMsg = \"Veuillez respecter les conditions du mot de passe\";\r\n-        } else if (plainPassword !== confirmPassword) {\r\n-          errorMsg = \"Le mot de passe et sa confirmation ne sont pas identique\";\r\n-          validation.form.confirmPassword.error = true;\r\n-        }\r\n-        if (errorMsg) {\r\n-          msgErrors({\r\n-            msg: errorMsg,\r\n-          });\r\n-          setState(validation.form);\r\n-          return;\r\n-        }\r\n-      }\r\n-\r\n-      if (validation.valid) {\r\n-        setIsPending(true);\r\n-        if (state.picture.file) {\r\n-          saveImage(validation);\r\n-        } else {\r\n-          submitUser(validation);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          msg: \"Vérifier si les champs obligatoires sont remplis.\",\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (validation) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", state.picture.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        const cpState = { ...state };\r\n-        cpState.picture.file = null;\r\n-        cpState.picture.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        validation.rawData.picture = response.data.contentUrl;\r\n-        submitUser(validation);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpState = { ...state };\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    if (e.address !== undefined) cpState.address.error = e.address;\r\n-    if (e.addressBilling !== undefined)\r\n-      cpState.addressBilling.error = e.addressBilling;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    scrollTop(\"side-content-dashboard\");\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const setActiveRow = (item = {}) => {\r\n-    if (user && parseInt(item.id) === parseInt(user.id)) {\r\n-      setUser(false);\r\n-    } else {\r\n-      setActiveUser(item);\r\n-    }\r\n-  };\r\n-\r\n-  const setActiveUser = (item = {}) => {\r\n-    setMessage(null);\r\n-    const cpState = { ...clearErrors(state) };\r\n-    if (!item.id) {\r\n-      for (const key in cpState) {\r\n-        item[key] = \"\";\r\n-      }\r\n-      item = {\r\n-        ...item,\r\n-        id: null,\r\n-        gender: \"Monsieur\",\r\n-        status: 0,\r\n-        createdAt: null,\r\n-        totalCommands: 0,\r\n-        totalDevis: 0,\r\n-        plainPassword: \"\",\r\n-        confirmPassword: \"\",\r\n-      };\r\n-    } else {\r\n-      item.plainPassword = \"\";\r\n-      item.confirmPassword = \"\";\r\n-    }\r\n-    for (const key in item) {\r\n-      if (cpState[key]) {\r\n-        if (key === \"TypeCompany\") {\r\n-          cpState.TypeCompany.value = item.TypeCompany.id\r\n-            ? item.TypeCompany.id\r\n-            : null;\r\n-          cpState.intraCommunityVAT.required = item.TypeCompany.id\r\n-            ? item.TypeCompany.requireNoTva\r\n-            : true;\r\n-        } else {\r\n-          cpState[key].value = item[key];\r\n-        }\r\n-      }\r\n-    }\r\n-    setState(cpState);\r\n-    setUser(item);\r\n-    if (cpState.address.value) {\r\n-      setPlaceIsSelected(true);\r\n-    }\r\n-    if (cpState.addressBilling.value) {\r\n-      setPlaceBillingIsSelected(true);\r\n-    }\r\n-  };\r\n-\r\n-  const getUrlCommands = (item) => {\r\n-    return `${ROUTES.COMMANDES.url}?repairman=${item.id}`;\r\n-  };\r\n-\r\n-  const getUrlDevis = (item) => {\r\n-    return `${ROUTES.DEVIS.url}?repairman=${item.id}`;\r\n-  };\r\n-\r\n-  const rowRender = (row) => (\r\n-    <div\r\n-      onClick={() => setActiveRow(row)}\r\n-      className={`divTableRow ${user.id === row.id ? \"active\" : \"\"}`}\r\n-      key={`row-${row.id}`}\r\n-    >\r\n-      <div className=\"divTableCell\">\r\n-        {isMobile && <label> Société: </label>}\r\n-        <div>{row.enterprise}</div>\r\n-      </div>\r\n-      <div className=\"divTableCell\">\r\n-        {isMobile && <label> Nom: </label>}\r\n-        <div>{row.lastName}</div>\r\n-      </div>\r\n-      <div className=\"divTableCell\">\r\n-        {isMobile && <label> Prénom: </label>}\r\n-        <div>{row.firstName}</div>\r\n-      </div>\r\n-      <div className=\"divTableCell\">\r\n-        {isMobile && <label> Email: </label>}\r\n-        <div>{row.email}</div>\r\n-      </div>\r\n-      <div className=\"divTableCell\">\r\n-        {isMobile && <label> Statut: </label>}\r\n-        <div>\r\n-          {row.status == 1 && \"En ligne\"}\r\n-          {row.status == 0 && \"En attente\"}\r\n-          {row.status == 2 && \"Hors ligne\"}\r\n-        </div>\r\n-      </div>\r\n-      <div className=\"divTableCell\">\r\n-        {isMobile && <label> Date dernière connexion: </label>}\r\n-        <div>\r\n-          {row.lastConnection\r\n-            ? moment(row.lastConnection).format(\"DD/MM/YYYY\")\r\n-            : \"\"}\r\n-        </div>\r\n-      </div>\r\n-      {isMobile && (\r\n-        <div className=\"divTableCell m-action\">\r\n-          <div>\r\n-            <ButtonDef textButton=\"Editer\" onClick={() => setActiveUser(row)} />\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-\r\n-  const closeSide = () => {\r\n-    setUser(false);\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent\r\n-          titlePage=\"Réparateurs\"\r\n-          className=\"reparateur-admin-page\"\r\n-        >\r\n-          <ServicesTableStyle>\r\n-            <ButtonDef\r\n-              spinner={isPending}\r\n-              onClick={() => setActiveUser({})}\r\n-              textButton={\r\n-                <>\r\n-                  {!isMobile && \"Nouveau réparateur\"}\r\n-                  <AddGreenIcon />{\" \"}\r\n-                </>\r\n-              }\r\n-              className=\"btn-add\"\r\n-            />\r\n-\r\n-            <FilterDefault\r\n-              className=\"services-filter\"\r\n-              formItems={\r\n-                <>\r\n-                  <Select\r\n-                    {...filter.repairMan}\r\n-                    onChange={(e) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.repairMan.value = e.value;\r\n-                      cpFilter.activeElement = \"repairMan\";\r\n-                      setFilter(cpFilter);\r\n-                      setPageIndex(0);\r\n-                    }}\r\n-                  />\r\n-                  <Select\r\n-                    {...filter.status}\r\n-                    onChange={(e) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.status.value = e.value;\r\n-                      cpFilter.activeElement = \"status\";\r\n-                      setFilter(cpFilter);\r\n-                      setPageIndex(0);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              }\r\n-            />\r\n-\r\n-            <Tableau\r\n-              columns={[\r\n-                { key: \"enterprise\", text: \"Société\", sort: true },\r\n-                { key: \"lastName\", text: \"Nom\", sort: true },\r\n-                { key: \"firstName\", text: \"Prénom\", sort: true },\r\n-                { key: \"email\", text: \"Email\", sort: true },\r\n-                { key: \"status\", text: \"Statut\", sort: true },\r\n-                {\r\n-                  key: \"lastConnection\",\r\n-                  text: \"Date dernière connexion\",\r\n-                  sort: false,\r\n-                },\r\n-              ]}\r\n-              perPage={perPage}\r\n-              setPerPage={setPerPage}\r\n-              pageIndex={pageIndex}\r\n-              setPageIndex={setPageIndex}\r\n-              activeSort={activeSort}\r\n-              setActiveSort={setActiveSort}\r\n-              switshSort={switshSort}\r\n-              setSwitshSort={setSwitshSort}\r\n-              pagination={true}\r\n-              totalItemsLength={totalUsers}\r\n-              data={users}\r\n-              rowRender={rowRender}\r\n-            />\r\n-          </ServicesTableStyle>\r\n-        </DashboardContent>\r\n-\r\n-        {user ? (\r\n-          <DashboardSide className=\"reparateur-side\">\r\n-            {isMobile && (\r\n-              <>\r\n-                <CloseButton\r\n-                  onClick={(e) => {\r\n-                    e.preventDefault();\r\n-                    closeSide();\r\n-                  }}\r\n-                />\r\n-              </>\r\n-            )}\r\n-            <h2 className=\"title-side-dashboard\">\r\n-              {user.id ? `${user.enterprise}` : \"Nouveau réparateur\"}\r\n-            </h2>\r\n-            <Form>\r\n-              {message && message.type && message.text ? (\r\n-                <span\r\n-                  className={\r\n-                    message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                  }\r\n-                >\r\n-                  {message.text}\r\n-                </span>\r\n-              ) : (\r\n-                \"\"\r\n-              )}\r\n-              <Input\r\n-                {...state.SIRET}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  if (e.target.value.length <= 14)\r\n-                    cpState.SIRET.value = e.target.value;\r\n-                  cpState.SIRET.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.enterprise}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.enterprise.value = e.target.value;\r\n-                  cpState.enterprise.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <InputAddress\r\n-                state={state}\r\n-                setState={setState}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                message={message}\r\n-                setMessage={setMessage}\r\n-              />\r\n-              <Input\r\n-                {...state.additionalAddress}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.additionalAddress.value = e.target.value;\r\n-                  cpState.additionalAddress.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.postalCode}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.postalCode.value = e.target.value;\r\n-                  cpState.postalCode.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.city}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.city.value = e.target.value;\r\n-                  cpState.city.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <InputAddressBilling\r\n-                state={state}\r\n-                setState={setState}\r\n-                placeIsSelected={placeBillingIsSelected}\r\n-                setPlaceIsSelected={setPlaceBillingIsSelected}\r\n-                message={message}\r\n-                setMessage={setMessage}\r\n-              />\r\n-              <Input\r\n-                {...state.additionalAddressBilling}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.additionalAddressBilling.value = e.target.value;\r\n-                  cpState.additionalAddressBilling.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.postalCodeBilling}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.postalCodeBilling.value = e.target.value;\r\n-                  cpState.postalCodeBilling.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.cityBilling}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.cityBilling.value = e.target.value;\r\n-                  cpState.cityBilling.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <div className=\"bloc-file-form\">\r\n-                <label>Logo/Photo devanture</label>\r\n-                <div className=\"image-service\">\r\n-                  <img src={getPathImage(state.picture)} alt=\"\" />\r\n-                  <input\r\n-                    type=\"file\"\r\n-                    name=\"file\"\r\n-                    id=\"uploadImage\"\r\n-                    accept=\"image/png, image/jpeg\"\r\n-                    onChange={(e) => {\r\n-                      const cpState = { ...state };\r\n-                      cpState.picture.file = e.target.files[0];\r\n-                      e.target.value = \"\";\r\n-                      setState(cpState);\r\n-                    }}\r\n-                  />\r\n-                  <div className=\"btns-file\">\r\n-                    <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                      <EditIcon />\r\n-                    </label>\r\n-                    {state.picture.value || state.picture.file ? (\r\n-                      <button\r\n-                        className=\"delete-image\"\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          const cpState = { ...state };\r\n-                          cpState.picture.value = \"\";\r\n-                          cpState.picture.file = null;\r\n-                          setState(cpState);\r\n-                        }}\r\n-                      >\r\n-                        <DeleteIcon />\r\n-                      </button>\r\n-                    ) : (\r\n-                      \"\"\r\n-                    )}\r\n-                  </div>\r\n-                </div>\r\n-              </div>\r\n-              <Select\r\n-                {...state.TypeCompany}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.TypeCompany.value = e.value;\r\n-                  cpState.TypeCompany.error = false;\r\n-                  cpState.intraCommunityVAT.required = e.requireNoTva;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.intraCommunityVAT}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.intraCommunityVAT.value = e.target.value;\r\n-                  cpState.intraCommunityVAT.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <RadioButton\r\n-                {...state.gender}\r\n-                onChange={(val) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.gender.value = val.value;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.lastName}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.lastName.value = e.target.value;\r\n-                  cpState.lastName.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.firstName}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.firstName.value = e.target.value;\r\n-                  cpState.firstName.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.phone}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.phone.value = getDigits(e.target.value);\r\n-                  cpState.phone.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n-                {...state.email}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.email.value = e.target.value;\r\n-                  cpState.email.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-\r\n-              <Input\r\n                 className=\"password-input\"\r\n                 {...state.plainPassword}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -2824,19 +1335,10 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+              \r\n               <Input\r\n-                {...state.lundimatin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.lundimatin.value = e.target.value;\r\n-                  cpState.lundimatin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.lundiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.lundiapm.value = e.target.value;\r\n@@ -2844,19 +1346,10 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+            \r\n               <Input\r\n-                {...state.mardimatin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.mardimatin.value = e.target.value;\r\n-                  cpState.mardimatin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.mardiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.mardiapm.value = e.target.value;\r\n@@ -2864,20 +1357,10 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-             \r\n+           \r\n               <Input\r\n-                {...state.mercredimatin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.mercredimatin.value = e.target.value;\r\n-                  cpState.mercredimatin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.mercrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.mercrediapm.value = e.target.value;\r\n@@ -2885,19 +1368,10 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+              \r\n               <Input\r\n-                {...state.jeudimatin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.jeudimatin.value = e.target.value;\r\n-                  cpState.jeudimatin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.jeudiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.jeudiapm.value = e.target.value;\r\n@@ -2905,19 +1379,10 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+             \r\n               <Input\r\n-                {...state.vendredimatin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.vendredimatin.value = e.target.value;\r\n-                  cpState.vendredimatin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.vendrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.vendrediapm.value = e.target.value;\r\n@@ -2925,19 +1390,10 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n+            \r\n               <Input\r\n-                {...state.samedimatin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.samedimatin.value = e.target.value;\r\n-                  cpState.samedimatin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.samediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.samediapm.value = e.target.value;\r\n@@ -2946,18 +1402,8 @@\n                   setMessage(null);\r\n                 }}\r\n               />\r\n               <Input\r\n-                {...state.dimanchematin}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.dimanchematin.value = e.target.value;\r\n-                  cpState.dimanchematin.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n-              <Input\r\n                 {...state.dimancheapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.dimancheapm.value = e.target.value;\r\n"
                },
                {
                    "date": 1708627067070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,15 +107,15 @@\n       name: \"evaluation\",\r\n       label: \"Evaluation\",\r\n       placeholder: \"evaluation\",\r\n       value: \"\",\r\n-      type: \"integer\",\r\n+      type: \"text\",\r\n       error: false,\r\n       errorEvaluation: false,\r\n       errorMessage: \"\",\r\n       required: true,\r\n     },\r\n-    \r\n+\r\n     picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n     enterprise: {\r\n       name: \"enterprise\",\r\n       label: \"Entreprise\",\r\n@@ -332,9 +332,9 @@\n       type: \"text\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    \r\n+\r\n     lundiapm: {\r\n       name: \"lundiapm\",\r\n       label: \"Lundi \",\r\n       required: false,\r\n@@ -343,9 +343,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n- \r\n+\r\n     mardiapm: {\r\n       name: \"mardiapm\",\r\n       label: \"Mardi \",\r\n       required: false,\r\n@@ -365,9 +365,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n- \r\n+\r\n     jeudiapm: {\r\n       name: \"jeudiapm\",\r\n       label: \"Jeudi \",\r\n       required: false,\r\n@@ -376,9 +376,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n- \r\n+\r\n     vendrediapm: {\r\n       name: \"vendrediapm\",\r\n       label: \"Vendredi \",\r\n       required: false,\r\n@@ -387,9 +387,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-   \r\n+\r\n     samediapm: {\r\n       name: \"samediapm\",\r\n       label: \"Samedi \",\r\n       required: false,\r\n@@ -398,9 +398,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-  \r\n+\r\n     dimancheapm: {\r\n       name: \"dimancheapm\",\r\n       label: \"Dimanche \",\r\n       required: false,\r\n@@ -1325,9 +1325,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-             <Input\r\n+              <Input\r\n                 {...state.libelleFermeture}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.libelleFermeture.value = e.target.value;\r\n@@ -1335,9 +1335,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-              \r\n+\r\n               <Input\r\n                 {...state.lundiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1346,9 +1346,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-            \r\n+\r\n               <Input\r\n                 {...state.mardiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1357,9 +1357,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-           \r\n+\r\n               <Input\r\n                 {...state.mercrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1368,9 +1368,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-              \r\n+\r\n               <Input\r\n                 {...state.jeudiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1379,9 +1379,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-             \r\n+\r\n               <Input\r\n                 {...state.vendrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1390,9 +1390,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-            \r\n+\r\n               <Input\r\n                 {...state.samediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1708627188286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,19 +102,9 @@\n       errorEmail: false,\r\n       errorMessage: \"\",\r\n       required: true,\r\n     },\r\n-    evaluation: {\r\n-      name: \"evaluation\",\r\n-      label: \"Evaluation\",\r\n-      placeholder: \"evaluation\",\r\n-      value: \"\",\r\n-      type: \"text\",\r\n-      error: false,\r\n-      errorEvaluation: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-    },\r\n+ ,\r\n \r\n     picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n     enterprise: {\r\n       name: \"enterprise\",\r\n"
                },
                {
                    "date": 1708627199618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n       errorEmail: false,\r\n       errorMessage: \"\",\r\n       required: true,\r\n     },\r\n- ,\r\n+  \r\n \r\n     picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n     enterprise: {\r\n       name: \"enterprise\",\r\n"
                },
                {
                    "date": 1708627275119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,20 @@\n       errorEmail: false,\r\n       errorMessage: \"\",\r\n       required: true,\r\n     },\r\n-  \r\n-\r\n+    evaluation: {\r\n+      name: \"evaluation\",\r\n+      label: \"Evaluation\",\r\n+      placeholder: \"evaluation\",\r\n+      value: \"\",\r\n+      type: \"integer\",\r\n+      error: false,\r\n+      errorEvaluation: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+    },\r\n+    \r\n     picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n     enterprise: {\r\n       name: \"enterprise\",\r\n       label: \"Entreprise\",\r\n@@ -322,9 +332,9 @@\n       type: \"text\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-\r\n+    \r\n     lundiapm: {\r\n       name: \"lundiapm\",\r\n       label: \"Lundi \",\r\n       required: false,\r\n@@ -333,9 +343,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-\r\n+ \r\n     mardiapm: {\r\n       name: \"mardiapm\",\r\n       label: \"Mardi \",\r\n       required: false,\r\n@@ -355,9 +365,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-\r\n+ \r\n     jeudiapm: {\r\n       name: \"jeudiapm\",\r\n       label: \"Jeudi \",\r\n       required: false,\r\n@@ -366,9 +376,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-\r\n+ \r\n     vendrediapm: {\r\n       name: \"vendrediapm\",\r\n       label: \"Vendredi \",\r\n       required: false,\r\n@@ -377,9 +387,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-\r\n+   \r\n     samediapm: {\r\n       name: \"samediapm\",\r\n       label: \"Samedi \",\r\n       required: false,\r\n@@ -388,9 +398,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n     },\r\n-\r\n+  \r\n     dimancheapm: {\r\n       name: \"dimancheapm\",\r\n       label: \"Dimanche \",\r\n       required: false,\r\n@@ -1246,9 +1256,9 @@\n               <Input\r\n                 {...state.evaluation}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.evaluation.value = e.target.value;\r\n+                  cpState.evaluation.value = parsint(e.target.value);\r\n                   cpState.evaluation.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n@@ -1315,9 +1325,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-              <Input\r\n+             <Input\r\n                 {...state.libelleFermeture}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n                   cpState.libelleFermeture.value = e.target.value;\r\n@@ -1325,9 +1335,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-\r\n+              \r\n               <Input\r\n                 {...state.lundiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1336,9 +1346,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-\r\n+            \r\n               <Input\r\n                 {...state.mardiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1347,9 +1357,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-\r\n+           \r\n               <Input\r\n                 {...state.mercrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1358,9 +1368,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-\r\n+              \r\n               <Input\r\n                 {...state.jeudiapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1369,9 +1379,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-\r\n+             \r\n               <Input\r\n                 {...state.vendrediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n@@ -1380,9 +1390,9 @@\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n-\r\n+            \r\n               <Input\r\n                 {...state.samediapm}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1708627285255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1256,9 +1256,9 @@\n               <Input\r\n                 {...state.evaluation}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.evaluation.value = parsint(e.target.value);\r\n+                  cpState.evaluation.value = parseint(e.target.value);\r\n                   cpState.evaluation.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n"
                },
                {
                    "date": 1708627313456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1256,9 +1256,9 @@\n               <Input\r\n                 {...state.evaluation}\r\n                 onChange={(e) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.evaluation.value = parseint(e.target.value);\r\n+                  cpState.evaluation.value = parseInt(e.target.value);\r\n                   cpState.evaluation.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n"
                },
                {
                    "date": 1713876982211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -447,9 +447,9 @@\n   const [placeBillingIsSelected, setPlaceBillingIsSelected] = useState(false);\r\n   const [filter, setFilter] = useState({\r\n     repairMan: {\r\n       placeholder: \"Réparateurs\",\r\n-      options: [{ label: \"Tous les réparateurs\", value: \"\" }],\r\n+      options: [{ label: \"Tous les réparaccteurs\", value: \"\" }],\r\n       value: \"\",\r\n       isSearchable: true,\r\n     },\r\n     status: {\r\n"
                },
                {
                    "date": 1713951720517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -447,9 +447,9 @@\n   const [placeBillingIsSelected, setPlaceBillingIsSelected] = useState(false);\r\n   const [filter, setFilter] = useState({\r\n     repairMan: {\r\n       placeholder: \"Réparateurs\",\r\n-      options: [{ label: \"Tous les réparaccteurs\", value: \"\" }],\r\n+      options: [{ label: \"Tous les réparateurs\", value: \"\" }],\r\n       value: \"\",\r\n       isSearchable: true,\r\n     },\r\n     status: {\r\n"
                },
                {
                    "date": 1715597954659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,8 +290,18 @@\n         { value: 0, label: \"En attente\", id: \"EnAttente_radio\" },\r\n         { value: 2, label: \"Hors ligne\", id: \"HorsLigne_radio\" },\r\n       ],\r\n     },\r\n+\r\n+\r\n+\r\n+    urlfingz: {\r\n+      label: \"Ma page Fingz\",\r\n+      name: \"mapagegfingz\",\r\n+      placeholder: \"Ma page fingz \",\r\n+      value: \"\",\r\n+      type: \"url\",\r\n+    },\r\n     bonusReparation: {\r\n       name: \"bonusreparation\",\r\n       label: \"Bonus réparation\",\r\n       required: false,\r\n"
                },
                {
                    "date": 1715598141166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,15 +293,8 @@\n     },\r\n \r\n \r\n \r\n-    urlfingz: {\r\n-      label: \"Ma page Fingz\",\r\n-      name: \"mapagegfingz\",\r\n-      placeholder: \"Ma page fingz \",\r\n-      value: \"\",\r\n-      type: \"url\",\r\n-    },\r\n     bonusReparation: {\r\n       name: \"bonusreparation\",\r\n       label: \"Bonus réparation\",\r\n       required: false,\r\n"
                },
                {
                    "date": 1717754460519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -557,9 +557,9 @@\n             value: o.id,\r\n           });\r\n         }\r\n         setFilter(cpFilter);\r\n-        console.log(arrayObj);\r\n+        //console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                }
            ],
            "date": 1707087312029,
            "name": "Commit-0",
            "content": "import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport noImage from \"../../../assets/images/noImage.png\";\r\nimport {\r\n  BlocAdminContent,\r\n  ServicesTableStyle,\r\n} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\nimport {\r\n  AddGreenIcon,\r\n  DeleteIcon,\r\n  EditIcon,\r\n} from \"../../../assets/styles/icons\";\r\nimport DashboardContent from \"../../../components/dashboardContent\";\r\nimport DashboardSide from \"../../../components/dashboardSide\";\r\nimport FilterDefault from \"../../../components/filterDefault\";\r\nimport { ButtonDef, Input } from \"../../../components/ui\";\r\nimport CloseButton from \"../../../components/ui-elements/closeButton\";\r\nimport RadioButton from \"../../../components/ui-elements/radioButton\";\r\nimport Select from \"../../../components/ui-elements/select\";\r\nimport Tableau from \"../../../components/ui-elements/tableau\";\r\nimport endPoints from \"../../../config/endPoints\";\r\nimport ROUTES from \"../../../config/routes\";\r\nimport connector from \"../../../connector\";\r\nimport { clearErrors, validForm } from \"../../../helper/form\";\r\nimport { getDigits, getMsgError, scrollTop } from \"../../../helper/functions\";\r\nimport AdminBase from \"../../../theme/back/adminBase\";\r\nimport { pathImage, STRIPE_PUBLIC_KEY } from \"../../../vars\";\r\nimport InputAddress from \"../../../components/ui-elements/inputAddress\";\r\nimport InputAddressBilling from \"../../../components/ui-elements/inputAddressBilling\";\r\n\r\nexport default function Reparateurs() {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const [defaultUser, setDefaultUser] = useState(\r\n    query.get(\"user\") ? parseInt(query.get(\"user\")) : \"\"\r\n  );\r\n  const perPageDesMob = isMobile ? 8 : 20;\r\n  const [users, setUsers] = useState(false);\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [message, setMessage] = useState(null);\r\n  const [user, setUser] = useState(false);\r\n  const [perPage, setPerPage] = useState(perPageDesMob);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [activeSort, setActiveSort] = useState(\"enterprise\");\r\n  const [switshSort, setSwitshSort] = useState(false);\r\n  const [paramsUrl, setParamsUrl] = useState(\"\");\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: { value: null, name: \"id\" },\r\n    stripeAccountToken: { value: null, name: \"stripeAccountToken\" },\r\n    stripePersonToken: { value: null, name: \"stripePersonToken\" },\r\n    gender: {\r\n      name: \"gender\",\r\n      label: \"Civilité\",\r\n      required: true,\r\n      id: \"civilite\",\r\n      value: \"\",\r\n      options: [\r\n        { value: \"Monsieur\", label: \"Monsieur\", id: \"monsieur_radio\" },\r\n        { value: \"Madame\", label: \"Madame\", id: \"madame_radio\" },\r\n      ],\r\n    },\r\n    firstName: {\r\n      name: \"firstName\",\r\n      label: \"Prénom\",\r\n      placeholder: \"Prénom\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n    },\r\n    lastName: {\r\n      name: \"lastName\",\r\n      label: \"Nom\",\r\n      placeholder: \"Nom\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n    },\r\n    phone: {\r\n      name: \"phone\",\r\n      label: \"Téléphone\",\r\n      placeholder: \"Téléphone\",\r\n      value: \"\",\r\n      type: \"phone\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    email: {\r\n      name: \"email\",\r\n      label: \"Email\",\r\n      placeholder: \"Email\",\r\n      value: \"\",\r\n      type: \"email\",\r\n      error: false,\r\n      errorEmail: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n    },\r\n    picture: { name: \"picture\", value: \"\", file: null, required: false },\r\n    enterprise: {\r\n      name: \"enterprise\",\r\n      label: \"Entreprise\",\r\n      placeholder: \"Entreprise\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n    },\r\n    TypeCompany: {\r\n      name: \"TypeCompany\",\r\n      label: \"Type d'entreprise\",\r\n      placeholder: \"Type d'entreprise\",\r\n      height: \"53px\",\r\n      options: [],\r\n      value: \"\",\r\n      className: \"select-uppercase\",\r\n      required: true,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    SIRET: {\r\n      label: \"N° Siret\",\r\n      name: \"SIRET\",\r\n      placeholder: \"Siret\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      autocomplete: false,\r\n      empty: true,\r\n      isNumber: true,\r\n    },\r\n    intraCommunityVAT: {\r\n      name: \"intraCommunityVAT\",\r\n      label: \"N° TVA intracommunautaire\",\r\n      placeholder: \"FR12345678912\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n    },\r\n    address: {\r\n      name: \"address\",\r\n      label: \"Adresse de la vitrine\",\r\n      placeholder: \"Adresse de la vitrine\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      autoComplete: \"false\",\r\n    },\r\n    latitude: {\r\n      name: \"latitude\",\r\n      value: \"\",\r\n    },\r\n    longitude: {\r\n      name: \"longitude\",\r\n      value: \"\",\r\n    },\r\n    placeId: {\r\n      name: \"placeId\",\r\n      value: \"\",\r\n    },\r\n    additionalAddress: {\r\n      name: \"additionalAddress\",\r\n      label: \"Complément d’adresse\",\r\n      placeholder: \"Complément d’adresse\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    postalCode: {\r\n      label: \"Code postal\",\r\n      name: \"postalCode\",\r\n      placeholder: \"Code postal\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      disabled: true,\r\n      editable: true,\r\n      empty: true,\r\n      size: 5,\r\n      isNumber: true,\r\n    },\r\n    city: {\r\n      label: \"Ville\",\r\n      name: \"city\",\r\n      placeholder: \"Ville\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      disabled: true,\r\n      editable: true,\r\n    },\r\n    addressBilling: {\r\n      name: \"addressBilling\",\r\n      label: \"Adresse de facturation\",\r\n      placeholder: \"Adresse de facturation\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      autoComplete: \"false\",\r\n    },\r\n    latitudeBilling: {\r\n      name: \"latitudeBilling\",\r\n      value: \"\",\r\n    },\r\n    longitudeBilling: {\r\n      name: \"longitudeBilling\",\r\n      value: \"\",\r\n    },\r\n    placeIdBilling: {\r\n      name: \"placeIdBilling\",\r\n      value: \"\",\r\n    },\r\n    additionalAddressBilling: {\r\n      name: \"additionalAddressBilling\",\r\n      label: \"Complément d’adresse\",\r\n      placeholder: \"Complément d’adresse\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    postalCodeBilling: {\r\n      name: \"postalCodeBilling\",\r\n      label: \"Code postal\",\r\n      placeholder: \"Code postal\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      disabled: true,\r\n      editable: true,\r\n      empty: true,\r\n      size: 5,\r\n      isNumber: true,\r\n    },\r\n    cityBilling: {\r\n      name: \"cityBilling\",\r\n      label: \"Ville\",\r\n      placeholder: \"Ville\",\r\n      value: \"\",\r\n      type: \"text\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: true,\r\n      disabled: true,\r\n      editable: true,\r\n    },\r\n    status: {\r\n      name: \"status\",\r\n      label: \"Statut\",\r\n      required: true,\r\n      id: \"statut\",\r\n      value: \"0\",\r\n      options: [\r\n        { value: 1, label: \"En ligne\", id: \"EnLigne_radio\" },\r\n        { value: 0, label: \"En attente\", id: \"EnAttente_radio\" },\r\n        { value: 2, label: \"Hors ligne\", id: \"HorsLigne_radio\" },\r\n      ],\r\n    },\r\n    plainPassword: {\r\n      label: \"Mot de passe\",\r\n      name: \"plainPassword\",\r\n      value: \"\",\r\n      type: \"password\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      autocomplete: \"new-password\",\r\n      required: false,\r\n      setType: (e) => {\r\n        const cpState = { ...state };\r\n        cpState.plainPassword.type = e;\r\n        setState(cpState);\r\n      },\r\n    },\r\n    confirmPassword: {\r\n      label: \"Confirmation du mot de passe\",\r\n      name: \"confirmPassword\",\r\n      value: \"\",\r\n      type: \"password\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      autocomplete: \"new-password\",\r\n      required: false,\r\n      notice:\r\n        \"Votre mot de passe doit contenir au moins 8 caractères, 1 majuscule, 1 chiffre et 1 caractère spécial.\",\r\n      setType: (e) => {\r\n        const cpState = { ...state };\r\n        cpState.confirmPassword.type = e;\r\n        setState(cpState);\r\n      },\r\n    },\r\n  });\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [placeBillingIsSelected, setPlaceBillingIsSelected] = useState(false);\r\n  const [filter, setFilter] = useState({\r\n    repairMan: {\r\n      placeholder: \"Réparateurs\",\r\n      options: [{ label: \"Tous les réparateurs\", value: \"\" }],\r\n      value: \"\",\r\n      isSearchable: true,\r\n    },\r\n    status: {\r\n      placeholder: \"Statut\",\r\n      options: [\r\n        { label: \"Tous les statuts\", value: \"\" },\r\n        { label: \"En ligne\", value: 1 },\r\n        { label: \"En attente\", value: 0 },\r\n        { label: \"Hors ligne\", value: 2 },\r\n      ],\r\n      value: \"\",\r\n      isSearchable: true,\r\n    },\r\n    activeElement: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getTypeCompanies();\r\n    getRepairMans();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUsers(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pageIndex, perPage, activeSort, switshSort, filter]);\r\n\r\n  const [stripe, setStripe] = useState(null);\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://js.stripe.com/v3/\";\r\n    script.async = true;\r\n    script.addEventListener(\"load\", function () {\r\n      setStripe(window.Stripe(STRIPE_PUBLIC_KEY));\r\n    });\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  const getUsers = (refresh = false) => {\r\n    let condition = \"\";\r\n    if (defaultUser) {\r\n      condition = `&active=${defaultUser}`;\r\n    }\r\n\r\n    if (filter.repairMan.value) {\r\n      condition += `&id=${filter.repairMan.value}`;\r\n    }\r\n\r\n    if ([0, 1, 2].includes(parseInt(filter.status.value))) {\r\n      condition += `&status=${filter.status.value}`;\r\n    }\r\n\r\n    const cpParamsUrl = `page=${\r\n      parseInt(pageIndex) + 1\r\n    }&itemsPerPage=${perPage}&order[${activeSort}]=${\r\n      switshSort ? \"desc\" : \"asc\"\r\n    }${condition}`;\r\n\r\n    if (refresh || cpParamsUrl !== paramsUrl) {\r\n      setParamsUrl(cpParamsUrl);\r\n      setUsers(false);\r\n      setTotalUsers(0);\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.USERS_REPAIRMAN}?${cpParamsUrl}`,\r\n        success: (response) => {\r\n          const arrayObj = response.data[\"hydra:member\"] || [];\r\n          \r\n          setUsers(arrayObj);\r\n          setTotalUsers(response.data[\"hydra:totalItems\"] || 0);\r\n          if (defaultUser) {\r\n            for (let i = 0; i < arrayObj.length; i++) {\r\n              if (arrayObj[i].id === defaultUser) {\r\n                setDefaultUser(null);\r\n                setActiveUser(arrayObj[i]);\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          console.log(arrayObj);\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const getRepairMans = () => {\r\n    connector({\r\n      method: \"get\",\r\n      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n      data: {},\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"hydra:member\"] || [];\r\n        const cpFilter = { ...filter };\r\n        cpFilter.repairMan.options = [\r\n          { label: \"Tous les réparateurs\", value: \"\" },\r\n        ];\r\n        for (let i = 0; i < arrayObj.length; i++) {\r\n          let o = arrayObj[i];\r\n          cpFilter.repairMan.options.push({\r\n            label: o.enterprise,\r\n            value: o.id,\r\n          });\r\n        }\r\n        setFilter(cpFilter);\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  };\r\n\r\n  const getTypeCompanies = () => {\r\n    connector({\r\n      method: \"get\",\r\n      url: endPoints.TYPE_COMPANIES,\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"hydra:member\"] || [];\r\n        const cpState = { ...state };\r\n        let options = [];\r\n        for (let i = 0; i < arrayObj.length; i++) {\r\n          options.push({\r\n            label: arrayObj[i].name,\r\n            value: arrayObj[i].id,\r\n            requireNoTva: arrayObj[i].requireNoTva,\r\n          });\r\n        }\r\n        cpState.TypeCompany.options = options;\r\n        setState(cpState);\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  };\r\n\r\n  const submitUser = async (validation) => {\r\n    if (!validation.rawData.stripeAccountToken) {\r\n      if (!stripe) {\r\n        msgErrors({ msg: \"Stripe.js has not yet loaded.\" });\r\n      }\r\n\r\n      const accountResult = await stripe.createToken(\"account\", {\r\n        business_type: \"company\",\r\n        company: {\r\n          name: validation.rawData.enterprise,\r\n          address: {\r\n            city: validation.rawData.cityBilling,\r\n            postal_code: validation.rawData.postalCodeBilling,\r\n            line1: validation.rawData.addressBilling,\r\n            line2: validation.rawData.additionalAddressBilling,\r\n          },\r\n          phone: validation.rawData.phone || \"0000000000\",\r\n          registration_number: validation.rawData.SIRET,\r\n          tax_id: validation.rawData.intraCommunityVAT,\r\n        },\r\n        tos_shown_and_accepted: true,\r\n      });\r\n\r\n      const personResult = await stripe.createToken(\"person\", {\r\n        person: {\r\n          first_name: validation.rawData.firstName,\r\n          last_name: validation.rawData.lastName,\r\n          address: {\r\n            city: validation.rawData.cityBilling,\r\n            postal_code: validation.rawData.postalCodeBilling,\r\n            line1: validation.rawData.addressBilling,\r\n            line2: validation.rawData.additionalAddressBilling,\r\n          },\r\n        },\r\n      });\r\n\r\n      if (accountResult.token && personResult.token) {\r\n        validation.rawData.stripeAccountToken = accountResult.token.id;\r\n        validation.rawData.stripePersonToken = personResult.token.id;\r\n      }\r\n    }\r\n\r\n    if (validation.rawData.stripeAccountToken) {\r\n      validation.rawData.TypeCompany = `${endPoints.TYPE_COMPANY}/${validation.rawData.TypeCompany}`;\r\n      connector({\r\n        method: user.id ? \"put\" : \"post\",\r\n        url: user.id\r\n          ? `${endPoints.USER_ADMIN_REPAIRMAN}/${user.id}`\r\n          : endPoints.USER_ADMIN_REPAIRMAN,\r\n        data: validation.rawData,\r\n        success: (response) => {\r\n          setIsPending(false);\r\n          getUsers(true);\r\n          getRepairMans();\r\n          setActiveUser({\r\n            ...response.data,\r\n            TypeCompany: { id: state.TypeCompany.value },\r\n          });\r\n          msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n        },\r\n        catch: (error) => {\r\n          setIsPending(false);\r\n          msgErrors({ msg: getMsgError(error) });\r\n        },\r\n      });\r\n    } else {\r\n      msgErrors({ msg: \"Le token stripe n'a pas pu être creer.\" });\r\n    }\r\n  };\r\n\r\n  const saveUser = () => {\r\n    if (!isPending) {\r\n      setMessage(null);\r\n      setState(clearErrors(state));\r\n      const validation = validForm(state);\r\n      setState(validation.form);\r\n      if (\r\n        validation.form.phone.value?.length &&\r\n        validation.form.phone.value.length != 10\r\n      ) {\r\n        msgErrors({\r\n          msg: \"Le numéro de téléphone doit contenir 10 chiffres.\",\r\n        });\r\n        validation.form.phone.error = true;\r\n        setState(validation.form);\r\n        return;\r\n      }\r\n      if (validation.form.SIRET.value.length !== 14) {\r\n        msgErrors({\r\n          msg: \"Le siret doit avoir 14 caractères\",\r\n        });\r\n        validation.form.SIRET.error = true;\r\n        setState(validation.form);\r\n        return;\r\n      }\r\n      if (!placeIsSelected) {\r\n        msgErrors({\r\n          address: true,\r\n          msg: \"Veuillez sélectionner une adresse dans la liste.\",\r\n        });\r\n        return;\r\n      } else if (\r\n        validation.form.address.error ||\r\n        validation.form.postalCode.error ||\r\n        validation.form.city.error\r\n      ) {\r\n        setState(validation.form);\r\n        msgErrors({\r\n          msg: \"Veuillez sélectionner une adresse valide dans la liste.\",\r\n        });\r\n        return;\r\n      }\r\n      if (!placeBillingIsSelected) {\r\n        msgErrors({\r\n          addressBilling: true,\r\n          msg: \"Veuillez sélectionner une adresse de facturation dans la liste.\",\r\n        });\r\n        return;\r\n      } else if (\r\n        validation.form.addressBilling.error ||\r\n        validation.form.postalCodeBilling.error ||\r\n        validation.form.cityBilling.error\r\n      ) {\r\n        setState(validation.form);\r\n        msgErrors({\r\n          msg: \"Veuillez sélectionner une adresse facturation valide dans la liste.\",\r\n        });\r\n        return;\r\n      }\r\n      if (\r\n        validation.form.postalCode.error ||\r\n        validation.form.postalCode.value.length !== 5\r\n      ) {\r\n        msgErrors({\r\n          msg: \"Le code postal doit avoir 5 caractères\",\r\n        });\r\n        validation.form.postalCode.error = true;\r\n        setState(validation.form);\r\n        return;\r\n      }\r\n      if (\r\n        validation.form.postalCodeBilling.error ||\r\n        validation.form.postalCodeBilling.value.length !== 5\r\n      ) {\r\n        msgErrors({\r\n          msg: \"Le code postal doit avoir 5 caractères\",\r\n        });\r\n        validation.form.postalCodeBilling.error = true;\r\n        setState(validation.form);\r\n        return;\r\n      }\r\n      if (validation.form.email.errorEmail) {\r\n        msgErrors({\r\n          msg: \"Adresse email invalide.\",\r\n        });\r\n        validation.form.email.error = true;\r\n        setState(validation.form);\r\n        return;\r\n      }\r\n      const plainPassword = state.plainPassword.value;\r\n      const confirmPassword = state.confirmPassword.value;\r\n      if (plainPassword?.length || confirmPassword?.length) {\r\n        let errorMsg = \"\";\r\n        if (plainPassword && validation.form.plainPassword.error) {\r\n          errorMsg = \"Veuillez respecter les conditions du mot de passe\";\r\n        } else if (plainPassword !== confirmPassword) {\r\n          errorMsg = \"Le mot de passe et sa confirmation ne sont pas identique\";\r\n          validation.form.confirmPassword.error = true;\r\n        }\r\n        if (errorMsg) {\r\n          msgErrors({\r\n            msg: errorMsg,\r\n          });\r\n          setState(validation.form);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (validation.valid) {\r\n        setIsPending(true);\r\n        if (state.picture.file) {\r\n          saveImage(validation);\r\n        } else {\r\n          submitUser(validation);\r\n        }\r\n      } else {\r\n        msgErrors({\r\n          msg: \"Vérifier si les champs obligatoires sont remplis.\",\r\n        });\r\n        setIsPending(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveImage = (validation) => {\r\n    const data = new FormData();\r\n    data.append(\"file\", state.picture.file);\r\n    connector({\r\n      method: \"post\",\r\n      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n      data,\r\n      success: (response) => {\r\n        const cpState = { ...state };\r\n        cpState.picture.file = null;\r\n        cpState.picture.value = response.data.contentUrl;\r\n        setState(cpState);\r\n        validation.rawData.picture = response.data.contentUrl;\r\n        submitUser(validation);\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n        setIsPending(false);\r\n      },\r\n    });\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpState = { ...state };\r\n    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n    if (e.address !== undefined) cpState.address.error = e.address;\r\n    if (e.addressBilling !== undefined)\r\n      cpState.addressBilling.error = e.addressBilling;\r\n    setState(cpState);\r\n    scrollTop(\"side-content-dashboard\");\r\n  };\r\n\r\n  const msgSuccess = (text) => {\r\n    scrollTop(\"side-content-dashboard\");\r\n    if (text !== undefined) setMessage({ type: \"success\", text });\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const getPathImage = (image) =>\r\n    image.file\r\n      ? URL.createObjectURL(image.file)\r\n      : image.value\r\n      ? pathImage + image.value\r\n      : noImage;\r\n\r\n  const setActiveRow = (item = {}) => {\r\n    if (user && parseInt(item.id) === parseInt(user.id)) {\r\n      setUser(false);\r\n    } else {\r\n      setActiveUser(item);\r\n    }\r\n  };\r\n\r\n  const setActiveUser = (item = {}) => {\r\n    setMessage(null);\r\n    const cpState = { ...clearErrors(state) };\r\n    if (!item.id) {\r\n      for (const key in cpState) {\r\n        item[key] = \"\";\r\n      }\r\n      item = {\r\n        ...item,\r\n        id: null,\r\n        gender: \"Monsieur\",\r\n        status: 0,\r\n        createdAt: null,\r\n        totalCommands: 0,\r\n        totalDevis: 0,\r\n        plainPassword: \"\",\r\n        confirmPassword: \"\",\r\n      };\r\n    } else {\r\n      item.plainPassword = \"\";\r\n      item.confirmPassword = \"\";\r\n    }\r\n    for (const key in item) {\r\n      if (cpState[key]) {\r\n        if (key === \"TypeCompany\") {\r\n          cpState.TypeCompany.value = item.TypeCompany.id\r\n            ? item.TypeCompany.id\r\n            : null;\r\n          cpState.intraCommunityVAT.required = item.TypeCompany.id\r\n            ? item.TypeCompany.requireNoTva\r\n            : true;\r\n        } else {\r\n          cpState[key].value = item[key];\r\n        }\r\n      }\r\n    }\r\n    setState(cpState);\r\n    setUser(item);\r\n    if (cpState.address.value) {\r\n      setPlaceIsSelected(true);\r\n    }\r\n    if (cpState.addressBilling.value) {\r\n      setPlaceBillingIsSelected(true);\r\n    }\r\n  };\r\n\r\n  const getUrlCommands = (item) => {\r\n    return `${ROUTES.COMMANDES.url}?repairman=${item.id}`;\r\n  };\r\n\r\n  const getUrlDevis = (item) => {\r\n    return `${ROUTES.DEVIS.url}?repairman=${item.id}`;\r\n  };\r\n\r\n  const rowRender = (row) => (\r\n    <div\r\n      onClick={() => setActiveRow(row)}\r\n      className={`divTableRow ${user.id === row.id ? \"active\" : \"\"}`}\r\n      key={`row-${row.id}`}\r\n    >\r\n      <div className=\"divTableCell\">\r\n        {isMobile && <label> Société: </label>}\r\n        <div>{row.enterprise}</div>\r\n      </div>\r\n      <div className=\"divTableCell\">\r\n        {isMobile && <label> Nom: </label>}\r\n        <div>{row.lastName}</div>\r\n      </div>\r\n      <div className=\"divTableCell\">\r\n        {isMobile && <label> Prénom: </label>}\r\n        <div>{row.firstName}</div>\r\n      </div>\r\n      <div className=\"divTableCell\">\r\n        {isMobile && <label> Email: </label>}\r\n        <div>{row.email}</div>\r\n      </div>\r\n      <div className=\"divTableCell\">\r\n        {isMobile && <label> Statut: </label>}\r\n        <div>\r\n          {row.status == 1 && \"En ligne\"}\r\n          {row.status == 0 && \"En attente\"}\r\n          {row.status == 2 && \"Hors ligne\"}\r\n        </div>\r\n      </div>\r\n      <div className=\"divTableCell\">\r\n        {isMobile && <label> Date dernière connexion: </label>}\r\n        <div>\r\n          {row.lastConnection\r\n            ? moment(row.lastConnection).format(\"DD/MM/YYYY\")\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      {isMobile && (\r\n        <div className=\"divTableCell m-action\">\r\n          <div>\r\n            <ButtonDef textButton=\"Editer\" onClick={() => setActiveUser(row)} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const closeSide = () => {\r\n    setUser(false);\r\n  };\r\n\r\n  return (\r\n    <AdminBase>\r\n      <BlocAdminContent>\r\n        <DashboardContent\r\n          titlePage=\"Réparateurs\"\r\n          className=\"reparateur-admin-page\"\r\n        >\r\n          <ServicesTableStyle>\r\n            <ButtonDef\r\n              spinner={isPending}\r\n              onClick={() => setActiveUser({})}\r\n              textButton={\r\n                <>\r\n                  {!isMobile && \"Nouveau réparateur\"}\r\n                  <AddGreenIcon />{\" \"}\r\n                </>\r\n              }\r\n              className=\"btn-add\"\r\n            />\r\n\r\n            <FilterDefault\r\n              className=\"services-filter\"\r\n              formItems={\r\n                <>\r\n                  <Select\r\n                    {...filter.repairMan}\r\n                    onChange={(e) => {\r\n                      const cpFilter = { ...filter };\r\n                      cpFilter.repairMan.value = e.value;\r\n                      cpFilter.activeElement = \"repairMan\";\r\n                      setFilter(cpFilter);\r\n                      setPageIndex(0);\r\n                    }}\r\n                  />\r\n                  <Select\r\n                    {...filter.status}\r\n                    onChange={(e) => {\r\n                      const cpFilter = { ...filter };\r\n                      cpFilter.status.value = e.value;\r\n                      cpFilter.activeElement = \"status\";\r\n                      setFilter(cpFilter);\r\n                      setPageIndex(0);\r\n                    }}\r\n                  />\r\n                </>\r\n              }\r\n            />\r\n\r\n            <Tableau\r\n              columns={[\r\n                { key: \"enterprise\", text: \"Société\", sort: true },\r\n                { key: \"lastName\", text: \"Nom\", sort: true },\r\n                { key: \"firstName\", text: \"Prénom\", sort: true },\r\n                { key: \"email\", text: \"Email\", sort: true },\r\n                { key: \"status\", text: \"Statut\", sort: true },\r\n                {\r\n                  key: \"lastConnection\",\r\n                  text: \"Date dernière connexion\",\r\n                  sort: false,\r\n                },\r\n              ]}\r\n              perPage={perPage}\r\n              setPerPage={setPerPage}\r\n              pageIndex={pageIndex}\r\n              setPageIndex={setPageIndex}\r\n              activeSort={activeSort}\r\n              setActiveSort={setActiveSort}\r\n              switshSort={switshSort}\r\n              setSwitshSort={setSwitshSort}\r\n              pagination={true}\r\n              totalItemsLength={totalUsers}\r\n              data={users}\r\n              rowRender={rowRender}\r\n            />\r\n          </ServicesTableStyle>\r\n        </DashboardContent>\r\n\r\n        {user ? (\r\n          <DashboardSide className=\"reparateur-side\">\r\n            {isMobile && (\r\n              <>\r\n                <CloseButton\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    closeSide();\r\n                  }}\r\n                />\r\n              </>\r\n            )}\r\n            <h2 className=\"title-side-dashboard\">\r\n              {user.id ? `${user.enterprise}` : \"Nouveau réparateur\"}\r\n            </h2>\r\n            <Form>\r\n              {message && message.type && message.text ? (\r\n                <span\r\n                  className={\r\n                    message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                  }\r\n                >\r\n                  {message.text}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <Input\r\n                {...state.SIRET}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  if (e.target.value.length <= 14)\r\n                    cpState.SIRET.value = e.target.value;\r\n                  cpState.SIRET.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.enterprise}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.enterprise.value = e.target.value;\r\n                  cpState.enterprise.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <InputAddress\r\n                state={state}\r\n                setState={setState}\r\n                placeIsSelected={placeIsSelected}\r\n                setPlaceIsSelected={setPlaceIsSelected}\r\n                message={message}\r\n                setMessage={setMessage}\r\n              />\r\n              <Input\r\n                {...state.additionalAddress}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.additionalAddress.value = e.target.value;\r\n                  cpState.additionalAddress.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.postalCode}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.postalCode.value = e.target.value;\r\n                  cpState.postalCode.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.city}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.city.value = e.target.value;\r\n                  cpState.city.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <InputAddressBilling\r\n                state={state}\r\n                setState={setState}\r\n                placeIsSelected={placeBillingIsSelected}\r\n                setPlaceIsSelected={setPlaceBillingIsSelected}\r\n                message={message}\r\n                setMessage={setMessage}\r\n              />\r\n              <Input\r\n                {...state.additionalAddressBilling}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.additionalAddressBilling.value = e.target.value;\r\n                  cpState.additionalAddressBilling.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.postalCodeBilling}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.postalCodeBilling.value = e.target.value;\r\n                  cpState.postalCodeBilling.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.cityBilling}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.cityBilling.value = e.target.value;\r\n                  cpState.cityBilling.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <div className=\"bloc-file-form\">\r\n                <label>Photo de la société</label>\r\n                <div className=\"image-service\">\r\n                  <img src={getPathImage(state.picture)} alt=\"\" />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"uploadImage\"\r\n                    accept=\"image/png, image/jpeg\"\r\n                    onChange={(e) => {\r\n                      const cpState = { ...state };\r\n                      cpState.picture.file = e.target.files[0];\r\n                      e.target.value = \"\";\r\n                      setState(cpState);\r\n                    }}\r\n                  />\r\n                  <div className=\"btns-file\">\r\n                    <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n                      <EditIcon />\r\n                    </label>\r\n                    {state.picture.value || state.picture.file ? (\r\n                      <button\r\n                        className=\"delete-image\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          const cpState = { ...state };\r\n                          cpState.picture.value = \"\";\r\n                          cpState.picture.file = null;\r\n                          setState(cpState);\r\n                        }}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Select\r\n                {...state.TypeCompany}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.TypeCompany.value = e.value;\r\n                  cpState.TypeCompany.error = false;\r\n                  cpState.intraCommunityVAT.required = e.requireNoTva;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.intraCommunityVAT}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.intraCommunityVAT.value = e.target.value;\r\n                  cpState.intraCommunityVAT.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <RadioButton\r\n                {...state.gender}\r\n                onChange={(val) => {\r\n                  const cpState = { ...state };\r\n                  cpState.gender.value = val.value;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.lastName}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.lastName.value = e.target.value;\r\n                  cpState.lastName.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.firstName}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.firstName.value = e.target.value;\r\n                  cpState.firstName.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.phone}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.phone.value = getDigits(e.target.value);\r\n                  cpState.phone.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                {...state.email}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.email.value = e.target.value;\r\n                  cpState.email.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n\r\n              <Input\r\n                className=\"password-input\"\r\n                {...state.plainPassword}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.plainPassword.value = e.target.value;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <Input\r\n                className=\"password-input\"\r\n                {...state.confirmPassword}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.confirmPassword.value = e.target.value;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n\r\n              <RadioButton\r\n                {...state.status}\r\n                onChange={(val) => {\r\n                  const cpState = { ...state };\r\n                  cpState.status.value = val.value;\r\n                  cpState.status.error = false;\r\n                  setState(cpState);\r\n                  setMessage(null);\r\n                }}\r\n              />\r\n              <div className=\"btns-alings service-btns-action\">\r\n                <ButtonDef\r\n                  textButton=\"Enregistrer\"\r\n                  spinner={isPending}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    saveUser();\r\n                  }}\r\n                />\r\n              </div>\r\n              {state.id.value ? (\r\n                <>\r\n                  <div className=\"date-create\">\r\n                    créé le :{\" \"}\r\n                    {user.createdAt\r\n                      ? moment(user.createdAt).format(\"DD/MM/YYYY\")\r\n                      : \"\"}\r\n                  </div>\r\n\r\n                  <div className=\"link-voir\">\r\n                    <div>\r\n                      <Link to={getUrlCommands(user)}>\r\n                        {\" \"}\r\n                        {user.totalCommands} commande(s) lié(s){\" \"}\r\n                      </Link>\r\n                    </div>\r\n                    <div>\r\n                      <Link to={getUrlDevis(user)}>\r\n                        {\" \"}\r\n                        {user.totalDevis} devis lié(s){\" \"}\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"link-voir\">\r\n                  <div>\r\n                    <Link to={\"#\"}> 0 commande(s) lié(s) </Link>\r\n                  </div>\r\n                  <div>\r\n                    <Link to={\"#\"}> 0 devis lié(s) </Link>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          </DashboardSide>\r\n        ) : null}\r\n      </BlocAdminContent>\r\n    </AdminBase>\r\n  );\r\n}\r\n"
        }
    ]
}