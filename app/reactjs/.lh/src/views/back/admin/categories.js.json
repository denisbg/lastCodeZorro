{
    "sourceFile": "src/views/back/admin/categories.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 281,
            "patches": [
                {
                    "date": 1708601521006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708601942014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,13 +372,12 @@\n       items.forEach((item, index) => {\r\n         if (startIndex <= index && index <= endIndex) {\r\n           connector({\r\n             method: \"put\",\r\n-            url: `${\r\n-              item[\"@type\"] === \"Universe\"\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n                 ? endPoints.UNIVERSE\r\n                 : endPoints.CATEGORY\r\n-            }/${item.id}`,\r\n+              }/${item.id}`,\r\n             data: { position: index },\r\n             success: (response) => {\r\n               //console.log(response);\r\n             },\r\n@@ -399,11 +398,10 @@\n       setState(clearErrors(state));\r\n       if (state.name.value) {\r\n         connector({\r\n           method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${\r\n-            state.id.value ? \"/\" + state.id.value : \"\"\r\n-          }`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n           data: {\r\n             name: state.name.value,\r\n             position: state.position.value,\r\n             universe: state.universe.value,\r\n@@ -480,11 +478,10 @@\n \r\n   const submitUniverse = (cpState) => {\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${\r\n-        cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-      }`,\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n       data: {\r\n         name: cpState.name.value,\r\n         nameCategory: cpState.nameCategory.value,\r\n         nameSubCategory: cpState.nameSubCategory.value,\r\n@@ -531,9 +528,9 @@\n           saveImageHome(cpState);\r\n         }\r\n         else if (state.imageVitrine1.file) {\r\n           saveImageVitrine1(cpState);\r\n-          \r\n+\r\n         } else if (files.length) {\r\n           savePictures(cpState);\r\n         } else {\r\n           submitUniverse(cpState);\r\n@@ -678,10 +675,10 @@\n   const getPathImage = (image) =>\r\n     image.file\r\n       ? URL.createObjectURL(image.file)\r\n       : image.value\r\n-      ? vars.pathImage + image.value\r\n-      : noImage;\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n \r\n   const refreshItem = (item, id, action = null) => {\r\n     if (item[\"@type\"] === \"Universe\") {\r\n       item.children = item.categories;\r\n@@ -777,9 +774,9 @@\n         universe: null,\r\n         parent: null,\r\n         nameCategory: \"Catégorie(s)\",\r\n         nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory:false\r\n+        requireSearchSubCategory: false\r\n       };\r\n     }\r\n \r\n     setActiveCategory(\r\n@@ -854,12 +851,12 @@\n               <h2 className=\"title-side-dashboard\">\r\n                 {category.name\r\n                   ? category.name\r\n                   : category[\"@type\"] === \"Universe\"\r\n-                  ? \"Ajouter un univers\"\r\n-                  : category.level === 0\r\n-                  ? \"Ajouter une catégorie\"\r\n-                  : \"Ajouter une sous-catégorie\"}\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n               </h2>\r\n               <Form\r\n                 className={\r\n                   category[\"@type\"] === \"Universe\"\r\n@@ -931,11 +928,10 @@\n                     />\r\n \r\n                     <p className=\"form-label-title\">Image *</p>\r\n                     <div\r\n-                      className={`image-service ${\r\n-                        state.image.error ? \"form-error\" : \"\"\r\n-                      }`}\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n                     >\r\n                       <img src={getPathImage(state.image)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n@@ -973,11 +969,10 @@\n                       </div>\r\n                     </div>\r\n                     <p className=\"form-label-title\">Image d'accueil</p>\r\n                     <div\r\n-                      className={`image-service ${\r\n-                        state.imageHome.error ? \"form-error\" : \"\"\r\n-                      }`}\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n                     >\r\n                       <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n@@ -1014,8 +1009,52 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageVitrine1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageVitrine1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageVitrine1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageVitrine1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageVitrine1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageVitrine1.value || state.imageVitrine1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageVitrine1.value = \"\";\r\n+                              cpState.imageVitrine1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    \r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1708602120732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -597,18 +597,18 @@\n     }\r\n   };\r\n \r\n   const saveImageVitrine1 = (cpState) => {\r\n-    if (cpState.Imagevitrine1.file) {\r\n+    if (cpState.ImageVitrine1.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.Imagevitrine1.file);\r\n+      data.append(\"file\", cpState.ImageVitrine1.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.Imagevitrine1.file = null;\r\n-          cpState.Imagevitrine1.value = response.data.contentUrl;\r\n+          cpState.ImageVitrine1.file = null;\r\n+          cpState.ImageVitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708602255317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -597,18 +597,18 @@\n     }\r\n   };\r\n \r\n   const saveImageVitrine1 = (cpState) => {\r\n-    if (cpState.ImageVitrine1.file) {\r\n+    if (cpState.Imagevitrine1.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.ImageVitrine1.file);\r\n+      data.append(\"file\", cpState.Imagevitrine1.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.ImageVitrine1.file = null;\r\n-          cpState.ImageVitrine1.value = response.data.contentUrl;\r\n+          cpState.Imagevitrine1.file = null;\r\n+          cpState.Imagevitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708602400001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,25 +114,25 @@\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     imageVitrine1: {\r\n-      name: \"imagevitrine1\",\r\n+      name: \"imageVitrine1\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     imageVitrine2: {\r\n-      name: \"imagevitrine2\",\r\n+      name: \"imageVitrine2\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     imageVitrine3: {\r\n-      name: \"imagevitrine3\",\r\n+      name: \"imageVitrine3\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n"
                },
                {
                    "date": 1708602533856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,10 +137,20 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n+    libelleAnatomie: {\r\n+      name: \"libelleAnatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie d'une chaussure\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n     imageAnatomie: {\r\n-      name: \"imageanatomie\",\r\n+      name: \"imageAnatomie\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n"
                },
                {
                    "date": 1708602727587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1061,9 +1061,9 @@\n                           \"\"\r\n                         )}\r\n                       </div>\r\n                     </div>\r\n-\r\n+                \r\n                     \r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n"
                },
                {
                    "date": 1708603691398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -607,18 +607,18 @@\n     }\r\n   };\r\n \r\n   const saveImageVitrine1 = (cpState) => {\r\n-    if (cpState.Imagevitrine1.file) {\r\n+    if (cpState.ImageVitrine1.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.Imagevitrine1.file);\r\n+      data.append(\"file\", cpState.ImageVitrine1.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.Imagevitrine1.file = null;\r\n-          cpState.Imagevitrine1.value = response.data.contentUrl;\r\n+          cpState.ImageVitrine1.file = null;\r\n+          cpState.ImageVitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708604060536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -500,8 +500,9 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n+        imageVitrine1: cpState.imageVitrine1.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n@@ -607,18 +608,18 @@\n     }\r\n   };\r\n \r\n   const saveImageVitrine1 = (cpState) => {\r\n-    if (cpState.ImageVitrine1.file) {\r\n+    if (cpState.imageVitrine1.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.ImageVitrine1.file);\r\n+      data.append(\"file\", cpState.imageVitrine1.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.ImageVitrine1.file = null;\r\n-          cpState.ImageVitrine1.value = response.data.contentUrl;\r\n+          cpState.imageVitrine1.file = null;\r\n+          cpState.imageVitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708604490230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -633,8 +633,86 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n+  const saveImageVitrine2 = (cpState) => {\r\n+    if (cpState.imageVitrine2.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageVitrine2.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageVitrine2.file = null;\r\n+          cpState.imageVitrine2.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveImageVitrine3 = (cpState) => {\r\n+    if (cpState.imageVitrine3.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageVitrine3.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageVitrine3.file = null;\r\n+          cpState.imageVitrine3.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveImageAnatomie = (cpState) => {\r\n+    if (cpState.imageAnatomie.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageAnatomie.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageAnatomie.file = null;\r\n+          cpState.imageAnatomie.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n@@ -1062,8 +1140,50 @@\n                           \"\"\r\n                         )}\r\n                       </div>\r\n                     </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n+<div\r\n+  className={`image-service ${state.imageVitrine2.error ? \"form-error\" : \"\"\r\n+    }`}\r\n+>\r\n+  <img src={getPathImage(state.imageVitrine2)} alt=\"\" />\r\n+  <input\r\n+    type=\"file\"\r\n+    name=\"file\"\r\n+    id=\"uploadImageVitrine2\"\r\n+    accept=\"image/png, image/jpeg\"\r\n+    onChange={(e) => {\r\n+      const cpState = { ...state };\r\n+      cpState.imageVitrine2.file = e.target.files[0];\r\n+      e.target.value = \"\";\r\n+      setState(cpState);\r\n+      setMessage(null);\r\n+    }}\r\n+  />\r\n+  <div className=\"btns-file\">\r\n+    <label htmlFor=\"uploadImageVitrine2\" className=\"edit-image\">\r\n+      <EditIcon />\r\n+    </label>\r\n+    {state.imageVitrine2.value || state.imageVitrine2.file ? (\r\n+      <button\r\n+        className=\"delete-image\"\r\n+        onClick={(e) => {\r\n+          e.preventDefault();\r\n+          const cpState = { ...state };\r\n+          cpState.imageVitrine2.value = \"\";\r\n+          cpState.imageVitrine2.file = null;\r\n+          setState(cpState);\r\n+        }}\r\n+      >\r\n+        <DeleteIcon />\r\n+      </button>\r\n+    ) : (\r\n+      \"\"\r\n+    )}\r\n+  </div>\r\n+</div>\r\n                 \r\n                     \r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n"
                },
                {
                    "date": 1708604562733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1182,8 +1182,51 @@\n       \"\"\r\n     )}\r\n   </div>\r\n </div>\r\n+\r\n+\r\n+<p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+<div\r\n+  className={`image-service ${state.imageVitrine3.error ? \"form-error\" : \"\"\r\n+    }`}\r\n+>\r\n+  <img src={getPathImage(state.imageVitrine3)} alt=\"\" />\r\n+  <input\r\n+    type=\"file\"\r\n+    name=\"file\"\r\n+    id=\"uploadImageVitrine3\"\r\n+    accept=\"image/png, image/jpeg\"\r\n+    onChange={(e) => {\r\n+      const cpState = { ...state };\r\n+      cpState.imageVitrine3.file = e.target.files[0];\r\n+      e.target.value = \"\";\r\n+      setState(cpState);\r\n+      setMessage(null);\r\n+    }}\r\n+  />\r\n+  <div className=\"btns-file\">\r\n+    <label htmlFor=\"uploadImageVitrine3\" className=\"edit-image\">\r\n+      <EditIcon />\r\n+    </label>\r\n+    {state.imageVitrine3.value || state.imageVitrine3.file ? (\r\n+      <button\r\n+        className=\"delete-image\"\r\n+        onClick={(e) => {\r\n+          e.preventDefault();\r\n+          const cpState = { ...state };\r\n+          cpState.imageVitrine3.value = \"\";\r\n+          cpState.imageVitrine3.file = null;\r\n+          setState(cpState);\r\n+        }}\r\n+      >\r\n+        <DeleteIcon />\r\n+      </button>\r\n+    ) : (\r\n+      \"\"\r\n+    )}\r\n+  </div>\r\n+</div>\r\n                 \r\n                     \r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n"
                },
                {
                    "date": 1708605378455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,8 +105,19 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n+    bonusReparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n     imageHome: {\r\n       name: \"imageHome\",\r\n       value: null,\r\n       file: null,\r\n@@ -383,10 +394,10 @@\n         if (startIndex <= index && index <= endIndex) {\r\n           connector({\r\n             method: \"put\",\r\n             url: `${item[\"@type\"] === \"Universe\"\r\n-                ? endPoints.UNIVERSE\r\n-                : endPoints.CATEGORY\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n               }/${item.id}`,\r\n             data: { position: index },\r\n             success: (response) => {\r\n               //console.log(response);\r\n@@ -501,8 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n+        bonusReparation:cpState.bonusReparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n@@ -1098,9 +1110,21 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n+                    \r\n+              <RadioButton\r\n+                {...state.bonusReparation}\r\n+                onChange={(val) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.bonusReparation.value = val.value;\r\n+                  cpState.bonusReparation.error = false;\r\n+                  setState(cpState);\r\n+                  setMessage(null);\r\n+                }}\r\n+              />\r\n \r\n+\r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n                       className={`image-service ${state.imageVitrine1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n@@ -1142,93 +1166,93 @@\n                       </div>\r\n                     </div>\r\n \r\n                     <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-<div\r\n-  className={`image-service ${state.imageVitrine2.error ? \"form-error\" : \"\"\r\n-    }`}\r\n->\r\n-  <img src={getPathImage(state.imageVitrine2)} alt=\"\" />\r\n-  <input\r\n-    type=\"file\"\r\n-    name=\"file\"\r\n-    id=\"uploadImageVitrine2\"\r\n-    accept=\"image/png, image/jpeg\"\r\n-    onChange={(e) => {\r\n-      const cpState = { ...state };\r\n-      cpState.imageVitrine2.file = e.target.files[0];\r\n-      e.target.value = \"\";\r\n-      setState(cpState);\r\n-      setMessage(null);\r\n-    }}\r\n-  />\r\n-  <div className=\"btns-file\">\r\n-    <label htmlFor=\"uploadImageVitrine2\" className=\"edit-image\">\r\n-      <EditIcon />\r\n-    </label>\r\n-    {state.imageVitrine2.value || state.imageVitrine2.file ? (\r\n-      <button\r\n-        className=\"delete-image\"\r\n-        onClick={(e) => {\r\n-          e.preventDefault();\r\n-          const cpState = { ...state };\r\n-          cpState.imageVitrine2.value = \"\";\r\n-          cpState.imageVitrine2.file = null;\r\n-          setState(cpState);\r\n-        }}\r\n-      >\r\n-        <DeleteIcon />\r\n-      </button>\r\n-    ) : (\r\n-      \"\"\r\n-    )}\r\n-  </div>\r\n-</div>\r\n+                    <div\r\n+                      className={`image-service ${state.imageVitrine2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageVitrine2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageVitrine2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageVitrine2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageVitrine2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageVitrine2.value || state.imageVitrine2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageVitrine2.value = \"\";\r\n+                              cpState.imageVitrine2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n \r\n \r\n-<p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-<div\r\n-  className={`image-service ${state.imageVitrine3.error ? \"form-error\" : \"\"\r\n-    }`}\r\n->\r\n-  <img src={getPathImage(state.imageVitrine3)} alt=\"\" />\r\n-  <input\r\n-    type=\"file\"\r\n-    name=\"file\"\r\n-    id=\"uploadImageVitrine3\"\r\n-    accept=\"image/png, image/jpeg\"\r\n-    onChange={(e) => {\r\n-      const cpState = { ...state };\r\n-      cpState.imageVitrine3.file = e.target.files[0];\r\n-      e.target.value = \"\";\r\n-      setState(cpState);\r\n-      setMessage(null);\r\n-    }}\r\n-  />\r\n-  <div className=\"btns-file\">\r\n-    <label htmlFor=\"uploadImageVitrine3\" className=\"edit-image\">\r\n-      <EditIcon />\r\n-    </label>\r\n-    {state.imageVitrine3.value || state.imageVitrine3.file ? (\r\n-      <button\r\n-        className=\"delete-image\"\r\n-        onClick={(e) => {\r\n-          e.preventDefault();\r\n-          const cpState = { ...state };\r\n-          cpState.imageVitrine3.value = \"\";\r\n-          cpState.imageVitrine3.file = null;\r\n-          setState(cpState);\r\n-        }}\r\n-      >\r\n-        <DeleteIcon />\r\n-      </button>\r\n-    ) : (\r\n-      \"\"\r\n-    )}\r\n-  </div>\r\n-</div>\r\n-                \r\n-                    \r\n+                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageVitrine3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageVitrine3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageVitrine3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageVitrine3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageVitrine3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageVitrine3.value || state.imageVitrine3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageVitrine3.value = \"\";\r\n+                              cpState.imageVitrine3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1708606750001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusReparation:cpState.bonusReparation.value,\r\n+        bonusReparation:cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708606820457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusReparation:cpState.bonusreparation.value,\r\n+        bonusReparation:cpState.bonusReparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708606906042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,12 +106,12 @@\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     bonusReparation: {\r\n-      name: \"bonusreparation\",\r\n+      name: \"bonusReparation\",\r\n       label: \"Bonus réparation\",\r\n       required: false,\r\n-      id: \"bonusreparation\",\r\n+      id: \"bonusReparation\",\r\n       value: \"0\",\r\n       options: [\r\n         { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n         { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n"
                },
                {
                    "date": 1708606996720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusReparation:cpState.bonusReparation.value,\r\n+        bonusreparation:cpState.bonusReparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708607126930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,12 +106,12 @@\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     bonusReparation: {\r\n-      name: \"bonusReparation\",\r\n+      name: \"bonusreparation\",\r\n       label: \"Bonus réparation\",\r\n       required: false,\r\n-      id: \"bonusReparation\",\r\n+      id: \"bonusreparation\",\r\n       value: \"0\",\r\n       options: [\r\n         { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n         { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n"
                },
                {
                    "date": 1708607216350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusreparation:cpState.bonusReparation.value,\r\n+        bonusreparation:cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708607252492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusreparation:cpState.bonusreparation.value,\r\n+        bonusreparation:cpState.bonusReparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708607550583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    bonusReparation: {\r\n+    bonusreparation: {\r\n       name: \"bonusreparation\",\r\n       label: \"Bonus réparation\",\r\n       required: false,\r\n       id: \"bonusreparation\",\r\n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusreparation:cpState.bonusReparation.value,\r\n+        bonusreparation:cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n@@ -1112,13 +1112,13 @@\n                     </div>\r\n \r\n                     \r\n               <RadioButton\r\n-                {...state.bonusReparation}\r\n+                {...state.bonusreparation}\r\n                 onChange={(val) => {\r\n                   const cpState = { ...state };\r\n-                  cpState.bonusReparation.value = val.value;\r\n-                  cpState.bonusReparation.error = false;\r\n+                  cpState.bonusreparation.value = val.value;\r\n+                  cpState.bonusreparation.error = false;\r\n                   setState(cpState);\r\n                   setMessage(null);\r\n                 }}\r\n               />\r\n"
                },
                {
                    "date": 1708607983477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusreparation:cpState.bonusreparation.value,\r\n+        bonusreparation:1,//cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708608107724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusreparation:1,//cpState.bonusreparation.value,\r\n+        bonusreparation:cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1708608202556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,8 +497,9 @@\n     }\r\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n+    console.log(\"MAJ UNIVERSE bonusrepa \",cpState.bonusreparation.value),\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n"
                },
                {
                    "date": 1708608214061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,9 +497,9 @@\n     }\r\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n-    console.log(\"MAJ UNIVERSE bonusrepa \",cpState.bonusreparation.value),\r\n+    console.log(\"MAJ UNIVERSE bonusrepa \",cpState.bonusreparation.value);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n"
                },
                {
                    "date": 1708608996258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -520,8 +520,9 @@\n       },\r\n       success: (response) => {\r\n         refreshItem(response.data, cpState.id.value);\r\n         setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, SUCESS \",response.data);\r\n         msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708609085339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,9 +497,9 @@\n     }\r\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n-    console.log(\"MAJ UNIVERSE bonusrepa \",cpState.bonusreparation.value);\r\n+    console.log(\"MAJ UNIVERSE bonusrepa \", cpState.bonusreparation.value);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n@@ -513,16 +513,16 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n-        bonusreparation:cpState.bonusreparation.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n         refreshItem(response.data, cpState.id.value);\r\n         setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, SUCESS \",response.data);\r\n+        console.log(\"MAJ UNIVERSES, SUCESS \", response.data);\r\n         msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -1070,8 +1070,29 @@\n                           \"\"\r\n                         )}\r\n                       </div>\r\n                     </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n                     <p className=\"form-label-title\">Image d'accueil</p>\r\n                     <div\r\n                       className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n                         }`}\r\n@@ -1112,19 +1133,8 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-                    \r\n-              <RadioButton\r\n-                {...state.bonusreparation}\r\n-                onChange={(val) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.bonusreparation.value = val.value;\r\n-                  cpState.bonusreparation.error = false;\r\n-                  setState(cpState);\r\n-                  setMessage(null);\r\n-                }}\r\n-              />\r\n \r\n \r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n@@ -1271,16 +1281,8 @@\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n                     />\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n                     <div className=\"btns-alings\">\r\n                       {category.name && (\r\n                         <ButtonDef\r\n                           className=\"btn-delete\"\r\n"
                },
                {
                    "date": 1708611050916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -540,9 +540,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file)\r\n+        (state.image.value || state.image.file || state.imageVitrine1.file)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n"
                },
                {
                    "date": 1708611494696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -632,8 +632,9 @@\n         data,\r\n         success: (response) => {\r\n           cpState.imageVitrine1.file = null;\r\n           cpState.imageVitrine1.value = response.data.contentUrl;\r\n+          console.log(\"STEP UNIVERSES\",saveImageVitrine1);\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708611543331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -632,9 +632,9 @@\n         data,\r\n         success: (response) => {\r\n           cpState.imageVitrine1.file = null;\r\n           cpState.imageVitrine1.value = response.data.contentUrl;\r\n-          console.log(\"STEP UNIVERSES\",saveImageVitrine1);\r\n+          console.log(\"STEP DATA VitrineUNIVERSES\",response.data);\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708611633735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -633,8 +633,10 @@\n         success: (response) => {\r\n           cpState.imageVitrine1.file = null;\r\n           cpState.imageVitrine1.value = response.data.contentUrl;\r\n           console.log(\"STEP DATA VitrineUNIVERSES\",response.data);\r\n+          console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.imageVitrine1.value);\r\n+         \r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708611747773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,9 +497,10 @@\n     }\r\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n-    console.log(\"MAJ UNIVERSE bonusrepa \", cpState.bonusreparation.value);\r\n+    console.log(\"STEP MAJ UNIVERSE bonusrepa \", cpState.bonusreparation.value);\r\n+    console.log(\"STEP MAJ UNIVERSE vitriine1 \",cpState.imageVitrine1.value);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n"
                },
                {
                    "date": 1708612610216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -514,8 +514,11 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         imageVitrine1: cpState.imageVitrine1.value,\r\n+        imageVitrine2: cpState.imageVitrine2.value,\r\n+        imageVitrine3: cpState.imageVitrine3.value,\r\n+        imageAnatomie: cpState.imageAnatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n"
                },
                {
                    "date": 1708612659334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,10 +497,10 @@\n     }\r\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n-    console.log(\"STEP MAJ UNIVERSE bonusrepa \", cpState.bonusreparation.value);\r\n-    console.log(\"STEP MAJ UNIVERSE vitriine1 \",cpState.imageVitrine1.value);\r\n+ \r\n+    console.log(\"STEP MAJ UNIVERSE vitriine1 \",cpState);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n@@ -974,9 +974,9 @@\n                     : \"form-cat-itemƒ\"\r\n                 }\r\n               >\r\n                 {message && message.type && message.text ? (\r\n-                  <span\r\n+                  <spanimageVitrine3\r\n                     className={\r\n                       message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                     }\r\n                   >\r\n"
                },
                {
                    "date": 1708612679338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -974,9 +974,9 @@\n                     : \"form-cat-itemƒ\"\r\n                 }\r\n               >\r\n                 {message && message.type && message.text ? (\r\n-                  <spanimageVitrine3\r\n+                  <span imageVitrine3\r\n                     className={\r\n                       message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                     }\r\n                   >\r\n"
                },
                {
                    "date": 1708948142488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -522,11 +522,13 @@\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n       success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n         refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n         setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, SUCESS \", response.data);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n         msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708948191285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -498,9 +498,9 @@\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n  \r\n-    console.log(\"STEP MAJ UNIVERSE vitriine1 \",cpState);\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \",cpState);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n"
                },
                {
                    "date": 1708951825965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,10 +124,10 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    imageVitrine1: {\r\n-      name: \"imageVitrine1\",\r\n+    image_vitrine1: {\r\n+      name: \"image_vitrine1\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n@@ -513,9 +513,9 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-        imageVitrine1: cpState.imageVitrine1.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n         imageVitrine2: cpState.imageVitrine2.value,\r\n         imageVitrine3: cpState.imageVitrine3.value,\r\n         imageAnatomie: cpState.imageAnatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n@@ -546,9 +546,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.imageVitrine1.file)\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n@@ -557,10 +557,10 @@\n           saveImage(cpState);\r\n         } else if (state.imageHome.file) {\r\n           saveImageHome(cpState);\r\n         }\r\n-        else if (state.imageVitrine1.file) {\r\n-          saveImageVitrine1(cpState);\r\n+        else if (state.image_vitrine1.file) {\r\n+          saveimage_vitrine1(cpState);\r\n \r\n         } else if (files.length) {\r\n           savePictures(cpState);\r\n         } else {\r\n@@ -627,21 +627,21 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveImageVitrine1 = (cpState) => {\r\n-    if (cpState.imageVitrine1.file) {\r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.imageVitrine1.file);\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.imageVitrine1.file = null;\r\n-          cpState.imageVitrine1.value = response.data.contentUrl;\r\n+          cpState.image_vitrine1.file = null;\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"STEP DATA VitrineUNIVERSES\",response.data);\r\n-          console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.imageVitrine1.value);\r\n+          console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n          \r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n@@ -1146,37 +1146,37 @@\n \r\n \r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n-                      className={`image-service ${state.imageVitrine1.error ? \"form-error\" : \"\"\r\n+                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.imageVitrine1)} alt=\"\" />\r\n+                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n-                        id=\"uploadImageVitrine1\"\r\n+                        id=\"uploadimage_vitrine1\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n-                          cpState.imageVitrine1.file = e.target.files[0];\r\n+                          cpState.image_vitrine1.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n                       <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageVitrine1\" className=\"edit-image\">\r\n+                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n                           <EditIcon />\r\n                         </label>\r\n-                        {state.imageVitrine1.value || state.imageVitrine1.file ? (\r\n+                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n                           <button\r\n                             className=\"delete-image\"\r\n                             onClick={(e) => {\r\n                               e.preventDefault();\r\n                               const cpState = { ...state };\r\n-                              cpState.imageVitrine1.value = \"\";\r\n-                              cpState.imageVitrine1.file = null;\r\n+                              cpState.image_vitrine1.value = \"\";\r\n+                              cpState.image_vitrine1.file = null;\r\n                               setState(cpState);\r\n                             }}\r\n                           >\r\n                             <DeleteIcon />\r\n"
                },
                {
                    "date": 1708952211581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,10 +132,10 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    imageVitrine2: {\r\n-      name: \"imageVitrine2\",\r\n+    image_vitrine2: {\r\n+      name: \"image_vitrine2\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n@@ -514,9 +514,9 @@\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n-        imageVitrine2: cpState.imageVitrine2.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n         imageVitrine3: cpState.imageVitrine3.value,\r\n         imageAnatomie: cpState.imageAnatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n@@ -656,19 +656,19 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveImageVitrine2 = (cpState) => {\r\n-    if (cpState.imageVitrine2.file) {\r\n+  const saveimage_vitrine2 = (cpState) => {\r\n+    if (cpState.image_vitrine2.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.imageVitrine2.file);\r\n+      data.append(\"file\", cpState.image_vitrine2.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.imageVitrine2.file = null;\r\n-          cpState.imageVitrine2.value = response.data.contentUrl;\r\n+          cpState.image_vitrine2.file = null;\r\n+          cpState.image_vitrine2.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n@@ -1188,37 +1188,37 @@\n                     </div>\r\n \r\n                     <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n                     <div\r\n-                      className={`image-service ${state.imageVitrine2.error ? \"form-error\" : \"\"\r\n+                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.imageVitrine2)} alt=\"\" />\r\n+                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n-                        id=\"uploadImageVitrine2\"\r\n+                        id=\"uploadimage_vitrine2\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n-                          cpState.imageVitrine2.file = e.target.files[0];\r\n+                          cpState.image_vitrine2.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n                       <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageVitrine2\" className=\"edit-image\">\r\n+                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n                           <EditIcon />\r\n                         </label>\r\n-                        {state.imageVitrine2.value || state.imageVitrine2.file ? (\r\n+                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n                           <button\r\n                             className=\"delete-image\"\r\n                             onClick={(e) => {\r\n                               e.preventDefault();\r\n                               const cpState = { ...state };\r\n-                              cpState.imageVitrine2.value = \"\";\r\n-                              cpState.imageVitrine2.file = null;\r\n+                              cpState.image_vitrine2.value = \"\";\r\n+                              cpState.image_vitrine2.file = null;\r\n                               setState(cpState);\r\n                             }}\r\n                           >\r\n                             <DeleteIcon />\r\n"
                },
                {
                    "date": 1708952398655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,10 +140,10 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    imageVitrine3: {\r\n-      name: \"imageVitrine3\",\r\n+    image_vitrine3: {\r\n+      name: \"image_vitrine3\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n@@ -515,9 +515,9 @@\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n-        imageVitrine3: cpState.imageVitrine3.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n         imageAnatomie: cpState.imageAnatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n@@ -682,19 +682,19 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveImageVitrine3 = (cpState) => {\r\n-    if (cpState.imageVitrine3.file) {\r\n+  const saveimage_vitrine3 = (cpState) => {\r\n+    if (cpState.image_vitrine3.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.imageVitrine3.file);\r\n+      data.append(\"file\", cpState.image_vitrine3.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.imageVitrine3.file = null;\r\n-          cpState.imageVitrine3.value = response.data.contentUrl;\r\n+          cpState.image_vitrine3.file = null;\r\n+          cpState.image_vitrine3.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n@@ -976,9 +976,9 @@\n                     : \"form-cat-itemƒ\"\r\n                 }\r\n               >\r\n                 {message && message.type && message.text ? (\r\n-                  <span imageVitrine3\r\n+                  <span image_vitrine3\r\n                     className={\r\n                       message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                     }\r\n                   >\r\n@@ -1231,37 +1231,37 @@\n \r\n \r\n                     <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n                     <div\r\n-                      className={`image-service ${state.imageVitrine3.error ? \"form-error\" : \"\"\r\n+                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.imageVitrine3)} alt=\"\" />\r\n+                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n-                        id=\"uploadImageVitrine3\"\r\n+                        id=\"uploadimage_vitrine3\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n-                          cpState.imageVitrine3.file = e.target.files[0];\r\n+                          cpState.image_vitrine3.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n                       <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageVitrine3\" className=\"edit-image\">\r\n+                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n                           <EditIcon />\r\n                         </label>\r\n-                        {state.imageVitrine3.value || state.imageVitrine3.file ? (\r\n+                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n                           <button\r\n                             className=\"delete-image\"\r\n                             onClick={(e) => {\r\n                               e.preventDefault();\r\n                               const cpState = { ...state };\r\n-                              cpState.imageVitrine3.value = \"\";\r\n-                              cpState.imageVitrine3.file = null;\r\n+                              cpState.image_vitrine3.value = \"\";\r\n+                              cpState.image_vitrine3.file = null;\r\n                               setState(cpState);\r\n                             }}\r\n                           >\r\n                             <DeleteIcon />\r\n"
                },
                {
                    "date": 1708953685921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1409 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine1: {\r\n+      name: \"image_vitrine1\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine2: {\r\n+      name: \"image_vitrine2\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine3: {\r\n+      name: \"image_vitrine3\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    libelleAnatomie: {\r\n+      name: \"libelleAnatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie d'une chaussure\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    imageAnatomie: {\r\n+      name: \"imageAnatomie\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+ \r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \",cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n+        imageAnatomie: cpState.imageAnatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        setState(cpState);\r\n+        if (state.image.file) {\r\n+          saveImage(cpState);\r\n+        } else if (state.imageHome.file) {\r\n+          saveImageHome(cpState);\r\n+        }\r\n+        else if (state.image_vitrine1.file) {\r\n+          saveimage_vitrine1(cpState);\r\n+\r\n+        } else if (files.length) {\r\n+          savePictures(cpState);\r\n+        } else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine1.file = null;\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          console.log(\"STEP DATA VitrineUNIVERSES\",response.data);\r\n+          console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n+         \r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine2 = (cpState) => {\r\n+    if (cpState.image_vitrine2.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine2.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine2.file = null;\r\n+          cpState.image_vitrine2.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine3 = (cpState) => {\r\n+    if (cpState.image_vitrine3.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine3.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine3.file = null;\r\n+          cpState.image_vitrine3.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveImageAnatomie = (cpState) => {\r\n+    if (cpState.imageAnatomie.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageAnatomie.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageAnatomie.file = null;\r\n+          cpState.imageAnatomie.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        image_vitrine1: null,\r\n+        image_vitrine3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span image_vitrine3\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine1.value = \"\";\r\n+                              cpState.image_vitrine1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine2.value = \"\";\r\n+                              cpState.image_vitrine2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine3.value = \"\";\r\n+                              cpState.image_vitrine3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708953771909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -901,8 +901,9 @@\n           : {},\r\n         image: null,\r\n         imageHome: null,\r\n         image_vitrine1: null,\r\n+        image_vitrine2: null,\r\n         image_vitrine3: null,\r\n         pictures: [],\r\n         nameCategory: item?.nameCategory || \"\",\r\n         nameSubCategory: item?.nameSubCategory || \"\",\r\n@@ -1406,1411 +1407,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine1: {\r\n-      name: \"image_vitrine1\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine2: {\r\n-      name: \"image_vitrine2\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine3: {\r\n-      name: \"image_vitrine3\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    libelleAnatomie: {\r\n-      name: \"libelleAnatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie d'une chaussure\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    imageAnatomie: {\r\n-      name: \"imageAnatomie\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n- \r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \",cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n-        imageAnatomie: cpState.imageAnatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        setState(cpState);\r\n-        if (state.image.file) {\r\n-          saveImage(cpState);\r\n-        } else if (state.imageHome.file) {\r\n-          saveImageHome(cpState);\r\n-        }\r\n-        else if (state.image_vitrine1.file) {\r\n-          saveimage_vitrine1(cpState);\r\n-\r\n-        } else if (files.length) {\r\n-          savePictures(cpState);\r\n-        } else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          console.log(\"STEP DATA VitrineUNIVERSES\",response.data);\r\n-          console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n-         \r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine2 = (cpState) => {\r\n-    if (cpState.image_vitrine2.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine2.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine2.file = null;\r\n-          cpState.image_vitrine2.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine3 = (cpState) => {\r\n-    if (cpState.image_vitrine3.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine3.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine3.file = null;\r\n-          cpState.image_vitrine3.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveImageAnatomie = (cpState) => {\r\n-    if (cpState.imageAnatomie.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageAnatomie.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageAnatomie.file = null;\r\n-          cpState.imageAnatomie.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span image_vitrine3\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine1.value = \"\";\r\n-                              cpState.image_vitrine1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine2.value = \"\";\r\n-                              cpState.image_vitrine2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine3.value = \"\";\r\n-                              cpState.image_vitrine3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708954668253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,10 +158,10 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-    imageAnatomie: {\r\n-      name: \"imageAnatomie\",\r\n+    image_anatomie: {\r\n+      name: \"image_anatomie\",\r\n       value: null,\r\n       file: null,\r\n       required: false,\r\n       error: false,\r\n@@ -516,9 +516,9 @@\n         imageHome: cpState.imageHome.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n-        imageAnatomie: cpState.imageAnatomie.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n@@ -708,19 +708,19 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveImageAnatomie = (cpState) => {\r\n-    if (cpState.imageAnatomie.file) {\r\n+  const saveimage_anatomie = (cpState) => {\r\n+    if (cpState.image_anatomie.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.imageAnatomie.file);\r\n+      data.append(\"file\", cpState.image_anatomie.file);\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n-          cpState.imageAnatomie.file = null;\r\n-          cpState.imageAnatomie.value = response.data.contentUrl;\r\n+          cpState.image_anatomie.file = null;\r\n+          cpState.image_anatomie.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n@@ -979,9 +979,9 @@\n                     : \"form-cat-itemƒ\"\r\n                 }\r\n               >\r\n                 {message && message.type && message.text ? (\r\n-                  <span image_vitrine3\r\n+                  <span \r\n                     className={\r\n                       message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                     }\r\n                   >\r\n@@ -1274,9 +1274,52 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n+                    <p className=\"form-label-title\">Image Anatomie</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_anatomie\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_anatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_anatomie.value = \"\";\r\n+                              cpState.image_anatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n \r\n+\r\n+\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1708958502586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,12 +148,12 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    libelleAnatomie: {\r\n-      name: \"libelleAnatomie\",\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n       label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie d'une chaussure\",\r\n+      placeholder: \"anatomie\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n@@ -516,8 +516,9 @@\n         imageHome: cpState.imageHome.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n+        labelanatonomie: cpState.labelanatonomie.value,\r\n         image_anatomie: cpState.image_anatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n@@ -1040,8 +1041,16 @@\n                         cpState.description.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+                     <Input\r\n+                      {...state.labelanatonomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatonomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n \r\n                     <p className=\"form-label-title\">Image *</p>\r\n                     <div\r\n                       className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n"
                },
                {
                    "date": 1708960563632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,10 +497,10 @@\n     }\r\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n- \r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \",cpState);\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n@@ -557,16 +557,14 @@\n         if (state.image.file) {\r\n           saveImage(cpState);\r\n         } else if (state.imageHome.file) {\r\n           saveImageHome(cpState);\r\n-        }\r\n-        else if (state.image_vitrine1.file) {\r\n-          saveimage_vitrine1(cpState);\r\n-\r\n+        } else if (state.image_vitrine1.file) {\r\n+            saveimage_vitrine1(cpState);\r\n         } else if (files.length) {\r\n-          savePictures(cpState);\r\n+            savePictures(cpState);\r\n         } else {\r\n-          submitUniverse(cpState);\r\n+            submitUniverse(cpState);\r\n         }\r\n       } else {\r\n         const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n         msgErrors({\r\n@@ -639,11 +637,11 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          console.log(\"STEP DATA VitrineUNIVERSES\",response.data);\r\n+          console.log(\"STEP DATA VitrineUNIVERSES\", response.data);\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n-         \r\n+\r\n           setState(cpState);\r\n           savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n@@ -980,9 +978,9 @@\n                     : \"form-cat-itemƒ\"\r\n                 }\r\n               >\r\n                 {message && message.type && message.text ? (\r\n-                  <span \r\n+                  <span\r\n                     className={\r\n                       message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                     }\r\n                   >\r\n@@ -1041,9 +1039,9 @@\n                         cpState.description.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-                     <Input\r\n+                    <Input\r\n                       {...state.labelanatonomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.labelanatonomie.value = e.target.value;\r\n"
                },
                {
                    "date": 1708960758068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,9 @@\n       errorMessage: \"\",\r\n     },\r\n     labelanatomie: {\r\n       name: \"labelanatomie\",\r\n+      id:\"labelanatomie\",\r\n       label: \"Libellé rubrique anatomie\",\r\n       placeholder: \"anatomie\",\r\n       value: \"\",\r\n       error: false,\r\n"
                },
                {
                    "date": 1708960993280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -517,9 +517,9 @@\n         imageHome: cpState.imageHome.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n-        labelanatonomie: cpState.labelanatonomie.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n         image_anatomie: cpState.image_anatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n@@ -1041,12 +1041,12 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <Input\r\n-                      {...state.labelanatonomie}\r\n+                      {...state.labelanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.labelanatonomie.value = e.target.value;\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n"
                },
                {
                    "date": 1708961369725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file)\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n"
                },
                {
                    "date": 1708961606378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,11 +562,12 @@\n         } else if (state.image_vitrine1.file) {\r\n             saveimage_vitrine1(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n-        } else {\r\n+        } \r\n+        //else {\r\n             submitUniverse(cpState);\r\n-        }\r\n+        //}\r\n       } else {\r\n         const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n         msgErrors({\r\n           name: !state.name.value,\r\n"
                },
                {
                    "date": 1708962537657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -554,20 +554,24 @@\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n         setState(cpState);\r\n+        console.log(\"Save image \")\r\n         if (state.image.file) {\r\n+          console.log(\"Step Save image \", state.image.file);\r\n           saveImage(cpState);\r\n         } else if (state.imageHome.file) {\r\n+          console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n+          console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1);\r\n             saveimage_vitrine1(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n-        //else {\r\n+        else {\r\n             submitUniverse(cpState);\r\n-        //}\r\n+        }\r\n       } else {\r\n         const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n         msgErrors({\r\n           name: !state.name.value,\r\n"
                },
                {
                    "date": 1708963002720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,9 +562,9 @@\n         } else if (state.imageHome.file) {\r\n           console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n-          console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1);\r\n+          console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.file);\r\n             saveimage_vitrine1(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n"
                },
                {
                    "date": 1708963375893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -564,8 +564,9 @@\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n           console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.file);\r\n             saveimage_vitrine1(cpState);\r\n+            submitUniverse(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n         else {\r\n"
                },
                {
                    "date": 1708963685787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -564,9 +564,9 @@\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n           console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.file);\r\n             saveimage_vitrine1(cpState);\r\n-            submitUniverse(cpState);\r\n+            //submitUniverse(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n         else {\r\n@@ -637,8 +637,9 @@\n   const saveimage_vitrine1 = (cpState) => {\r\n     if (cpState.image_vitrine1.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n"
                },
                {
                    "date": 1708963845566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -638,8 +638,10 @@\n     if (cpState.image_vitrine1.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.image_vitrine1.file);\r\n       console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n+      console.log(\"warning check\", cpState.image_vitrine1 );\r\n+      \r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n"
                },
                {
                    "date": 1708964722396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -563,8 +563,9 @@\n           console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n           console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.file);\r\n+          console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.file);\r\n             saveimage_vitrine1(cpState);\r\n             //submitUniverse(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n"
                },
                {
                    "date": 1708964790251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,10 +562,10 @@\n         } else if (state.imageHome.file) {\r\n           console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n-          console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.file);\r\n-          console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.file);\r\n+          console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.value);\r\n+          console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.value);\r\n             saveimage_vitrine1(cpState);\r\n             //submitUniverse(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n"
                },
                {
                    "date": 1708964857032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,8 +562,9 @@\n         } else if (state.imageHome.file) {\r\n           console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n+          console.log(\"Step Save image Vitrine 1 file \", state.image_vitrine1.file);\r\n           console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.value);\r\n           console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.value);\r\n             saveimage_vitrine1(cpState);\r\n             //submitUniverse(cpState);\r\n"
                },
                {
                    "date": 1708966001586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -563,9 +563,9 @@\n           console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n         } else if (state.image_vitrine1.file) {\r\n           console.log(\"Step Save image Vitrine 1 file \", state.image_vitrine1.file);\r\n-          console.log(\"Step Save image Vitrine 1 \", state.image_vitrine1.value);\r\n+          console.log(\"Step Save image Vitrine value 1 \", state.image_vitrine1.value);\r\n           console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.value);\r\n             saveimage_vitrine1(cpState);\r\n             //submitUniverse(cpState);\r\n         } else if (files.length) {\r\n@@ -653,9 +653,10 @@\n           console.log(\"STEP DATA VitrineUNIVERSES\", response.data);\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n \r\n           setState(cpState);\r\n-          savePictures(cpState);\r\n+          submitUniverse(cpState);\r\n+          \r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n           msgErrors({ msg });\r\n@@ -667,86 +668,10 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveimage_vitrine2 = (cpState) => {\r\n-    if (cpState.image_vitrine2.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine2.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine2.file = null;\r\n-          cpState.image_vitrine2.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n+  \r\n \r\n-  const saveimage_vitrine3 = (cpState) => {\r\n-    if (cpState.image_vitrine3.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine3.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine3.file = null;\r\n-          cpState.image_vitrine3.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_anatomie = (cpState) => {\r\n-    if (cpState.image_anatomie.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_anatomie.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_anatomie.file = null;\r\n-          cpState.image_anatomie.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n"
                },
                {
                    "date": 1708966284443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -649,12 +649,13 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          console.log(\"STEP DATA VitrineUNIVERSES\", response.data);\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n \r\n           setState(cpState);\r\n+          console.log(\"STEP DATA VitrineUNIVERSES check value\", cpState.image_vitrine1.value);\r\n+\r\n           submitUniverse(cpState);\r\n           \r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708966387213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -652,9 +652,9 @@\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n \r\n           setState(cpState);\r\n-          console.log(\"STEP DATA VitrineUNIVERSES check value\", cpState.image_vitrine1.value);\r\n+          console.log(\"STEP DATA S check value\", cpState.image_vitrine1.value);\r\n \r\n           submitUniverse(cpState);\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1708966719424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -653,9 +653,9 @@\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n \r\n           setState(cpState);\r\n           console.log(\"STEP DATA S check value\", cpState.image_vitrine1.value);\r\n-\r\n+          console.log(\"warning check Sucess on vitrine1\", cpState );\r\n           submitUniverse(cpState);\r\n           \r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708966874820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -652,10 +652,10 @@\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n \r\n           setState(cpState);\r\n-          console.log(\"STEP DATA S check value\", cpState.image_vitrine1.value);\r\n-          console.log(\"warning check Sucess on vitrine1\", cpState );\r\n+          console.log(\"STEP DATA S check value\", state.image_vitrine1.value);\r\n+          console.log(\"warning check Success on vitrine1\", state );\r\n           submitUniverse(cpState);\r\n           \r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708967282483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -650,13 +650,13 @@\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n-\r\n+          console.log(\"STEP DATA before setstate S check value\", state.image_vitrine1.value);\r\n           setState(cpState);\r\n-          console.log(\"STEP DATA S check value\", state.image_vitrine1.value);\r\n-          console.log(\"warning check Success on vitrine1\", state );\r\n-          submitUniverse(cpState);\r\n+          console.log(\"STEP DATA S after check value\", state.image_vitrine1.value);\r\n+          console.log(\"STEP DATA S warning check Success on vitrine1\", state );\r\n+          submitUniverse(state);\r\n           \r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1708968836434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -566,8 +566,9 @@\n           console.log(\"Step Save image Vitrine 1 file \", state.image_vitrine1.file);\r\n           console.log(\"Step Save image Vitrine value 1 \", state.image_vitrine1.value);\r\n           console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.value);\r\n             saveimage_vitrine1(cpState);\r\n+          console.log(\"retour Step     saveimage_vitrine1e \", cpState.image_vitrine1.value);\r\n             //submitUniverse(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n@@ -650,13 +651,11 @@\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n-          console.log(\"STEP DATA before setstate S check value\", state.image_vitrine1.value);\r\n+          console.log(\"STEP DATA before setstate S check value\", cpState.image_vitrine1.value);\r\n           setState(cpState);\r\n-          console.log(\"STEP DATA S after check value\", state.image_vitrine1.value);\r\n-          console.log(\"STEP DATA S warning check Success on vitrine1\", state );\r\n-          submitUniverse(state);\r\n+    \r\n           \r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1708969187147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -566,9 +566,9 @@\n           console.log(\"Step Save image Vitrine 1 file \", state.image_vitrine1.file);\r\n           console.log(\"Step Save image Vitrine value 1 \", state.image_vitrine1.value);\r\n           console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.value);\r\n             saveimage_vitrine1(cpState);\r\n-          console.log(\"retour Step     saveimage_vitrine1e \", cpState.image_vitrine1.value);\r\n+          console.log(\"retour Step  inchangé car async   saveimage_vitrine1e \", cpState.image_vitrine1.value);\r\n             //submitUniverse(cpState);\r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n@@ -650,10 +650,10 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          console.log(\"STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n-          console.log(\"STEP DATA before setstate S check value\", cpState.image_vitrine1.value);\r\n+          console.log(\"SUCEESS RESPonse   STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n+          console.log(\"SUCESS STEP DATA before setstate S check value\", cpState.image_vitrine1.value);\r\n           setState(cpState);\r\n     \r\n           \r\n         },\r\n@@ -663,10 +663,8 @@\n           setIsPending(false);\r\n           scrollTop(\"side-content-dashboard\");\r\n         },\r\n       });\r\n-    } else {\r\n-      savePictures(cpState);\r\n     }\r\n   };\r\n \r\n   \r\n"
                },
                {
                    "date": 1708969227963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -652,9 +652,10 @@\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"SUCEESS RESPonse   STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n           console.log(\"SUCESS STEP DATA before setstate S check value\", cpState.image_vitrine1.value);\r\n-          setState(cpState);\r\n+          submitUniverse(cpState);\r\n+          \r\n     \r\n           \r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1708970310102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,9 +497,9 @@\n       });\r\n     }\r\n   };\r\n \r\n-  const submitUniverse = (cpState) => {\r\n+  const submitUniverse = () => {\r\n \r\n     console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n"
                },
                {
                    "date": 1708970470569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -497,9 +497,9 @@\n       });\r\n     }\r\n   };\r\n \r\n-  const submitUniverse = () => {\r\n+  const submitUniverse = (cpState) => {\r\n \r\n     console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n@@ -652,17 +652,17 @@\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           console.log(\"SUCEESS RESPonse   STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n           console.log(\"SUCESS STEP DATA before setstate S check value\", cpState.image_vitrine1.value);\r\n-          submitUniverse(cpState);\r\n+          setIsPending(false);\r\n           \r\n     \r\n           \r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n           msgErrors({ msg });\r\n-          setIsPending(false);\r\n+         \r\n           scrollTop(\"side-content-dashboard\");\r\n         },\r\n       });\r\n     }\r\n"
                },
                {
                    "date": 1709292705149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -650,10 +650,11 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          console.log(\"SUCEESS RESPonse   STEP DATA VitrineUNIVERSES cp_state\", cpState.image_vitrine1.value);\r\n-          console.log(\"SUCESS STEP DATA before setstate S check value\", cpState.image_vitrine1.value);\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState.image_vitrine1.value);\r\n+ \r\n           setIsPending(false);\r\n           \r\n     \r\n           \r\n"
                },
                {
                    "date": 1709292849705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -651,8 +651,10 @@\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+ \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState.image_vitrine1.value);\r\n  \r\n           setIsPending(false);\r\n           \r\n"
                },
                {
                    "date": 1709292984538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -653,9 +653,9 @@\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n  \r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState.image_vitrine1.value);\r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n  \r\n           setIsPending(false);\r\n           \r\n     \r\n"
                },
                {
                    "date": 1709293220391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -622,9 +622,10 @@\n         success: (response) => {\r\n           cpState.imageHome.file = null;\r\n           cpState.imageHome.value = response.data.contentUrl;\r\n           setState(cpState);\r\n-          savePictures(cpState);\r\n+          saveimage_vitrine1(cpState);\r\n+          //savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n           msgErrors({ msg });\r\n"
                },
                {
                    "date": 1709293354606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -558,18 +558,12 @@\n         console.log(\"Save image \")\r\n         if (state.image.file) {\r\n           console.log(\"Step Save image \", state.image.file);\r\n           saveImage(cpState);\r\n-        } else if (state.imageHome.file) {\r\n+        } else if (state.imageHome.file || state.image_vitrine1.file) {\r\n           console.log(\"Step Save image home \", state.image.file);\r\n           saveImageHome(cpState);\r\n-        } else if (state.image_vitrine1.file) {\r\n-          console.log(\"Step Save image Vitrine 1 file \", state.image_vitrine1.file);\r\n-          console.log(\"Step Save image Vitrine value 1 \", state.image_vitrine1.value);\r\n-          console.log(\"Step Save image Vitrine 1Cpstate \", cpState.image_vitrine1.value);\r\n-            saveimage_vitrine1(cpState);\r\n-          console.log(\"retour Step  inchangé car async   saveimage_vitrine1e \", cpState.image_vitrine1.value);\r\n-            //submitUniverse(cpState);\r\n+        \r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n         else {\r\n"
                },
                {
                    "date": 1709293631999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -554,14 +554,14 @@\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n         setState(cpState);\r\n-        console.log(\"Save image \")\r\n+        console.log(\"Step From SAve universe 1 Save image \")\r\n         if (state.image.file) {\r\n-          console.log(\"Step Save image \", state.image.file);\r\n+          console.log(\"Step From SAve universe 11 image file  \", state.image.file);\r\n           saveImage(cpState);\r\n         } else if (state.imageHome.file || state.image_vitrine1.file) {\r\n-          console.log(\"Step Save image home \", state.image.file);\r\n+          console.log(\"Step From SAve universe 12 image file  \", state.image.file);\r\n           saveImageHome(cpState);\r\n         \r\n         } else if (files.length) {\r\n             savePictures(cpState);\r\n"
                },
                {
                    "date": 1709293686346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1394 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine1: {\r\n+      name: \"image_vitrine1\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine2: {\r\n+      name: \"image_vitrine2\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine3: {\r\n+      name: \"image_vitrine3\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id:\"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    image_anatomie: {\r\n+      name: \"image_anatomie\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        setState(cpState);\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState)\r\n+        if (state.image.file) {\r\n+          console.log(\"Step From SAve universe 11 image file  \", state.image.file);\r\n+          saveImage(cpState);\r\n+        } else if (state.imageHome.file || state.image_vitrine1.file) {\r\n+          console.log(\"Step From SAve universe 12 image file  \", state.image.file);\r\n+          saveImageHome(cpState);\r\n+        \r\n+        } else if (files.length) {\r\n+            savePictures(cpState);\r\n+        } \r\n+        else {\r\n+            submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          saveimage_vitrine1(cpState);\r\n+          //savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n+      console.log(\"warning check\", cpState.image_vitrine1 );\r\n+      \r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine1.file = null;\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+ \r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+ \r\n+          setIsPending(false);\r\n+          \r\n+    \r\n+          \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+         \r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  \r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        image_vitrine1: null,\r\n+        image_vitrine2: null,\r\n+        image_vitrine3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine1.value = \"\";\r\n+                              cpState.image_vitrine1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine2.value = \"\";\r\n+                              cpState.image_vitrine2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine3.value = \"\";\r\n+                              cpState.image_vitrine3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Anatomie</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_anatomie\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_anatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_anatomie.value = \"\";\r\n+                              cpState.image_anatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709294217793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -555,1410 +555,23 @@\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n         setState(cpState);\r\n         console.log(\"Step From SAve universe 1 Save image cpState \", cpState)\r\n-        if (state.image.file) {\r\n-          console.log(\"Step From SAve universe 11 image file  \", state.image.file);\r\n+        if (cpState.image.file) {\r\n+        \r\n           saveImage(cpState);\r\n-        } else if (state.imageHome.file || state.image_vitrine1.file) {\r\n-          console.log(\"Step From SAve universe 12 image file  \", state.image.file);\r\n+        } else if (cpState.imageHome.file) {\r\n           saveImageHome(cpState);\r\n-        \r\n-        } else if (files.length) {\r\n-            savePictures(cpState);\r\n-        } \r\n-        else {\r\n-            submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n+        } else if(cpState.image_vitrine1.file ) {\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image.file);\r\n           saveimage_vitrine1(cpState);\r\n-          //savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n-      console.log(\"warning check\", cpState.image_vitrine1 );\r\n-      \r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n- \r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n- \r\n-          setIsPending(false);\r\n-          \r\n-    \r\n-          \r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-         \r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  \r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n         }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        image_vitrine1: null,\r\n-        image_vitrine2: null,\r\n-        image_vitrine3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine1.value = \"\";\r\n-                              cpState.image_vitrine1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine2.value = \"\";\r\n-                              cpState.image_vitrine2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine3.value = \"\";\r\n-                              cpState.image_vitrine3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Anatomie</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_anatomie\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_anatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_anatomie.value = \"\";\r\n-                              cpState.image_anatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine1: {\r\n-      name: \"image_vitrine1\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine2: {\r\n-      name: \"image_vitrine2\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine3: {\r\n-      name: \"image_vitrine3\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id:\"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    image_anatomie: {\r\n-      name: \"image_anatomie\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        setState(cpState);\r\n-        console.log(\"Step From SAve universe 1 Save image \")\r\n-        if (state.image.file) {\r\n-          console.log(\"Step From SAve universe 11 image file  \", state.image.file);\r\n-          saveImage(cpState);\r\n-        } else if (state.imageHome.file || state.image_vitrine1.file) {\r\n-          console.log(\"Step From SAve universe 12 image file  \", state.image.file);\r\n-          saveImageHome(cpState);\r\n         \r\n-        } else if (files.length) {\r\n+        \r\n+        \r\n+        \r\n+        \r\n+        else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n         else {\r\n             submitUniverse(cpState);\r\n"
                },
                {
                    "date": 1709294405636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -561,9 +561,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           saveImageHome(cpState);\r\n         } else if(cpState.image_vitrine1.file ) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image.file);\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", state.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n         }\r\n         \r\n         \r\n"
                },
                {
                    "date": 1709294494100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -561,9 +561,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           saveImageHome(cpState);\r\n         } else if(cpState.image_vitrine1.file ) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", state.image_vitrine1.value);\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n         }\r\n         \r\n         \r\n"
                },
                {
                    "date": 1709295036725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -656,8 +656,9 @@\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n  \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+          submitUniverse(cpState);\r\n  \r\n           setIsPending(false);\r\n           \r\n     \r\n"
                },
                {
                    "date": 1709295353592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -652,9 +652,9 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n+          //setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n  \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           submitUniverse(cpState);\r\n"
                },
                {
                    "date": 1709295878149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n+        (state.image.value || state.image.file )\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n@@ -560,17 +560,9 @@\n         \r\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           saveImageHome(cpState);\r\n-        } else if(cpState.image_vitrine1.file ) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n-          saveimage_vitrine1(cpState);\r\n-        }\r\n-        \r\n-        \r\n-        \r\n-        \r\n-        \r\n+        }    \r\n         else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n         else {\r\n"
                },
                {
                    "date": 1709298785792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -630,42 +630,9 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n-      console.log(\"warning check\", cpState.image_vitrine1 );\r\n-      \r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          //setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n  \r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n-          submitUniverse(cpState);\r\n- \r\n-          setIsPending(false);\r\n-          \r\n-    \r\n-          \r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-         \r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n \r\n   \r\n \r\n   const savePictures = (cpState) => {\r\n"
                },
                {
                    "date": 1709298832707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file )\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n@@ -560,9 +560,17 @@\n         \r\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           saveImageHome(cpState);\r\n-        }    \r\n+        } else if(cpState.image_vitrine1.file ) {\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n+          saveimage_vitrine1(cpState);\r\n+        }\r\n+        \r\n+        \r\n+        \r\n+        \r\n+        \r\n         else if (files.length) {\r\n             savePictures(cpState);\r\n         } \r\n         else {\r\n@@ -630,9 +638,41 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n+      console.log(\"warning check\", cpState.image_vitrine1 );\r\n+      \r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine1.file = null;\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n  \r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+ \r\n+          setIsPending(false);\r\n+          \r\n+    \r\n+          \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+         \r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n \r\n   \r\n \r\n   const savePictures = (cpState) => {\r\n"
                },
                {
                    "date": 1709301219871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -554,9 +554,10 @@\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n         setState(cpState);\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState)\r\n+        //console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok validé\r\n         if (cpState.image.file) {\r\n         \r\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n"
                },
                {
                    "date": 1709301354393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -555,13 +555,14 @@\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n         setState(cpState);\r\n         //console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok validé\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n-        \r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if(cpState.image_vitrine1.file ) {\r\n           console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n"
                },
                {
                    "date": 1709301514466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,12 +194,14 @@\n     action: \"\",\r\n   });\r\n \r\n   useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n     getUniversesCategories();\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n     if (category) {\r\n       const cpState = { ...state };\r\n       for (let key in category) {\r\n         if (cpState[key]) cpState[key].value = category[key];\r\n"
                },
                {
                    "date": 1709302367598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -545,9 +545,9 @@\n   const saveUniverse = () => {\r\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setMessage(null);\r\n-      setState(clearErrors(state));\r\n+     // setState(clearErrors(state));\r\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n"
                },
                {
                    "date": 1709302521752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -543,8 +543,9 @@\n   };\r\n \r\n   const saveUniverse = () => {\r\n     if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n       setIsPending(true);\r\n       setMessage(null);\r\n      // setState(clearErrors(state));\r\n       if (\r\n"
                },
                {
                    "date": 1709303753096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1113,8 +1113,9 @@\n                         id=\"uploadimage_vitrine1\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n+                          console.log(\"on chaneg image vitrine\",cpState);\r\n                           cpState.image_vitrine1.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n"
                },
                {
                    "date": 1709303830487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1113,9 +1113,9 @@\n                         id=\"uploadimage_vitrine1\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n-                          console.log(\"on chaneg image vitrine\",cpState);\r\n+                          console.log(\"on chaneg image vitrine\",state);\r\n                           cpState.image_vitrine1.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n"
                },
                {
                    "date": 1709303937880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1114,8 +1114,10 @@\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n                           console.log(\"on chaneg image vitrine\",state);\r\n+                          console.log(\"on chaneg image vitrine\",e.target);\r\n+                          \r\n                           cpState.image_vitrine1.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n"
                },
                {
                    "date": 1709304682269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -628,9 +628,11 @@\n         success: (response) => {\r\n           cpState.imageHome.file = null;\r\n           cpState.imageHome.value = response.data.contentUrl;\r\n           setState(cpState);\r\n+          console.log (\"before image save\", cpState)\r\n           saveimage_vitrine1(cpState);\r\n+          console.log (\"before image after\", cpState)\r\n           //savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1709304690982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -630,9 +630,9 @@\n           cpState.imageHome.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log (\"before image save\", cpState)\r\n           saveimage_vitrine1(cpState);\r\n-          console.log (\"before image after\", cpState)\r\n+          console.log (\"after image after\", cpState)\r\n           //savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1709305726620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -665,8 +665,9 @@\n  \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n  \r\n           setIsPending(false);\r\n+          submitUniverse(cpState);\r\n           \r\n     \r\n           \r\n         },\r\n"
                },
                {
                    "date": 1709305764473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -665,8 +665,9 @@\n  \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n  \r\n           setIsPending(false);\r\n+          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n           submitUniverse(cpState);\r\n           \r\n     \r\n           \r\n"
                },
                {
                    "date": 1709306399240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -546,9 +546,9 @@\n     if (!isPending) {\r\n       console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n       setIsPending(true);\r\n       setMessage(null);\r\n-     // setState(clearErrors(state));\r\n+      setState(clearErrors(state));\r\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n"
                },
                {
                    "date": 1709306652221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1415 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine1: {\r\n+      name: \"image_vitrine1\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine2: {\r\n+      name: \"image_vitrine2\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine3: {\r\n+      name: \"image_vitrine3\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id:\"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    image_anatomie: {\r\n+      name: \"image_anatomie\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          saveImage(cpState);\r\n+        } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          saveImageHome(cpState);\r\n+        } else if(cpState.image_vitrine1.file ) {\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n+          saveimage_vitrine1(cpState);\r\n+        }\r\n+        \r\n+        \r\n+        \r\n+        \r\n+        \r\n+        else if (files.length) {\r\n+            savePictures(cpState);\r\n+        } \r\n+        else {\r\n+            submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log (\"before image save\", cpState)\r\n+          saveimage_vitrine1(cpState);\r\n+          console.log (\"after image after\", cpState)\r\n+          //savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n+      console.log(\"warning check\", cpState.image_vitrine1 );\r\n+      \r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine1.file = null;\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+ \r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+ \r\n+          setIsPending(false);\r\n+          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n+          submitUniverse(cpState);\r\n+          \r\n+    \r\n+          \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+         \r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  \r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        image_vitrine1: null,\r\n+        image_vitrine2: null,\r\n+        image_vitrine3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          console.log(\"on chaneg image vitrine\",state);\r\n+                          console.log(\"on chaneg image vitrine\",e.target);\r\n+                          \r\n+                          cpState.image_vitrine1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine1.value = \"\";\r\n+                              cpState.image_vitrine1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine2.value = \"\";\r\n+                              cpState.image_vitrine2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine3.value = \"\";\r\n+                              cpState.image_vitrine3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Anatomie</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_anatomie\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_anatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_anatomie.value = \"\";\r\n+                              cpState.image_anatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709307175703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1077,8 +1077,10 @@\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n                           cpState.imageHome.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n+                          console.log(\"on chaneg image home\",state);\r\n+                          console.log(\"on chaneg image home\",e.target);\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n@@ -1412,1417 +1414,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine1: {\r\n-      name: \"image_vitrine1\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine2: {\r\n-      name: \"image_vitrine2\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine3: {\r\n-      name: \"image_vitrine3\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id:\"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    image_anatomie: {\r\n-      name: \"image_anatomie\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        setState(cpState);\r\n-        //console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          saveImageHome(cpState);\r\n-        } else if(cpState.image_vitrine1.file ) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n-          saveimage_vitrine1(cpState);\r\n-        }\r\n-        \r\n-        \r\n-        \r\n-        \r\n-        \r\n-        else if (files.length) {\r\n-            savePictures(cpState);\r\n-        } \r\n-        else {\r\n-            submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log (\"before image save\", cpState)\r\n-          saveimage_vitrine1(cpState);\r\n-          console.log (\"after image after\", cpState)\r\n-          //savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n-      console.log(\"warning check\", cpState.image_vitrine1 );\r\n-      \r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n- \r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n- \r\n-          setIsPending(false);\r\n-          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n-          submitUniverse(cpState);\r\n-          \r\n-    \r\n-          \r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-         \r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  \r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        image_vitrine1: null,\r\n-        image_vitrine2: null,\r\n-        image_vitrine3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          console.log(\"on chaneg image vitrine\",state);\r\n-                          console.log(\"on chaneg image vitrine\",e.target);\r\n-                          \r\n-                          cpState.image_vitrine1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine1.value = \"\";\r\n-                              cpState.image_vitrine1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine2.value = \"\";\r\n-                              cpState.image_vitrine2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine3.value = \"\";\r\n-                              cpState.image_vitrine3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Anatomie</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_anatomie\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_anatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_anatomie.value = \"\";\r\n-                              cpState.image_anatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1709307432623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1077,9 +1077,9 @@\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n                           cpState.imageHome.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\",state);\r\n+                          console.log(\"on chaneg image home\",cpState);\r\n                           console.log(\"on chaneg image home\",e.target);\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n"
                },
                {
                    "date": 1709388130616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1428 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    ImageVitrine1: {\r\n+        label: \"Image vitrine 1\",\r\n+        type: \"text\",\r\n+        name: \"imageVitrine1\",\r\n+        required: false,\r\n+        placeholder: \"Image vitrine 1\",\r\n+        value: \"\",\r\n+        error: false,\r\n+        errorMessage: \"\",\r\n+    },\r\n+    image_vitrine1: {\r\n+      name: \"image_vitrine1\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine2: {\r\n+      name: \"image_vitrine2\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine3: {\r\n+      name: \"image_vitrine3\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id:\"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    image_anatomie: {\r\n+      name: \"image_anatomie\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          saveImage(cpState);\r\n+        } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          saveImageHome(cpState);\r\n+        } else if(cpState.image_vitrine1.file ) {\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n+          saveimage_vitrine1(cpState);\r\n+        }\r\n+        \r\n+        \r\n+        \r\n+        \r\n+        \r\n+        else if (files.length) {\r\n+            savePictures(cpState);\r\n+        } \r\n+        else {\r\n+            submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log (\"before image save\", cpState)\r\n+          saveimage_vitrine1(cpState);\r\n+          console.log (\"after image after\", cpState)\r\n+          //savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n+      console.log(\"warning check\", cpState.image_vitrine1 );\r\n+      \r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine1.file = null;\r\n+\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+          setCpimage1(response.data.contentUrl); \r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+          cpState.ImageVitrine1.value = response.data.contentUrl;  \r\n+          setIsPending(false);\r\n+          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n+          submitUniverse(cpState);\r\n+          \r\n+    \r\n+          \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+         \r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  \r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        image_vitrine1: null,\r\n+        image_vitrine2: null,\r\n+        image_vitrine3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          console.log(\"on chaneg image home\",cpState);\r\n+                          console.log(\"on chaneg image home\",e.target);\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          console.log(\"on chaneg image vitrine\",state);\r\n+                          console.log(\"on chaneg image vitrine\",e.target);\r\n+                          \r\n+                          cpState.image_vitrine1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine1.value = \"\";\r\n+                              cpState.image_vitrine1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine2.value = \"\";\r\n+                              cpState.image_vitrine2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine3.value = \"\";\r\n+                              cpState.image_vitrine3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Anatomie</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_anatomie\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_anatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_anatomie.value = \"\";\r\n+                              cpState.image_anatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709388181175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -670,13 +670,12 @@\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n-\r\n           cpState.image_vitrine1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n-          setCpimage1(response.data.contentUrl); \r\n+        \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           cpState.ImageVitrine1.value = response.data.contentUrl;  \r\n           setIsPending(false);\r\n           console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n@@ -1425,1421 +1424,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine1: {\r\n-      name: \"image_vitrine1\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine2: {\r\n-      name: \"image_vitrine2\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine3: {\r\n-      name: \"image_vitrine3\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id:\"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    image_anatomie: {\r\n-      name: \"image_anatomie\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          saveImageHome(cpState);\r\n-        } else if(cpState.image_vitrine1.file ) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n-          saveimage_vitrine1(cpState);\r\n-        }\r\n-        \r\n-        \r\n-        \r\n-        \r\n-        \r\n-        else if (files.length) {\r\n-            savePictures(cpState);\r\n-        } \r\n-        else {\r\n-            submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log (\"before image save\", cpState)\r\n-          saveimage_vitrine1(cpState);\r\n-          console.log (\"after image after\", cpState)\r\n-          //savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n-      console.log(\"warning check\", cpState.image_vitrine1 );\r\n-      \r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n- \r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n- \r\n-          setIsPending(false);\r\n-          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n-          submitUniverse(cpState);\r\n-          \r\n-    \r\n-          \r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-         \r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  \r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        image_vitrine1: null,\r\n-        image_vitrine2: null,\r\n-        image_vitrine3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\",cpState);\r\n-                          console.log(\"on chaneg image home\",e.target);\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          console.log(\"on chaneg image vitrine\",state);\r\n-                          console.log(\"on chaneg image vitrine\",e.target);\r\n-                          \r\n-                          cpState.image_vitrine1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine1.value = \"\";\r\n-                              cpState.image_vitrine1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine2.value = \"\";\r\n-                              cpState.image_vitrine2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine3.value = \"\";\r\n-                              cpState.image_vitrine3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Anatomie</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_anatomie\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_anatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_anatomie.value = \"\";\r\n-                              cpState.image_anatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1709393409387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1428 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    ImageVitrine1: {\r\n+      label: \"Image vitrine 1\",\r\n+      type: \"text\",\r\n+      name: \"imageVitrine1\",\r\n+      required: false,\r\n+      placeholder: \"Image vitrine 1\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+  },\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+   \r\n+    image_vitrine1: {\r\n+      name: \"image_vitrine1\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine2: {\r\n+      name: \"image_vitrine2\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    image_vitrine3: {\r\n+      name: \"image_vitrine3\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id:\"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    image_anatomie: {\r\n+      name: \"image_anatomie\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          saveImage(cpState);\r\n+        } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          saveImageHome(cpState);\r\n+        } else if(cpState.image_vitrine1.file ) {\r\n+          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n+          saveimage_vitrine1(cpState);\r\n+        }\r\n+        \r\n+        \r\n+        \r\n+        \r\n+        \r\n+        else if (files.length) {\r\n+            savePictures(cpState);\r\n+        } \r\n+        else {\r\n+            submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log (\"before image save\", cpState)\r\n+          saveimage_vitrine1(cpState);\r\n+          console.log (\"after image after\", cpState)\r\n+          //savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveimage_vitrine1 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n+      console.log(\"warning check\", cpState.image_vitrine1 );\r\n+      \r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine1.file = null;\r\n+          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+        \r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+          cpState.ImageVitrine1.value = response.data.contentUrl;  \r\n+          setIsPending(false);\r\n+          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n+          submitUniverse(cpState);\r\n+          \r\n+    \r\n+          \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+         \r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  \r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        image_vitrine1: null,\r\n+        image_vitrine2: null,\r\n+        image_vitrine3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          console.log(\"on chaneg image home\",cpState);\r\n+                          console.log(\"on chaneg image home\",e.target);\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          console.log(\"on chaneg image vitrine\",state);\r\n+                          console.log(\"on chaneg image vitrine\",e.target);\r\n+                          \r\n+                          cpState.image_vitrine1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine1.value = \"\";\r\n+                              cpState.image_vitrine1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine2.value = \"\";\r\n+                              cpState.image_vitrine2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_vitrine3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_vitrine3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_vitrine3.value = \"\";\r\n+                              cpState.image_vitrine3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Anatomie</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadimage_anatomie\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image_anatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image_anatomie.value = \"\";\r\n+                              cpState.image_anatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709393465697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n     },\r\n     ImageVitrine1: {\r\n       label: \"Image vitrine 1\",\r\n       type: \"text\",\r\n-      name: \"imageVitrine1\",\r\n+      name: \"imageVit1\",\r\n       required: false,\r\n       placeholder: \"Image vitrine 1\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -1425,1431 +1425,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    ImageVitrine1: {\r\n-        label: \"Image vitrine 1\",\r\n-        type: \"text\",\r\n-        name: \"imageVitrine1\",\r\n-        required: false,\r\n-        placeholder: \"Image vitrine 1\",\r\n-        value: \"\",\r\n-        error: false,\r\n-        errorMessage: \"\",\r\n-    },\r\n-    image_vitrine1: {\r\n-      name: \"image_vitrine1\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine2: {\r\n-      name: \"image_vitrine2\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    image_vitrine3: {\r\n-      name: \"image_vitrine3\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id:\"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    image_anatomie: {\r\n-      name: \"image_anatomie\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          saveImageHome(cpState);\r\n-        } else if(cpState.image_vitrine1.file ) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n-          saveimage_vitrine1(cpState);\r\n-        }\r\n-        \r\n-        \r\n-        \r\n-        \r\n-        \r\n-        else if (files.length) {\r\n-            savePictures(cpState);\r\n-        } \r\n-        else {\r\n-            submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log (\"before image save\", cpState)\r\n-          saveimage_vitrine1(cpState);\r\n-          console.log (\"after image after\", cpState)\r\n-          //savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n-      console.log(\"warning check\", cpState.image_vitrine1 );\r\n-      \r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n-        \r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n-          cpState.ImageVitrine1.value = response.data.contentUrl;  \r\n-          setIsPending(false);\r\n-          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n-          submitUniverse(cpState);\r\n-          \r\n-    \r\n-          \r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-         \r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  \r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        image_vitrine1: null,\r\n-        image_vitrine2: null,\r\n-        image_vitrine3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\",cpState);\r\n-                          console.log(\"on chaneg image home\",e.target);\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          console.log(\"on chaneg image vitrine\",state);\r\n-                          console.log(\"on chaneg image vitrine\",e.target);\r\n-                          \r\n-                          cpState.image_vitrine1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine1.value = \"\";\r\n-                              cpState.image_vitrine1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine2.value = \"\";\r\n-                              cpState.image_vitrine2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine3.value = \"\";\r\n-                              cpState.image_vitrine3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Anatomie</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_anatomie\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_anatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_anatomie.value = \"\";\r\n-                              cpState.image_anatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1709393583483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,18 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n+    ImageVitrine1: {\r\n+      label: \"Image vitrine 1\",\r\n+      type: \"text\",\r\n+      name: \"imageVit1\",\r\n+      required: false,\r\n+      placeholder: \"Image vitrine 1\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+  },\r\n     position: { name: \"position\", value: 0, required: false },\r\n     universe: { name: \"universe\", value: null, required: false },\r\n     parent: { name: \"parent\", value: null, required: false },\r\n     level: { name: \"level\", value: 0, required: false },\r\n@@ -116,18 +126,9 @@\n         { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n         { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n       ],\r\n     },\r\n-    ImageVitrine1: {\r\n-      label: \"Image vitrine 1\",\r\n-      type: \"text\",\r\n-      name: \"imageVit1\",\r\n-      required: false,\r\n-      placeholder: \"Image vitrine 1\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-  },\r\n+\r\n     imageHome: {\r\n       name: \"imageHome\",\r\n       value: null,\r\n       file: null,\r\n"
                },
                {
                    "date": 1709393669746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n     ImageVitrine1: {\r\n-      label: \"Image vitrine 1\",\r\n+      label: \"Vitrine  univers 1\",\r\n       type: \"text\",\r\n       name: \"imageVit1\",\r\n       required: false,\r\n       placeholder: \"Image vitrine 1\",\r\n"
                },
                {
                    "date": 1709394001056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-    ImageVitrine1: {\r\n+   imageVit1: {\r\n       label: \"Vitrine  univers 1\",\r\n       type: \"text\",\r\n       name: \"imageVit1\",\r\n       required: false,\r\n@@ -1118,10 +1118,17 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-\r\n-\r\n+                    <Input\r\n+                      {...state.imageVit1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.imageVit1 = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+      \r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n                       className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n"
                },
                {
                    "date": 1709394053149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n    imageVit1: {\r\n-      label: \"Vitrine  univers 1\",\r\n+      label: \"Nom du fichier image Vitrine 1\",\r\n       type: \"text\",\r\n       name: \"imageVit1\",\r\n       required: false,\r\n       placeholder: \"Image vitrine 1\",\r\n"
                },
                {
                    "date": 1709394132519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -528,8 +528,9 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n+        imageVit1: cpState.imageVit1.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n"
                },
                {
                    "date": 1709394161839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -673,9 +673,9 @@\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n-          cpState.image_vitrine1.value = response.data.contentUrl;\r\n+          cpState.imageVit1 = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n         \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n"
                },
                {
                    "date": 1709394311949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,18 +93,18 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-   imageVit1: {\r\n+    imageVit1: {\r\n       label: \"Nom du fichier image Vitrine 1\",\r\n       type: \"text\",\r\n       name: \"imageVit1\",\r\n       required: false,\r\n       placeholder: \"Image vitrine 1\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n-  },\r\n+    },\r\n     position: { name: \"position\", value: 0, required: false },\r\n     universe: { name: \"universe\", value: null, required: false },\r\n     parent: { name: \"parent\", value: null, required: false },\r\n     level: { name: \"level\", value: 0, required: false },\r\n@@ -135,9 +135,9 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-   \r\n+\r\n     image_vitrine1: {\r\n       name: \"image_vitrine1\",\r\n       value: null,\r\n       file: null,\r\n@@ -162,9 +162,9 @@\n       errorMessage: \"\",\r\n     },\r\n     labelanatomie: {\r\n       name: \"labelanatomie\",\r\n-      id:\"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n       label: \"Libellé rubrique anatomie\",\r\n       placeholder: \"anatomie\",\r\n       value: \"\",\r\n       error: false,\r\n@@ -580,22 +580,22 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if(cpState.image_vitrine1.file ) {\r\n+        } else if (cpState.image_vitrine1.file) {\r\n           console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n         }\r\n-        \r\n-        \r\n-        \r\n-        \r\n-        \r\n+\r\n+\r\n+\r\n+\r\n+\r\n         else if (files.length) {\r\n-            savePictures(cpState);\r\n-        } \r\n+          savePictures(cpState);\r\n+        }\r\n         else {\r\n-            submitUniverse(cpState);\r\n+          submitUniverse(cpState);\r\n         }\r\n       } else {\r\n         const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n         msgErrors({\r\n@@ -643,11 +643,11 @@\n         success: (response) => {\r\n           cpState.imageHome.file = null;\r\n           cpState.imageHome.value = response.data.contentUrl;\r\n           setState(cpState);\r\n-          console.log (\"before image save\", cpState)\r\n+          console.log(\"before image save\", cpState)\r\n           saveimage_vitrine1(cpState);\r\n-          console.log (\"after image after\", cpState)\r\n+          console.log(\"after image after\", cpState)\r\n           //savePictures(cpState);\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n@@ -664,11 +664,11 @@\n   const saveimage_vitrine1 = (cpState) => {\r\n     if (cpState.image_vitrine1.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\",endPoints.ANONYMOUS_MEDIA_OBJECT, data );\r\n-      console.log(\"warning check\", cpState.image_vitrine1 );\r\n-      \r\n+      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n+      console.log(\"warning check\", cpState.image_vitrine1);\r\n+\r\n       connector({\r\n         method: \"post\",\r\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n@@ -676,30 +676,30 @@\n           cpState.image_vitrine1.file = null;\r\n           cpState.imageVit1 = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n-        \r\n+\r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n-          cpState.ImageVitrine1.value = response.data.contentUrl;  \r\n+          cpState.ImageVitrine1.value = response.data.contentUrl;\r\n           setIsPending(false);\r\n           console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n           submitUniverse(cpState);\r\n-          \r\n-    \r\n-          \r\n+\r\n+\r\n+\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n           msgErrors({ msg });\r\n-         \r\n+\r\n           scrollTop(\"side-content-dashboard\");\r\n         },\r\n       });\r\n     }\r\n   };\r\n \r\n-  \r\n \r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n@@ -1090,10 +1090,10 @@\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n                           cpState.imageHome.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\",cpState);\r\n-                          console.log(\"on chaneg image home\",e.target);\r\n+                          console.log(\"on chaneg image home\", cpState);\r\n+                          console.log(\"on chaneg image home\", e.target);\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n@@ -1127,9 +1127,9 @@\n                         cpState.imageVit1 = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-      \r\n+\r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n                       className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n@@ -1141,11 +1141,11 @@\n                         id=\"uploadimage_vitrine1\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n-                          console.log(\"on chaneg image vitrine\",state);\r\n-                          console.log(\"on chaneg image vitrine\",e.target);\r\n-                          \r\n+                          console.log(\"on chaneg image vitrine\", state);\r\n+                          console.log(\"on chaneg image vitrine\", e.target);\r\n+\r\n                           cpState.image_vitrine1.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n"
                },
                {
                    "date": 1709394371760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -679,8 +679,9 @@\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           cpState.ImageVitrine1.value = response.data.contentUrl;\r\n+          cpState.imageVit1 = response.data.contentUrl;\r\n           setIsPending(false);\r\n           console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n           submitUniverse(cpState);\r\n \r\n"
                },
                {
                    "date": 1709394383276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -681,10 +681,9 @@\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           cpState.ImageVitrine1.value = response.data.contentUrl;\r\n           cpState.imageVit1 = response.data.contentUrl;\r\n           setIsPending(false);\r\n-          console.log(\"STEP CHECK VALUE submitUniverse\", cpState);\r\n-          submitUniverse(cpState);\r\n+         ;\r\n \r\n \r\n \r\n         },\r\n"
                },
                {
                    "date": 1709394412734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -528,9 +528,9 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-        imageVit1: cpState.imageVit1.value,\r\n+     \r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n"
                },
                {
                    "date": 1709394477497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -528,9 +528,9 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-     \r\n+        imageVit1: cpState.imageVit1.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n@@ -673,15 +673,15 @@\n         url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n-          cpState.imageVit1 = response.data.contentUrl;\r\n+          cpState.imageVit1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           cpState.ImageVitrine1.value = response.data.contentUrl;\r\n-          cpState.imageVit1 = response.data.contentUrl;\r\n+        \r\n           setIsPending(false);\r\n          ;\r\n \r\n \r\n"
                },
                {
                    "date": 1709394550555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -679,9 +679,9 @@\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           cpState.ImageVitrine1.value = response.data.contentUrl;\r\n-        \r\n+          \r\n           setIsPending(false);\r\n          ;\r\n \r\n \r\n"
                },
                {
                    "date": 1709394642458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1123,9 +1123,9 @@\n                     <Input\r\n                       {...state.imageVit1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.imageVit1 = e.target.value;\r\n+                        cpState.imageVit1.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n"
                },
                {
                    "date": 1709395291764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -531,9 +531,11 @@\n         imageHome: cpState.imageHome.value,\r\n         imageVit1: cpState.imageVit1.value,\r\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n+        imageVit2: cpState.imageVit2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n+        imageVit3: cpState.imageVit3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n         image_anatomie: cpState.image_anatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n@@ -674,8 +676,10 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.imageVit1.value = response.data.contentUrl;\r\n+          cpState.imageVit2.value = response.data.contentUrl;\r\n+          cpState.imageVit3.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n@@ -1123,13 +1127,30 @@\n                     <Input\r\n                       {...state.imageVit1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.imageVit1.value = e.target.value;\r\n+                        cpState.imageVit1 = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+       <Input\r\n+                      {...state.imageVit2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.imageVit2 = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n \r\n+<Input\r\n+                      {...state.imageVit3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.imageVit3 = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n                       className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n"
                },
                {
                    "date": 1709395397588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,8 +103,28 @@\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n+    imageVit2: {\r\n+      label: \"Nom du fichier image Vitrine 2\",\r\n+      type: \"text\",\r\n+      name: \"imageVit2\",\r\n+      required: false,\r\n+      placeholder: \"Image vitrine 2\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    imageVit3: {\r\n+      label: \"Nom du fichier image Vitrine 3\",\r\n+      type: \"text\",\r\n+      name: \"imageVit3\",\r\n+      required: false,\r\n+      placeholder: \"Image vitrine 3\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n     position: { name: \"position\", value: 0, required: false },\r\n     universe: { name: \"universe\", value: null, required: false },\r\n     parent: { name: \"parent\", value: null, required: false },\r\n     level: { name: \"level\", value: 0, required: false },\r\n"
                },
                {
                    "date": 1709395644489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -605,8 +605,10 @@\n           saveImageHome(cpState);\r\n         } else if (cpState.image_vitrine1.file) {\r\n           console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n+          saveimage_vitrine2(cpState);\r\n+          saveimage_vitrine3(cpState);\r\n         }\r\n \r\n \r\n \r\n@@ -720,10 +722,37 @@\n       });\r\n     }\r\n   };\r\n \r\n+  const saveimage_vitrine2 = (cpState) => {\r\n+    if (cpState.image_vitrine1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n+      console.log(\"warning check\", cpState.image_vitrine1);\r\n \r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine2.file = null;\r\n+          cpState.imageVit2.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n \r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n"
                },
                {
                    "date": 1709395652775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -606,9 +606,8 @@\n         } else if (cpState.image_vitrine1.file) {\r\n           console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n-          saveimage_vitrine3(cpState);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709395763485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -722,9 +722,9 @@\n     }\r\n   };\r\n \r\n   const saveimage_vitrine2 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n+    if (cpState.image_vitrine2.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.image_vitrine1.file);\r\n       console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n       console.log(\"warning check\", cpState.image_vitrine1);\r\n"
                },
                {
                    "date": 1709395872796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -724,9 +724,9 @@\n \r\n   const saveimage_vitrine2 = (cpState) => {\r\n     if (cpState.image_vitrine2.file) {\r\n       const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n+      data.append(\"file\", cpState.image_vitrine2.file);\r\n       console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n       console.log(\"warning check\", cpState.image_vitrine1);\r\n \r\n       connector({\r\n@@ -736,9 +736,9 @@\n         success: (response) => {\r\n           cpState.image_vitrine2.file = null;\r\n           cpState.imageVit2.value = response.data.contentUrl;\r\n           setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n+          console.log(\"STEP CHECK VALUE of c  saveimage_vitrine2  l\", response.data.contentUrl);\r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1709396006938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -602,9 +602,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file) {\r\n+        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file) {\r\n           console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n         }\r\n@@ -737,9 +737,9 @@\n           cpState.image_vitrine2.file = null;\r\n           cpState.imageVit2.value = response.data.contentUrl;\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c  saveimage_vitrine2  l\", response.data.contentUrl);\r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine2.value\", cpState);\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n           msgErrors({ msg });\r\n"
                },
                {
                    "date": 1709396168739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -603,9 +603,9 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file) {\r\n-          console.log(\"Step From SAve universe 13 Vitrine image file  \", cpState.image_vitrine1.value);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.value);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1709396555900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -604,8 +604,10 @@\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file) {\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.value);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.value);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.value);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n         }\r\n \r\n@@ -666,12 +668,9 @@\n         success: (response) => {\r\n           cpState.imageHome.file = null;\r\n           cpState.imageHome.value = response.data.contentUrl;\r\n           setState(cpState);\r\n-          console.log(\"before image save\", cpState)\r\n-          saveimage_vitrine1(cpState);\r\n-          console.log(\"after image after\", cpState)\r\n-          //savePictures(cpState);\r\n+\r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n           msgErrors({ msg });\r\n"
                },
                {
                    "date": 1709396656179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -603,11 +603,11 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file) {\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.value);\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.value);\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.value);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.file);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.file);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1709397050570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -696,18 +696,17 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.imageVit1.value = response.data.contentUrl;\r\n-          cpState.imageVit2.value = response.data.contentUrl;\r\n-          cpState.imageVit3.value = response.data.contentUrl;\r\n+     \r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n           cpState.ImageVitrine1.value = response.data.contentUrl;\r\n-          \r\n+\r\n           setIsPending(false);\r\n-         ;\r\n+          ;\r\n \r\n \r\n \r\n         },\r\n@@ -1178,18 +1177,18 @@\n                         cpState.imageVit1 = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-       <Input\r\n+                    <Input\r\n                       {...state.imageVit2}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.imageVit2 = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-<Input\r\n+                    <Input\r\n                       {...state.imageVit3}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.imageVit3 = e.target.value;\r\n"
                },
                {
                    "date": 1709397201853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -748,8 +748,36 @@\n     }\r\n   };\r\n \r\n \r\n+  const saveimage_vitrine3 = (cpState) => {\r\n+    if (cpState.image_vitrine3.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_vitrine3.file);\r\n+      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n+      console.log(\"warning check\", cpState.image_vitrine3);\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_vitrine3.file = null;\r\n+          cpState.imageVit3.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c  saveimage_vitrine3  l\", response.data.contentUrl);\r\n+          console.log(\"STEP CHECK VALUE of cpState.image_vitrine3.value\", cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n"
                },
                {
                    "date": 1709397285499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -608,8 +608,9 @@\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n+          saveimage_vitrine3(cpState);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709397685546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,8 +123,18 @@\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n+    imageAnat1: {\r\n+      label: \"Nom du fichier image Anatomie\",\r\n+      type: \"text\",\r\n+      name: \"imageAnat1\",\r\n+      required: false,\r\n+      placeholder: \"Image Anatomie unique\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n     position: { name: \"position\", value: 0, required: false },\r\n     universe: { name: \"universe\", value: null, required: false },\r\n     parent: { name: \"parent\", value: null, required: false },\r\n     level: { name: \"level\", value: 0, required: false },\r\n@@ -697,9 +707,9 @@\n         data,\r\n         success: (response) => {\r\n           cpState.image_vitrine1.file = null;\r\n           cpState.imageVit1.value = response.data.contentUrl;\r\n-     \r\n+\r\n           setState(cpState);\r\n           console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n \r\n           console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n@@ -777,8 +787,36 @@\n       });\r\n     }\r\n   };\r\n \r\n+  const saveimage_anatomie = (cpState) => {\r\n+    if (cpState.image_anatomie.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.image_anatomie.file);\r\n+      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n+      console.log(\"warning check\", cpState.image_anatomie.value);\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.image_anatomie.file = null;\r\n+          cpState.imageAnat1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          console.log(\"STEP CHECK VALUE of c  anatomie\", response.data.contentUrl);\r\n+          console.log(\"STEP CHECK VALUE of anatomie\", cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n@@ -1224,8 +1262,17 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n+                    <Input\r\n+                      {...state.imageAnat1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.imageAnat1 = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n                     <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div\r\n                       className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n"
                },
                {
                    "date": 1709397766243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -619,8 +619,9 @@\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n           saveimage_vitrine3(cpState);\r\n+          saveimage_anatomie(cpState);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709397788529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -612,9 +612,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file) {\r\n+        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file  || cpState.image_anatomie.file) {\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n           saveimage_vitrine1(cpState);\r\n"
                },
                {
                    "date": 1709397830183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,8 +616,9 @@\n         } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file  || cpState.image_anatomie.file) {\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n+          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_anatomie.file);\r\n           saveimage_vitrine1(cpState);\r\n           saveimage_vitrine2(cpState);\r\n           saveimage_vitrine3(cpState);\r\n           saveimage_anatomie(cpState);\r\n"
                },
                {
                    "date": 1709398164514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -558,16 +558,16 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-        imageVit1: cpState.imageVit1.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        imageVit2: cpState.imageVit2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n-        imageVit3: cpState.imageVit3.value,\r\n+        image_vitrine1: cpState.imageVit1.value,\r\n+        image_vitrine2: cpState.imageVit2.value,\r\n+        image_vitrine3: cpState.imageVit3.value,\r\n+        //imageVit1: cpState.imageVit1.value,\r\n+        //imageVit2: cpState.imageVit2.value,\r\n+        //imageVit3: cpState.imageVit3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n+        image_anatomie: cpState.imageAnat1.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n"
                },
                {
                    "date": 1709400483556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -617,12 +617,12 @@\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n           console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_anatomie.file);\r\n-          saveimage_vitrine1(cpState);\r\n-          saveimage_vitrine2(cpState);\r\n-          saveimage_vitrine3(cpState);\r\n-          saveimage_anatomie(cpState);\r\n+         // saveimage_vitrine1(cpState);\r\n+         // saveimage_vitrine2(cpState);\r\n+         // saveimage_vitrine3(cpState);\r\n+         // saveimage_anatomie(cpState);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709400860497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1361,94 +1361,10 @@\n                       </div>\r\n                     </div>\r\n \r\n \r\n-                    <p className=\"form-label-title\">Image Vitrine Droite</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine3.value || state.image_vitrine3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine3.value = \"\";\r\n-                              cpState.image_vitrine3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n \r\n-                    <p className=\"form-label-title\">Image Anatomie</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_anatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_anatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_anatomie\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_anatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_anatomie\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_anatomie.value || state.image_anatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_anatomie.value = \"\";\r\n-                              cpState.image_anatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n \r\n-\r\n-\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709400905601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1273,98 +1273,8 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          console.log(\"on chaneg image vitrine\", state);\r\n-                          console.log(\"on chaneg image vitrine\", e.target);\r\n-\r\n-                          cpState.image_vitrine1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine1.value || state.image_vitrine1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine1.value = \"\";\r\n-                              cpState.image_vitrine1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Centre</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image_vitrine2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image_vitrine2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadimage_vitrine2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image_vitrine2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadimage_vitrine2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image_vitrine2.value || state.image_vitrine2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image_vitrine2.value = \"\";\r\n-                              cpState.image_vitrine2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709401000546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,16 +613,9 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file  || cpState.image_anatomie.file) {\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine1.file);\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine2.file);\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_vitrine3.file);\r\n-          console.log(\"Step From SAve universe 1333 Vitrine image file  \", cpState.image_anatomie.file);\r\n-         // saveimage_vitrine1(cpState);\r\n-         // saveimage_vitrine2(cpState);\r\n-         // saveimage_vitrine3(cpState);\r\n-         // saveimage_anatomie(cpState);\r\n+ \r\n         }\r\n \r\n \r\n \r\n@@ -695,130 +688,10 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveimage_vitrine1 = (cpState) => {\r\n-    if (cpState.image_vitrine1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine1.file);\r\n-      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n-      console.log(\"warning check\", cpState.image_vitrine1);\r\n+ \r\n \r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine1.file = null;\r\n-          cpState.imageVit1.value = response.data.contentUrl;\r\n-\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c response.data.contentUrl\", response.data.contentUrl);\r\n-\r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine1.value\", cpState);\r\n-          cpState.ImageVitrine1.value = response.data.contentUrl;\r\n-\r\n-          setIsPending(false);\r\n-          ;\r\n-\r\n-\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_vitrine2 = (cpState) => {\r\n-    if (cpState.image_vitrine2.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine2.file);\r\n-      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n-      console.log(\"warning check\", cpState.image_vitrine1);\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine2.file = null;\r\n-          cpState.imageVit2.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c  saveimage_vitrine2  l\", response.data.contentUrl);\r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine2.value\", cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const saveimage_vitrine3 = (cpState) => {\r\n-    if (cpState.image_vitrine3.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_vitrine3.file);\r\n-      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n-      console.log(\"warning check\", cpState.image_vitrine3);\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_vitrine3.file = null;\r\n-          cpState.imageVit3.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c  saveimage_vitrine3  l\", response.data.contentUrl);\r\n-          console.log(\"STEP CHECK VALUE of cpState.image_vitrine3.value\", cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveimage_anatomie = (cpState) => {\r\n-    if (cpState.image_anatomie.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.image_anatomie.file);\r\n-      console.log(\"data to be post by\", endPoints.ANONYMOUS_MEDIA_OBJECT, data);\r\n-      console.log(\"warning check\", cpState.image_anatomie.value);\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.image_anatomie.file = null;\r\n-          cpState.imageAnat1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          console.log(\"STEP CHECK VALUE of c  anatomie\", response.data.contentUrl);\r\n-          console.log(\"STEP CHECK VALUE of anatomie\", cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n"
                },
                {
                    "date": 1709401320637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,48 +93,9 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-    imageVit1: {\r\n-      label: \"Nom du fichier image Vitrine 1\",\r\n-      type: \"text\",\r\n-      name: \"imageVit1\",\r\n-      required: false,\r\n-      placeholder: \"Image vitrine 1\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    imageVit2: {\r\n-      label: \"Nom du fichier image Vitrine 2\",\r\n-      type: \"text\",\r\n-      name: \"imageVit2\",\r\n-      required: false,\r\n-      placeholder: \"Image vitrine 2\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    imageVit3: {\r\n-      label: \"Nom du fichier image Vitrine 3\",\r\n-      type: \"text\",\r\n-      name: \"imageVit3\",\r\n-      required: false,\r\n-      placeholder: \"Image vitrine 3\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    imageAnat1: {\r\n-      label: \"Nom du fichier image Anatomie\",\r\n-      type: \"text\",\r\n-      name: \"imageAnat1\",\r\n-      required: false,\r\n-      placeholder: \"Image Anatomie unique\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n+\r\n     position: { name: \"position\", value: 0, required: false },\r\n     universe: { name: \"universe\", value: null, required: false },\r\n     parent: { name: \"parent\", value: null, required: false },\r\n     level: { name: \"level\", value: 0, required: false },\r\n@@ -169,25 +130,25 @@\n \r\n     image_vitrine1: {\r\n       name: \"image_vitrine1\",\r\n       value: null,\r\n-      file: null,\r\n+      type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine2: {\r\n       name: \"image_vitrine2\",\r\n       value: null,\r\n-      file: null,\r\n+      type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine3: {\r\n       name: \"image_vitrine3\",\r\n       value: null,\r\n-      file: null,\r\n+      type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n@@ -204,9 +165,9 @@\n     },\r\n     image_anatomie: {\r\n       name: \"image_anatomie\",\r\n       value: null,\r\n-      file: null,\r\n+      type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n"
                },
                {
                    "date": 1709401483284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,24 +128,27 @@\n       errorMessage: \"\",\r\n     },\r\n \r\n     image_vitrine1: {\r\n+      label: \"Image Gauche pour la vitrine \",\r\n       name: \"image_vitrine1\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine2: {\r\n+      label: \"Image Centre pour la vitrine\",\r\n       name: \"image_vitrine2\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine3: {\r\n+      label: \"Image Droit pour la vitrine \",\r\n       name: \"image_vitrine3\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n"
                },
                {
                    "date": 1709401577596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,14 +127,16 @@\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n \r\n+   \r\n     image_vitrine1: {\r\n-      label: \"Image Gauche pour la vitrine \",\r\n+      label: \"image_vitrine1\",\r\n+      type: \"text\",\r\n       name: \"image_vitrine1\",\r\n-      value: null,\r\n-      type: \"text\",\r\n       required: false,\r\n+      placeholder: \"image_vitrine1\",\r\n+      value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine2: {\r\n"
                },
                {
                    "date": 1709401703537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n     },\r\n \r\n    \r\n     image_vitrine1: {\r\n-      label: \"image_vitrine1\",\r\n+      label: \"Image gauche Vitrine\",\r\n       type: \"text\",\r\n       name: \"image_vitrine1\",\r\n       required: false,\r\n       placeholder: \"image_vitrine1\",\r\n@@ -962,8 +962,17 @@\n                         cpState.description.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+\r\n+<Input\r\n+                      {...state.image_vitrine1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.image_vitrine1.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n                     <Input\r\n                       {...state.labelanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709401773801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n \r\n-   \r\n+\r\n     image_vitrine1: {\r\n       label: \"Image gauche Vitrine\",\r\n       type: \"text\",\r\n       name: \"image_vitrine1\",\r\n@@ -578,10 +578,10 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file  || cpState.image_anatomie.file) {\r\n- \r\n+        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.image_anatomie.file) {\r\n+\r\n         }\r\n \r\n \r\n \r\n@@ -654,10 +654,10 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n- \r\n \r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n@@ -963,17 +963,34 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-<Input\r\n+                    <Input\r\n                       {...state.image_vitrine1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.image_vitrine1.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <Input\r\n+                      {...state.image_vitrine2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.image_vitrine2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.image_vitrine3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.image_vitrine3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n                       {...state.labelanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.labelanatomie.value = e.target.value;\r\n"
                },
                {
                    "date": 1709401846047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n     },\r\n \r\n \r\n     image_vitrine1: {\r\n-      label: \"Image gauche Vitrine\",\r\n+      label: \"Image Gauche Vitrine\",\r\n       type: \"text\",\r\n       name: \"image_vitrine1\",\r\n       required: false,\r\n       placeholder: \"image_vitrine1\",\r\n@@ -139,18 +139,18 @@\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine2: {\r\n-      label: \"Image Centre pour la vitrine\",\r\n+      label: \"Nom Image Centre vitrine\",\r\n       name: \"image_vitrine2\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     image_vitrine3: {\r\n-      label: \"Image Droit pour la vitrine \",\r\n+      label: \"Nom Image Droit vitrine\",\r\n       name: \"image_vitrine3\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n"
                },
                {
                    "date": 1709401939803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -524,14 +524,11 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.imageVit1.value,\r\n-        image_vitrine2: cpState.imageVit2.value,\r\n-        image_vitrine3: cpState.imageVit3.value,\r\n-        //imageVit1: cpState.imageVit1.value,\r\n-        //imageVit2: cpState.imageVit2.value,\r\n-        //imageVit3: cpState.imageVit3.value,\r\n+        image_vitrine1: cpState.imageVitrine1.value,\r\n+        image_vitrine2: cpState.imageVitrine2.value,\r\n+        image_vitrine3: cpState.imageVitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n         image_anatomie: cpState.imageAnat1.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n"
                },
                {
                    "date": 1709402083918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -524,11 +524,11 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.imageVitrine1.value,\r\n-        image_vitrine2: cpState.imageVitrine2.value,\r\n-        image_vitrine3: cpState.imageVitrine3.value,\r\n+        image_vitrine1: cpState.image_vitrine1.value,\r\n+        image_vitrine2: cpState.image_vitrine2.value,\r\n+        image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n         image_anatomie: cpState.imageAnat1.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n"
                },
                {
                    "date": 1709402171088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1100,43 +1100,10 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-                    <Input\r\n-                      {...state.imageVit1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.imageVit1 = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.imageVit2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.imageVit2 = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n+             \r\n \r\n-                    <Input\r\n-                      {...state.imageVit3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.imageVit3 = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.imageAnat1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.imageAnat1 = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709402279168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -528,9 +528,9 @@\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.imageAnat1.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n@@ -985,8 +985,17 @@\n                         cpState.image_vitrine3.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+\r\n+<Input\r\n+                      {...state.image_anatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.image_anatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n                     <Input\r\n                       {...state.labelanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709402354545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,8 +168,9 @@\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n     image_anatomie: {\r\n+      label: \"Nom image anatomie\",\r\n       name: \"image_anatomie\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n"
                },
                {
                    "date": 1709402949206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,11 +167,11 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-    image_anatomie: {\r\n+    imageAnatomie: {\r\n       label: \"Nom image anatomie\",\r\n-      name: \"image_anatomie\",\r\n+      name: \"imageAnatomie\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n@@ -529,9 +529,9 @@\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n+        imageAnatomie: cpState.imageAnatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n@@ -576,9 +576,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.image_anatomie.file) {\r\n+        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.imageAnatomie.file) {\r\n \r\n         }\r\n \r\n \r\n@@ -988,12 +988,12 @@\n                       }}\r\n                     />\r\n \r\n <Input\r\n-                      {...state.image_anatomie}\r\n+                      {...state.imageAnatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.image_anatomie.value = e.target.value;\r\n+                        cpState.imageAnatomie.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <Input\r\n"
                },
                {
                    "date": 1709403169749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,11 +167,11 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-    imageAnatomie: {\r\n+    image_anatomie: {\r\n       label: \"Nom image anatomie\",\r\n-      name: \"imageAnatomie\",\r\n+      name: \"image_anatomie\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n@@ -529,9 +529,9 @@\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n-        imageAnatomie: cpState.imageAnatomie.value,\r\n+        image_anatomie: cpState.image_anatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n@@ -576,9 +576,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.imageAnatomie.file) {\r\n+        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.image_anatomie.file) {\r\n \r\n         }\r\n \r\n \r\n@@ -988,12 +988,12 @@\n                       }}\r\n                     />\r\n \r\n <Input\r\n-                      {...state.imageAnatomie}\r\n+                      {...state.image_anatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.imageAnatomie.value = e.target.value;\r\n+                        cpState.image_anatomie.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <Input\r\n"
                },
                {
                    "date": 1709403288667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n     },\r\n     image_anatomie: {\r\n       label: \"Nom image anatomie\",\r\n       name: \"image_anatomie\",\r\n+      id: \"image_anatomie\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n"
                },
                {
                    "date": 1709404430401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,12 +167,12 @@\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n     },\r\n-    image_anatomie: {\r\n+    filenameanatomie: {\r\n       label: \"Nom image anatomie\",\r\n-      name: \"image_anatomie\",\r\n-      id: \"image_anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n@@ -530,9 +530,9 @@\n         image_vitrine1: cpState.image_vitrine1.value,\r\n         image_vitrine2: cpState.image_vitrine2.value,\r\n         image_vitrine3: cpState.image_vitrine3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n-        image_anatomie: cpState.image_anatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n       },\r\n@@ -577,9 +577,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.image_anatomie.file) {\r\n+        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.filenameanatomie.file) {\r\n \r\n         }\r\n \r\n \r\n@@ -989,12 +989,12 @@\n                       }}\r\n                     />\r\n \r\n <Input\r\n-                      {...state.image_anatomie}\r\n+                      {...state.filenameanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.image_anatomie.value = e.target.value;\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <Input\r\n"
                },
                {
                    "date": 1709404526284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,30 +128,30 @@\n       errorMessage: \"\",\r\n     },\r\n \r\n \r\n-    image_vitrine1: {\r\n+    filenameimage1: {\r\n       label: \"Image Gauche Vitrine\",\r\n       type: \"text\",\r\n-      name: \"image_vitrine1\",\r\n+      name: \"filenameimage1\",\r\n       required: false,\r\n-      placeholder: \"image_vitrine1\",\r\n+      placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    image_vitrine2: {\r\n+    filenameimage2: {\r\n       label: \"Nom Image Centre vitrine\",\r\n-      name: \"image_vitrine2\",\r\n+      name: \"filenameimage2\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    image_vitrine3: {\r\n+    filenameimage3: {\r\n       label: \"Nom Image Droit vitrine\",\r\n-      name: \"image_vitrine3\",\r\n+      name: \"filenameimage3\",\r\n       value: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n@@ -526,11 +526,11 @@\n         description: cpState.description.value,\r\n         descriptionPictures: cpState.descriptionPictures.value,\r\n         image: cpState.image.value,\r\n         imageHome: cpState.imageHome.value,\r\n-        image_vitrine1: cpState.image_vitrine1.value,\r\n-        image_vitrine2: cpState.image_vitrine2.value,\r\n-        image_vitrine3: cpState.image_vitrine3.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n         labelanatomie: cpState.labelanatomie.value,\r\n         filenameanatomie: cpState.filenameanatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n@@ -561,9 +561,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.image_vitrine1.file || state.image_vitrine1.value)\r\n+        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n@@ -577,9 +577,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.image_vitrine1.file || cpState.image_vitrine2.file || cpState.image_vitrine3.file || cpState.filenameanatomie.file) {\r\n+        } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n \r\n         }\r\n \r\n \r\n@@ -821,11 +821,11 @@\n           ? item.children[item.children.length - 1]\r\n           : {},\r\n         image: null,\r\n         imageHome: null,\r\n-        image_vitrine1: null,\r\n-        image_vitrine2: null,\r\n-        image_vitrine3: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n         pictures: [],\r\n         nameCategory: item?.nameCategory || \"\",\r\n         nameSubCategory: item?.nameSubCategory || \"\",\r\n         requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n@@ -963,29 +963,29 @@\n                       }}\r\n                     />\r\n \r\n                     <Input\r\n-                      {...state.image_vitrine1}\r\n+                      {...state.filenameimage1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.image_vitrine1.value = e.target.value;\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <Input\r\n-                      {...state.image_vitrine2}\r\n+                      {...state.filenameimage2}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.image_vitrine2.value = e.target.value;\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n                     <Input\r\n-                      {...state.image_vitrine3}\r\n+                      {...state.filenameimage3}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        cpState.image_vitrine3.value = e.target.value;\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n"
                },
                {
                    "date": 1709405362318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n \r\n \r\n     filenameimage1: {\r\n       label: \"Image Gauche Vitrine\",\r\n-      type: \"text\",\r\n+      file:  null,\r\n       name: \"filenameimage1\",\r\n       required: false,\r\n       placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n@@ -654,9 +654,36 @@\n     }\r\n   };\r\n \r\n \r\n+  const saveImageVitrineGauche = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n@@ -988,9 +1015,9 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-<Input\r\n+                    <Input\r\n                       {...state.filenameanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameanatomie.value = e.target.value;\r\n@@ -1047,8 +1074,43 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n+\r\n+                    <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n+<div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\" }`}>\r\n+  <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+  <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e)=> {\r\n+  const cpState = { ...state };\r\n+  cpState.filenameimage1.file = e.target.files[0];\r\n+  e.target.value = \"\";\r\n+  console.log(\"on chaneg image home\", cpState);\r\n+  console.log(\"on chaneg image home\", e.target);\r\n+  setState(cpState);\r\n+  setMessage(null);\r\n+  }}\r\n+  />\r\n+  <div className=\"btns-file\">\r\n+    <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+      <EditIcon />\r\n+    </label>\r\n+    {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+    <button className=\"delete-image\" onClick={(e)=> {\r\n+      e.preventDefault();\r\n+      const cpState = { ...state };\r\n+      cpState.filenameimage1.value = \"\";\r\n+      cpState.filenameimage1.file = null;\r\n+      setState(cpState);\r\n+      }}\r\n+      >\r\n+      <DeleteIcon />\r\n+    </button>\r\n+    ) : (\r\n+    \"\"\r\n+    )}\r\n+  </div>\r\n+</div>\r\n+\r\n                     <RadioButton\r\n                       {...state.bonusreparation}\r\n                       onChange={(val) => {\r\n                         const cpState = { ...state };\r\n@@ -1111,10 +1173,44 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-             \r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.file = e.target.files[0];\r\n+                        e.target.value = \"\";\r\n+                        console.log(\"on chaneg image home\", cpState);\r\n+                        console.log(\"on chaneg image home\", e.target);\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button className=\"delete-image\" onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            const cpState = { ...state };\r\n+                            cpState.filenameimage1.value = \"\";\r\n+                            cpState.filenameimage1.file = null;\r\n+                            setState(cpState);\r\n+                          }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n \r\n+\r\n+\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709405411818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n \r\n \r\n     filenameimage1: {\r\n       label: \"Image Gauche Vitrine\",\r\n-      file:  null,\r\n+      file: null,\r\n       name: \"filenameimage1\",\r\n       required: false,\r\n       placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n@@ -1076,40 +1076,40 @@\n                     </div>\r\n \r\n \r\n                     <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n-<div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\" }`}>\r\n-  <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-  <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e)=> {\r\n-  const cpState = { ...state };\r\n-  cpState.filenameimage1.file = e.target.files[0];\r\n-  e.target.value = \"\";\r\n-  console.log(\"on chaneg image home\", cpState);\r\n-  console.log(\"on chaneg image home\", e.target);\r\n-  setState(cpState);\r\n-  setMessage(null);\r\n-  }}\r\n-  />\r\n-  <div className=\"btns-file\">\r\n-    <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-      <EditIcon />\r\n-    </label>\r\n-    {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-    <button className=\"delete-image\" onClick={(e)=> {\r\n-      e.preventDefault();\r\n-      const cpState = { ...state };\r\n-      cpState.filenameimage1.value = \"\";\r\n-      cpState.filenameimage1.file = null;\r\n-      setState(cpState);\r\n-      }}\r\n-      >\r\n-      <DeleteIcon />\r\n-    </button>\r\n-    ) : (\r\n-    \"\"\r\n-    )}\r\n-  </div>\r\n-</div>\r\n+                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.file = e.target.files[0];\r\n+                        e.target.value = \"\";\r\n+                        console.log(\"on chaneg image home\", cpState);\r\n+                        console.log(\"on chaneg image home\", e.target);\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button className=\"delete-image\" onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            const cpState = { ...state };\r\n+                            cpState.filenameimage1.value = \"\";\r\n+                            cpState.filenameimage1.file = null;\r\n+                            setState(cpState);\r\n+                          }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n \r\n                     <RadioButton\r\n                       {...state.bonusreparation}\r\n                       onChange={(val) => {\r\n"
                },
                {
                    "date": 1709405564716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1173,9 +1173,9 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n                     <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709457676649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1345 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+\r\n+\r\n+    filenameimage1: {\r\n+      label: \"Image Gauche Vitrine\",\r\n+      file: null,\r\n+      name: \"filenameimage1\",\r\n+      required: false,\r\n+      placeholder: \"filenameimage1\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage2: {\r\n+      label: \"Nom Image Centre vitrine\",\r\n+      name: \"filenameimage2\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage3: {\r\n+      label: \"Nom Image Droit vitrine\",\r\n+      name: \"filenameimage3\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    filenameanatomie: {\r\n+      label: \"Nom image anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          saveImage(cpState);\r\n+        } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          saveImageHome(cpState);\r\n+        } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n+\r\n+        }\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+        else if (files.length) {\r\n+          savePictures(cpState);\r\n+        }\r\n+        else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const saveImageVitrineGauche = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.filenameimage2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n+                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.file = e.target.files[0];\r\n+                        e.target.value = \"\";\r\n+                        console.log(\"on chaneg image home\", cpState);\r\n+                        console.log(\"on chaneg image home\", e.target);\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button className=\"delete-image\" onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            const cpState = { ...state };\r\n+                            cpState.filenameimage1.value = \"\";\r\n+                            cpState.filenameimage1.file = null;\r\n+                            setState(cpState);\r\n+                          }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          console.log(\"on chaneg image home\", cpState);\r\n+                          console.log(\"on chaneg image home\", e.target);\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.file = e.target.files[0];\r\n+                        cpState.filenameimage1.value = \"get ,image name\";\r\n+                        e.target.value = \"\";\r\n+                        console.log(\"on chaneg image home\", cpState);\r\n+                        console.log(\"on chaneg image home\", e.target);\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button className=\"delete-image\" onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            const cpState = { ...state };\r\n+                            cpState.filenameimage1.value = \"\";\r\n+                            cpState.filenameimage1.file = null;\r\n+                            setState(cpState);\r\n+                          }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709457766584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1183,8 +1183,9 @@\n                         cpState.filenameimage1.value = \"get ,image name\";\r\n                         e.target.value = \"\";\r\n                         console.log(\"on chaneg image home\", cpState);\r\n                         console.log(\"on chaneg image home\", e.target);\r\n+                        cpState.filenameimage1.value = \"xxxxxxxx\";\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n                       />\r\n@@ -1342,1348 +1343,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-\r\n-\r\n-    filenameimage1: {\r\n-      label: \"Image Gauche Vitrine\",\r\n-      file: null,\r\n-      name: \"filenameimage1\",\r\n-      required: false,\r\n-      placeholder: \"filenameimage1\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage2: {\r\n-      label: \"Nom Image Centre vitrine\",\r\n-      name: \"filenameimage2\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage3: {\r\n-      label: \"Nom Image Droit vitrine\",\r\n-      name: \"filenameimage3\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id: \"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    filenameanatomie: {\r\n-      label: \"Nom image anatomie\",\r\n-      name: \"filenameanatomie\",\r\n-      id: \"filenameanatomie\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        filenameimage1: cpState.filenameimage1.value,\r\n-        filenameimage2: cpState.filenameimage2.value,\r\n-        filenameimage3: cpState.filenameimage3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        filenameanatomie: cpState.filenameanatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          saveImageHome(cpState);\r\n-        } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n-\r\n-        }\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-        else if (files.length) {\r\n-          savePictures(cpState);\r\n-        }\r\n-        else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const saveImageVitrineGauche = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        filenameimage1: null,\r\n-        filenameimage2: null,\r\n-        filenameimage3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.filenameimage2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage2.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage3.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n-                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.file = e.target.files[0];\r\n-                        e.target.value = \"\";\r\n-                        console.log(\"on chaneg image home\", cpState);\r\n-                        console.log(\"on chaneg image home\", e.target);\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button className=\"delete-image\" onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            const cpState = { ...state };\r\n-                            cpState.filenameimage1.value = \"\";\r\n-                            cpState.filenameimage1.file = null;\r\n-                            setState(cpState);\r\n-                          }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\", cpState);\r\n-                          console.log(\"on chaneg image home\", e.target);\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.file = e.target.files[0];\r\n-                        e.target.value = \"\";\r\n-                        console.log(\"on chaneg image home\", cpState);\r\n-                        console.log(\"on chaneg image home\", e.target);\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button className=\"delete-image\" onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            const cpState = { ...state };\r\n-                            cpState.filenameimage1.value = \"\";\r\n-                            cpState.filenameimage1.file = null;\r\n-                            setState(cpState);\r\n-                          }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1709457889448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1182,10 +1182,9 @@\n                         cpState.filenameimage1.file = e.target.files[0];\r\n                         cpState.filenameimage1.value = \"get ,image name\";\r\n                         e.target.value = \"\";\r\n                         console.log(\"on chaneg image home\", cpState);\r\n-                        console.log(\"on chaneg image home\", e.target);\r\n-                        cpState.filenameimage1.value = \"xxxxxxxx\";\r\n+                        console.log(\"on chaneg image home\", e);\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n                       />\r\n"
                },
                {
                    "date": 1709457949008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1180,8 +1180,9 @@\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n                         cpState.filenameimage1.value = \"get ,image name\";\r\n+                        console.log(\"on chaneg image home\", e);\r\n                         e.target.value = \"\";\r\n                         console.log(\"on chaneg image home\", cpState);\r\n                         console.log(\"on chaneg image home\", e);\r\n                         setState(cpState);\r\n"
                },
                {
                    "date": 1709458387011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1179,13 +1179,10 @@\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                        cpState.filenameimage1.value = \"get ,image name\";\r\n-                        console.log(\"on chaneg image home\", e);\r\n+                        console.log(cpState.filenameimage1);\r\n                         e.target.value = \"\";\r\n-                        console.log(\"on chaneg image home\", cpState);\r\n-                        console.log(\"on chaneg image home\", e);\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n                       />\r\n"
                },
                {
                    "date": 1709458582709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -665,8 +665,9 @@\n         data,\r\n         success: (response) => {\r\n           cpState.filenameimage1.file = null;\r\n           cpState.filenameimage1.value = response.data.contentUrl;\r\n+          console.log(\"save image gauche:\",saveImageVitrineGauche) ;\r\n           setState(cpState);\r\n \r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1709458615161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -578,9 +578,9 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n-\r\n+          saveImageVitrineGauche();\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709458635168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -578,9 +578,9 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n-          saveImageVitrineGauche();\r\n+          saveImageVitrineGauche(cpState);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709459360493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -578,9 +578,9 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n-          saveImageVitrineGauche(cpState);\r\n+          saveImageVitrineGauche(cpState.filenameimage1.file);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709459861324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -553,9 +553,9 @@\n   };\r\n \r\n   const saveUniverse = () => {\r\n     if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state)\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", descriptionPictures)\r\n       setIsPending(true);\r\n       setMessage(null);\r\n       setState(clearErrors(state));\r\n       if (\r\n"
                },
                {
                    "date": 1709459876967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -553,9 +553,9 @@\n   };\r\n \r\n   const saveUniverse = () => {\r\n     if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", descriptionPictures)\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n       setIsPending(true);\r\n       setMessage(null);\r\n       setState(clearErrors(state));\r\n       if (\r\n"
                },
                {
                    "date": 1709460277081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1180,9 +1180,9 @@\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                        console.log(cpState.filenameimage1);\r\n+                        console.log(\"cpState.filenameimage1.file\",cpState.filenameimage1.file);\r\n                         e.target.value = \"\";\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n"
                },
                {
                    "date": 1709460564316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1180,9 +1180,9 @@\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                        console.log(\"cpState.filenameimage1.file\",cpState.filenameimage1.file);\r\n+                     \r\n                         e.target.value = \"\";\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n"
                },
                {
                    "date": 1709460728400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1180,9 +1180,9 @@\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                     \r\n+                        console.log(\"getimage\",getPathImage(state.filenameimage1));\r\n                         e.target.value = \"\";\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n"
                },
                {
                    "date": 1709461332672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1345 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+\r\n+\r\n+    filenameimage1: {\r\n+      label: \"Image Gauche Vitrine\",\r\n+      file: null,\r\n+      name: \"filenameimage1\",\r\n+      required: false,\r\n+      placeholder: \"filenameimage1\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage2: {\r\n+      label: \"Nom Image Centre vitrine\",\r\n+      name: \"filenameimage2\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage3: {\r\n+      label: \"Nom Image Droit vitrine\",\r\n+      name: \"filenameimage3\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    filenameanatomie: {\r\n+      label: \"Nom image anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          saveImage(cpState);\r\n+        } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          saveImageHome(cpState);\r\n+        } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n+          saveImageVitrineGauche(cpState.filenameimage1.file);\r\n+        }\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+        else if (files.length) {\r\n+          savePictures(cpState);\r\n+        }\r\n+        else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    if (cpState.imageHome.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+  const saveImageVitrineGauche = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          console.log(\"save image gauche:\",saveImageVitrineGauche) ;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.filenameimage2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n+                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        console.log(\"on chaneg image home\", e.target);\r\n+                        cpState.filenameimage1.file = e.target.files[0];\r\n+                        e.target.value = \"\";\r\n+                        console.log(\"on chaneg image home\", cpState);\r\n+                        console.log(\"on chaneg image home\", e.target);\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button className=\"delete-image\" onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            const cpState = { ...state };\r\n+                            cpState.filenameimage1.value = \"\";\r\n+                            cpState.filenameimage1.file = null;\r\n+                            setState(cpState);\r\n+                          }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          console.log(\"on chaneg image home\", cpState);\r\n+                          console.log(\"on chaneg image home\", e.target);\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n+                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.file = e.target.files[0];\r\n+                        console.log(\"getimage\",getPathImage(state.filenameimage1));\r\n+                        e.target.value = \"\";\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button className=\"delete-image\" onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            const cpState = { ...state };\r\n+                            cpState.filenameimage1.value = \"\";\r\n+                            cpState.filenameimage1.file = null;\r\n+                            setState(cpState);\r\n+                          }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709461532156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,34 +654,9 @@\n     }\r\n   };\r\n \r\n \r\n-  const saveImageVitrineGauche = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          console.log(\"save image gauche:\",saveImageVitrineGauche) ;\r\n-          setState(cpState);\r\n \r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n \r\n \r\n \r\n   const savePictures = (cpState) => {\r\n@@ -1081,1355 +1056,11 @@\n                     <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                        console.log(\"on chaneg image home\", e.target);\r\n-                        cpState.filenameimage1.file = e.target.files[0];\r\n-                        e.target.value = \"\";\r\n-                        console.log(\"on chaneg image home\", cpState);\r\n-                        console.log(\"on chaneg image home\", e.target);\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button className=\"delete-image\" onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            const cpState = { ...state };\r\n-                            cpState.filenameimage1.value = \"\";\r\n-                            cpState.filenameimage1.file = null;\r\n-                            setState(cpState);\r\n-                          }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\", cpState);\r\n                           console.log(\"on chaneg image home\", e.target);\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                        console.log(\"getimage\",getPathImage(state.filenameimage1));\r\n                         e.target.value = \"\";\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button className=\"delete-image\" onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            const cpState = { ...state };\r\n-                            cpState.filenameimage1.value = \"\";\r\n-                            cpState.filenameimage1.file = null;\r\n-                            setState(cpState);\r\n-                          }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-\r\n-\r\n-    filenameimage1: {\r\n-      label: \"Image Gauche Vitrine\",\r\n-      file: null,\r\n-      name: \"filenameimage1\",\r\n-      required: false,\r\n-      placeholder: \"filenameimage1\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage2: {\r\n-      label: \"Nom Image Centre vitrine\",\r\n-      name: \"filenameimage2\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage3: {\r\n-      label: \"Nom Image Droit vitrine\",\r\n-      name: \"filenameimage3\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id: \"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    filenameanatomie: {\r\n-      label: \"Nom image anatomie\",\r\n-      name: \"filenameanatomie\",\r\n-      id: \"filenameanatomie\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        filenameimage1: cpState.filenameimage1.value,\r\n-        filenameimage2: cpState.filenameimage2.value,\r\n-        filenameimage3: cpState.filenameimage3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        filenameanatomie: cpState.filenameanatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          saveImageHome(cpState);\r\n-        } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n-          saveImageVitrineGauche(cpState.filenameimage1.file);\r\n-        }\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-        else if (files.length) {\r\n-          savePictures(cpState);\r\n-        }\r\n-        else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        setState(cpState);\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    if (cpState.imageHome.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-  const saveImageVitrineGauche = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          console.log(\"save image gauche:\",saveImageVitrineGauche) ;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        filenameimage1: null,\r\n-        filenameimage2: null,\r\n-        filenameimage3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.filenameimage2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage2.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage3.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n-                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.file = e.target.files[0];\r\n-                        e.target.value = \"\";\r\n                         console.log(\"on chaneg image home\", cpState);\r\n                         console.log(\"on chaneg image home\", e.target);\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n"
                },
                {
                    "date": 1709461551664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -578,9 +578,9 @@\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n-          saveImageVitrineGauche(cpState.filenameimage1.file);\r\n+          //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709461780137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1056,13 +1056,11 @@\n                     <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n-                          console.log(\"on chaneg image home\", e.target);\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n                         e.target.value = \"\";\r\n-                        console.log(\"on chaneg image home\", cpState);\r\n-                        console.log(\"on chaneg image home\", e.target);\r\n+                    \r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n                       />\r\n@@ -1121,10 +1119,8 @@\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n                           cpState.imageHome.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n-                          console.log(\"on chaneg image home\", cpState);\r\n-                          console.log(\"on chaneg image home\", e.target);\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n"
                },
                {
                    "date": 1709462190672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -658,8 +658,10 @@\n \r\n \r\n \r\n \r\n+\r\n+\r\n   const savePictures = (cpState) => {\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n@@ -1058,9 +1060,8 @@\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n                         e.target.value = \"\";\r\n-                    \r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n                       />\r\n"
                },
                {
                    "date": 1709462430523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -653,9 +653,33 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n+  const saveFilenameimage1 = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n \r\n \r\n \r\n \r\n@@ -841,8 +865,9 @@\n       items\r\n     );\r\n   };\r\n \r\n+\r\n   const getUrlServices = (cat) => {\r\n     let params = \"\";\r\n     if (cat.level === 0) {\r\n       params = `?category=${cat.id}`;\r\n@@ -1153,9 +1178,9 @@\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                        console.log(\"getimage\",getPathImage(state.filenameimage1));\r\n+                        console.log(\"getimage\", getPathImage(state.filenameimage1));\r\n                         e.target.value = \"\";\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n"
                },
                {
                    "date": 1709462521432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -577,10 +577,11 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.filenameimage1.file || cpState.filenameimage2.file || cpState.filenameimage3.file || cpState.filenameanatomie.file) {\r\n+        } else if (cpState.filenameimage1.file ) {\r\n           //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n+          saveFilenameimage1(cpState.filenameimage1.file);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709462874757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1179,9 +1179,9 @@\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.file = e.target.files[0];\r\n-                        console.log(\"getimage\", getPathImage(state.filenameimage1));\r\n+                        console.log(\"getimage\",  cpState.filenameimage1.file );\r\n                         e.target.value = \"\";\r\n                         setState(cpState);\r\n                         setMessage(null);\r\n                       }}\r\n"
                },
                {
                    "date": 1709463046961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1173,39 +1173,9 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-                    <p className=\"form-label-title\">Image Vitrine Gauche</p>\r\n-                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.file = e.target.files[0];\r\n-                        console.log(\"getimage\",  cpState.filenameimage1.file );\r\n-                        e.target.value = \"\";\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button className=\"delete-image\" onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            const cpState = { ...state };\r\n-                            cpState.filenameimage1.value = \"\";\r\n-                            cpState.filenameimage1.file = null;\r\n-                            setState(cpState);\r\n-                          }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n+                \r\n                     </div>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1709463264046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n \r\n \r\n     filenameimage1: {\r\n       label: \"Image Gauche Vitrine\",\r\n-      file: null,\r\n+      file: text,\r\n       name: \"filenameimage1\",\r\n       required: false,\r\n       placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n@@ -1174,9 +1174,9 @@\n                       </div>\r\n                     </div>\r\n \r\n                 \r\n-                    </div>\r\n+                \r\n \r\n \r\n \r\n                     <WysiwygEditor\r\n"
                },
                {
                    "date": 1709463312113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n \r\n \r\n     filenameimage1: {\r\n       label: \"Image Gauche Vitrine\",\r\n-      file: text,\r\n+      type: text,\r\n       name: \"filenameimage1\",\r\n       required: false,\r\n       placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n"
                },
                {
                    "date": 1709463336557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n \r\n \r\n     filenameimage1: {\r\n       label: \"Image Gauche Vitrine\",\r\n-      type: text,\r\n+      type: \"text\",\r\n       name: \"filenameimage1\",\r\n       required: false,\r\n       placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n"
                },
                {
                    "date": 1709463555965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1079,40 +1079,9 @@\n                       </div>\r\n                     </div>\r\n \r\n \r\n-                    <p className=\"form-label-title\">Image vitrine Gauche</p>\r\n-                    <div className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"}`}>\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input type=\"file\" name=\"file\" id=\"uploadfilenameimage1\" accept=\"image/png, image/jpeg\" onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.file = e.target.files[0];\r\n-                        e.target.value = \"\";\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadfilenameimage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button className=\"delete-image\" onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            const cpState = { ...state };\r\n-                            cpState.filenameimage1.value = \"\";\r\n-                            cpState.filenameimage1.file = null;\r\n-                            setState(cpState);\r\n-                          }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n+                    \r\n                     <RadioButton\r\n                       {...state.bonusreparation}\r\n                       onChange={(val) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1709551669520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -617,8 +617,9 @@\n       success: (response) => {\r\n         cpState.image.file = null;\r\n         cpState.image.value = response.data.contentUrl;\r\n         setState(cpState);\r\n+        console.log(\"STEP SAVEIMAGEHOPME\");\r\n         saveImageHome(cpState);\r\n       },\r\n       catch: (error) => {\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1709552078509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,10 +616,11 @@\n       data,\r\n       success: (response) => {\r\n         cpState.image.file = null;\r\n         cpState.image.value = response.data.contentUrl;\r\n+        console.log(\"STEP IMAGE saveImage Sucess \",  cpState.image.value );\r\n         setState(cpState);\r\n-        console.log(\"STEP SAVEIMAGEHOPME\");\r\n+    \r\n         saveImageHome(cpState);\r\n       },\r\n       catch: (error) => {\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n@@ -630,9 +631,13 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n+    console.log(\"STEP IMAGE saveImageHome Begin  process  \",  cpState );\r\n+    \r\n     if (cpState.imageHome.file) {\r\n+      console.log(\"STEP IMAGE if (cpState.imageHome.file) CASE  \",  cpState );\r\n+      \r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.imageHome.file);\r\n       connector({\r\n         method: \"post\",\r\n"
                },
                {
                    "date": 1712573794297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -577,9 +577,9 @@\n           saveImage(cpState);\r\n         } else if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n-        } else if (cpState.filenameimage1.file ) {\r\n+        } else if (cpState.filenameimage1.file) {\r\n           //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n           saveFilenameimage1(cpState.filenameimage1.file);\r\n         }\r\n \r\n@@ -616,11 +616,11 @@\n       data,\r\n       success: (response) => {\r\n         cpState.image.file = null;\r\n         cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP IMAGE saveImage Sucess \",  cpState.image.value );\r\n+        console.log(\"STEP IMAGE saveImage Sucess \", cpState.image.value);\r\n         setState(cpState);\r\n-    \r\n+\r\n         saveImageHome(cpState);\r\n       },\r\n       catch: (error) => {\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n@@ -631,13 +631,13 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP IMAGE saveImageHome Begin  process  \",  cpState );\r\n-    \r\n+    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+\r\n     if (cpState.imageHome.file) {\r\n-      console.log(\"STEP IMAGE if (cpState.imageHome.file) CASE  \",  cpState );\r\n-      \r\n+      console.log(\"STEP IMAGE if (cpState.imageHome.file) CASE  \", cpState);\r\n+\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.imageHome.file);\r\n       connector({\r\n         method: \"post\",\r\n@@ -1007,8 +1007,50 @@\n                         cpState.filenameimage1.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+                     <p className=\"form-label-title\">Image 1 *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage1.value = \"\";\r\n+                              cpState.filenameimage1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n                     <Input\r\n                       {...state.filenameimage2}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n@@ -1085,9 +1127,9 @@\n                       </div>\r\n                     </div>\r\n \r\n \r\n-                    \r\n+\r\n                     <RadioButton\r\n                       {...state.bonusreparation}\r\n                       onChange={(val) => {\r\n                         const cpState = { ...state };\r\n@@ -1148,13 +1190,13 @@\n                         )}\r\n                       </div>\r\n                     </div>\r\n \r\n-                \r\n-                \r\n \r\n \r\n \r\n+\r\n+\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712574018230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -579,9 +579,9 @@\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n           saveImageHome(cpState);\r\n         } else if (cpState.filenameimage1.file) {\r\n           //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n-          saveFilenameimage1(cpState.filenameimage1.file);\r\n+          //saveFilenameimage1(cpState.filenameimage1.file);\r\n         }\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1712574183305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1007,9 +1007,9 @@\n                         cpState.filenameimage1.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-                     <p className=\"form-label-title\">Image 1 *</p>\r\n+                     <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n"
                },
                {
                    "date": 1712574323213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1012,9 +1012,9 @@\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <img src={getPathImage(state.filenameimage1.value)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n                         id=\"uploadImage\"\r\n"
                },
                {
                    "date": 1712574349668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1012,9 +1012,9 @@\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.filenameimage1.value)} alt=\"\" />\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n                         id=\"uploadImage\"\r\n"
                },
                {
                    "date": 1712574522131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1048,8 +1048,48 @@\n                           \"\"\r\n                         )}\r\n                       </div>\r\n                     </div>\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n \r\n                     <Input\r\n                       {...state.filenameimage2}\r\n                       onChange={(e) => {\r\n"
                },
                {
                    "date": 1712574572657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1048,48 +1048,8 @@\n                           \"\"\r\n                         )}\r\n                       </div>\r\n                     </div>\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n \r\n                     <Input\r\n                       {...state.filenameimage2}\r\n                       onChange={(e) => {\r\n"
                },
                {
                    "date": 1712574604555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1084,52 +1084,10 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n+                   \r\n \r\n-\r\n-\r\n                     <RadioButton\r\n                       {...state.bonusreparation}\r\n                       onChange={(val) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712574640079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -999,8 +999,52 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n+<p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n                     <Input\r\n                       {...state.filenameimage1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712574882157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -999,9 +999,9 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-<p className=\"form-label-title\">Image *</p>\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n                     <div\r\n                       className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n@@ -1051,18 +1051,18 @@\n                         cpState.filenameimage1.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-                     <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n+                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n                       <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n-                        id=\"uploadImage\"\r\n+                        id=\"uploadImage1\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n                           cpState.filenameimage1.file = e.target.files[0];\r\n@@ -1071,9 +1071,9 @@\n                           setMessage(null);\r\n                         }}\r\n                       />\r\n                       <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n                           <EditIcon />\r\n                         </label>\r\n                         {state.filenameimage1.value || state.filenameimage1.file ? (\r\n                           <button\r\n@@ -1128,10 +1128,10 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-                   \r\n \r\n+\r\n                     <RadioButton\r\n                       {...state.bonusreparation}\r\n                       onChange={(val) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712576022823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1333 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+\r\n+\r\n+    filenameimage1: {\r\n+      label: \"Image Gauche Vitrine\",\r\n+      type: \"text\",\r\n+      name: \"filenameimage1\",\r\n+      required: false,\r\n+      placeholder: \"filenameimage1\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage2: {\r\n+      label: \"Nom Image Centre vitrine\",\r\n+      name: \"filenameimage2\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage3: {\r\n+      label: \"Nom Image Droit vitrine\",\r\n+      name: \"filenameimage3\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    filenameanatomie: {\r\n+      label: \"Nom image anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step From saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          saveImage(cpState);\r\n+        } else if (cpState.imageHome.file) {\r\n+          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          saveImageHome(cpState);\r\n+        } else if (cpState.filenameimage1.file) {\r\n+          //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n+          //saveFilenameimage1(cpState.filenameimage1.file);\r\n+        }\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+        else if (files.length) {\r\n+          savePictures(cpState);\r\n+        }\r\n+        else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        console.log(\"STEP IMAGE saveImage Sucess \", cpState.image.value);\r\n+        setState(cpState);\r\n+\r\n+        saveImageHome(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+\r\n+    if (cpState.imageHome.file) {\r\n+      console.log(\"STEP IMAGE if (cpState.imageHome.file) CASE  \", cpState);\r\n+\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.imageHome.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.imageHome.file = null;\r\n+          cpState.imageHome.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveFilenameimage1 = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n+                        alert(e.target.value);\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage1.value = \"\";\r\n+                              cpState.filenameimage1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712576160455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1012,8 +1012,9 @@\n                         id=\"uploadImage\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n+                       \r\n                           cpState.image.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n@@ -1048,18 +1049,18 @@\n                       {...state.filenameimage1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.value = e.target.value;\r\n-                        alert(e.target.value);\r\n+                     \r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <img src={state.filenameimage1} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n                         id=\"uploadImage1\"\r\n@@ -1330,1336 +1331,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-\r\n-\r\n-    filenameimage1: {\r\n-      label: \"Image Gauche Vitrine\",\r\n-      type: \"text\",\r\n-      name: \"filenameimage1\",\r\n-      required: false,\r\n-      placeholder: \"filenameimage1\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage2: {\r\n-      label: \"Nom Image Centre vitrine\",\r\n-      name: \"filenameimage2\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage3: {\r\n-      label: \"Nom Image Droit vitrine\",\r\n-      name: \"filenameimage3\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id: \"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    filenameanatomie: {\r\n-      label: \"Nom image anatomie\",\r\n-      name: \"filenameanatomie\",\r\n-      id: \"filenameanatomie\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        filenameimage1: cpState.filenameimage1.value,\r\n-        filenameimage2: cpState.filenameimage2.value,\r\n-        filenameimage3: cpState.filenameimage3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        filenameanatomie: cpState.filenameanatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          saveImageHome(cpState);\r\n-        } else if (cpState.filenameimage1.file) {\r\n-          //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n-          //saveFilenameimage1(cpState.filenameimage1.file);\r\n-        }\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-        else if (files.length) {\r\n-          savePictures(cpState);\r\n-        }\r\n-        else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP IMAGE saveImage Sucess \", cpState.image.value);\r\n-        setState(cpState);\r\n-\r\n-        saveImageHome(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n-\r\n-    if (cpState.imageHome.file) {\r\n-      console.log(\"STEP IMAGE if (cpState.imageHome.file) CASE  \", cpState);\r\n-\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveFilenameimage1 = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        filenameimage1: null,\r\n-        filenameimage2: null,\r\n-        filenameimage3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage1.value = \"\";\r\n-                              cpState.filenameimage1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage2.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage3.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712576344785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -872,10 +872,19 @@\n       items\r\n     );\r\n   };\r\n \r\n+  const getxPathImage = (image) => {\r\n \r\n-  const getUrlServices = (cat) => {\r\n+  console.log(\"STEP CAT01 \",URL.createObjectURL(image.file));\r\n+  image.file\r\n+    ? URL.createObjectURL(image.file)\r\n+    : image.value\r\n+      ? vars.pathImage + image.value\r\n+      : noImage;\r\n+  \r\n+  }\r\n+      const getUrlServices = (cat) => {\r\n     let params = \"\";\r\n     if (cat.level === 0) {\r\n       params = `?category=${cat.id}`;\r\n     } else if (cat.parent) {\r\n@@ -885,9 +894,9 @@\n       )}&subCategory=${cat.id}`;\r\n     }\r\n     return `${ROUTES.SERVICES.url}${params}`;\r\n   };\r\n-\r\n+  \r\n   return (\r\n     <AdminBase>\r\n       <BlocAdminContent>\r\n         <DashboardContent titlePage=\"Catégories\">\r\n@@ -1058,9 +1067,9 @@\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={state.filenameimage1} alt=\"\" />\r\n+                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n                         id=\"uploadImage1\"\r\n"
                },
                {
                    "date": 1712576449803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -874,11 +874,14 @@\n   };\r\n \r\n   const getxPathImage = (image) => {\r\n \r\n-  console.log(\"STEP CAT01 \",URL.createObjectURL(image.file));\r\n+ \r\n   image.file\r\n-    ? URL.createObjectURL(image.file)\r\n+    ? {\r\n+      URL.createObjectURL(image.file);\r\n+      console.log(\"STEP CAT01 \",URL.createObjectURL(image.file));\r\n+    }\r\n     : image.value\r\n       ? vars.pathImage + image.value\r\n       : noImage;\r\n   \r\n"
                },
                {
                    "date": 1712576485325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -874,14 +874,11 @@\n   };\r\n \r\n   const getxPathImage = (image) => {\r\n \r\n- \r\n+\r\n   image.file\r\n-    ? {\r\n-      URL.createObjectURL(image.file);\r\n-      console.log(\"STEP CAT01 \",URL.createObjectURL(image.file));\r\n-    }\r\n+    ? URL.createObjectURL(image.file)\r\n     : image.value\r\n       ? vars.pathImage + image.value\r\n       : noImage;\r\n   \r\n"
                },
                {
                    "date": 1712576507708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -874,17 +874,15 @@\n   };\r\n \r\n   const getxPathImage = (image) => {\r\n \r\n-\r\n+  \r\n   image.file\r\n     ? URL.createObjectURL(image.file)\r\n     : image.value\r\n       ? vars.pathImage + image.value\r\n       : noImage;\r\n-  \r\n-  }\r\n-      const getUrlServices = (cat) => {\r\n+  const getUrlServices = (cat) => {\r\n     let params = \"\";\r\n     if (cat.level === 0) {\r\n       params = `?category=${cat.id}`;\r\n     } else if (cat.parent) {\r\n@@ -894,9 +892,9 @@\n       )}&subCategory=${cat.id}`;\r\n     }\r\n     return `${ROUTES.SERVICES.url}${params}`;\r\n   };\r\n-  \r\n+  }\r\n   return (\r\n     <AdminBase>\r\n       <BlocAdminContent>\r\n         <DashboardContent titlePage=\"Catégories\">\r\n"
                },
                {
                    "date": 1712576521171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -872,11 +872,9 @@\n       items\r\n     );\r\n   };\r\n \r\n-  const getxPathImage = (image) => {\r\n-\r\n-  \r\n+  const getxPathImage = (image) =>\r\n   image.file\r\n     ? URL.createObjectURL(image.file)\r\n     : image.value\r\n       ? vars.pathImage + image.value\r\n@@ -892,9 +890,9 @@\n       )}&subCategory=${cat.id}`;\r\n     }\r\n     return `${ROUTES.SERVICES.url}${params}`;\r\n   };\r\n-  }\r\n+\r\n   return (\r\n     <AdminBase>\r\n       <BlocAdminContent>\r\n         <DashboardContent titlePage=\"Catégories\">\r\n@@ -1065,9 +1063,9 @@\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n                         id=\"uploadImage1\"\r\n"
                },
                {
                    "date": 1712576848041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1063,9 +1063,9 @@\n                     <div\r\n                       className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n-                      <img src={getPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n                       <input\r\n                         type=\"file\"\r\n                         name=\"file\"\r\n                         id=\"uploadImage1\"\r\n@@ -1108,9 +1108,51 @@\n                         cpState.filenameimage2.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+                        <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage2.value = \"\";\r\n+                              cpState.filenameimage2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n \r\n+\r\n                     <Input\r\n                       {...state.filenameimage3}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712576956764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1199,49 +1199,9 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n+                   \r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1712577030066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1003,9 +1003,49 @@\n                         cpState.description.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-\r\n+ <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n                     <p className=\"form-label-title\">Image *</p>\r\n                     <div\r\n                       className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n                         }`}\r\n"
                },
                {
                    "date": 1712577084447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -872,14 +872,8 @@\n       items\r\n     );\r\n   };\r\n \r\n-  const getxPathImage = (image) =>\r\n-  image.file\r\n-    ? URL.createObjectURL(image.file)\r\n-    : image.value\r\n-      ? vars.pathImage + image.value\r\n-      : noImage;\r\n   const getUrlServices = (cat) => {\r\n     let params = \"\";\r\n     if (cat.level === 0) {\r\n       params = `?category=${cat.id}`;\r\n@@ -1003,9 +997,9 @@\n                         cpState.description.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n- <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n                     <div\r\n                       className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n@@ -1057,9 +1051,9 @@\n                         id=\"uploadImage\"\r\n                         accept=\"image/png, image/jpeg\"\r\n                         onChange={(e) => {\r\n                           const cpState = { ...state };\r\n-                       \r\n+\r\n                           cpState.image.file = e.target.files[0];\r\n                           e.target.value = \"\";\r\n                           setState(cpState);\r\n                           setMessage(null);\r\n@@ -1094,9 +1088,9 @@\n                       {...state.filenameimage1}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n                         cpState.filenameimage1.value = e.target.value;\r\n-                     \r\n+\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n                     <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n@@ -1148,9 +1142,9 @@\n                         cpState.filenameimage2.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n-                        <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n+                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n                     <div\r\n                       className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n                         }`}\r\n                     >\r\n@@ -1239,15 +1233,15 @@\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n \r\n-                   \r\n \r\n \r\n \r\n \r\n \r\n \r\n+\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712577332321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -561,9 +561,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.filenameimage1.file || state.filenameimage1.value)\r\n+        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n@@ -573,12 +573,16 @@\n \r\n         console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n           console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          alert(\"sauvegarde Image\");\r\n           saveImage(cpState);\r\n-        } else if (cpState.imageHome.file) {\r\n+        } ;\r\n+        if (cpState.imageHome.file) {\r\n           console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n+          alert(\"sauvegarde Image Home\");\r\n           saveImageHome(cpState);\r\n+        \r\n         } else if (cpState.filenameimage1.file) {\r\n           //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n           //saveFilenameimage1(cpState.filenameimage1.file);\r\n         }\r\n@@ -872,8 +876,14 @@\n       items\r\n     );\r\n   };\r\n \r\n+  const getxPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n   const getUrlServices = (cat) => {\r\n     let params = \"\";\r\n     if (cat.level === 0) {\r\n       params = `?category=${cat.id}`;\r\n"
                },
                {
                    "date": 1712577511444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -553,9 +553,9 @@\n   };\r\n \r\n   const saveUniverse = () => {\r\n     if (!isPending) {\r\n-      console.log(\"Step From saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n       setIsPending(true);\r\n       setMessage(null);\r\n       setState(clearErrors(state));\r\n       if (\r\n@@ -566,24 +566,25 @@\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n-        console.log(\"Step From SAve universe 1 Save image cpState \", cpState) // ok validé\r\n+        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n \r\n         setState(cpState);\r\n \r\n-        console.log(\"Step From SAve universe 1 Save image State \", state) // ok aussi validé\r\n+        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n           console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n-          alert(\"sauvegarde Image\");\r\n+     \r\n           saveImage(cpState);\r\n         } ;\r\n         if (cpState.imageHome.file) {\r\n-          console.log(\"Step From SAve universe 00b Vitrine image file  \");\r\n-          alert(\"sauvegarde Image Home\");\r\n+          console.log(\"Step CAT:04 image home saving  \");\r\n+           \r\n           saveImageHome(cpState);\r\n         \r\n         } else if (cpState.filenameimage1.file) {\r\n+          console.log(\"Step CAT:05 universe 00b Vitrine image file  \");\r\n           //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n           //saveFilenameimage1(cpState.filenameimage1.file);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1712577534299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -572,9 +572,9 @@\n         setState(cpState);\r\n \r\n         console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n-          console.log(\"Step From SAve universe 00a Vitrine image file  \");\r\n+          console.log(\"Step CAT:031  From SAve universe 00a Vitrine image file  \");\r\n      \r\n           saveImage(cpState);\r\n         } ;\r\n         if (cpState.imageHome.file) {\r\n"
                },
                {
                    "date": 1712578076374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -572,14 +572,16 @@\n         setState(cpState);\r\n \r\n         console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n-          console.log(\"Step CAT:031  From SAve universe 00a Vitrine image file  \");\r\n+          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n      \r\n           saveImage(cpState);\r\n         } ;\r\n         if (cpState.imageHome.file) {\r\n-          console.log(\"Step CAT:04 image home saving  \");\r\n+    \r\n+          console.log(\"Step CAT:032 Image SAving  saveImageHome \");\r\n+     \r\n            \r\n           saveImageHome(cpState);\r\n         \r\n         } else if (cpState.filenameimage1.file) {\r\n"
                },
                {
                    "date": 1712578466151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -573,18 +573,18 @@\n \r\n         console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n           console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n-     \r\n+\r\n           saveImage(cpState);\r\n-        } ;\r\n+        };\r\n         if (cpState.imageHome.file) {\r\n-    \r\n+\r\n           console.log(\"Step CAT:032 Image SAving  saveImageHome \");\r\n-     \r\n-           \r\n+\r\n+\r\n           saveImageHome(cpState);\r\n-        \r\n+\r\n         } else if (cpState.filenameimage1.file) {\r\n           console.log(\"Step CAT:05 universe 00b Vitrine image file  \");\r\n           //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n           //saveFilenameimage1(cpState.filenameimage1.file);\r\n@@ -623,12 +623,12 @@\n       data,\r\n       success: (response) => {\r\n         cpState.image.file = null;\r\n         cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP IMAGE saveImage Sucess \", cpState.image.value);\r\n+        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n         setState(cpState);\r\n \r\n-        saveImageHome(cpState);\r\n+       \r\n       },\r\n       catch: (error) => {\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n         msgErrors({ msg });\r\n@@ -639,34 +639,28 @@\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n     console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+    data.append(\"file\", cpState.imageHome.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.imageHome.file = null;\r\n+        cpState.imageHome.value = response.data.contentUrl;\r\n+        setState(cpState);\r\n \r\n-    if (cpState.imageHome.file) {\r\n-      console.log(\"STEP IMAGE if (cpState.imageHome.file) CASE  \", cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n \r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.imageHome.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.imageHome.file = null;\r\n-          cpState.imageHome.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n   };\r\n \r\n   const saveFilenameimage1 = (cpState) => {\r\n     if (cpState.filenameimage1.file) {\r\n"
                },
                {
                    "date": 1712578493816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -639,8 +639,9 @@\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n     console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+    const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n"
                },
                {
                    "date": 1712578609132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -646,16 +646,17 @@\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n       success: (response) => {\r\n+        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         cpState.imageHome.value = response.data.contentUrl;\r\n         setState(cpState);\r\n \r\n       },\r\n       catch: (error) => {\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n-        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+     \r\n         msgErrors({ msg });\r\n         setIsPending(false);\r\n         scrollTop(\"side-content-dashboard\");\r\n       },\r\n"
                },
                {
                    "date": 1712578856621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -649,8 +649,9 @@\n       success: (response) => {\r\n         console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         cpState.imageHome.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setState(cpState);\r\n \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1712578952169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1385 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+\r\n+\r\n+    filenameimage1: {\r\n+      label: \"Image Gauche Vitrine\",\r\n+      type: \"text\",\r\n+      name: \"filenameimage1\",\r\n+      required: false,\r\n+      placeholder: \"filenameimage1\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage2: {\r\n+      label: \"Nom Image Centre vitrine\",\r\n+      name: \"filenameimage2\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage3: {\r\n+      label: \"Nom Image Droit vitrine\",\r\n+      name: \"filenameimage3\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    filenameanatomie: {\r\n+      label: \"Nom image anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value)\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n+\r\n+          saveImage(cpState);\r\n+        };\r\n+        if (cpState.imageHome.file) {\r\n+\r\n+          console.log(\"Step CAT:032 Image SAving  saveImageHome \");\r\n+\r\n+\r\n+          saveImageHome(cpState);\r\n+\r\n+        } else if (cpState.filenameimage1.file) {\r\n+          console.log(\"Step CAT:05 universe 00b Vitrine image file  \");\r\n+          //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n+          //saveFilenameimage1(cpState.filenameimage1.file);\r\n+        }\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+        else if (files.length) {\r\n+          savePictures(cpState);\r\n+        }\r\n+        else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n+        setState(cpState);\r\n+\r\n+       \r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.imageHome.file);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        cpState.imageHome.file = null;\r\n+        //cpState.imageHome.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        setState(cpState);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+     \r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+\r\n+  };\r\n+\r\n+  const saveFilenameimage1 = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getxPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n+\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage1.value = \"\";\r\n+                              cpState.filenameimage1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage2.value = \"\";\r\n+                              cpState.filenameimage2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.filenameanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712579068430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -576,9 +576,9 @@\n           console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n \r\n           saveImage(cpState);\r\n         };\r\n-        if (cpState.imageHome.file) {\r\n+        if ( state.imageHome.file) {\r\n \r\n           console.log(\"Step CAT:032 Image SAving  saveImageHome \");\r\n \r\n \r\n@@ -1382,1389 +1382,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-\r\n-\r\n-    filenameimage1: {\r\n-      label: \"Image Gauche Vitrine\",\r\n-      type: \"text\",\r\n-      name: \"filenameimage1\",\r\n-      required: false,\r\n-      placeholder: \"filenameimage1\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage2: {\r\n-      label: \"Nom Image Centre vitrine\",\r\n-      name: \"filenameimage2\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage3: {\r\n-      label: \"Nom Image Droit vitrine\",\r\n-      name: \"filenameimage3\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id: \"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    filenameanatomie: {\r\n-      label: \"Nom image anatomie\",\r\n-      name: \"filenameanatomie\",\r\n-      id: \"filenameanatomie\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        filenameimage1: cpState.filenameimage1.value,\r\n-        filenameimage2: cpState.filenameimage2.value,\r\n-        filenameimage3: cpState.filenameimage3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        filenameanatomie: cpState.filenameanatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value)\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n-\r\n-          saveImage(cpState);\r\n-        };\r\n-        if (cpState.imageHome.file) {\r\n-\r\n-          console.log(\"Step CAT:032 Image SAving  saveImageHome \");\r\n-\r\n-\r\n-          saveImageHome(cpState);\r\n-\r\n-        } else if (cpState.filenameimage1.file) {\r\n-          console.log(\"Step CAT:05 universe 00b Vitrine image file  \");\r\n-          //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n-          //saveFilenameimage1(cpState.filenameimage1.file);\r\n-        }\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-        else if (files.length) {\r\n-          savePictures(cpState);\r\n-        }\r\n-        else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n-        setState(cpState);\r\n-\r\n-       \r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.imageHome.file);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        cpState.imageHome.file = null;\r\n-        cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        setState(cpState);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-     \r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-\r\n-  };\r\n-\r\n-  const saveFilenameimage1 = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        filenameimage1: null,\r\n-        filenameimage2: null,\r\n-        filenameimage3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getxPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.value = e.target.value;\r\n-\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage1.value = \"\";\r\n-                              cpState.filenameimage1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage2.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage2.value = \"\";\r\n-                              cpState.filenameimage2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage3.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.filenameanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712579146055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -637,21 +637,21 @@\n       },\r\n     });\r\n   };\r\n \r\n-  const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+  const saveImageHome = (state) => {\r\n+    console.log(\"STEP IMAGE saveImageHome Begin  process  \",state);\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n       success: (response) => {\r\n-        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", state.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         //cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", state.imageHome.value);\r\n         setState(cpState);\r\n \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1712579154737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -640,9 +640,9 @@\n \r\n   const saveImageHome = (state) => {\r\n     console.log(\"STEP IMAGE saveImageHome Begin  process  \",state);\r\n     const data = new FormData();\r\n-    data.append(\"file\", cpState.imageHome.file);\r\n+    data.append(\"file\", state.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n"
                },
                {
                    "date": 1712579493420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -578,9 +578,10 @@\n           saveImage(cpState);\r\n         };\r\n         if ( state.imageHome.file) {\r\n \r\n-          console.log(\"Step CAT:032 Image SAving  saveImageHome \");\r\n+          console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n+          console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n \r\n \r\n           saveImageHome(cpState);\r\n \r\n@@ -637,21 +638,21 @@\n       },\r\n     });\r\n   };\r\n \r\n-  const saveImageHome = (state) => {\r\n-    console.log(\"STEP IMAGE saveImageHome Begin  process  \",state);\r\n+  const saveImageHome = (cpState) => {\r\n+    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n     const data = new FormData();\r\n-    data.append(\"file\", state.imageHome.file);\r\n+    data.append(\"file\", cpState.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n       success: (response) => {\r\n-        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", state.imageHome.value);\r\n+        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         //cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", state.imageHome.value);\r\n+        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setState(cpState);\r\n \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1712579635122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -639,9 +639,9 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP IMAGE saveImageHome Begin  process  \", cpState);\r\n+    console.log(\"STEPCAT:06   IMAGE saveImageHome Begin  process  \", cpState);\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n"
                },
                {
                    "date": 1712579729820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -639,9 +639,9 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n-    console.log(\"STEPCAT:06   IMAGE saveImageHome Begin  process  \", cpState);\r\n+    console.log(\"STEP CAT:06   IMAGE saveImageHome Begin  process  \", cpState);\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n"
                },
                {
                    "date": 1712579992643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -639,9 +639,9 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP CAT:06   IMAGE saveImageHome Begin  process  \", cpState);\r\n+    console.log(\"STEP CAT:06   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     connector({\r\n       method: \"post\",\r\n"
                },
                {
                    "date": 1712580162193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -617,8 +617,9 @@\n \r\n   const saveImage = (cpState) => {\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.image.file);\r\n+    console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n@@ -639,11 +640,12 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n-    console.log(\"STEP CAT:06   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n+  \r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n+    console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n"
                },
                {
                    "date": 1712580357793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,9 +217,9 @@\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n-      setState(cpState);\r\n+      //setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n \r\n"
                },
                {
                    "date": 1712580397598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,9 +217,9 @@\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n-      //setState(cpState);\r\n+      setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n \r\n"
                },
                {
                    "date": 1712580490779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,8 +217,9 @@\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n+      console.log(\"STEP CAT 08:01 setSTATE UE\");\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n"
                },
                {
                    "date": 1712580530332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,9 +217,9 @@\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n-      console.log(\"STEP CAT 08:01 setSTATE UE\");\r\n+      console.log(\"STEP CAT:08 setSTATE UE\");\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n"
                },
                {
                    "date": 1712580799361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -658,10 +658,11 @@\n         setState(cpState);\r\n \r\n       },\r\n       catch: (error) => {\r\n+\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n-     \r\n+     console.log(\"STEP CAT:061 ERROR IMAGE saveImageHome Success \", msg);\r\n         msgErrors({ msg });\r\n         setIsPending(false);\r\n         scrollTop(\"side-content-dashboard\");\r\n       },\r\n"
                },
                {
                    "date": 1712580926646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -512,9 +512,9 @@\n   };\r\n \r\n   const submitUniverse = (cpState) => {\r\n \r\n-    console.log(\"STEP MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    console.log(\"STEP CAT:09 submit MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n     connector({\r\n       method: cpState.id.value ? \"put\" : \"post\",\r\n       url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n         }`,\r\n"
                },
                {
                    "date": 1712581031586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -701,8 +701,9 @@\n \r\n \r\n \r\n   const savePictures = (cpState) => {\r\n+    console.log(\"STEP CAT:10 save picture \", cpState);\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n       const data = new FormData();\r\n       data.append(\"file\", dataType64toFile(file));\r\n"
                },
                {
                    "date": 1712581165081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,9 +654,9 @@\n         console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         //cpState.imageHome.value = response.data.contentUrl;\r\n         console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        setState(cpState);\r\n+        //setState(cpState);\r\n \r\n       },\r\n       catch: (error) => {\r\n \r\n"
                },
                {
                    "date": 1712581237191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1279,9 +1279,9 @@\n                       {category.name && (\r\n                         <ButtonDef\r\n                           className=\"btn-delete\"\r\n                           textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n+                        \r\n                           onClick={(e) => {\r\n                             e.preventDefault();\r\n                             setShowModal(true);\r\n                             setDataModal({\r\n"
                },
                {
                    "date": 1712581278754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -655,8 +655,9 @@\n         cpState.imageHome.file = null;\r\n         //cpState.imageHome.value = response.data.contentUrl;\r\n         console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         //setState(cpState);\r\n+        setIsPending(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n \r\n@@ -1279,9 +1280,9 @@\n                       {category.name && (\r\n                         <ButtonDef\r\n                           className=\"btn-delete\"\r\n                           textButton=\"Supprimer\"\r\n-                        \r\n+                          spinner={isPending}\r\n                           onClick={(e) => {\r\n                             e.preventDefault();\r\n                             setShowModal(true);\r\n                             setDataModal({\r\n"
                },
                {
                    "date": 1712581321455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -654,9 +654,9 @@\n         console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         //cpState.imageHome.value = response.data.contentUrl;\r\n         console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        //setState(cpState);\r\n+        setState(cpState);\r\n         setIsPending(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1712581468235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -652,9 +652,9 @@\n       data,\r\n       success: (response) => {\r\n         console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n-        //cpState.imageHome.value = response.data.contentUrl;\r\n+        cpState.imageHome.value = response.data.contentUrl;\r\n         console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setState(cpState);\r\n         setIsPending(false);\r\n \r\n"
                },
                {
                    "date": 1712581815811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -682,8 +682,9 @@\n         success: (response) => {\r\n           cpState.filenameimage1.file = null;\r\n           cpState.filenameimage1.value = response.data.contentUrl;\r\n           setState(cpState);\r\n+          setIsPending(false);\r\n \r\n         },\r\n         catch: (error) => {\r\n           const msg = error?.response?.data[\"hydra:description\"];\r\n"
                },
                {
                    "date": 1712582028387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,9 +562,9 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value)\r\n+        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value)\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n@@ -577,26 +577,29 @@\n           console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n \r\n           saveImage(cpState);\r\n         };\r\n-        if ( state.imageHome.file) {\r\n+        if (state.imageHome.file) {\r\n \r\n           console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n           console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n \r\n \r\n           saveImageHome(cpState);\r\n+        }\r\n+        if (state.filenameimage1.file) {\r\n \r\n-        } else if (cpState.filenameimage1.file) {\r\n-          console.log(\"Step CAT:05 universe 00b Vitrine image file  \");\r\n-          //saveImageVitrineGauche(cpState.filenameimage1.file);\r\n-          //saveFilenameimage1(cpState.filenameimage1.file);\r\n+          console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n+          console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n+\r\n+\r\n+          saveFilenameimage1(cpState);\r\n+\r\n         }\r\n \r\n \r\n \r\n \r\n-\r\n         else if (files.length) {\r\n           savePictures(cpState);\r\n         }\r\n         else {\r\n@@ -629,9 +632,9 @@\n         cpState.image.value = response.data.contentUrl;\r\n         console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n         setState(cpState);\r\n \r\n-       \r\n+\r\n       },\r\n       catch: (error) => {\r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n         msgErrors({ msg });\r\n@@ -641,9 +644,9 @@\n     });\r\n   };\r\n \r\n   const saveImageHome = (cpState) => {\r\n-  \r\n+\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n     connector({\r\n@@ -661,9 +664,9 @@\n       },\r\n       catch: (error) => {\r\n \r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n-     console.log(\"STEP CAT:061 ERROR IMAGE saveImageHome Success \", msg);\r\n+        console.log(\"STEP CAT:061 ERROR IMAGE saveImageHome Success \", msg);\r\n         msgErrors({ msg });\r\n         setIsPending(false);\r\n         scrollTop(\"side-content-dashboard\");\r\n       },\r\n"
                },
                {
                    "date": 1712582046760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -589,10 +589,8 @@\n         if (state.filenameimage1.file) {\r\n \r\n           console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n           console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n-\r\n-\r\n           saveFilenameimage1(cpState);\r\n \r\n         }\r\n \r\n"
                },
                {
                    "date": 1712582970948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1212,9 +1212,51 @@\n                         cpState.filenameimage3.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+                      <p className=\"form-label-title\">Image Droite vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage3.value || state.filenameimage3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage3.value = \"\";\r\n+                              cpState.filenameimage3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n \r\n+\r\n                     <Input\r\n                       {...state.filenameanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712583081504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1263,8 +1263,56 @@\n                         cpState.filenameanatomie.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+\r\n+<p className=\"form-label-title\">Image Anatomie *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameanatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameanatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage4\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameanatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage4\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameanatomie.value || state.filenameanatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameanatomie.value = \"\";\r\n+                              cpState.filenameanatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n                     <Input\r\n                       {...state.labelanatomie}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712583377356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -592,12 +592,24 @@\n           console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n           saveFilenameimage1(cpState);\r\n \r\n         }\r\n+        if (state.filenameimage2.file) {\r\n \r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage1 \", state.filenameimage2.file);\r\n+          console.log(\"Step CAT:0432 Image SAving  filenameimage1 \", cpState.filenameimage2.file);\r\n+          saveFilenameimage2(cpState);\r\n \r\n+        }\r\n+        if (state.filenameimage3.file) {\r\n \r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage1 \", state.filenameimage3.file);\r\n+          console.log(\"Step CAT:0433 Image SAving  filenameimage1 \", cpState.filenameimage3.file);\r\n+          saveFilenameimage3(cpState);\r\n \r\n+        }\r\n+        \r\n+\r\n         else if (files.length) {\r\n           savePictures(cpState);\r\n         }\r\n         else {\r\n@@ -698,13 +710,64 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n+  const saveFilenameimage2 = (cpState) => {\r\n+    if (cpState.filenameimage2.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage2.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage2.file = null;\r\n+          cpState.filenameimage2.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+  const saveFilenameimage3 = (cpState) => {\r\n+    if (cpState.filenameimage3.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage3.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage3.file = null;\r\n+          cpState.filenameimage3.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n \r\n \r\n \r\n+\r\n   const savePictures = (cpState) => {\r\n     console.log(\"STEP CAT:10 save picture \", cpState);\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n"
                },
                {
                    "date": 1712583685857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -606,9 +606,17 @@\n           console.log(\"Step CAT:0433 Image SAving  filenameimage1 \", cpState.filenameimage3.file);\r\n           saveFilenameimage3(cpState);\r\n \r\n         }\r\n+        if (state.filenameanatomie.file) {\r\n+\r\n+          console.log(\"Step CAT:0522 Image SAving  filenameimage1 \", state.filenameanatomie.file);\r\n+          console.log(\"Step CAT:0533 Image SAving  filenameimage1 \", cpState.filenameanatomie.file);\r\n+          saveFilenameAnatomie(cpState);\r\n+\r\n+        }\r\n         \r\n+        \r\n \r\n         else if (files.length) {\r\n           savePictures(cpState);\r\n         }\r\n@@ -763,11 +771,37 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n+  const saveFilenameAnatomie = (cpState) => {\r\n+    if (cpState.filenameanatomie.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameanatomie.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameanatomie.file = null;\r\n+          cpState.filenameanatomie.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n \r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n \r\n \r\n+\r\n   const savePictures = (cpState) => {\r\n     console.log(\"STEP CAT:10 save picture \", cpState);\r\n     if (cpState.pictures.file.length) {\r\n       const file = cpState.pictures.file[0];\r\n"
                },
                {
                    "date": 1712583858810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,24 +594,24 @@\n \r\n         }\r\n         if (state.filenameimage2.file) {\r\n \r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage1 \", state.filenameimage2.file);\r\n-          console.log(\"Step CAT:0432 Image SAving  filenameimage1 \", cpState.filenameimage2.file);\r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n+          console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n           saveFilenameimage2(cpState);\r\n \r\n         }\r\n         if (state.filenameimage3.file) {\r\n \r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage1 \", state.filenameimage3.file);\r\n-          console.log(\"Step CAT:0433 Image SAving  filenameimage1 \", cpState.filenameimage3.file);\r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n+          console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n           saveFilenameimage3(cpState);\r\n \r\n         }\r\n         if (state.filenameanatomie.file) {\r\n \r\n-          console.log(\"Step CAT:0522 Image SAving  filenameimage1 \", state.filenameanatomie.file);\r\n-          console.log(\"Step CAT:0533 Image SAving  filenameimage1 \", cpState.filenameanatomie.file);\r\n+          console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n+          console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n           saveFilenameAnatomie(cpState);\r\n \r\n         }\r\n         \r\n"
                },
                {
                    "date": 1712583962971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -562,9 +562,15 @@\n       if (\r\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value)\r\n+        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n+          \r\n+          || state.filenameimage2.file || state.filenameimage2.value\r\n+          || state.filenameimage3.file || state.filenameimage3.value\r\n+          || state.filenameanatomie.file || state.filenameanatomie.value\r\n+          \r\n+          )\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n"
                },
                {
                    "date": 1712584351203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,15 +135,17 @@\n       name: \"filenameimage1\",\r\n       required: false,\r\n       placeholder: \"filenameimage1\",\r\n       value: \"\",\r\n+      file: null,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n     filenameimage2: {\r\n       label: \"Nom Image Centre vitrine\",\r\n       name: \"filenameimage2\",\r\n       value: null,\r\n+      file: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n@@ -151,8 +153,9 @@\n     filenameimage3: {\r\n       label: \"Nom Image Droit vitrine\",\r\n       name: \"filenameimage3\",\r\n       value: null,\r\n+      file: null,\r\n       type: \"text\",\r\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n@@ -162,8 +165,9 @@\n       id: \"labelanatomie\",\r\n       label: \"Libellé rubrique anatomie\",\r\n       placeholder: \"anatomie\",\r\n       value: \"\",\r\n+      file: null,\r\n       error: false,\r\n       errorMessage: \"\",\r\n       required: false,\r\n       as: \"textarea\",\r\n"
                },
                {
                    "date": 1712584545451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -567,13 +567,10 @@\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n         (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n+       \r\n           \r\n-          || state.filenameimage2.file || state.filenameimage2.value\r\n-          || state.filenameimage3.file || state.filenameimage3.value\r\n-          || state.filenameanatomie.file || state.filenameanatomie.value\r\n-          \r\n           )\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n@@ -606,23 +603,23 @@\n         if (state.filenameimage2.file) {\r\n \r\n           console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n           console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n-          saveFilenameimage2(cpState);\r\n+          //saveFilenameimage2(cpState);\r\n \r\n         }\r\n         if (state.filenameimage3.file) {\r\n \r\n           console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n           console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n-          saveFilenameimage3(cpState);\r\n+          //saveFilenameimage3(cpState);\r\n \r\n         }\r\n         if (state.filenameanatomie.file) {\r\n \r\n           console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n           console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n-          saveFilenameAnatomie(cpState);\r\n+          //saveFilenameAnatomie(cpState);\r\n \r\n         }\r\n         \r\n         \r\n@@ -728,9 +725,9 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const saveFilenameimage2 = (cpState) => {\r\n+  const savexFilenameimage2 = (cpState) => {\r\n     if (cpState.filenameimage2.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.filenameimage2.file);\r\n       connector({\r\n@@ -754,9 +751,9 @@\n     } else {\r\n       savePictures(cpState);\r\n     }\r\n   };\r\n-  const saveFilenameimage3 = (cpState) => {\r\n+  const savexFilenameimage3 = (cpState) => {\r\n     if (cpState.filenameimage3.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.filenameimage3.file);\r\n       connector({\r\n"
                },
                {
                    "date": 1712584848021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1588 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+\r\n+\r\n+    filenameimage1: {\r\n+      label: \"Image Gauche Vitrine\",\r\n+      type: \"text\",\r\n+      name: \"filenameimage1\",\r\n+      required: false,\r\n+      placeholder: \"filenameimage1\",\r\n+      value: \"\",\r\n+      file: null,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage2: {\r\n+      label: \"Nom Image Centre vitrine\",\r\n+      name: \"filenameimage2\",\r\n+      value: null,\r\n+      file: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage3: {\r\n+      label: \"Nom Image Droit vitrine\",\r\n+      name: \"filenameimage3\",\r\n+      value: null,\r\n+      file: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      file: null,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    filenameanatomie: {\r\n+      label: \"Nom image anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    if (category) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      console.log(\"STEP CAT:08 setSTATE UE\");\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP CAT:09 submit MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n+       \r\n+          \r\n+          )\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n+\r\n+        setState(cpState);\r\n+\r\n+        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n+\r\n+          saveImage(cpState);\r\n+        };\r\n+        if (state.imageHome.file) {\r\n+\r\n+          console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n+          console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n+\r\n+\r\n+          saveImageHome(cpState);\r\n+        }\r\n+        if (false && state.filenameimage1.file) {\r\n+\r\n+          console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n+          console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n+          saveFilenameimage1(cpState);\r\n+\r\n+        }\r\n+        if (false && state.filenameimage2.file) {\r\n+\r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n+          console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n+          //saveFilenameimage2(cpState);\r\n+\r\n+        }\r\n+        if (false && state.filenameimage3.file) {\r\n+\r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n+          console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n+          //saveFilenameimage3(cpState);\r\n+\r\n+        }\r\n+        if (false && state.filenameanatomie.file) {\r\n+\r\n+          console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n+          console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n+          //saveFilenameAnatomie(cpState);\r\n+\r\n+        }\r\n+        \r\n+        \r\n+\r\n+        else if (files.length) {\r\n+          savePictures(cpState);\r\n+        }\r\n+        else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n+        setState(cpState);\r\n+\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.imageHome.file);\r\n+    console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        cpState.imageHome.file = null;\r\n+        cpState.imageHome.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        setState(cpState);\r\n+        setIsPending(false);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        console.log(\"STEP CAT:061 ERROR IMAGE saveImageHome Success \", msg);\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+\r\n+  };\r\n+\r\n+  const saveFilenameimage1 = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const savexFilenameimage2 = (cpState) => {\r\n+    if (cpState.filenameimage2.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage2.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage2.file = null;\r\n+          cpState.filenameimage2.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+  const savexFilenameimage3 = (cpState) => {\r\n+    if (cpState.filenameimage3.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage3.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage3.file = null;\r\n+          cpState.filenameimage3.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveFilenameAnatomie = (cpState) => {\r\n+    if (cpState.filenameanatomie.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameanatomie.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameanatomie.file = null;\r\n+          cpState.filenameanatomie.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    console.log(\"STEP CAT:10 save picture \", cpState);\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getxPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n+\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage1.value = \"\";\r\n+                              cpState.filenameimage1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage2.value = \"\";\r\n+                              cpState.filenameimage2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                      <p className=\"form-label-title\">Image Droite vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage3.value || state.filenameimage3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage3.value = \"\";\r\n+                              cpState.filenameimage3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+<p className=\"form-label-title\">Image Anatomie *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameanatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameanatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage4\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameanatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage4\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameanatomie.value || state.filenameanatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameanatomie.value = \"\";\r\n+                              cpState.filenameanatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712585097546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -977,8 +977,9 @@\n         imageHome: null,\r\n         filenameimage1: null,\r\n         filenameimage2: null,\r\n         filenameimage3: null,\r\n+        filenameanatomie: null,\r\n         pictures: [],\r\n         nameCategory: item?.nameCategory || \"\",\r\n         nameSubCategory: item?.nameSubCategory || \"\",\r\n         requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n@@ -1585,1592 +1586,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-\r\n-\r\n-    filenameimage1: {\r\n-      label: \"Image Gauche Vitrine\",\r\n-      type: \"text\",\r\n-      name: \"filenameimage1\",\r\n-      required: false,\r\n-      placeholder: \"filenameimage1\",\r\n-      value: \"\",\r\n-      file: null,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage2: {\r\n-      label: \"Nom Image Centre vitrine\",\r\n-      name: \"filenameimage2\",\r\n-      value: null,\r\n-      file: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage3: {\r\n-      label: \"Nom Image Droit vitrine\",\r\n-      name: \"filenameimage3\",\r\n-      value: null,\r\n-      file: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id: \"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      file: null,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    filenameanatomie: {\r\n-      label: \"Nom image anatomie\",\r\n-      name: \"filenameanatomie\",\r\n-      id: \"filenameanatomie\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      console.log(\"STEP CAT:08 setSTATE UE\");\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP CAT:09 submit MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        filenameimage1: cpState.filenameimage1.value,\r\n-        filenameimage2: cpState.filenameimage2.value,\r\n-        filenameimage3: cpState.filenameimage3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        filenameanatomie: cpState.filenameanatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n-       \r\n-          \r\n-          )\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n-\r\n-        setState(cpState);\r\n-\r\n-        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n-\r\n-          saveImage(cpState);\r\n-        };\r\n-        if (state.imageHome.file) {\r\n-\r\n-          console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n-          console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n-\r\n-\r\n-          saveImageHome(cpState);\r\n-        }\r\n-        if (state.filenameimage1.file) {\r\n-\r\n-          console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n-          console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n-          saveFilenameimage1(cpState);\r\n-\r\n-        }\r\n-        if (state.filenameimage2.file) {\r\n-\r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n-          console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n-          //saveFilenameimage2(cpState);\r\n-\r\n-        }\r\n-        if (state.filenameimage3.file) {\r\n-\r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n-          console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n-          //saveFilenameimage3(cpState);\r\n-\r\n-        }\r\n-        if (state.filenameanatomie.file) {\r\n-\r\n-          console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n-          console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n-          //saveFilenameAnatomie(cpState);\r\n-\r\n-        }\r\n-        \r\n-        \r\n-\r\n-        else if (files.length) {\r\n-          savePictures(cpState);\r\n-        }\r\n-        else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n-        setState(cpState);\r\n-\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.imageHome.file);\r\n-    console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        cpState.imageHome.file = null;\r\n-        cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        setState(cpState);\r\n-        setIsPending(false);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        console.log(\"STEP CAT:061 ERROR IMAGE saveImageHome Success \", msg);\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-\r\n-  };\r\n-\r\n-  const saveFilenameimage1 = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const savexFilenameimage2 = (cpState) => {\r\n-    if (cpState.filenameimage2.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage2.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage2.file = null;\r\n-          cpState.filenameimage2.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-  const savexFilenameimage3 = (cpState) => {\r\n-    if (cpState.filenameimage3.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage3.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage3.file = null;\r\n-          cpState.filenameimage3.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveFilenameAnatomie = (cpState) => {\r\n-    if (cpState.filenameanatomie.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameanatomie.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameanatomie.file = null;\r\n-          cpState.filenameanatomie.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    console.log(\"STEP CAT:10 save picture \", cpState);\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        filenameimage1: null,\r\n-        filenameimage2: null,\r\n-        filenameimage3: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getxPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.value = e.target.value;\r\n-\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage1.value = \"\";\r\n-                              cpState.filenameimage1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage2.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage2.value = \"\";\r\n-                              cpState.filenameimage2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage3.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                      <p className=\"form-label-title\">Image Droite vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage3.value || state.filenameimage3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage3.value = \"\";\r\n-                              cpState.filenameimage3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-<p className=\"form-label-title\">Image Anatomie *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameanatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameanatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage4\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameanatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage4\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameanatomie.value || state.filenameanatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameanatomie.value = \"\";\r\n-                              cpState.filenameanatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712585577802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -567,10 +567,9 @@\n         state.name.value &&\r\n         state.nameCategory.value &&\r\n         state.nameSubCategory.value &&\r\n         (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n-       \r\n-          \r\n+               \r\n           )\r\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712585937683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -677,20 +677,20 @@\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n       success: (response) => {\r\n-        console.log(\"STEP CAT:06 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        console.log(\"STEP CAT:06-21 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:061 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        console.log(\"STEP CAT:06-22 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setState(cpState);\r\n         setIsPending(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n \r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n-        console.log(\"STEP CAT:061 ERROR IMAGE saveImageHome Success \", msg);\r\n+        console.log(\"STEP CAT:06-23 ERROR IMAGE saveImageHome Success \", msg);\r\n         msgErrors({ msg });\r\n         setIsPending(false);\r\n         scrollTop(\"side-content-dashboard\");\r\n       },\r\n"
                },
                {
                    "date": 1712586006203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -670,8 +670,9 @@\n \r\n   const saveImageHome = (cpState) => {\r\n \r\n     const data = new FormData();\r\n+    console.log(\"STEP CAT:06-1   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n     data.append(\"file\", cpState.imageHome.file);\r\n     console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n     connector({\r\n       method: \"post\",\r\n"
                },
                {
                    "date": 1712586225334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -589,9 +589,9 @@\n           console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n           console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n \r\n \r\n-          saveImageHome(cpState);\r\n+          saveImageHome(state);\r\n         }\r\n         if (false && state.filenameimage1.file) {\r\n \r\n           console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n"
                },
                {
                    "date": 1712586261994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -589,9 +589,9 @@\n           console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n           console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n \r\n \r\n-          saveImageHome(state);\r\n+          saveImageHome(cpState);\r\n         }\r\n         if (false && state.filenameimage1.file) {\r\n \r\n           console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n"
                },
                {
                    "date": 1712586382272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -574,11 +574,10 @@\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n         console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n+        //setState(cpState);\r\n \r\n-        setState(cpState);\r\n-\r\n         console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n           console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n \r\n"
                },
                {
                    "date": 1712586466901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -584,10 +584,10 @@\n           saveImage(cpState);\r\n         };\r\n         if (state.imageHome.file) {\r\n \r\n-          console.log(\"Step CAT:032 Image SAving  saveImageHome \", state.imageHome.file);\r\n-          console.log(\"Step CAT:033 Image SAving  saveImageHome \", cpState.imageHome.file);\r\n+          console.log(\"Step CAT:032 Image SAving  saveImageHome state \", state.imageHome.file);\r\n+          console.log(\"Step CAT:033 Image SAving  saveImageHome cpstate\", cpState.imageHome.file);\r\n \r\n \r\n           saveImageHome(cpState);\r\n         }\r\n"
                },
                {
                    "date": 1712586703455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -681,10 +681,12 @@\n         console.log(\"STEP CAT:06-21 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         cpState.imageHome.value = response.data.contentUrl;\r\n         console.log(\"STEP CAT:06-22 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        setState(cpState);\r\n+        setState(cpState);    \r\n+        console.log(\"STEP CAT:06-23 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setIsPending(false);\r\n+        console.log(\"STEP CAT:06-24 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n \r\n       },\r\n       catch: (error) => {\r\n \r\n"
                },
                {
                    "date": 1712586836798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n-      console.log(\"STEP CAT:08 setSTATE UE\");\r\n+      console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n"
                },
                {
                    "date": 1712586904301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-      setState(cpState);\r\n+     // setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n \r\n"
                },
                {
                    "date": 1712586972695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,17 +214,17 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     console.log(\"UE useEffect category\");\r\n-    if (category) {\r\n+    if (false && category) {\r\n       const cpState = { ...state };\r\n       for (let key in category) {\r\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-     // setState(cpState);\r\n+      setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n \r\n"
                },
                {
                    "date": 1712587085770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -590,9 +590,9 @@\n \r\n \r\n           saveImageHome(cpState);\r\n         }\r\n-        if (false && state.filenameimage1.file) {\r\n+        if (    state.filenameimage1.file) {\r\n \r\n           console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n           console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n           saveFilenameimage1(cpState);\r\n"
                },
                {
                    "date": 1712587197919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -597,27 +597,27 @@\n           console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n           saveFilenameimage1(cpState);\r\n \r\n         }\r\n-        if (false && state.filenameimage2.file) {\r\n+        if (  state.filenameimage2.file) {\r\n \r\n           console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n           console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n-          //saveFilenameimage2(cpState);\r\n+           saveFilenameimage2(cpState);\r\n \r\n         }\r\n-        if (false && state.filenameimage3.file) {\r\n+        if (   state.filenameimage3.file) {\r\n \r\n           console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n           console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n-          //saveFilenameimage3(cpState);\r\n+           saveFilenameimage3(cpState);\r\n \r\n         }\r\n-        if (false && state.filenameanatomie.file) {\r\n+        if (   state.filenameanatomie.file) {\r\n \r\n           console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n           console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n-          //saveFilenameAnatomie(cpState);\r\n+            saveFilenameAnatomie(cpState);\r\n \r\n         }\r\n         \r\n         \r\n"
                },
                {
                    "date": 1712587221273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -726,9 +726,9 @@\n       savePictures(cpState);\r\n     }\r\n   };\r\n \r\n-  const savexFilenameimage2 = (cpState) => {\r\n+  const saveFilenameimage2 = (cpState) => {\r\n     if (cpState.filenameimage2.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.filenameimage2.file);\r\n       connector({\r\n@@ -752,9 +752,9 @@\n     } else {\r\n       savePictures(cpState);\r\n     }\r\n   };\r\n-  const savexFilenameimage3 = (cpState) => {\r\n+  const saveFilenameimage3 = (cpState) => {\r\n     if (cpState.filenameimage3.file) {\r\n       const data = new FormData();\r\n       data.append(\"file\", cpState.filenameimage3.file);\r\n       connector({\r\n"
                },
                {
                    "date": 1712591341018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,9 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     console.log(\"UE useEffect category\");\r\n-    if (false && category) {\r\n+    if ( category) {\r\n       const cpState = { ...state };\r\n       for (let key in category) {\r\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n"
                },
                {
                    "date": 1712602599451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,16 +214,17 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     console.log(\"UE useEffect category\");\r\n-    if ( category) {\r\n+    if ( category && !catLoaded) {\r\n       const cpState = { ...state };\r\n       for (let key in category) {\r\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n+      setCatLoaded(false);\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n"
                },
                {
                    "date": 1712602648781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,10 @@\n import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n \r\n export default function Categories() {\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  \r\n+  const [catLoaded, setCatLoaded] = useState(false);\r\n   const [state, setState] = useState({\r\n     id: { value: null },\r\n     name: {\r\n       label: \"Nom\",\r\n@@ -222,9 +224,9 @@\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-      setCatLoaded(false);\r\n+      setCatLoaded(true);\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n"
                },
                {
                    "date": 1712755843496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-      setCatLoaded(true);\r\n+      setCatLoaded(false);\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n@@ -1452,14 +1452,8 @@\n                       }}\r\n                     />\r\n \r\n \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712755943287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-      setCatLoaded(false);\r\n+      setCatLoaded(true);\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n@@ -1452,8 +1452,14 @@\n                       }}\r\n                     />\r\n \r\n \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n                     <WysiwygEditor\r\n                       {...state.descriptionPictures}\r\n                       onChange={(e) => {\r\n                         const cpState = { ...state };\r\n"
                },
                {
                    "date": 1712757272272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,9 +216,9 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     console.log(\"UE useEffect category\");\r\n-    if ( category && !catLoaded) {\r\n+    if ( category ) {\r\n       const cpState = { ...state };\r\n       for (let key in category) {\r\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n"
                },
                {
                    "date": 1712757427383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,17 +216,18 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     console.log(\"UE useEffect category\");\r\n+    //&& !catLoaded\r\n     if ( category ) {\r\n       const cpState = { ...state };\r\n       for (let key in category) {\r\n         if (cpState[key]) cpState[key].value = category[key];\r\n       }\r\n       cpState.image.file = \"\";\r\n       cpState.imageHome.file = \"\";\r\n       console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-      setCatLoaded(true);\r\n+      //setCatLoaded(true);\r\n       setState(cpState);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [category]);\r\n"
                },
                {
                    "date": 1712931153488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,8 +161,19 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n+    anatomieenabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"anatomieenabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n     labelanatomie: {\r\n       name: \"labelanatomie\",\r\n       id: \"labelanatomie\",\r\n       label: \"Libellé rubrique anatomie\",\r\n"
                },
                {
                    "date": 1712931198152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,13 +161,13 @@\n       required: false,\r\n       error: false,\r\n       errorMessage: \"\",\r\n     },\r\n-    anatomieenabled: {\r\n-      name: \"enabled\",\r\n+    anatomieactivated: {\r\n+      name: \"anatomieactivated\",\r\n       label: \"Statut\",\r\n       required: false,\r\n-      id: \"anatomieenabled\",\r\n+      id: \"anatomieactivated\",\r\n       value: false,\r\n       options: [\r\n         { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n         { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n"
                },
                {
                    "date": 1712931442935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -554,8 +554,9 @@\n         filenameanatomie: cpState.filenameanatomie.value,\r\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n+        anatomieactivated: cpState.anatomieactivated.value,\r\n       },\r\n       success: (response) => {\r\n         console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n         refreshItem(response.data, cpState.id.value);\r\n@@ -1001,8 +1002,9 @@\n         requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n         description: \"\",\r\n         descriptionPictures: \"\",\r\n         enabled: false,\r\n+        anatomieactivated:false,\r\n       },\r\n       items\r\n     );\r\n   };\r\n@@ -1464,8 +1466,16 @@\n                       }}\r\n                     />\r\n \r\n \r\n+<RadioButton\r\n+                      {...state.anatomieactivated}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.anatomieactivated.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1712931499216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n       errorMessage: \"\",\r\n     },\r\n     anatomieactivated: {\r\n       name: \"anatomieactivated\",\r\n-      label: \"Statut\",\r\n+      label: \"Anatomie visible\",\r\n       required: false,\r\n       id: \"anatomieactivated\",\r\n       value: false,\r\n       options: [\r\n"
                },
                {
                    "date": 1712931623963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,10 +168,10 @@\n       required: false,\r\n       id: \"anatomieactivated\",\r\n       value: false,\r\n       options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+        { value: true, label: \"Affichée\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Cachée\", id: \"inactif_radio\" },\r\n       ],\r\n     },\r\n     labelanatomie: {\r\n       name: \"labelanatomie\",\r\n"
                },
                {
                    "date": 1712932441041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,10 +168,10 @@\n       required: false,\r\n       id: \"anatomieactivated\",\r\n       value: false,\r\n       options: [\r\n-        { value: true, label: \"Affichée\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Cachée\", id: \"inactif_radio\" },\r\n+        { value: '1', label: \"Affichée\", id: \"actif_radio\" },\r\n+        { value: '0', label: \"Cachée\", id: \"inactif_radio\" },\r\n       ],\r\n     },\r\n     labelanatomie: {\r\n       name: \"labelanatomie\",\r\n"
                },
                {
                    "date": 1712932554411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,10 +168,10 @@\n       required: false,\r\n       id: \"anatomieactivated\",\r\n       value: false,\r\n       options: [\r\n-        { value: '1', label: \"Affichée\", id: \"actif_radio\" },\r\n-        { value: '0', label: \"Cachée\", id: \"inactif_radio\" },\r\n+        { value: 1, label: \"Affichée\", id: \"actif_radio\" },\r\n+        { value: 0, label: \"Cachée\", id: \"inactif_radio\" },\r\n       ],\r\n     },\r\n     labelanatomie: {\r\n       name: \"labelanatomie\",\r\n@@ -1002,9 +1002,9 @@\n         requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n         description: \"\",\r\n         descriptionPictures: \"\",\r\n         enabled: false,\r\n-        anatomieactivated:false,\r\n+        anatomieactivated:0,\r\n       },\r\n       items\r\n     );\r\n   };\r\n"
                },
                {
                    "date": 1716209241595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,8 +119,20 @@\n         { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n         { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n       ],\r\n     },\r\n+    bonusdetails: {\r\n+      name: \"bonusdetails\",\r\n+      label: \"Texte Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusdetails\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\"\r\n+ \r\n+    },\r\n \r\n     imageHome: {\r\n       name: \"imageHome\",\r\n       value: null,\r\n"
                },
                {
                    "date": 1716209372313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -567,8 +567,9 @@\n         bonusreparation: cpState.bonusreparation.value,\r\n         pictures: cpState.pictures.value,\r\n         enabled: cpState.enabled.value,\r\n         anatomieactivated: cpState.anatomieactivated.value,\r\n+        bonusdetails: cpState.bonusdetails.value\r\n       },\r\n       success: (response) => {\r\n         console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n         refreshItem(response.data, cpState.id.value);\r\n"
                },
                {
                    "date": 1716209424551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1016,8 +1016,9 @@\n         description: \"\",\r\n         descriptionPictures: \"\",\r\n         enabled: false,\r\n         anatomieactivated:0,\r\n+        bonusdetails:\"\",\r\n       },\r\n       items\r\n     );\r\n   };\r\n"
                },
                {
                    "date": 1716209494244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1153,8 +1153,16 @@\n                         cpState.description.value = e.target.value;\r\n                         setState(cpState);\r\n                       }}\r\n                     />\r\n+                     <Input\r\n+                      {...state.bonusdetails}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusdetails.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n                     <p className=\"form-label-title\">Image d'accueil</p>\r\n                     <div\r\n                       className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n                         }`}\r\n"
                },
                {
                    "date": 1716213396171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1637 @@\n+import arrayMove from \"array-move\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { Form } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { Link } from \"react-router-dom\";\r\n+import noImage from \"../../../assets/images/noImage.png\";\r\n+import {\r\n+  BlocAccordions,\r\n+  BlocAdminContent,\r\n+  BtnAccordAdd,\r\n+} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n+import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n+import ListSort from \"../../../components/categories/listSort\";\r\n+import DashboardContent from \"../../../components/dashboardContent\";\r\n+import DashboardSide from \"../../../components/dashboardSide\";\r\n+import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n+import {\r\n+  clearErrors,\r\n+  dataType64toFile,\r\n+  getFilesBase64,\r\n+} from \"../../../helper/form\";\r\n+import AdminBase from \"../../../theme/back/adminBase\";\r\n+import * as vars from \"../../../vars\";\r\n+import endPoints from \"./../../../config/endPoints\";\r\n+import connector from \"./../../../connector\";\r\n+import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n+import ROUTES from \"../../../config/routes\";\r\n+import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n+import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n+import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n+import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n+\r\n+export default function Categories() {\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  \r\n+  const [catLoaded, setCatLoaded] = useState(false);\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    name: {\r\n+      label: \"Nom\",\r\n+      type: \"text\",\r\n+      name: \"name\",\r\n+      required: true,\r\n+      placeholder: \"Nom\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameCategory: {\r\n+      label: \"Nom de la catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la catégorie\",\r\n+      value: \"Catégorie(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    nameSubCategory: {\r\n+      label: \"Nom de la sous-catégorie\",\r\n+      type: \"text\",\r\n+      name: \"nameSubCategory\",\r\n+      required: true,\r\n+      placeholder: \"Nom de la sous-catégorie\",\r\n+      value: \"Sous-catégories(s)\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    requireSearchSubCategory: {\r\n+      name: \"requireSearchSubCategory\",\r\n+      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n+      value: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+    },\r\n+    descriptionPictures: {\r\n+      name: \"descriptionPictures\",\r\n+      label: \"Aide pour l’ajout de photos\",\r\n+      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      image: true,\r\n+    },\r\n+    description: {\r\n+      name: \"description\",\r\n+      label: \"Description\",\r\n+      placeholder: \"Description\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    position: { name: \"position\", value: 0, required: false },\r\n+    universe: { name: \"universe\", value: null, required: false },\r\n+    parent: { name: \"parent\", value: null, required: false },\r\n+    level: { name: \"level\", value: 0, required: false },\r\n+    image: {\r\n+      name: \"image\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    bonusreparation: {\r\n+      name: \"bonusreparation\",\r\n+      label: \"Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusreparation\",\r\n+      value: \"0\",\r\n+      options: [\r\n+        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n+        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n+      ],\r\n+    },\r\n+    bonusdetails: {\r\n+      name: \"bonusdetails\",\r\n+      label: \"Texte Bonus réparation\",\r\n+      required: false,\r\n+      id: \"bonusdetails\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      as: \"textarea\",\r\n+    },\r\n+\r\n+    imageHome: {\r\n+      name: \"imageHome\",\r\n+      value: null,\r\n+      file: null,\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+\r\n+\r\n+    filenameimage1: {\r\n+      label: \"Image Gauche Vitrine\",\r\n+      type: \"text\",\r\n+      name: \"filenameimage1\",\r\n+      required: false,\r\n+      placeholder: \"filenameimage1\",\r\n+      value: \"\",\r\n+      file: null,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage2: {\r\n+      label: \"Nom Image Centre vitrine\",\r\n+      name: \"filenameimage2\",\r\n+      value: null,\r\n+      file: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    filenameimage3: {\r\n+      label: \"Nom Image Droit vitrine\",\r\n+      name: \"filenameimage3\",\r\n+      value: null,\r\n+      file: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    anatomieactivated: {\r\n+      name: \"anatomieactivated\",\r\n+      label: \"Anatomie visible\",\r\n+      required: false,\r\n+      id: \"anatomieactivated\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: 1, label: \"Affichée\", id: \"actif_radio\" },\r\n+        { value: 0, label: \"Cachée\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+    labelanatomie: {\r\n+      name: \"labelanatomie\",\r\n+      id: \"labelanatomie\",\r\n+      label: \"Libellé rubrique anatomie\",\r\n+      placeholder: \"anatomie\",\r\n+      value: \"\",\r\n+      file: null,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    filenameanatomie: {\r\n+      label: \"Nom image anatomie\",\r\n+      name: \"filenameanatomie\",\r\n+      id: \"filenameanatomie\",\r\n+      value: null,\r\n+      type: \"text\",\r\n+      required: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n+    enabled: {\r\n+      name: \"enabled\",\r\n+      label: \"Statut\",\r\n+      required: false,\r\n+      id: \"enabled\",\r\n+      value: false,\r\n+      options: [\r\n+        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n+        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n+      ],\r\n+    },\r\n+  });\r\n+  const [category, setCategory] = useState(false);\r\n+  const [openSide, setOpenSide] = useState(false);\r\n+  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [universesCategories, setUniversesCategories] = useState([]);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+    action: \"\",\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect[]\");\r\n+    getUniversesCategories();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"UE useEffect category\");\r\n+    //&& !catLoaded\r\n+    if ( category ) {\r\n+      const cpState = { ...state };\r\n+      for (let key in category) {\r\n+        if (cpState[key]) cpState[key].value = category[key];\r\n+      }\r\n+      cpState.image.file = \"\";\r\n+      cpState.imageHome.file = \"\";\r\n+      console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n+      //setCatLoaded(true);\r\n+      setState(cpState);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [category]);\r\n+\r\n+  const getUniversesCategories = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        let arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (var i = 0; i < arrayObj.length; i++) {\r\n+          var o = arrayObj[i];\r\n+          o.children = o.categories;\r\n+          delete o.categories;\r\n+        }\r\n+        setUniversesCategories(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n+    const item = universesCategories[oldIndex];\r\n+    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n+    let cpItems = [...universesCategories];\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+\r\n+    if (indexSubCat > -1) {\r\n+      const items = cpItems[indexUni].children[indexCat].children;\r\n+      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n+        items,\r\n+        oldIndex,\r\n+        newIndex\r\n+      );\r\n+    } else if (indexCat > -1) {\r\n+      const items = cpItems[indexUni].children;\r\n+      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n+    } else if (indexUni > -1) {\r\n+      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+    savePosition(cpItems, item, oldIndex, newIndex);\r\n+  };\r\n+\r\n+  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n+    setMessage(null);\r\n+    setState(clearErrors(state));\r\n+\r\n+    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n+    let iUniItem, iCatItem, iSubCatItem;\r\n+    let indexUni, indexCat, indexSubCat;\r\n+    if (item.id) {\r\n+      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n+      let cpCategory = category;\r\n+      if (!category?.id && bUpSelectedCat?.id) {\r\n+        cpCategory = bUpSelectedCat;\r\n+      }\r\n+      if (cpCategory?.id !== item.id) {\r\n+        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n+        const isActivated = false;\r\n+        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n+            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexCat > -1 && indexCat !== iCatItem) {\r\n+          cpItems[indexUni].children[indexCat] = {\r\n+            ...cpItems[indexUni].children[indexCat],\r\n+            isActivated,\r\n+          };\r\n+        }\r\n+        if (indexUni > -1 && indexUni !== iUniItem) {\r\n+          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n+        }\r\n+      }\r\n+      const isActivated = item.isActivated ? false : true;\r\n+      if (iSubCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n+      } else if (iCatItem > -1) {\r\n+        cpItems[iUniItem].children[iCatItem] = {\r\n+          ...cpItems[iUniItem].children[iCatItem],\r\n+          isActivated,\r\n+        };\r\n+        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+      } else if (iUniItem > -1) {\r\n+        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n+      }\r\n+      setUniversesCategories([...cpItems]);\r\n+    } else {\r\n+      item = { ...item, name: \"\" };\r\n+      if (category?.id) {\r\n+        setBUpSelectedCat(category);\r\n+      }\r\n+      if (item?.adjacent) {\r\n+        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n+          cpItems,\r\n+          item.adjacent\r\n+        );\r\n+        if (iSubCatItem > -1) {\r\n+          item = {\r\n+            ...item,\r\n+            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n+          };\r\n+        } else if (iCatItem > -1) {\r\n+          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n+        }\r\n+      }\r\n+    }\r\n+    setCategory(item);\r\n+    setOpenSide(openSide);\r\n+  };\r\n+\r\n+  const findIndexCats = (cpItems, item) => {\r\n+    let indexUni = -1;\r\n+    let indexCat = -1;\r\n+    let indexSubCat = -1;\r\n+    if (item.id) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          const indexJ = universe.children.findIndex(\r\n+            (cat) => cat.id === item.id\r\n+          );\r\n+          if (indexJ > -1) {\r\n+            indexUni = indexI;\r\n+            indexCat = indexJ;\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n+        cpItems.some((universe, indexI) => {\r\n+          universe.children.some((cat, indexJ) => {\r\n+            const indexK = cat.children.findIndex(\r\n+              (subCat) => subCat.id === item.id\r\n+            );\r\n+            if (indexK > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              indexSubCat = indexK;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          if (indexSubCat > -1) {\r\n+            return true;\r\n+          }\r\n+          return false;\r\n+        });\r\n+      }\r\n+    }\r\n+    return [indexUni, indexCat, indexSubCat];\r\n+  };\r\n+\r\n+  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n+    cpItems = cpItems.length ? cpItems : universesCategories;\r\n+    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n+    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n+    if (startIndex !== endIndex) {\r\n+      let items = [];\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n+      if (indexSubCat > -1) {\r\n+        items = cpItems[indexUni].children[indexCat].children;\r\n+      } else if (indexCat > -1) {\r\n+        items = cpItems[indexUni].children;\r\n+      } else if (indexUni > -1) {\r\n+        items = cpItems;\r\n+      }\r\n+      items.forEach((item, index) => {\r\n+        if (startIndex <= index && index <= endIndex) {\r\n+          connector({\r\n+            method: \"put\",\r\n+            url: `${item[\"@type\"] === \"Universe\"\r\n+              ? endPoints.UNIVERSE\r\n+              : endPoints.CATEGORY\r\n+              }/${item.id}`,\r\n+            data: { position: index },\r\n+            success: (response) => {\r\n+              //console.log(response);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+            },\r\n+          });\r\n+        }\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const saveCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (state.name.value) {\r\n+        connector({\r\n+          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n+          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n+            }`,\r\n+          data: {\r\n+            name: state.name.value,\r\n+            position: state.position.value,\r\n+            universe: state.universe.value,\r\n+            parent: state.parent.value,\r\n+            level: state.level.value,\r\n+          },\r\n+          success: (response) => {\r\n+            refreshItem(response.data, state.id.value);\r\n+            setIsPending(false);\r\n+            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+          },\r\n+        });\r\n+      } else {\r\n+        const msg = \"Le champ nom est obligatoire.\";\r\n+        msgErrors({ msg, name: !state.name.value });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const deleteUniverse = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          let cpItems = [...universesCategories];\r\n+          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n+          if (indexUni > -1) {\r\n+            cpItems.splice(indexUni, 1);\r\n+          }\r\n+          setUniversesCategories(cpItems);\r\n+          setCategory(false);\r\n+\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const deleteCategory = () => {\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      connector({\r\n+        method: \"delete\",\r\n+        url: endPoints.CATEGORY + \"/\" + category.id,\r\n+        success: (response) => {\r\n+          refreshItem(category, category.id, \"delete\");\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n+        },\r\n+        catch: (error) => {\r\n+          setIsPending(false);\r\n+          setShowModal(false);\r\n+          msgErrors({ msg: getMsgError(error) });\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  const submitUniverse = (cpState) => {\r\n+\r\n+    console.log(\"STEP CAT:09 submit MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n+    connector({\r\n+      method: cpState.id.value ? \"put\" : \"post\",\r\n+      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n+        }`,\r\n+      data: {\r\n+        name: cpState.name.value,\r\n+        nameCategory: cpState.nameCategory.value,\r\n+        nameSubCategory: cpState.nameSubCategory.value,\r\n+        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n+        position: cpState.position.value,\r\n+        description: cpState.description.value,\r\n+        descriptionPictures: cpState.descriptionPictures.value,\r\n+        image: cpState.image.value,\r\n+        imageHome: cpState.imageHome.value,\r\n+        filenameimage1: cpState.filenameimage1.value,\r\n+        filenameimage2: cpState.filenameimage2.value,\r\n+        filenameimage3: cpState.filenameimage3.value,\r\n+        labelanatomie: cpState.labelanatomie.value,\r\n+        filenameanatomie: cpState.filenameanatomie.value,\r\n+        bonusreparation: cpState.bonusreparation.value,\r\n+        pictures: cpState.pictures.value,\r\n+        enabled: cpState.enabled.value,\r\n+        anatomieactivated: cpState.anatomieactivated.value,\r\n+        bonusdetails: cpState.bonusdetails.value\r\n+      },\r\n+      success: (response) => {\r\n+        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        refreshItem(response.data, cpState.id.value);\r\n+        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        setIsPending(false);\r\n+        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        setIsPending(false);\r\n+        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveUniverse = () => {\r\n+    if (!isPending) {\r\n+      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      setIsPending(true);\r\n+      setMessage(null);\r\n+      setState(clearErrors(state));\r\n+      if (\r\n+        state.name.value &&\r\n+        state.nameCategory.value &&\r\n+        state.nameSubCategory.value &&\r\n+        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n+               \r\n+          )\r\n+      ) {\r\n+        let files = getFilesBase64(state.descriptionPictures.value);\r\n+        const cpState = { ...state };\r\n+        cpState.pictures.file = files;\r\n+        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n+        //setState(cpState);\r\n+\r\n+        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n+        if (cpState.image.file) {\r\n+          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n+\r\n+          saveImage(cpState);\r\n+        };\r\n+        if (state.imageHome.file) {\r\n+\r\n+          console.log(\"Step CAT:032 Image SAving  saveImageHome state \", state.imageHome.file);\r\n+          console.log(\"Step CAT:033 Image SAving  saveImageHome cpstate\", cpState.imageHome.file);\r\n+\r\n+\r\n+          saveImageHome(cpState);\r\n+        }\r\n+        if (    state.filenameimage1.file) {\r\n+\r\n+          console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n+          console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n+          saveFilenameimage1(cpState);\r\n+\r\n+        }\r\n+        if (  state.filenameimage2.file) {\r\n+\r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n+          console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n+           saveFilenameimage2(cpState);\r\n+\r\n+        }\r\n+        if (   state.filenameimage3.file) {\r\n+\r\n+          console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n+          console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n+           saveFilenameimage3(cpState);\r\n+\r\n+        }\r\n+        if (   state.filenameanatomie.file) {\r\n+\r\n+          console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n+          console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n+            saveFilenameAnatomie(cpState);\r\n+\r\n+        }\r\n+        \r\n+        \r\n+\r\n+        else if (files.length) {\r\n+          savePictures(cpState);\r\n+        }\r\n+        else {\r\n+          submitUniverse(cpState);\r\n+        }\r\n+      } else {\r\n+        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n+        msgErrors({\r\n+          name: !state.name.value,\r\n+          nameCategory: !state.nameCategory.value,\r\n+          nameSubCategory: !state.nameSubCategory.value,\r\n+          image: !state.image.value,\r\n+          msg,\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const saveImage = (cpState) => {\r\n+    const data = new FormData();\r\n+    data.append(\"file\", cpState.image.file);\r\n+    console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        cpState.image.file = null;\r\n+        cpState.image.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n+        setState(cpState);\r\n+\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const saveImageHome = (cpState) => {\r\n+\r\n+    const data = new FormData();\r\n+    console.log(\"STEP CAT:06-1   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n+    data.append(\"file\", cpState.imageHome.file);\r\n+    console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n+    connector({\r\n+      method: \"post\",\r\n+      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+      data,\r\n+      success: (response) => {\r\n+        console.log(\"STEP CAT:06-21 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        cpState.imageHome.file = null;\r\n+        cpState.imageHome.value = response.data.contentUrl;\r\n+        console.log(\"STEP CAT:06-22 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        setState(cpState);    \r\n+        console.log(\"STEP CAT:06-23 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        setIsPending(false);\r\n+        console.log(\"STEP CAT:06-24 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+\r\n+        const msg = error?.response?.data[\"hydra:description\"];\r\n+        console.log(\"STEP CAT:06-23 ERROR IMAGE saveImageHome Success \", msg);\r\n+        msgErrors({ msg });\r\n+        setIsPending(false);\r\n+        scrollTop(\"side-content-dashboard\");\r\n+      },\r\n+    });\r\n+\r\n+  };\r\n+\r\n+  const saveFilenameimage1 = (cpState) => {\r\n+    if (cpState.filenameimage1.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage1.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage1.file = null;\r\n+          cpState.filenameimage1.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveFilenameimage2 = (cpState) => {\r\n+    if (cpState.filenameimage2.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage2.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage2.file = null;\r\n+          cpState.filenameimage2.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+  const saveFilenameimage3 = (cpState) => {\r\n+    if (cpState.filenameimage3.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameimage3.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameimage3.file = null;\r\n+          cpState.filenameimage3.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const saveFilenameAnatomie = (cpState) => {\r\n+    if (cpState.filenameanatomie.file) {\r\n+      const data = new FormData();\r\n+      data.append(\"file\", cpState.filenameanatomie.file);\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.filenameanatomie.file = null;\r\n+          cpState.filenameanatomie.value = response.data.contentUrl;\r\n+          setState(cpState);\r\n+          setIsPending(false);\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          const msg = error?.response?.data[\"hydra:description\"];\r\n+          msgErrors({ msg });\r\n+          setIsPending(false);\r\n+          scrollTop(\"side-content-dashboard\");\r\n+        },\r\n+      });\r\n+    } else {\r\n+      savePictures(cpState);\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const savePictures = (cpState) => {\r\n+    console.log(\"STEP CAT:10 save picture \", cpState);\r\n+    if (cpState.pictures.file.length) {\r\n+      const file = cpState.pictures.file[0];\r\n+      const data = new FormData();\r\n+      data.append(\"file\", dataType64toFile(file));\r\n+\r\n+      connector({\r\n+        method: \"post\",\r\n+        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n+        data,\r\n+        success: (response) => {\r\n+          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n+          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n+          cpState.descriptionPictures.value =\r\n+            cpState.descriptionPictures.value.replace(file, urlImage);\r\n+          cpState.pictures.value.push(response.data.contentUrl);\r\n+          setState(cpState);\r\n+          savePictures(cpState);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      submitUniverse(cpState);\r\n+    }\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n+    const cpState = { ...state };\r\n+    if (e.name !== undefined) cpState.name.error = e.name;\r\n+    if (e.nameCategory !== undefined)\r\n+      cpState.nameCategory.error = e.nameCategory;\r\n+    if (e.nameSubCategory !== undefined)\r\n+      cpState.nameSubCategory.error = e.nameSubCategory;\r\n+    if (e.image !== undefined) cpState.image.error = e.image;\r\n+    setState(cpState);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const msgSuccess = (text) => {\r\n+    if (text !== undefined) setMessage({ type: \"success\", text });\r\n+    setTimeout(() => {\r\n+      setMessage(null);\r\n+    }, 5000);\r\n+    scrollTop(\"side-content-dashboard\");\r\n+  };\r\n+\r\n+  const getPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+\r\n+  const refreshItem = (item, id, action = null) => {\r\n+    if (item[\"@type\"] === \"Universe\") {\r\n+      item.children = item.categories;\r\n+      delete item.categories;\r\n+    }\r\n+    const cpItems = [...universesCategories];\r\n+\r\n+    if (id) {\r\n+      let indexUni, indexCat, indexSubCat;\r\n+      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n+      if (action === \"delete\") {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children = cpItems[\r\n+            indexUni\r\n+          ].children[indexCat].children.filter(\r\n+            (value, index, arr) => index !== indexSubCat\r\n+          );\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n+            (value, index, arr) => index !== indexCat\r\n+          );\r\n+        } else if (indexUni > -1) {\r\n+          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n+        }\r\n+      } else {\r\n+        if (indexSubCat > -1) {\r\n+          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n+        } else if (indexCat > -1) {\r\n+          cpItems[indexUni].children[indexCat] = item;\r\n+        } else if (indexUni > -1) {\r\n+          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n+        }\r\n+      }\r\n+    } else {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        cpItems.push(item);\r\n+      } else if (item[\"@type\"] === \"Category\") {\r\n+        if (item.level === 0) {\r\n+          const indexUni = cpItems.findIndex(\r\n+            (cat) => cat[\"@id\"] === item.universe\r\n+          );\r\n+          cpItems[indexUni].children.push(item);\r\n+        } else if (item.level === 1) {\r\n+          let indexUni, indexCat;\r\n+          cpItems.some((universe, indexI) => {\r\n+            const indexJ = universe.children.findIndex(\r\n+              (cat) => cat[\"@id\"] === item.parent\r\n+            );\r\n+            if (indexJ > -1) {\r\n+              indexUni = indexI;\r\n+              indexCat = indexJ;\r\n+              return true;\r\n+            }\r\n+            return false;\r\n+          });\r\n+          cpItems[indexUni].children[indexCat].children.push(item);\r\n+        }\r\n+      }\r\n+    }\r\n+    setUniversesCategories(cpItems);\r\n+\r\n+    if (action === \"delete\") {\r\n+      setCategory(false);\r\n+    } else {\r\n+      setActiveCategory(item, cpItems);\r\n+    }\r\n+  };\r\n+\r\n+  const newItem = (item, items) => {\r\n+    if (item) {\r\n+      if (item[\"@type\"] === \"Universe\") {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 0,\r\n+          universe: item[\"@id\"],\r\n+          parent: null,\r\n+        };\r\n+      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n+        item = {\r\n+          \"@type\": \"Category\",\r\n+          position: item.children.length,\r\n+          level: 1,\r\n+          universe: null,\r\n+          parent: item[\"@id\"],\r\n+        };\r\n+      }\r\n+    } else {\r\n+      item = {\r\n+        \"@type\": \"Universe\",\r\n+        position: items.length,\r\n+        level: null,\r\n+        universe: null,\r\n+        parent: null,\r\n+        nameCategory: \"Catégorie(s)\",\r\n+        nameSubCategory: \"Sous-catégories(s)\",\r\n+        requireSearchSubCategory: false\r\n+      };\r\n+    }\r\n+\r\n+    setActiveCategory(\r\n+      {\r\n+        ...item,\r\n+        id: null,\r\n+        name: null,\r\n+        adjacent: item?.children?.length\r\n+          ? item.children[item.children.length - 1]\r\n+          : {},\r\n+        image: null,\r\n+        imageHome: null,\r\n+        filenameimage1: null,\r\n+        filenameimage2: null,\r\n+        filenameimage3: null,\r\n+        filenameanatomie: null,\r\n+        pictures: [],\r\n+        nameCategory: item?.nameCategory || \"\",\r\n+        nameSubCategory: item?.nameSubCategory || \"\",\r\n+        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n+        description: \"\",\r\n+        descriptionPictures: \"\",\r\n+        enabled: false,\r\n+        anatomieactivated:0,\r\n+        bonusdetails:\"\",\r\n+      },\r\n+      items\r\n+    );\r\n+  };\r\n+\r\n+  const getxPathImage = (image) =>\r\n+    image.file\r\n+      ? URL.createObjectURL(image.file)\r\n+      : image.value\r\n+        ? vars.pathImage + image.value\r\n+        : noImage;\r\n+  const getUrlServices = (cat) => {\r\n+    let params = \"\";\r\n+    if (cat.level === 0) {\r\n+      params = `?category=${cat.id}`;\r\n+    } else if (cat.parent) {\r\n+      params = `?category=${cat.parent.replace(\r\n+        \"/api/anonymous/category/\",\r\n+        \"\"\r\n+      )}&subCategory=${cat.id}`;\r\n+    }\r\n+    return `${ROUTES.SERVICES.url}${params}`;\r\n+  };\r\n+\r\n+  return (\r\n+    <AdminBase>\r\n+      <BlocAdminContent>\r\n+        <DashboardContent titlePage=\"Catégories\">\r\n+          <BlocAccordions>\r\n+            <ListSort\r\n+              data={universesCategories}\r\n+              onSortEnd={onSortEnd}\r\n+              setOrderChildren={setOrderChildren}\r\n+              useDragHandle\r\n+              setActiveCategory={setActiveCategory}\r\n+              newItem={newItem}\r\n+              savePosition={savePosition}\r\n+            />\r\n+            <BtnAccordAdd\r\n+              className={`default-btn-add level-btn`}\r\n+              onClick={() => newItem(false, universesCategories)}\r\n+            >\r\n+              <AddGreenIcon /> Ajouter un univers\r\n+            </BtnAccordAdd>\r\n+          </BlocAccordions>\r\n+        </DashboardContent>\r\n+        {category && openSide ? (\r\n+          <DashboardSide>\r\n+            <div className=\"content-side-categorie\">\r\n+              {isMobile && (\r\n+                <>\r\n+                  <CloseButton\r\n+                    onClick={(e) => {\r\n+                      setOpenSide(false);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              )}\r\n+              <h2 className=\"title-side-dashboard\">\r\n+                {category.name\r\n+                  ? category.name\r\n+                  : category[\"@type\"] === \"Universe\"\r\n+                    ? \"Ajouter un univers\"\r\n+                    : category.level === 0\r\n+                      ? \"Ajouter une catégorie\"\r\n+                      : \"Ajouter une sous-catégorie\"}\r\n+              </h2>\r\n+              <Form\r\n+                className={\r\n+                  category[\"@type\"] === \"Universe\"\r\n+                    ? \"form-parent-cat\"\r\n+                    : \"form-cat-itemƒ\"\r\n+                }\r\n+              >\r\n+                {message && message.type && message.text ? (\r\n+                  <span\r\n+                    className={\r\n+                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n+                    }\r\n+                  >\r\n+                    {message.text}\r\n+                  </span>\r\n+                ) : (\r\n+                  \"\"\r\n+                )}\r\n+                <Input\r\n+                  {...state.name}\r\n+                  onChange={(e) => {\r\n+                    const cpState = { ...state };\r\n+                    cpState.name.value = e.target.value;\r\n+                    setState(cpState);\r\n+                    setMessage(null);\r\n+                  }}\r\n+                />\r\n+\r\n+                {category[\"@type\"] === \"Universe\" ? (\r\n+                  <>\r\n+                    <Input\r\n+                      {...state.nameCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.nameSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.nameSubCategory.value = e.target.value;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <SingleCheckbox\r\n+                      {...state.requireSearchSubCategory}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n+                        cpState.requireSearchSubCategory.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <Input\r\n+                      {...state.description}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.description.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                     <Input\r\n+                      {...state.bonusdetails}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusdetails.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image d'accueil</p>\r\n+                    <div\r\n+                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImageHome\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.imageHome.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.imageHome.value || state.imageHome.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.imageHome.value = \"\";\r\n+                              cpState.imageHome.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+                    <p className=\"form-label-title\">Image *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getPathImage(state.image)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+\r\n+                          cpState.image.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.image.value || state.image.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.image.value = \"\";\r\n+                              cpState.image.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage1}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage1.value = e.target.value;\r\n+\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage1\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage1.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage1.value = \"\";\r\n+                              cpState.filenameimage1.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage2}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage2.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage2\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage2.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage2.value = \"\";\r\n+                              cpState.filenameimage2.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameimage3}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameimage3.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+                      <p className=\"form-label-title\">Image Droite vitrine *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameimage3.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameimage3)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage3\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameimage3.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage3\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameimage3.value || state.filenameimage3.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameimage3.value = \"\";\r\n+                              cpState.filenameimage3.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.filenameanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.filenameanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+<p className=\"form-label-title\">Image Anatomie *</p>\r\n+                    <div\r\n+                      className={`image-service ${state.filenameanatomie.error ? \"form-error\" : \"\"\r\n+                        }`}\r\n+                    >\r\n+                      <img src={getxPathImage(state.filenameanatomie)} alt=\"\" />\r\n+                      <input\r\n+                        type=\"file\"\r\n+                        name=\"file\"\r\n+                        id=\"uploadImage4\"\r\n+                        accept=\"image/png, image/jpeg\"\r\n+                        onChange={(e) => {\r\n+                          const cpState = { ...state };\r\n+                          cpState.filenameanatomie.file = e.target.files[0];\r\n+                          e.target.value = \"\";\r\n+                          setState(cpState);\r\n+                          setMessage(null);\r\n+                        }}\r\n+                      />\r\n+                      <div className=\"btns-file\">\r\n+                        <label htmlFor=\"uploadImage4\" className=\"edit-image\">\r\n+                          <EditIcon />\r\n+                        </label>\r\n+                        {state.filenameanatomie.value || state.filenameanatomie.file ? (\r\n+                          <button\r\n+                            className=\"delete-image\"\r\n+                            onClick={(e) => {\r\n+                              e.preventDefault();\r\n+                              const cpState = { ...state };\r\n+                              cpState.filenameanatomie.value = \"\";\r\n+                              cpState.filenameanatomie.file = null;\r\n+                              setState(cpState);\r\n+                            }}\r\n+                          >\r\n+                            <DeleteIcon />\r\n+                          </button>\r\n+                        ) : (\r\n+                          \"\"\r\n+                        )}\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                    <Input\r\n+                      {...state.labelanatomie}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.labelanatomie.value = e.target.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+                    <RadioButton\r\n+                      {...state.bonusreparation}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.bonusreparation.value = val.value;\r\n+                        cpState.bonusreparation.error = false;\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+\r\n+                    <RadioButton\r\n+                      {...state.enabled}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.enabled.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+<RadioButton\r\n+                      {...state.anatomieactivated}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.anatomieactivated.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+                    <WysiwygEditor\r\n+                      {...state.descriptionPictures}\r\n+                      onChange={(e) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.descriptionPictures.value = e || \"\";\r\n+                        if (cpState.pictures.value.length) {\r\n+                          cpState.pictures.value =\r\n+                            cpState.pictures.value.filter(\r\n+                              (picture) =>\r\n+                                cpState.descriptionPictures.value.indexOf(\r\n+                                  picture\r\n+                                ) !== -1\r\n+                            );\r\n+                        }\r\n+                        setState(cpState);\r\n+                        setMessage(null);\r\n+                      }}\r\n+                    />\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name && (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteUniverse\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveUniverse();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  </>\r\n+                ) : (\r\n+                  <>\r\n+                    <div className=\"btns-alings\">\r\n+                      {category.name ? (\r\n+                        <ButtonDef\r\n+                          className=\"btn-delete\"\r\n+                          textButton=\"Supprimer\"\r\n+                          spinner={isPending}\r\n+                          onClick={(e) => {\r\n+                            e.preventDefault();\r\n+                            setShowModal(true);\r\n+                            setDataModal({\r\n+                              type: \"modal-save\",\r\n+                              title: \"Confirmer la suppression\",\r\n+                              action: \"deleteCategory\",\r\n+                            });\r\n+                          }}\r\n+                        />\r\n+                      ) : (\r\n+                        \"\"\r\n+                      )}\r\n+                      <ButtonDef\r\n+                        textButton=\"Enregistrer\"\r\n+                        spinner={isPending}\r\n+                        onClick={(e) => {\r\n+                          e.preventDefault();\r\n+                          saveCategory();\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+\r\n+                    {!state.id.value ? (\r\n+                      \"\"\r\n+                    ) : category.totalServices ? (\r\n+                      <div className=\"link-voir\">\r\n+                        <Link to={getUrlServices(category)}>\r\n+                          {\" \"}\r\n+                          {category.totalServices} service(s) lié(s){\" \"}\r\n+                        </Link>\r\n+                      </div>\r\n+                    ) : (\r\n+                      <div className=\"link-voir-0\">\r\n+                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n+                      </div>\r\n+                    )}\r\n+                  </>\r\n+                )}\r\n+\r\n+                <PopinModal\r\n+                  show={showModal}\r\n+                  handleClose={() => {\r\n+                    setShowModal(false);\r\n+                  }}\r\n+                  title={dataModal.title}\r\n+                >\r\n+                  <div className=\"btns-confirm\">\r\n+                    <ButtonDef\r\n+                      className=\"btn-light\"\r\n+                      textButton=\"Non\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        setShowModal(false);\r\n+                      }}\r\n+                    />\r\n+                    <ButtonDef\r\n+                      textButton=\"Oui\"\r\n+                      spinner={isPending}\r\n+                      onClick={(e) => {\r\n+                        e.preventDefault();\r\n+                        if (dataModal.action === \"deleteUniverse\") {\r\n+                          deleteUniverse();\r\n+                        } else if (dataModal.action === \"deleteCategory\") {\r\n+                          deleteCategory();\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                </PopinModal>\r\n+              </Form>\r\n+            </div>\r\n+          </DashboardSide>\r\n+        ) : null}\r\n+      </BlocAdminContent>\r\n+    </AdminBase>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1717754529978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -570,13 +570,13 @@\n         anatomieactivated: cpState.anatomieactivated.value,\r\n         bonusdetails: cpState.bonusdetails.value\r\n       },\r\n       success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n+        //console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n         refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n+        //console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n         setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n+        //console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n         msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -587,9 +587,9 @@\n   };\r\n \r\n   const saveUniverse = () => {\r\n     if (!isPending) {\r\n-      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n+      //console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n       setIsPending(true);\r\n       setMessage(null);\r\n       setState(clearErrors(state));\r\n       if (\r\n@@ -602,50 +602,50 @@\n       ) {\r\n         let files = getFilesBase64(state.descriptionPictures.value);\r\n         const cpState = { ...state };\r\n         cpState.pictures.file = files;\r\n-        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n+        //console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n         //setState(cpState);\r\n \r\n-        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n+        //console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n         if (cpState.image.file) {\r\n-          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n+          //console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n \r\n           saveImage(cpState);\r\n         };\r\n         if (state.imageHome.file) {\r\n \r\n-          console.log(\"Step CAT:032 Image SAving  saveImageHome state \", state.imageHome.file);\r\n-          console.log(\"Step CAT:033 Image SAving  saveImageHome cpstate\", cpState.imageHome.file);\r\n+          //console.log(\"Step CAT:032 Image SAving  saveImageHome state \", state.imageHome.file);\r\n+         // console.log(\"Step CAT:033 Image SAving  saveImageHome cpstate\", cpState.imageHome.file);\r\n \r\n \r\n           saveImageHome(cpState);\r\n         }\r\n         if (    state.filenameimage1.file) {\r\n \r\n-          console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n-          console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n+        //  console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n+         // console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n           saveFilenameimage1(cpState);\r\n \r\n         }\r\n         if (  state.filenameimage2.file) {\r\n \r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n-          console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n+          //console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n+         // console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n            saveFilenameimage2(cpState);\r\n \r\n         }\r\n         if (   state.filenameimage3.file) {\r\n \r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n-          console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n+         // console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n+        //  console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n            saveFilenameimage3(cpState);\r\n \r\n         }\r\n         if (   state.filenameanatomie.file) {\r\n \r\n-          console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n-          console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n+         // console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n+        //  console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n             saveFilenameAnatomie(cpState);\r\n \r\n         }\r\n         \r\n@@ -673,17 +673,17 @@\n \r\n   const saveImage = (cpState) => {\r\n     const data = new FormData();\r\n     data.append(\"file\", cpState.image.file);\r\n-    console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n+    //console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n     connector({\r\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n       success: (response) => {\r\n         cpState.image.file = null;\r\n         cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n+        //console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n         setState(cpState);\r\n \r\n \r\n       },\r\n@@ -706,22 +706,22 @@\n       method: \"post\",\r\n       url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n       data,\r\n       success: (response) => {\r\n-        console.log(\"STEP CAT:06-21 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        //console.log(\"STEP CAT:06-21 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         cpState.imageHome.file = null;\r\n         cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:06-22 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        //console.log(\"STEP CAT:06-22 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setState(cpState);    \r\n-        console.log(\"STEP CAT:06-23 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        //console.log(\"STEP CAT:06-23 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n         setIsPending(false);\r\n-        console.log(\"STEP CAT:06-24 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n+        ///console.log(\"STEP CAT:06-24 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n \r\n       },\r\n       catch: (error) => {\r\n \r\n         const msg = error?.response?.data[\"hydra:description\"];\r\n-        console.log(\"STEP CAT:06-23 ERROR IMAGE saveImageHome Success \", msg);\r\n+        //console.log(\"STEP CAT:06-23 ERROR IMAGE saveImageHome Success \", msg);\r\n         msgErrors({ msg });\r\n         setIsPending(false);\r\n         scrollTop(\"side-content-dashboard\");\r\n       },\r\n@@ -1634,1641 +1634,4 @@\n       </BlocAdminContent>\r\n     </AdminBase>\r\n   );\r\n }\r\n-import arrayMove from \"array-move\";\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Form } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { Link } from \"react-router-dom\";\r\n-import noImage from \"../../../assets/images/noImage.png\";\r\n-import {\r\n-  BlocAccordions,\r\n-  BlocAdminContent,\r\n-  BtnAccordAdd,\r\n-} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\n-import { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\n-import ListSort from \"../../../components/categories/listSort\";\r\n-import DashboardContent from \"../../../components/dashboardContent\";\r\n-import DashboardSide from \"../../../components/dashboardSide\";\r\n-import { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\n-import {\r\n-  clearErrors,\r\n-  dataType64toFile,\r\n-  getFilesBase64,\r\n-} from \"../../../helper/form\";\r\n-import AdminBase from \"../../../theme/back/adminBase\";\r\n-import * as vars from \"../../../vars\";\r\n-import endPoints from \"./../../../config/endPoints\";\r\n-import connector from \"./../../../connector\";\r\n-import { AddGreenIcon } from \"../../../assets/styles/icons\";\r\n-import ROUTES from \"../../../config/routes\";\r\n-import PopinModal from \"../../../components/ui-elements/popinModal\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import CloseButton from \"../../../components/ui-elements/closeButton\";\r\n-import { getMsgError, scrollTop } from \"../../../helper/functions\";\r\n-import RadioButton from \"../../../components/ui-elements/radioButton\";\r\n-import SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n-\r\n-export default function Categories() {\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  \r\n-  const [catLoaded, setCatLoaded] = useState(false);\r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    name: {\r\n-      label: \"Nom\",\r\n-      type: \"text\",\r\n-      name: \"name\",\r\n-      required: true,\r\n-      placeholder: \"Nom\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameCategory: {\r\n-      label: \"Nom de la catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la catégorie\",\r\n-      value: \"Catégorie(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    nameSubCategory: {\r\n-      label: \"Nom de la sous-catégorie\",\r\n-      type: \"text\",\r\n-      name: \"nameSubCategory\",\r\n-      required: true,\r\n-      placeholder: \"Nom de la sous-catégorie\",\r\n-      value: \"Sous-catégories(s)\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    requireSearchSubCategory: {\r\n-      name: \"requireSearchSubCategory\",\r\n-      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n-      value: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-    },\r\n-    descriptionPictures: {\r\n-      name: \"descriptionPictures\",\r\n-      label: \"Aide pour l’ajout de photos\",\r\n-      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      image: true,\r\n-    },\r\n-    description: {\r\n-      name: \"description\",\r\n-      label: \"Description\",\r\n-      placeholder: \"Description\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-\r\n-    position: { name: \"position\", value: 0, required: false },\r\n-    universe: { name: \"universe\", value: null, required: false },\r\n-    parent: { name: \"parent\", value: null, required: false },\r\n-    level: { name: \"level\", value: 0, required: false },\r\n-    image: {\r\n-      name: \"image\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    bonusreparation: {\r\n-      name: \"bonusreparation\",\r\n-      label: \"Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusreparation\",\r\n-      value: \"0\",\r\n-      options: [\r\n-        { value: \"0\", label: \"Aucune prestation\", id: \"sansbonusrepa_radio\" },\r\n-        { value: \"1\", label: \"avec des prestations eligibles\", id: \"avecbonusrepa_radio\" },\r\n-      ],\r\n-    },\r\n-    bonusdetails: {\r\n-      name: \"bonusdetails\",\r\n-      label: \"Texte Bonus réparation\",\r\n-      required: false,\r\n-      id: \"bonusdetails\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\"\r\n- \r\n-    },\r\n-\r\n-    imageHome: {\r\n-      name: \"imageHome\",\r\n-      value: null,\r\n-      file: null,\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-\r\n-\r\n-    filenameimage1: {\r\n-      label: \"Image Gauche Vitrine\",\r\n-      type: \"text\",\r\n-      name: \"filenameimage1\",\r\n-      required: false,\r\n-      placeholder: \"filenameimage1\",\r\n-      value: \"\",\r\n-      file: null,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage2: {\r\n-      label: \"Nom Image Centre vitrine\",\r\n-      name: \"filenameimage2\",\r\n-      value: null,\r\n-      file: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    filenameimage3: {\r\n-      label: \"Nom Image Droit vitrine\",\r\n-      name: \"filenameimage3\",\r\n-      value: null,\r\n-      file: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    anatomieactivated: {\r\n-      name: \"anatomieactivated\",\r\n-      label: \"Anatomie visible\",\r\n-      required: false,\r\n-      id: \"anatomieactivated\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: 1, label: \"Affichée\", id: \"actif_radio\" },\r\n-        { value: 0, label: \"Cachée\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-    labelanatomie: {\r\n-      name: \"labelanatomie\",\r\n-      id: \"labelanatomie\",\r\n-      label: \"Libellé rubrique anatomie\",\r\n-      placeholder: \"anatomie\",\r\n-      value: \"\",\r\n-      file: null,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    filenameanatomie: {\r\n-      label: \"Nom image anatomie\",\r\n-      name: \"filenameanatomie\",\r\n-      id: \"filenameanatomie\",\r\n-      value: null,\r\n-      type: \"text\",\r\n-      required: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n-    enabled: {\r\n-      name: \"enabled\",\r\n-      label: \"Statut\",\r\n-      required: false,\r\n-      id: \"enabled\",\r\n-      value: false,\r\n-      options: [\r\n-        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n-        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n-      ],\r\n-    },\r\n-  });\r\n-  const [category, setCategory] = useState(false);\r\n-  const [openSide, setOpenSide] = useState(false);\r\n-  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [universesCategories, setUniversesCategories] = useState([]);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-    action: \"\",\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect[]\");\r\n-    getUniversesCategories();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"UE useEffect category\");\r\n-    //&& !catLoaded\r\n-    if ( category ) {\r\n-      const cpState = { ...state };\r\n-      for (let key in category) {\r\n-        if (cpState[key]) cpState[key].value = category[key];\r\n-      }\r\n-      cpState.image.file = \"\";\r\n-      cpState.imageHome.file = \"\";\r\n-      console.log(\"STEP CAT:08 setSTATE UE\",cpState);\r\n-      //setCatLoaded(true);\r\n-      setState(cpState);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [category]);\r\n-\r\n-  const getUniversesCategories = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        let arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (var i = 0; i < arrayObj.length; i++) {\r\n-          var o = arrayObj[i];\r\n-          o.children = o.categories;\r\n-          delete o.categories;\r\n-        }\r\n-        setUniversesCategories(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n-    const item = universesCategories[oldIndex];\r\n-    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n-    let cpItems = [...universesCategories];\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-\r\n-    if (indexSubCat > -1) {\r\n-      const items = cpItems[indexUni].children[indexCat].children;\r\n-      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n-        items,\r\n-        oldIndex,\r\n-        newIndex\r\n-      );\r\n-    } else if (indexCat > -1) {\r\n-      const items = cpItems[indexUni].children;\r\n-      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n-    } else if (indexUni > -1) {\r\n-      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-    savePosition(cpItems, item, oldIndex, newIndex);\r\n-  };\r\n-\r\n-  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n-    setMessage(null);\r\n-    setState(clearErrors(state));\r\n-\r\n-    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n-    let iUniItem, iCatItem, iSubCatItem;\r\n-    let indexUni, indexCat, indexSubCat;\r\n-    if (item.id) {\r\n-      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n-      let cpCategory = category;\r\n-      if (!category?.id && bUpSelectedCat?.id) {\r\n-        cpCategory = bUpSelectedCat;\r\n-      }\r\n-      if (cpCategory?.id !== item.id) {\r\n-        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n-        const isActivated = false;\r\n-        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n-            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexCat > -1 && indexCat !== iCatItem) {\r\n-          cpItems[indexUni].children[indexCat] = {\r\n-            ...cpItems[indexUni].children[indexCat],\r\n-            isActivated,\r\n-          };\r\n-        }\r\n-        if (indexUni > -1 && indexUni !== iUniItem) {\r\n-          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n-        }\r\n-      }\r\n-      const isActivated = item.isActivated ? false : true;\r\n-      if (iSubCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n-      } else if (iCatItem > -1) {\r\n-        cpItems[iUniItem].children[iCatItem] = {\r\n-          ...cpItems[iUniItem].children[iCatItem],\r\n-          isActivated,\r\n-        };\r\n-        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-      } else if (iUniItem > -1) {\r\n-        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n-      }\r\n-      setUniversesCategories([...cpItems]);\r\n-    } else {\r\n-      item = { ...item, name: \"\" };\r\n-      if (category?.id) {\r\n-        setBUpSelectedCat(category);\r\n-      }\r\n-      if (item?.adjacent) {\r\n-        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n-          cpItems,\r\n-          item.adjacent\r\n-        );\r\n-        if (iSubCatItem > -1) {\r\n-          item = {\r\n-            ...item,\r\n-            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n-          };\r\n-        } else if (iCatItem > -1) {\r\n-          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n-        }\r\n-      }\r\n-    }\r\n-    setCategory(item);\r\n-    setOpenSide(openSide);\r\n-  };\r\n-\r\n-  const findIndexCats = (cpItems, item) => {\r\n-    let indexUni = -1;\r\n-    let indexCat = -1;\r\n-    let indexSubCat = -1;\r\n-    if (item.id) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          const indexJ = universe.children.findIndex(\r\n-            (cat) => cat.id === item.id\r\n-          );\r\n-          if (indexJ > -1) {\r\n-            indexUni = indexI;\r\n-            indexCat = indexJ;\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n-        cpItems.some((universe, indexI) => {\r\n-          universe.children.some((cat, indexJ) => {\r\n-            const indexK = cat.children.findIndex(\r\n-              (subCat) => subCat.id === item.id\r\n-            );\r\n-            if (indexK > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              indexSubCat = indexK;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          if (indexSubCat > -1) {\r\n-            return true;\r\n-          }\r\n-          return false;\r\n-        });\r\n-      }\r\n-    }\r\n-    return [indexUni, indexCat, indexSubCat];\r\n-  };\r\n-\r\n-  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n-    cpItems = cpItems.length ? cpItems : universesCategories;\r\n-    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n-    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n-    if (startIndex !== endIndex) {\r\n-      let items = [];\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n-      if (indexSubCat > -1) {\r\n-        items = cpItems[indexUni].children[indexCat].children;\r\n-      } else if (indexCat > -1) {\r\n-        items = cpItems[indexUni].children;\r\n-      } else if (indexUni > -1) {\r\n-        items = cpItems;\r\n-      }\r\n-      items.forEach((item, index) => {\r\n-        if (startIndex <= index && index <= endIndex) {\r\n-          connector({\r\n-            method: \"put\",\r\n-            url: `${item[\"@type\"] === \"Universe\"\r\n-              ? endPoints.UNIVERSE\r\n-              : endPoints.CATEGORY\r\n-              }/${item.id}`,\r\n-            data: { position: index },\r\n-            success: (response) => {\r\n-              //console.log(response);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-            },\r\n-          });\r\n-        }\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const saveCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (state.name.value) {\r\n-        connector({\r\n-          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n-          url: `${endPoints.CATEGORY}${state.id.value ? \"/\" + state.id.value : \"\"\r\n-            }`,\r\n-          data: {\r\n-            name: state.name.value,\r\n-            position: state.position.value,\r\n-            universe: state.universe.value,\r\n-            parent: state.parent.value,\r\n-            level: state.level.value,\r\n-          },\r\n-          success: (response) => {\r\n-            refreshItem(response.data, state.id.value);\r\n-            setIsPending(false);\r\n-            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-          },\r\n-        });\r\n-      } else {\r\n-        const msg = \"Le champ nom est obligatoire.\";\r\n-        msgErrors({ msg, name: !state.name.value });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const deleteUniverse = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          let cpItems = [...universesCategories];\r\n-          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n-          if (indexUni > -1) {\r\n-            cpItems.splice(indexUni, 1);\r\n-          }\r\n-          setUniversesCategories(cpItems);\r\n-          setCategory(false);\r\n-\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const deleteCategory = () => {\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      connector({\r\n-        method: \"delete\",\r\n-        url: endPoints.CATEGORY + \"/\" + category.id,\r\n-        success: (response) => {\r\n-          refreshItem(category, category.id, \"delete\");\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n-        },\r\n-        catch: (error) => {\r\n-          setIsPending(false);\r\n-          setShowModal(false);\r\n-          msgErrors({ msg: getMsgError(error) });\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  const submitUniverse = (cpState) => {\r\n-\r\n-    console.log(\"STEP CAT:09 submit MAJ UNIVERSE Submit universe begonning vitriine1 \", cpState);\r\n-    connector({\r\n-      method: cpState.id.value ? \"put\" : \"post\",\r\n-      url: `${endPoints.UNIVERSE}${cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n-        }`,\r\n-      data: {\r\n-        name: cpState.name.value,\r\n-        nameCategory: cpState.nameCategory.value,\r\n-        nameSubCategory: cpState.nameSubCategory.value,\r\n-        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n-        position: cpState.position.value,\r\n-        description: cpState.description.value,\r\n-        descriptionPictures: cpState.descriptionPictures.value,\r\n-        image: cpState.image.value,\r\n-        imageHome: cpState.imageHome.value,\r\n-        filenameimage1: cpState.filenameimage1.value,\r\n-        filenameimage2: cpState.filenameimage2.value,\r\n-        filenameimage3: cpState.filenameimage3.value,\r\n-        labelanatomie: cpState.labelanatomie.value,\r\n-        filenameanatomie: cpState.filenameanatomie.value,\r\n-        bonusreparation: cpState.bonusreparation.value,\r\n-        pictures: cpState.pictures.value,\r\n-        enabled: cpState.enabled.value,\r\n-        anatomieactivated: cpState.anatomieactivated.value,\r\n-        bonusdetails: cpState.bonusdetails.value\r\n-      },\r\n-      success: (response) => {\r\n-        console.log(\"MAJ UNIVERSES trace 1, SUCESS \", response.data);\r\n-        refreshItem(response.data, cpState.id.value);\r\n-        console.log(\"MAJ UNIVERSES , trace 2,Check vitrine  SUCESS \", response.data);\r\n-        setIsPending(false);\r\n-        console.log(\"MAJ UNIVERSES, trace 3 Check vitrine again SUCESS \", response.data);\r\n-        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        setIsPending(false);\r\n-        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveUniverse = () => {\r\n-    if (!isPending) {\r\n-      console.log(\"Step CAT:01 saveUniverse 0SaveUniverse \", state.descriptionPictures)\r\n-      setIsPending(true);\r\n-      setMessage(null);\r\n-      setState(clearErrors(state));\r\n-      if (\r\n-        state.name.value &&\r\n-        state.nameCategory.value &&\r\n-        state.nameSubCategory.value &&\r\n-        (state.image.value || state.image.file || state.imageHome.file || state.imageHome.value || state.filenameimage1.file || state.filenameimage1.value\r\n-               \r\n-          )\r\n-      ) {\r\n-        let files = getFilesBase64(state.descriptionPictures.value);\r\n-        const cpState = { ...state };\r\n-        cpState.pictures.file = files;\r\n-        console.log(\"Step CAT:02 universe 1 Save image cpState \", cpState) // ok validé\r\n-        //setState(cpState);\r\n-\r\n-        console.log(\"Step CAT:03 universe 1 Save image State \", state) // ok aussi validé\r\n-        if (cpState.image.file) {\r\n-          console.log(\"Step CAT:031 Image SAving  saveImage \");\r\n-\r\n-          saveImage(cpState);\r\n-        };\r\n-        if (state.imageHome.file) {\r\n-\r\n-          console.log(\"Step CAT:032 Image SAving  saveImageHome state \", state.imageHome.file);\r\n-          console.log(\"Step CAT:033 Image SAving  saveImageHome cpstate\", cpState.imageHome.file);\r\n-\r\n-\r\n-          saveImageHome(cpState);\r\n-        }\r\n-        if (    state.filenameimage1.file) {\r\n-\r\n-          console.log(\"Step CAT:042 Image SAving  filenameimage1 \", state.filenameimage1.file);\r\n-          console.log(\"Step CAT:043 Image SAving  filenameimage1 \", cpState.filenameimage1.file);\r\n-          saveFilenameimage1(cpState);\r\n-\r\n-        }\r\n-        if (  state.filenameimage2.file) {\r\n-\r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage2 \", state.filenameimage2.file);\r\n-          console.log(\"Step CAT:0432 Image SAving  filenameimage2 \", cpState.filenameimage2.file);\r\n-           saveFilenameimage2(cpState);\r\n-\r\n-        }\r\n-        if (   state.filenameimage3.file) {\r\n-\r\n-          console.log(\"Step CAT:0422 Image SAving  filenameimage3 \", state.filenameimage3.file);\r\n-          console.log(\"Step CAT:0433 Image SAving  filenameimage3 \", cpState.filenameimage3.file);\r\n-           saveFilenameimage3(cpState);\r\n-\r\n-        }\r\n-        if (   state.filenameanatomie.file) {\r\n-\r\n-          console.log(\"Step CAT:0522 Image SAving  filenameanatomie \", state.filenameanatomie.file);\r\n-          console.log(\"Step CAT:0533 Image SAving  filenameanatomie \", cpState.filenameanatomie.file);\r\n-            saveFilenameAnatomie(cpState);\r\n-\r\n-        }\r\n-        \r\n-        \r\n-\r\n-        else if (files.length) {\r\n-          savePictures(cpState);\r\n-        }\r\n-        else {\r\n-          submitUniverse(cpState);\r\n-        }\r\n-      } else {\r\n-        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n-        msgErrors({\r\n-          name: !state.name.value,\r\n-          nameCategory: !state.nameCategory.value,\r\n-          nameSubCategory: !state.nameSubCategory.value,\r\n-          image: !state.image.value,\r\n-          msg,\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const saveImage = (cpState) => {\r\n-    const data = new FormData();\r\n-    data.append(\"file\", cpState.image.file);\r\n-    console.log(\"STEP CAT:06-1   IMAGE saveIMAGE KM Begin  process  \", cpState.image);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        cpState.image.file = null;\r\n-        cpState.image.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:05 IMAGE saveImage Success \", cpState.image.value);\r\n-        setState(cpState);\r\n-\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const saveImageHome = (cpState) => {\r\n-\r\n-    const data = new FormData();\r\n-    console.log(\"STEP CAT:06-1   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n-    data.append(\"file\", cpState.imageHome.file);\r\n-    console.log(\"STEP CAT:06-2   IMAGE saveImageHome Begin  process  \", cpState.imageHome);\r\n-    connector({\r\n-      method: \"post\",\r\n-      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-      data,\r\n-      success: (response) => {\r\n-        console.log(\"STEP CAT:06-21 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        cpState.imageHome.file = null;\r\n-        cpState.imageHome.value = response.data.contentUrl;\r\n-        console.log(\"STEP CAT:06-22 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        setState(cpState);    \r\n-        console.log(\"STEP CAT:06-23 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-        setIsPending(false);\r\n-        console.log(\"STEP CAT:06-24 IMAGE saveImageHome Success \", cpState.imageHome.value);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-\r\n-        const msg = error?.response?.data[\"hydra:description\"];\r\n-        console.log(\"STEP CAT:06-23 ERROR IMAGE saveImageHome Success \", msg);\r\n-        msgErrors({ msg });\r\n-        setIsPending(false);\r\n-        scrollTop(\"side-content-dashboard\");\r\n-      },\r\n-    });\r\n-\r\n-  };\r\n-\r\n-  const saveFilenameimage1 = (cpState) => {\r\n-    if (cpState.filenameimage1.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage1.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage1.file = null;\r\n-          cpState.filenameimage1.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveFilenameimage2 = (cpState) => {\r\n-    if (cpState.filenameimage2.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage2.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage2.file = null;\r\n-          cpState.filenameimage2.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-  const saveFilenameimage3 = (cpState) => {\r\n-    if (cpState.filenameimage3.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameimage3.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameimage3.file = null;\r\n-          cpState.filenameimage3.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const saveFilenameAnatomie = (cpState) => {\r\n-    if (cpState.filenameanatomie.file) {\r\n-      const data = new FormData();\r\n-      data.append(\"file\", cpState.filenameanatomie.file);\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.filenameanatomie.file = null;\r\n-          cpState.filenameanatomie.value = response.data.contentUrl;\r\n-          setState(cpState);\r\n-          setIsPending(false);\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          const msg = error?.response?.data[\"hydra:description\"];\r\n-          msgErrors({ msg });\r\n-          setIsPending(false);\r\n-          scrollTop(\"side-content-dashboard\");\r\n-        },\r\n-      });\r\n-    } else {\r\n-      savePictures(cpState);\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const savePictures = (cpState) => {\r\n-    console.log(\"STEP CAT:10 save picture \", cpState);\r\n-    if (cpState.pictures.file.length) {\r\n-      const file = cpState.pictures.file[0];\r\n-      const data = new FormData();\r\n-      data.append(\"file\", dataType64toFile(file));\r\n-\r\n-      connector({\r\n-        method: \"post\",\r\n-        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n-        data,\r\n-        success: (response) => {\r\n-          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n-          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n-          cpState.descriptionPictures.value =\r\n-            cpState.descriptionPictures.value.replace(file, urlImage);\r\n-          cpState.pictures.value.push(response.data.contentUrl);\r\n-          setState(cpState);\r\n-          savePictures(cpState);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      submitUniverse(cpState);\r\n-    }\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n-    const cpState = { ...state };\r\n-    if (e.name !== undefined) cpState.name.error = e.name;\r\n-    if (e.nameCategory !== undefined)\r\n-      cpState.nameCategory.error = e.nameCategory;\r\n-    if (e.nameSubCategory !== undefined)\r\n-      cpState.nameSubCategory.error = e.nameSubCategory;\r\n-    if (e.image !== undefined) cpState.image.error = e.image;\r\n-    setState(cpState);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const msgSuccess = (text) => {\r\n-    if (text !== undefined) setMessage({ type: \"success\", text });\r\n-    setTimeout(() => {\r\n-      setMessage(null);\r\n-    }, 5000);\r\n-    scrollTop(\"side-content-dashboard\");\r\n-  };\r\n-\r\n-  const getPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-\r\n-  const refreshItem = (item, id, action = null) => {\r\n-    if (item[\"@type\"] === \"Universe\") {\r\n-      item.children = item.categories;\r\n-      delete item.categories;\r\n-    }\r\n-    const cpItems = [...universesCategories];\r\n-\r\n-    if (id) {\r\n-      let indexUni, indexCat, indexSubCat;\r\n-      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n-      if (action === \"delete\") {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children = cpItems[\r\n-            indexUni\r\n-          ].children[indexCat].children.filter(\r\n-            (value, index, arr) => index !== indexSubCat\r\n-          );\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n-            (value, index, arr) => index !== indexCat\r\n-          );\r\n-        } else if (indexUni > -1) {\r\n-          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n-        }\r\n-      } else {\r\n-        if (indexSubCat > -1) {\r\n-          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n-        } else if (indexCat > -1) {\r\n-          cpItems[indexUni].children[indexCat] = item;\r\n-        } else if (indexUni > -1) {\r\n-          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n-        }\r\n-      }\r\n-    } else {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        cpItems.push(item);\r\n-      } else if (item[\"@type\"] === \"Category\") {\r\n-        if (item.level === 0) {\r\n-          const indexUni = cpItems.findIndex(\r\n-            (cat) => cat[\"@id\"] === item.universe\r\n-          );\r\n-          cpItems[indexUni].children.push(item);\r\n-        } else if (item.level === 1) {\r\n-          let indexUni, indexCat;\r\n-          cpItems.some((universe, indexI) => {\r\n-            const indexJ = universe.children.findIndex(\r\n-              (cat) => cat[\"@id\"] === item.parent\r\n-            );\r\n-            if (indexJ > -1) {\r\n-              indexUni = indexI;\r\n-              indexCat = indexJ;\r\n-              return true;\r\n-            }\r\n-            return false;\r\n-          });\r\n-          cpItems[indexUni].children[indexCat].children.push(item);\r\n-        }\r\n-      }\r\n-    }\r\n-    setUniversesCategories(cpItems);\r\n-\r\n-    if (action === \"delete\") {\r\n-      setCategory(false);\r\n-    } else {\r\n-      setActiveCategory(item, cpItems);\r\n-    }\r\n-  };\r\n-\r\n-  const newItem = (item, items) => {\r\n-    if (item) {\r\n-      if (item[\"@type\"] === \"Universe\") {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 0,\r\n-          universe: item[\"@id\"],\r\n-          parent: null,\r\n-        };\r\n-      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n-        item = {\r\n-          \"@type\": \"Category\",\r\n-          position: item.children.length,\r\n-          level: 1,\r\n-          universe: null,\r\n-          parent: item[\"@id\"],\r\n-        };\r\n-      }\r\n-    } else {\r\n-      item = {\r\n-        \"@type\": \"Universe\",\r\n-        position: items.length,\r\n-        level: null,\r\n-        universe: null,\r\n-        parent: null,\r\n-        nameCategory: \"Catégorie(s)\",\r\n-        nameSubCategory: \"Sous-catégories(s)\",\r\n-        requireSearchSubCategory: false\r\n-      };\r\n-    }\r\n-\r\n-    setActiveCategory(\r\n-      {\r\n-        ...item,\r\n-        id: null,\r\n-        name: null,\r\n-        adjacent: item?.children?.length\r\n-          ? item.children[item.children.length - 1]\r\n-          : {},\r\n-        image: null,\r\n-        imageHome: null,\r\n-        filenameimage1: null,\r\n-        filenameimage2: null,\r\n-        filenameimage3: null,\r\n-        filenameanatomie: null,\r\n-        pictures: [],\r\n-        nameCategory: item?.nameCategory || \"\",\r\n-        nameSubCategory: item?.nameSubCategory || \"\",\r\n-        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n-        description: \"\",\r\n-        descriptionPictures: \"\",\r\n-        enabled: false,\r\n-        anatomieactivated:0,\r\n-        bonusdetails:\"\",\r\n-      },\r\n-      items\r\n-    );\r\n-  };\r\n-\r\n-  const getxPathImage = (image) =>\r\n-    image.file\r\n-      ? URL.createObjectURL(image.file)\r\n-      : image.value\r\n-        ? vars.pathImage + image.value\r\n-        : noImage;\r\n-  const getUrlServices = (cat) => {\r\n-    let params = \"\";\r\n-    if (cat.level === 0) {\r\n-      params = `?category=${cat.id}`;\r\n-    } else if (cat.parent) {\r\n-      params = `?category=${cat.parent.replace(\r\n-        \"/api/anonymous/category/\",\r\n-        \"\"\r\n-      )}&subCategory=${cat.id}`;\r\n-    }\r\n-    return `${ROUTES.SERVICES.url}${params}`;\r\n-  };\r\n-\r\n-  return (\r\n-    <AdminBase>\r\n-      <BlocAdminContent>\r\n-        <DashboardContent titlePage=\"Catégories\">\r\n-          <BlocAccordions>\r\n-            <ListSort\r\n-              data={universesCategories}\r\n-              onSortEnd={onSortEnd}\r\n-              setOrderChildren={setOrderChildren}\r\n-              useDragHandle\r\n-              setActiveCategory={setActiveCategory}\r\n-              newItem={newItem}\r\n-              savePosition={savePosition}\r\n-            />\r\n-            <BtnAccordAdd\r\n-              className={`default-btn-add level-btn`}\r\n-              onClick={() => newItem(false, universesCategories)}\r\n-            >\r\n-              <AddGreenIcon /> Ajouter un univers\r\n-            </BtnAccordAdd>\r\n-          </BlocAccordions>\r\n-        </DashboardContent>\r\n-        {category && openSide ? (\r\n-          <DashboardSide>\r\n-            <div className=\"content-side-categorie\">\r\n-              {isMobile && (\r\n-                <>\r\n-                  <CloseButton\r\n-                    onClick={(e) => {\r\n-                      setOpenSide(false);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              )}\r\n-              <h2 className=\"title-side-dashboard\">\r\n-                {category.name\r\n-                  ? category.name\r\n-                  : category[\"@type\"] === \"Universe\"\r\n-                    ? \"Ajouter un univers\"\r\n-                    : category.level === 0\r\n-                      ? \"Ajouter une catégorie\"\r\n-                      : \"Ajouter une sous-catégorie\"}\r\n-              </h2>\r\n-              <Form\r\n-                className={\r\n-                  category[\"@type\"] === \"Universe\"\r\n-                    ? \"form-parent-cat\"\r\n-                    : \"form-cat-itemƒ\"\r\n-                }\r\n-              >\r\n-                {message && message.type && message.text ? (\r\n-                  <span\r\n-                    className={\r\n-                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n-                    }\r\n-                  >\r\n-                    {message.text}\r\n-                  </span>\r\n-                ) : (\r\n-                  \"\"\r\n-                )}\r\n-                <Input\r\n-                  {...state.name}\r\n-                  onChange={(e) => {\r\n-                    const cpState = { ...state };\r\n-                    cpState.name.value = e.target.value;\r\n-                    setState(cpState);\r\n-                    setMessage(null);\r\n-                  }}\r\n-                />\r\n-\r\n-                {category[\"@type\"] === \"Universe\" ? (\r\n-                  <>\r\n-                    <Input\r\n-                      {...state.nameCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.nameSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.nameSubCategory.value = e.target.value;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <SingleCheckbox\r\n-                      {...state.requireSearchSubCategory}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n-                        cpState.requireSearchSubCategory.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <Input\r\n-                      {...state.description}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.description.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                     <Input\r\n-                      {...state.bonusdetails}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusdetails.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image d'accueil</p>\r\n-                    <div\r\n-                      className={`image-service ${state.imageHome.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImageHome\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.imageHome.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.imageHome.value || state.imageHome.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.imageHome.value = \"\";\r\n-                              cpState.imageHome.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-                    <p className=\"form-label-title\">Image *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.image.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getPathImage(state.image)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-\r\n-                          cpState.image.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.image.value || state.image.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.image.value = \"\";\r\n-                              cpState.image.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage1}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage1.value = e.target.value;\r\n-\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Gauche vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage1.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage1)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage1\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage1.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage1\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage1.value || state.filenameimage1.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage1.value = \"\";\r\n-                              cpState.filenameimage1.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage2}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage2.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                    <p className=\"form-label-title\">Image Centre vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage2.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage2)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage2\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage2.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage2\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage2.value || state.filenameimage2.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage2.value = \"\";\r\n-                              cpState.filenameimage2.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameimage3}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameimage3.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-                      <p className=\"form-label-title\">Image Droite vitrine *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameimage3.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameimage3)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage3\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameimage3.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage3\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameimage3.value || state.filenameimage3.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameimage3.value = \"\";\r\n-                              cpState.filenameimage3.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.filenameanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.filenameanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-<p className=\"form-label-title\">Image Anatomie *</p>\r\n-                    <div\r\n-                      className={`image-service ${state.filenameanatomie.error ? \"form-error\" : \"\"\r\n-                        }`}\r\n-                    >\r\n-                      <img src={getxPathImage(state.filenameanatomie)} alt=\"\" />\r\n-                      <input\r\n-                        type=\"file\"\r\n-                        name=\"file\"\r\n-                        id=\"uploadImage4\"\r\n-                        accept=\"image/png, image/jpeg\"\r\n-                        onChange={(e) => {\r\n-                          const cpState = { ...state };\r\n-                          cpState.filenameanatomie.file = e.target.files[0];\r\n-                          e.target.value = \"\";\r\n-                          setState(cpState);\r\n-                          setMessage(null);\r\n-                        }}\r\n-                      />\r\n-                      <div className=\"btns-file\">\r\n-                        <label htmlFor=\"uploadImage4\" className=\"edit-image\">\r\n-                          <EditIcon />\r\n-                        </label>\r\n-                        {state.filenameanatomie.value || state.filenameanatomie.file ? (\r\n-                          <button\r\n-                            className=\"delete-image\"\r\n-                            onClick={(e) => {\r\n-                              e.preventDefault();\r\n-                              const cpState = { ...state };\r\n-                              cpState.filenameanatomie.value = \"\";\r\n-                              cpState.filenameanatomie.file = null;\r\n-                              setState(cpState);\r\n-                            }}\r\n-                          >\r\n-                            <DeleteIcon />\r\n-                          </button>\r\n-                        ) : (\r\n-                          \"\"\r\n-                        )}\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                    <Input\r\n-                      {...state.labelanatomie}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.labelanatomie.value = e.target.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-                    <RadioButton\r\n-                      {...state.bonusreparation}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.bonusreparation.value = val.value;\r\n-                        cpState.bonusreparation.error = false;\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-\r\n-                    <RadioButton\r\n-                      {...state.enabled}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.enabled.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-<RadioButton\r\n-                      {...state.anatomieactivated}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.anatomieactivated.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-                    <WysiwygEditor\r\n-                      {...state.descriptionPictures}\r\n-                      onChange={(e) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.descriptionPictures.value = e || \"\";\r\n-                        if (cpState.pictures.value.length) {\r\n-                          cpState.pictures.value =\r\n-                            cpState.pictures.value.filter(\r\n-                              (picture) =>\r\n-                                cpState.descriptionPictures.value.indexOf(\r\n-                                  picture\r\n-                                ) !== -1\r\n-                            );\r\n-                        }\r\n-                        setState(cpState);\r\n-                        setMessage(null);\r\n-                      }}\r\n-                    />\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name && (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteUniverse\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveUniverse();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  </>\r\n-                ) : (\r\n-                  <>\r\n-                    <div className=\"btns-alings\">\r\n-                      {category.name ? (\r\n-                        <ButtonDef\r\n-                          className=\"btn-delete\"\r\n-                          textButton=\"Supprimer\"\r\n-                          spinner={isPending}\r\n-                          onClick={(e) => {\r\n-                            e.preventDefault();\r\n-                            setShowModal(true);\r\n-                            setDataModal({\r\n-                              type: \"modal-save\",\r\n-                              title: \"Confirmer la suppression\",\r\n-                              action: \"deleteCategory\",\r\n-                            });\r\n-                          }}\r\n-                        />\r\n-                      ) : (\r\n-                        \"\"\r\n-                      )}\r\n-                      <ButtonDef\r\n-                        textButton=\"Enregistrer\"\r\n-                        spinner={isPending}\r\n-                        onClick={(e) => {\r\n-                          e.preventDefault();\r\n-                          saveCategory();\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-\r\n-                    {!state.id.value ? (\r\n-                      \"\"\r\n-                    ) : category.totalServices ? (\r\n-                      <div className=\"link-voir\">\r\n-                        <Link to={getUrlServices(category)}>\r\n-                          {\" \"}\r\n-                          {category.totalServices} service(s) lié(s){\" \"}\r\n-                        </Link>\r\n-                      </div>\r\n-                    ) : (\r\n-                      <div className=\"link-voir-0\">\r\n-                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n-                      </div>\r\n-                    )}\r\n-                  </>\r\n-                )}\r\n-\r\n-                <PopinModal\r\n-                  show={showModal}\r\n-                  handleClose={() => {\r\n-                    setShowModal(false);\r\n-                  }}\r\n-                  title={dataModal.title}\r\n-                >\r\n-                  <div className=\"btns-confirm\">\r\n-                    <ButtonDef\r\n-                      className=\"btn-light\"\r\n-                      textButton=\"Non\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        setShowModal(false);\r\n-                      }}\r\n-                    />\r\n-                    <ButtonDef\r\n-                      textButton=\"Oui\"\r\n-                      spinner={isPending}\r\n-                      onClick={(e) => {\r\n-                        e.preventDefault();\r\n-                        if (dataModal.action === \"deleteUniverse\") {\r\n-                          deleteUniverse();\r\n-                        } else if (dataModal.action === \"deleteCategory\") {\r\n-                          deleteCategory();\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                </PopinModal>\r\n-              </Form>\r\n-            </div>\r\n-          </DashboardSide>\r\n-        ) : null}\r\n-      </BlocAdminContent>\r\n-    </AdminBase>\r\n-  );\r\n-}\r\n"
                }
            ],
            "date": 1708601521006,
            "name": "Commit-0",
            "content": "import arrayMove from \"array-move\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Link } from \"react-router-dom\";\r\nimport noImage from \"../../../assets/images/noImage.png\";\r\nimport {\r\n  BlocAccordions,\r\n  BlocAdminContent,\r\n  BtnAccordAdd,\r\n} from \"../../../assets/styles/adminStyle/adminGlobalStyle\";\r\nimport { DeleteIcon, EditIcon } from \"../../../assets/styles/icons\";\r\nimport ListSort from \"../../../components/categories/listSort\";\r\nimport DashboardContent from \"../../../components/dashboardContent\";\r\nimport DashboardSide from \"../../../components/dashboardSide\";\r\nimport { ButtonDef, Input, WysiwygEditor } from \"../../../components/ui\";\r\nimport {\r\n  clearErrors,\r\n  dataType64toFile,\r\n  getFilesBase64,\r\n} from \"../../../helper/form\";\r\nimport AdminBase from \"../../../theme/back/adminBase\";\r\nimport * as vars from \"../../../vars\";\r\nimport endPoints from \"./../../../config/endPoints\";\r\nimport connector from \"./../../../connector\";\r\nimport { AddGreenIcon } from \"../../../assets/styles/icons\";\r\nimport ROUTES from \"../../../config/routes\";\r\nimport PopinModal from \"../../../components/ui-elements/popinModal\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport CloseButton from \"../../../components/ui-elements/closeButton\";\r\nimport { getMsgError, scrollTop } from \"../../../helper/functions\";\r\nimport RadioButton from \"../../../components/ui-elements/radioButton\";\r\nimport SingleCheckbox from \"../../../components/ui-elements/singleCheckBox\";\r\n\r\nexport default function Categories() {\r\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n  const [state, setState] = useState({\r\n    id: { value: null },\r\n    name: {\r\n      label: \"Nom\",\r\n      type: \"text\",\r\n      name: \"name\",\r\n      required: true,\r\n      placeholder: \"Nom\",\r\n      value: \"\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    nameCategory: {\r\n      label: \"Nom de la catégorie\",\r\n      type: \"text\",\r\n      name: \"nameCategory\",\r\n      required: true,\r\n      placeholder: \"Nom de la catégorie\",\r\n      value: \"Catégorie(s)\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    nameSubCategory: {\r\n      label: \"Nom de la sous-catégorie\",\r\n      type: \"text\",\r\n      name: \"nameSubCategory\",\r\n      required: true,\r\n      placeholder: \"Nom de la sous-catégorie\",\r\n      value: \"Sous-catégories(s)\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    requireSearchSubCategory: {\r\n      name: \"requireSearchSubCategory\",\r\n      label: \"Champ sous-catégorie obligatoire dans la recherche\",\r\n      value: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: false,\r\n    },\r\n    descriptionPictures: {\r\n      name: \"descriptionPictures\",\r\n      label: \"Aide pour l’ajout de photos\",\r\n      placeholder: \"Tutoriel pour la prise de photos lors d’un devis\",\r\n      value: \"\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: false,\r\n      image: true,\r\n    },\r\n    description: {\r\n      name: \"description\",\r\n      label: \"Description\",\r\n      placeholder: \"Description\",\r\n      value: \"\",\r\n      error: false,\r\n      errorMessage: \"\",\r\n      required: false,\r\n      as: \"textarea\",\r\n    },\r\n    position: { name: \"position\", value: 0, required: false },\r\n    universe: { name: \"universe\", value: null, required: false },\r\n    parent: { name: \"parent\", value: null, required: false },\r\n    level: { name: \"level\", value: 0, required: false },\r\n    image: {\r\n      name: \"image\",\r\n      value: null,\r\n      file: null,\r\n      required: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    imageHome: {\r\n      name: \"imageHome\",\r\n      value: null,\r\n      file: null,\r\n      required: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    imageVitrine1: {\r\n      name: \"imagevitrine1\",\r\n      value: null,\r\n      file: null,\r\n      required: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    imageVitrine2: {\r\n      name: \"imagevitrine2\",\r\n      value: null,\r\n      file: null,\r\n      required: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    imageVitrine3: {\r\n      name: \"imagevitrine3\",\r\n      value: null,\r\n      file: null,\r\n      required: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    imageAnatomie: {\r\n      name: \"imageanatomie\",\r\n      value: null,\r\n      file: null,\r\n      required: false,\r\n      error: false,\r\n      errorMessage: \"\",\r\n    },\r\n    pictures: { name: \"pictures\", value: [], file: [], required: false },\r\n    enabled: {\r\n      name: \"enabled\",\r\n      label: \"Statut\",\r\n      required: false,\r\n      id: \"enabled\",\r\n      value: false,\r\n      options: [\r\n        { value: true, label: \"Actif\", id: \"actif_radio\" },\r\n        { value: false, label: \"Inactif\", id: \"inactif_radio\" },\r\n      ],\r\n    },\r\n  });\r\n  const [category, setCategory] = useState(false);\r\n  const [openSide, setOpenSide] = useState(false);\r\n  const [bUpSelectedCat, setBUpSelectedCat] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [universesCategories, setUniversesCategories] = useState([]);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [dataModal, setDataModal] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    action: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUniversesCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (category) {\r\n      const cpState = { ...state };\r\n      for (let key in category) {\r\n        if (cpState[key]) cpState[key].value = category[key];\r\n      }\r\n      cpState.image.file = \"\";\r\n      cpState.imageHome.file = \"\";\r\n      setState(cpState);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [category]);\r\n\r\n  const getUniversesCategories = () => {\r\n    connector({\r\n      method: \"get\",\r\n      url: endPoints.ANONYMOUS_ALL_UNIVERSES_CATEGORIES_DETAILS,\r\n      data: {},\r\n      success: (response) => {\r\n        let arrayObj = response.data[\"hydra:member\"] || [];\r\n        for (var i = 0; i < arrayObj.length; i++) {\r\n          var o = arrayObj[i];\r\n          o.children = o.categories;\r\n          delete o.categories;\r\n        }\r\n        setUniversesCategories(arrayObj);\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  };\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    const item = universesCategories[oldIndex];\r\n    const cpItems = arrayMove(universesCategories, oldIndex, newIndex);\r\n    setUniversesCategories(cpItems);\r\n    savePosition(cpItems, item, oldIndex, newIndex);\r\n  };\r\n\r\n  const setOrderChildren = (item, oldIndex, newIndex) => {\r\n    let cpItems = [...universesCategories];\r\n    let indexUni, indexCat, indexSubCat;\r\n    [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n\r\n    if (indexSubCat > -1) {\r\n      const items = cpItems[indexUni].children[indexCat].children;\r\n      cpItems[indexUni].children[indexCat].children = arrayMove(\r\n        items,\r\n        oldIndex,\r\n        newIndex\r\n      );\r\n    } else if (indexCat > -1) {\r\n      const items = cpItems[indexUni].children;\r\n      cpItems[indexUni].children = arrayMove(items, oldIndex, newIndex);\r\n    } else if (indexUni > -1) {\r\n      cpItems = arrayMove(cpItems, oldIndex, newIndex);\r\n    }\r\n    setUniversesCategories(cpItems);\r\n    savePosition(cpItems, item, oldIndex, newIndex);\r\n  };\r\n\r\n  const setActiveCategory = (item, cpItems = [], openSide = true) => {\r\n    setMessage(null);\r\n    setState(clearErrors(state));\r\n\r\n    cpItems = cpItems.length ? cpItems : [...universesCategories];\r\n    let iUniItem, iCatItem, iSubCatItem;\r\n    let indexUni, indexCat, indexSubCat;\r\n    if (item.id) {\r\n      [iUniItem, iCatItem, iSubCatItem] = findIndexCats(cpItems, item);\r\n      let cpCategory = category;\r\n      if (!category?.id && bUpSelectedCat?.id) {\r\n        cpCategory = bUpSelectedCat;\r\n      }\r\n      if (cpCategory?.id !== item.id) {\r\n        [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cpCategory);\r\n        const isActivated = false;\r\n        if (indexSubCat > -1 && indexSubCat !== iSubCatItem) {\r\n          cpItems[indexUni].children[indexCat].children[indexSubCat] = {\r\n            ...cpItems[indexUni].children[indexCat].children[indexSubCat],\r\n            isActivated,\r\n          };\r\n        }\r\n        if (indexCat > -1 && indexCat !== iCatItem) {\r\n          cpItems[indexUni].children[indexCat] = {\r\n            ...cpItems[indexUni].children[indexCat],\r\n            isActivated,\r\n          };\r\n        }\r\n        if (indexUni > -1 && indexUni !== iUniItem) {\r\n          cpItems[indexUni] = { ...cpItems[indexUni], isActivated };\r\n        }\r\n      }\r\n      const isActivated = item.isActivated ? false : true;\r\n      if (iSubCatItem > -1) {\r\n        cpItems[iUniItem].children[iCatItem].children[iSubCatItem] = {\r\n          ...cpItems[iUniItem].children[iCatItem].children[iSubCatItem],\r\n          isActivated,\r\n        };\r\n        item = { ...item, parent: cpItems[iUniItem].children[iCatItem][\"@id\"] };\r\n      } else if (iCatItem > -1) {\r\n        cpItems[iUniItem].children[iCatItem] = {\r\n          ...cpItems[iUniItem].children[iCatItem],\r\n          isActivated,\r\n        };\r\n        item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n      } else if (iUniItem > -1) {\r\n        cpItems[iUniItem] = { ...cpItems[iUniItem], isActivated };\r\n      }\r\n      setUniversesCategories([...cpItems]);\r\n    } else {\r\n      item = { ...item, name: \"\" };\r\n      if (category?.id) {\r\n        setBUpSelectedCat(category);\r\n      }\r\n      if (item?.adjacent) {\r\n        [iUniItem, iCatItem, iSubCatItem] = findIndexCats(\r\n          cpItems,\r\n          item.adjacent\r\n        );\r\n        if (iSubCatItem > -1) {\r\n          item = {\r\n            ...item,\r\n            parent: cpItems[iUniItem].children[iCatItem][\"@id\"],\r\n          };\r\n        } else if (iCatItem > -1) {\r\n          item = { ...item, universe: cpItems[iUniItem][\"@id\"] };\r\n        }\r\n      }\r\n    }\r\n    setCategory(item);\r\n    setOpenSide(openSide);\r\n  };\r\n\r\n  const findIndexCats = (cpItems, item) => {\r\n    let indexUni = -1;\r\n    let indexCat = -1;\r\n    let indexSubCat = -1;\r\n    if (item.id) {\r\n      if (item[\"@type\"] === \"Universe\") {\r\n        indexUni = cpItems.findIndex((cat) => cat.id === item.id);\r\n      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n        cpItems.some((universe, indexI) => {\r\n          const indexJ = universe.children.findIndex(\r\n            (cat) => cat.id === item.id\r\n          );\r\n          if (indexJ > -1) {\r\n            indexUni = indexI;\r\n            indexCat = indexJ;\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      } else if (item[\"@type\"] === \"Category\" && item.level === 1) {\r\n        cpItems.some((universe, indexI) => {\r\n          universe.children.some((cat, indexJ) => {\r\n            const indexK = cat.children.findIndex(\r\n              (subCat) => subCat.id === item.id\r\n            );\r\n            if (indexK > -1) {\r\n              indexUni = indexI;\r\n              indexCat = indexJ;\r\n              indexSubCat = indexK;\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          if (indexSubCat > -1) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      }\r\n    }\r\n    return [indexUni, indexCat, indexSubCat];\r\n  };\r\n\r\n  const savePosition = (cpItems, cat, oldIndex, newIndex) => {\r\n    cpItems = cpItems.length ? cpItems : universesCategories;\r\n    const startIndex = oldIndex < newIndex ? oldIndex : newIndex;\r\n    const endIndex = oldIndex > newIndex ? oldIndex : newIndex;\r\n    if (startIndex !== endIndex) {\r\n      let items = [];\r\n      let indexUni, indexCat, indexSubCat;\r\n      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, cat);\r\n      if (indexSubCat > -1) {\r\n        items = cpItems[indexUni].children[indexCat].children;\r\n      } else if (indexCat > -1) {\r\n        items = cpItems[indexUni].children;\r\n      } else if (indexUni > -1) {\r\n        items = cpItems;\r\n      }\r\n      items.forEach((item, index) => {\r\n        if (startIndex <= index && index <= endIndex) {\r\n          connector({\r\n            method: \"put\",\r\n            url: `${\r\n              item[\"@type\"] === \"Universe\"\r\n                ? endPoints.UNIVERSE\r\n                : endPoints.CATEGORY\r\n            }/${item.id}`,\r\n            data: { position: index },\r\n            success: (response) => {\r\n              //console.log(response);\r\n            },\r\n            catch: (error) => {\r\n              console.log(error);\r\n              NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n            },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveCategory = () => {\r\n    if (!isPending) {\r\n      setIsPending(true);\r\n      setMessage(null);\r\n      setState(clearErrors(state));\r\n      if (state.name.value) {\r\n        connector({\r\n          method: `${state.id.value ? \"put\" : \"post\"}`,\r\n          url: `${endPoints.CATEGORY}${\r\n            state.id.value ? \"/\" + state.id.value : \"\"\r\n          }`,\r\n          data: {\r\n            name: state.name.value,\r\n            position: state.position.value,\r\n            universe: state.universe.value,\r\n            parent: state.parent.value,\r\n            level: state.level.value,\r\n          },\r\n          success: (response) => {\r\n            refreshItem(response.data, state.id.value);\r\n            setIsPending(false);\r\n            msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n          },\r\n          catch: (error) => {\r\n            console.log(error);\r\n            setIsPending(false);\r\n            msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n          },\r\n        });\r\n      } else {\r\n        const msg = \"Le champ nom est obligatoire.\";\r\n        msgErrors({ msg, name: !state.name.value });\r\n        setIsPending(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteUniverse = () => {\r\n    if (!isPending) {\r\n      setIsPending(true);\r\n      connector({\r\n        method: \"delete\",\r\n        url: endPoints.UNIVERSE + \"/\" + category.id,\r\n        success: (response) => {\r\n          let cpItems = [...universesCategories];\r\n          const indexUni = cpItems.findIndex((cat) => cat.id === category.id);\r\n          if (indexUni > -1) {\r\n            cpItems.splice(indexUni, 1);\r\n          }\r\n          setUniversesCategories(cpItems);\r\n          setCategory(false);\r\n\r\n          setIsPending(false);\r\n          setShowModal(false);\r\n          NotificationManager.success(\"Univers supprimé avec succès.\", \"\");\r\n        },\r\n        catch: (error) => {\r\n          setIsPending(false);\r\n          setShowModal(false);\r\n          msgErrors({ msg: getMsgError(error) });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    if (!isPending) {\r\n      setIsPending(true);\r\n      connector({\r\n        method: \"delete\",\r\n        url: endPoints.CATEGORY + \"/\" + category.id,\r\n        success: (response) => {\r\n          refreshItem(category, category.id, \"delete\");\r\n          setIsPending(false);\r\n          setShowModal(false);\r\n          NotificationManager.success(\"Catégorie supprimé avec succès.\", \"\");\r\n        },\r\n        catch: (error) => {\r\n          setIsPending(false);\r\n          setShowModal(false);\r\n          msgErrors({ msg: getMsgError(error) });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitUniverse = (cpState) => {\r\n    connector({\r\n      method: cpState.id.value ? \"put\" : \"post\",\r\n      url: `${endPoints.UNIVERSE}${\r\n        cpState.id.value ? \"/\" + cpState.id.value : \"\"\r\n      }`,\r\n      data: {\r\n        name: cpState.name.value,\r\n        nameCategory: cpState.nameCategory.value,\r\n        nameSubCategory: cpState.nameSubCategory.value,\r\n        requireSearchSubCategory: cpState.requireSearchSubCategory.value,\r\n        position: cpState.position.value,\r\n        description: cpState.description.value,\r\n        descriptionPictures: cpState.descriptionPictures.value,\r\n        image: cpState.image.value,\r\n        imageHome: cpState.imageHome.value,\r\n        pictures: cpState.pictures.value,\r\n        enabled: cpState.enabled.value,\r\n      },\r\n      success: (response) => {\r\n        refreshItem(response.data, cpState.id.value);\r\n        setIsPending(false);\r\n        msgSuccess(\"Vos modifications ont bien été prises en compte.\");\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n        setIsPending(false);\r\n        msgErrors({ msg: \"Quelque chose s'est mal passé.\" });\r\n      },\r\n    });\r\n  };\r\n\r\n  const saveUniverse = () => {\r\n    if (!isPending) {\r\n      setIsPending(true);\r\n      setMessage(null);\r\n      setState(clearErrors(state));\r\n      if (\r\n        state.name.value &&\r\n        state.nameCategory.value &&\r\n        state.nameSubCategory.value &&\r\n        (state.image.value || state.image.file)\r\n      ) {\r\n        let files = getFilesBase64(state.descriptionPictures.value);\r\n        const cpState = { ...state };\r\n        cpState.pictures.file = files;\r\n        setState(cpState);\r\n        if (state.image.file) {\r\n          saveImage(cpState);\r\n        } else if (state.imageHome.file) {\r\n          saveImageHome(cpState);\r\n        }\r\n        else if (state.imageVitrine1.file) {\r\n          saveImageVitrine1(cpState);\r\n          \r\n        } else if (files.length) {\r\n          savePictures(cpState);\r\n        } else {\r\n          submitUniverse(cpState);\r\n        }\r\n      } else {\r\n        const msg = \"Vérifier si les champs obligatoires sont remplis.\";\r\n        msgErrors({\r\n          name: !state.name.value,\r\n          nameCategory: !state.nameCategory.value,\r\n          nameSubCategory: !state.nameSubCategory.value,\r\n          image: !state.image.value,\r\n          msg,\r\n        });\r\n        setIsPending(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveImage = (cpState) => {\r\n    const data = new FormData();\r\n    data.append(\"file\", cpState.image.file);\r\n    connector({\r\n      method: \"post\",\r\n      url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n      data,\r\n      success: (response) => {\r\n        cpState.image.file = null;\r\n        cpState.image.value = response.data.contentUrl;\r\n        setState(cpState);\r\n        saveImageHome(cpState);\r\n      },\r\n      catch: (error) => {\r\n        const msg = error?.response?.data[\"hydra:description\"];\r\n        msgErrors({ msg });\r\n        setIsPending(false);\r\n        scrollTop(\"side-content-dashboard\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const saveImageHome = (cpState) => {\r\n    if (cpState.imageHome.file) {\r\n      const data = new FormData();\r\n      data.append(\"file\", cpState.imageHome.file);\r\n      connector({\r\n        method: \"post\",\r\n        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n        data,\r\n        success: (response) => {\r\n          cpState.imageHome.file = null;\r\n          cpState.imageHome.value = response.data.contentUrl;\r\n          setState(cpState);\r\n          savePictures(cpState);\r\n        },\r\n        catch: (error) => {\r\n          const msg = error?.response?.data[\"hydra:description\"];\r\n          msgErrors({ msg });\r\n          setIsPending(false);\r\n          scrollTop(\"side-content-dashboard\");\r\n        },\r\n      });\r\n    } else {\r\n      savePictures(cpState);\r\n    }\r\n  };\r\n\r\n  const saveImageVitrine1 = (cpState) => {\r\n    if (cpState.Imagevitrine1.file) {\r\n      const data = new FormData();\r\n      data.append(\"file\", cpState.Imagevitrine1.file);\r\n      connector({\r\n        method: \"post\",\r\n        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n        data,\r\n        success: (response) => {\r\n          cpState.Imagevitrine1.file = null;\r\n          cpState.Imagevitrine1.value = response.data.contentUrl;\r\n          setState(cpState);\r\n          savePictures(cpState);\r\n        },\r\n        catch: (error) => {\r\n          const msg = error?.response?.data[\"hydra:description\"];\r\n          msgErrors({ msg });\r\n          setIsPending(false);\r\n          scrollTop(\"side-content-dashboard\");\r\n        },\r\n      });\r\n    } else {\r\n      savePictures(cpState);\r\n    }\r\n  };\r\n\r\n  const savePictures = (cpState) => {\r\n    if (cpState.pictures.file.length) {\r\n      const file = cpState.pictures.file[0];\r\n      const data = new FormData();\r\n      data.append(\"file\", dataType64toFile(file));\r\n\r\n      connector({\r\n        method: \"post\",\r\n        url: endPoints.ANONYMOUS_MEDIA_OBJECT,\r\n        data,\r\n        success: (response) => {\r\n          cpState.pictures.file = cpState.pictures.file.slice(1);\r\n          const urlImage = `${process.env.REACT_APP_API_URI}${response.data.contentUrl}`;\r\n          cpState.descriptionPictures.value =\r\n            cpState.descriptionPictures.value.replace(file, urlImage);\r\n          cpState.pictures.value.push(response.data.contentUrl);\r\n          setState(cpState);\r\n          savePictures(cpState);\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      submitUniverse(cpState);\r\n    }\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    if (e.msg !== undefined) setMessage({ type: \"error\", text: e.msg });\r\n    const cpState = { ...state };\r\n    if (e.name !== undefined) cpState.name.error = e.name;\r\n    if (e.nameCategory !== undefined)\r\n      cpState.nameCategory.error = e.nameCategory;\r\n    if (e.nameSubCategory !== undefined)\r\n      cpState.nameSubCategory.error = e.nameSubCategory;\r\n    if (e.image !== undefined) cpState.image.error = e.image;\r\n    setState(cpState);\r\n    scrollTop(\"side-content-dashboard\");\r\n  };\r\n\r\n  const msgSuccess = (text) => {\r\n    if (text !== undefined) setMessage({ type: \"success\", text });\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n    }, 5000);\r\n    scrollTop(\"side-content-dashboard\");\r\n  };\r\n\r\n  const getPathImage = (image) =>\r\n    image.file\r\n      ? URL.createObjectURL(image.file)\r\n      : image.value\r\n      ? vars.pathImage + image.value\r\n      : noImage;\r\n\r\n  const refreshItem = (item, id, action = null) => {\r\n    if (item[\"@type\"] === \"Universe\") {\r\n      item.children = item.categories;\r\n      delete item.categories;\r\n    }\r\n    const cpItems = [...universesCategories];\r\n\r\n    if (id) {\r\n      let indexUni, indexCat, indexSubCat;\r\n      [indexUni, indexCat, indexSubCat] = findIndexCats(cpItems, item);\r\n      if (action === \"delete\") {\r\n        if (indexSubCat > -1) {\r\n          cpItems[indexUni].children[indexCat].children = cpItems[\r\n            indexUni\r\n          ].children[indexCat].children.filter(\r\n            (value, index, arr) => index !== indexSubCat\r\n          );\r\n        } else if (indexCat > -1) {\r\n          cpItems[indexUni].children = cpItems[indexUni].children.filter(\r\n            (value, index, arr) => index !== indexCat\r\n          );\r\n        } else if (indexUni > -1) {\r\n          cpItems = cpItems.filter((value, index, arr) => index !== indexUni);\r\n        }\r\n      } else {\r\n        if (indexSubCat > -1) {\r\n          cpItems[indexUni].children[indexCat].children[indexSubCat] = item;\r\n        } else if (indexCat > -1) {\r\n          cpItems[indexUni].children[indexCat] = item;\r\n        } else if (indexUni > -1) {\r\n          cpItems[indexUni] = { ...item, children: cpItems[indexUni].children };\r\n        }\r\n      }\r\n    } else {\r\n      if (item[\"@type\"] === \"Universe\") {\r\n        cpItems.push(item);\r\n      } else if (item[\"@type\"] === \"Category\") {\r\n        if (item.level === 0) {\r\n          const indexUni = cpItems.findIndex(\r\n            (cat) => cat[\"@id\"] === item.universe\r\n          );\r\n          cpItems[indexUni].children.push(item);\r\n        } else if (item.level === 1) {\r\n          let indexUni, indexCat;\r\n          cpItems.some((universe, indexI) => {\r\n            const indexJ = universe.children.findIndex(\r\n              (cat) => cat[\"@id\"] === item.parent\r\n            );\r\n            if (indexJ > -1) {\r\n              indexUni = indexI;\r\n              indexCat = indexJ;\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          cpItems[indexUni].children[indexCat].children.push(item);\r\n        }\r\n      }\r\n    }\r\n    setUniversesCategories(cpItems);\r\n\r\n    if (action === \"delete\") {\r\n      setCategory(false);\r\n    } else {\r\n      setActiveCategory(item, cpItems);\r\n    }\r\n  };\r\n\r\n  const newItem = (item, items) => {\r\n    if (item) {\r\n      if (item[\"@type\"] === \"Universe\") {\r\n        item = {\r\n          \"@type\": \"Category\",\r\n          position: item.children.length,\r\n          level: 0,\r\n          universe: item[\"@id\"],\r\n          parent: null,\r\n        };\r\n      } else if (item[\"@type\"] === \"Category\" && item.level === 0) {\r\n        item = {\r\n          \"@type\": \"Category\",\r\n          position: item.children.length,\r\n          level: 1,\r\n          universe: null,\r\n          parent: item[\"@id\"],\r\n        };\r\n      }\r\n    } else {\r\n      item = {\r\n        \"@type\": \"Universe\",\r\n        position: items.length,\r\n        level: null,\r\n        universe: null,\r\n        parent: null,\r\n        nameCategory: \"Catégorie(s)\",\r\n        nameSubCategory: \"Sous-catégories(s)\",\r\n        requireSearchSubCategory:false\r\n      };\r\n    }\r\n\r\n    setActiveCategory(\r\n      {\r\n        ...item,\r\n        id: null,\r\n        name: null,\r\n        adjacent: item?.children?.length\r\n          ? item.children[item.children.length - 1]\r\n          : {},\r\n        image: null,\r\n        imageHome: null,\r\n        pictures: [],\r\n        nameCategory: item?.nameCategory || \"\",\r\n        nameSubCategory: item?.nameSubCategory || \"\",\r\n        requireSearchSubCategory: item?.requireSearchSubCategory || false,\r\n        description: \"\",\r\n        descriptionPictures: \"\",\r\n        enabled: false,\r\n      },\r\n      items\r\n    );\r\n  };\r\n\r\n  const getUrlServices = (cat) => {\r\n    let params = \"\";\r\n    if (cat.level === 0) {\r\n      params = `?category=${cat.id}`;\r\n    } else if (cat.parent) {\r\n      params = `?category=${cat.parent.replace(\r\n        \"/api/anonymous/category/\",\r\n        \"\"\r\n      )}&subCategory=${cat.id}`;\r\n    }\r\n    return `${ROUTES.SERVICES.url}${params}`;\r\n  };\r\n\r\n  return (\r\n    <AdminBase>\r\n      <BlocAdminContent>\r\n        <DashboardContent titlePage=\"Catégories\">\r\n          <BlocAccordions>\r\n            <ListSort\r\n              data={universesCategories}\r\n              onSortEnd={onSortEnd}\r\n              setOrderChildren={setOrderChildren}\r\n              useDragHandle\r\n              setActiveCategory={setActiveCategory}\r\n              newItem={newItem}\r\n              savePosition={savePosition}\r\n            />\r\n            <BtnAccordAdd\r\n              className={`default-btn-add level-btn`}\r\n              onClick={() => newItem(false, universesCategories)}\r\n            >\r\n              <AddGreenIcon /> Ajouter un univers\r\n            </BtnAccordAdd>\r\n          </BlocAccordions>\r\n        </DashboardContent>\r\n        {category && openSide ? (\r\n          <DashboardSide>\r\n            <div className=\"content-side-categorie\">\r\n              {isMobile && (\r\n                <>\r\n                  <CloseButton\r\n                    onClick={(e) => {\r\n                      setOpenSide(false);\r\n                    }}\r\n                  />\r\n                </>\r\n              )}\r\n              <h2 className=\"title-side-dashboard\">\r\n                {category.name\r\n                  ? category.name\r\n                  : category[\"@type\"] === \"Universe\"\r\n                  ? \"Ajouter un univers\"\r\n                  : category.level === 0\r\n                  ? \"Ajouter une catégorie\"\r\n                  : \"Ajouter une sous-catégorie\"}\r\n              </h2>\r\n              <Form\r\n                className={\r\n                  category[\"@type\"] === \"Universe\"\r\n                    ? \"form-parent-cat\"\r\n                    : \"form-cat-itemƒ\"\r\n                }\r\n              >\r\n                {message && message.type && message.text ? (\r\n                  <span\r\n                    className={\r\n                      message.type === \"error\" ? \"text-danger\" : \"text-success\"\r\n                    }\r\n                  >\r\n                    {message.text}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <Input\r\n                  {...state.name}\r\n                  onChange={(e) => {\r\n                    const cpState = { ...state };\r\n                    cpState.name.value = e.target.value;\r\n                    setState(cpState);\r\n                    setMessage(null);\r\n                  }}\r\n                />\r\n\r\n                {category[\"@type\"] === \"Universe\" ? (\r\n                  <>\r\n                    <Input\r\n                      {...state.nameCategory}\r\n                      onChange={(e) => {\r\n                        const cpState = { ...state };\r\n                        cpState.nameCategory.value = e.target.value;\r\n                        setState(cpState);\r\n                        setMessage(null);\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      {...state.nameSubCategory}\r\n                      onChange={(e) => {\r\n                        const cpState = { ...state };\r\n                        cpState.nameSubCategory.value = e.target.value;\r\n                        setState(cpState);\r\n                        setMessage(null);\r\n                      }}\r\n                    />\r\n\r\n                    <SingleCheckbox\r\n                      {...state.requireSearchSubCategory}\r\n                      onChange={(e) => {\r\n                        const cpState = { ...state };\r\n                        cpState.requireSearchSubCategory.value = e.target.checked;\r\n                        cpState.requireSearchSubCategory.error = false;\r\n                        setState(cpState);\r\n                        setMessage(null);\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      {...state.description}\r\n                      onChange={(e) => {\r\n                        const cpState = { ...state };\r\n                        cpState.description.value = e.target.value;\r\n                        setState(cpState);\r\n                      }}\r\n                    />\r\n\r\n                    <p className=\"form-label-title\">Image *</p>\r\n                    <div\r\n                      className={`image-service ${\r\n                        state.image.error ? \"form-error\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <img src={getPathImage(state.image)} alt=\"\" />\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        id=\"uploadImage\"\r\n                        accept=\"image/png, image/jpeg\"\r\n                        onChange={(e) => {\r\n                          const cpState = { ...state };\r\n                          cpState.image.file = e.target.files[0];\r\n                          e.target.value = \"\";\r\n                          setState(cpState);\r\n                          setMessage(null);\r\n                        }}\r\n                      />\r\n                      <div className=\"btns-file\">\r\n                        <label htmlFor=\"uploadImage\" className=\"edit-image\">\r\n                          <EditIcon />\r\n                        </label>\r\n                        {state.image.value || state.image.file ? (\r\n                          <button\r\n                            className=\"delete-image\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              const cpState = { ...state };\r\n                              cpState.image.value = \"\";\r\n                              cpState.image.file = null;\r\n                              setState(cpState);\r\n                            }}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </button>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"form-label-title\">Image d'accueil</p>\r\n                    <div\r\n                      className={`image-service ${\r\n                        state.imageHome.error ? \"form-error\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <img src={getPathImage(state.imageHome)} alt=\"\" />\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        id=\"uploadImageHome\"\r\n                        accept=\"image/png, image/jpeg\"\r\n                        onChange={(e) => {\r\n                          const cpState = { ...state };\r\n                          cpState.imageHome.file = e.target.files[0];\r\n                          e.target.value = \"\";\r\n                          setState(cpState);\r\n                          setMessage(null);\r\n                        }}\r\n                      />\r\n                      <div className=\"btns-file\">\r\n                        <label htmlFor=\"uploadImageHome\" className=\"edit-image\">\r\n                          <EditIcon />\r\n                        </label>\r\n                        {state.imageHome.value || state.imageHome.file ? (\r\n                          <button\r\n                            className=\"delete-image\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              const cpState = { ...state };\r\n                              cpState.imageHome.value = \"\";\r\n                              cpState.imageHome.file = null;\r\n                              setState(cpState);\r\n                            }}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </button>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <WysiwygEditor\r\n                      {...state.descriptionPictures}\r\n                      onChange={(e) => {\r\n                        const cpState = { ...state };\r\n                        cpState.descriptionPictures.value = e || \"\";\r\n                        if (cpState.pictures.value.length) {\r\n                          cpState.pictures.value =\r\n                            cpState.pictures.value.filter(\r\n                              (picture) =>\r\n                                cpState.descriptionPictures.value.indexOf(\r\n                                  picture\r\n                                ) !== -1\r\n                            );\r\n                        }\r\n                        setState(cpState);\r\n                        setMessage(null);\r\n                      }}\r\n                    />\r\n                    <RadioButton\r\n                      {...state.enabled}\r\n                      onChange={(val) => {\r\n                        const cpState = { ...state };\r\n                        cpState.enabled.value = val.value;\r\n                        setState(cpState);\r\n                      }}\r\n                    />\r\n                    <div className=\"btns-alings\">\r\n                      {category.name && (\r\n                        <ButtonDef\r\n                          className=\"btn-delete\"\r\n                          textButton=\"Supprimer\"\r\n                          spinner={isPending}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setShowModal(true);\r\n                            setDataModal({\r\n                              type: \"modal-save\",\r\n                              title: \"Confirmer la suppression\",\r\n                              action: \"deleteUniverse\",\r\n                            });\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <ButtonDef\r\n                        textButton=\"Enregistrer\"\r\n                        spinner={isPending}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          saveUniverse();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"btns-alings\">\r\n                      {category.name ? (\r\n                        <ButtonDef\r\n                          className=\"btn-delete\"\r\n                          textButton=\"Supprimer\"\r\n                          spinner={isPending}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setShowModal(true);\r\n                            setDataModal({\r\n                              type: \"modal-save\",\r\n                              title: \"Confirmer la suppression\",\r\n                              action: \"deleteCategory\",\r\n                            });\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                      <ButtonDef\r\n                        textButton=\"Enregistrer\"\r\n                        spinner={isPending}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          saveCategory();\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {!state.id.value ? (\r\n                      \"\"\r\n                    ) : category.totalServices ? (\r\n                      <div className=\"link-voir\">\r\n                        <Link to={getUrlServices(category)}>\r\n                          {\" \"}\r\n                          {category.totalServices} service(s) lié(s){\" \"}\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"link-voir-0\">\r\n                        <Link to={\"#\"}> 0 service(s) lié(s) </Link>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                <PopinModal\r\n                  show={showModal}\r\n                  handleClose={() => {\r\n                    setShowModal(false);\r\n                  }}\r\n                  title={dataModal.title}\r\n                >\r\n                  <div className=\"btns-confirm\">\r\n                    <ButtonDef\r\n                      className=\"btn-light\"\r\n                      textButton=\"Non\"\r\n                      spinner={isPending}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setShowModal(false);\r\n                      }}\r\n                    />\r\n                    <ButtonDef\r\n                      textButton=\"Oui\"\r\n                      spinner={isPending}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        if (dataModal.action === \"deleteUniverse\") {\r\n                          deleteUniverse();\r\n                        } else if (dataModal.action === \"deleteCategory\") {\r\n                          deleteCategory();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </PopinModal>\r\n              </Form>\r\n            </div>\r\n          </DashboardSide>\r\n        ) : null}\r\n      </BlocAdminContent>\r\n    </AdminBase>\r\n  );\r\n}\r\n"
        }
    ]
}