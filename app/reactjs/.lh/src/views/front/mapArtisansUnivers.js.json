{
    "sourceFile": "src/views/front/mapArtisansUnivers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1103,
            "patches": [
                {
                    "date": 1706706518196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706717363398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,8 +161,9 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    const idService =\"%%\";\r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n"
                },
                {
                    "date": 1706717388690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,402 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  console.log(slugIdUniverse);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    let idService =\"%%\";\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706717395025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -399,406 +399,4 @@\n         </Container>\r\n  \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    const idService =\"%%\";\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706717405119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,402 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  console.log(slugIdUniverse);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    idService =\"%%\";\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706717455980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    idService =\"%%\";\r\n+    console.log(idService);\r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n@@ -399,406 +399,4 @@\n         </Container>\r\n  \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    let idService =\"%%\";\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706717518152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    console.log(idService);\r\n+    console.log(\"idservoce\"+idService);\r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n"
                },
                {
                    "date": 1706718269849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,403 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  console.log(slugIdUniverse);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    console.log(\"idservoce\"+idService);\r\n+    idService=\"cordonnerie-30\";\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706718399825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     console.log(\"idservoce\"+idService);\r\n-    idService=\"cordonnerie-30\";\r\n+    idService=30;\r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n@@ -400,406 +400,4 @@\n         </Container>\r\n  \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    console.log(\"idservoce\"+idService);\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706718509499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,10 +161,12 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    console.log(\"idservoce\"+idService);\r\n-    idService=30;\r\n+    console.log(\"idService\");\r\n+ \r\n+    console.log(typeof(idService));\r\n+ \r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n"
                },
                {
                    "date": 1706718560843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     console.log(\"idService\");\r\n  \r\n-    console.log(typeof(idService));\r\n+    console.log('typeof'+typeof(idService));\r\n  \r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n"
                },
                {
                    "date": 1706718581381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     console.log(\"idService\");\r\n  \r\n-    console.log('typeof'+typeof(idService));\r\n+    console.log('typeof idservice'+typeof(idService));\r\n  \r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n"
                },
                {
                    "date": 1706718597272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,405 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  console.log(slugIdUniverse);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    \r\n+ \r\n+    console.log('typeof idservice:'+typeof(idService));\r\n+ \r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706718616442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,8 +164,9 @@\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     \r\n  \r\n     console.log('typeof idservice:'+typeof(idService));\r\n+    console.log(idService);\r\n  \r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n@@ -402,409 +403,4 @@\n         </Container>\r\n  \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    console.log(\"idService\");\r\n- \r\n-    console.log('typeof idservice'+typeof(idService));\r\n- \r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1706877754603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,15 +392,9 @@\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n+        \r\n         </Container>\r\n  \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706877940904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import MArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche.js\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n@@ -392,9 +392,15 @@\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n-        \r\n+          <MArtListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n         </Container>\r\n  \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706878587060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import MArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche.js\";\r\n+import MArtListePrestationFiche from \"../../components/front/mArtListePrestation.js\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706879116825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import MArtListePrestationFiche from \"../../components/front/mArtListePrestation.js\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n@@ -392,9 +392,9 @@\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n-          <MArtListePrestationFiche\r\n+          <ListePrestationFiche\r\n             service={service}\r\n             benefits={benefits}\r\n             filter={filter}\r\n             setFilter={setFilter}\r\n"
                },
                {
                    "date": 1706879250197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,9 +392,9 @@\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n-          <ListePrestationFiche\r\n+          <MArtListePrestationFiche\r\n             service={service}\r\n             benefits={benefits}\r\n             filter={filter}\r\n             setFilter={setFilter}\r\n"
                },
                {
                    "date": 1706879324270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import MArtListePrestationFiche from \"../../components/front/mArtListePrestation\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706879409236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import MArtListePrestationFiche from \"../../components/front/mArtListePrestation\";\r\n+import MArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706879521112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import MArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche\";\r\n+import MArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche.js\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706879856301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import MArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche.js\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n@@ -392,9 +392,9 @@\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n-          <MArtListePrestationFiche\r\n+          <ListePrestationFiche\r\n             service={service}\r\n             benefits={benefits}\r\n             filter={filter}\r\n             setFilter={setFilter}\r\n"
                },
                {
                    "date": 1706879874106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     \r\n  \r\n     console.log('typeof idservice:'+typeof(idService));\r\n-    console.log(idService);\r\n+    \r\n  \r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n"
                },
                {
                    "date": 1706880473406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import ListePrestationFiche from \"../../components/front/mArtListePrestationFiche\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706880554456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/mArtListePrestationFiche\";\r\n+import ArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706880613217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,9 +392,9 @@\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n-          <ListePrestationFiche\r\n+          <ArtListePrestationFiche\r\n             service={service}\r\n             benefits={benefits}\r\n             filter={filter}\r\n             setFilter={setFilter}\r\n"
                },
                {
                    "date": 1706880701595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import Base from \"../../theme/front/base\";\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/mArtListePrestationFiche\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import { clearErrors } from \"../../helper/form\";\r\n"
                },
                {
                    "date": 1706882788463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    \r\n+    const idService = slugIdService.split(\"-\").pop();\r\n  \r\n     console.log('typeof idservice:'+typeof(idService));\r\n     \r\n  \r\n"
                },
                {
                    "date": 1706882796010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    const idService = slugIdService.split(\"-\").pop();\r\n+    idService = slugIdService.split(\"-\").pop();\r\n  \r\n     console.log('typeof idservice:'+typeof(idService));\r\n     \r\n  \r\n"
                },
                {
                    "date": 1706882926311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,11 +160,11 @@\n     });\r\n   };\r\n \r\n   const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    idService = slugIdService.split(\"-\").pop();\r\n- \r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    const idService = slugIdService.split(\"-\").pop();\r\n     console.log('typeof idservice:'+typeof(idService));\r\n     \r\n  \r\n     if (idService) {\r\n"
                },
                {
                    "date": 1706882974405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     parseFloat(localStorage.getItem(\"longitude\"))\r\n   );\r\n \r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n+ \r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n"
                },
                {
                    "date": 1706883121257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n     }\r\n   };\r\n \r\n   const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    const idService = \"218\";\r\n     if (idService) {\r\n       if (!placeIsSelected) {\r\n         msgErrors({\r\n           codePostal: true,\r\n"
                },
                {
                    "date": 1706883169971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,10 @@\n \r\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n-    const idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n     console.log('typeof idservice:'+typeof(idService));\r\n     \r\n  \r\n     if (idService) {\r\n"
                },
                {
                    "date": 1706883182875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n+    const idService = 219;\r\n     console.log('typeof idservice:'+typeof(idService));\r\n     \r\n  \r\n     if (idService) {\r\n"
                },
                {
                    "date": 1706883295420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n@@ -383,9 +384,9 @@\n                 {isTabletOrMobile && <>Recherche</>}\r\n               </button>\r\n             </div>\r\n           </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n           <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n             <BackIcon />\r\n             <span>Retour à l'univers</span>\r\n           </BackStyle>\r\n"
                },
                {
                    "date": 1706883363346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n+  const isOlder = true;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n"
                },
                {
                    "date": 1706883467318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,13 +385,14 @@\n               </button>\r\n             </div>\r\n           </BlocFilterStyle>\r\n           {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+          {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n             <BackIcon />\r\n             <span>Retour à l'univers</span>\r\n           </BackStyle>\r\n-          {isTabletOrMobile && (\r\n+          }\r\n+          {isOlder && isTabletOrMobile && (\r\n             <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n"
                },
                {
                    "date": 1706883506371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -396,8 +396,9 @@\n               <SearchIcon /> Rechercher une prestation\r\n             </div>\r\n           )}\r\n           <ArtListePrestationFiche\r\n+            universe={universe}\r\n             service={service}\r\n             benefits={benefits}\r\n             filter={filter}\r\n             setFilter={setFilter}\r\n"
                },
                {
                    "date": 1706883631514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,8 +316,9 @@\n \r\n   return (\r\n \r\n         <Container>\r\n+           {isOlder &&\r\n           <BlocFilterStyle open={click}>\r\n             {isTabletOrMobile && (\r\n               <button\r\n                 className=\"menu-burger is-opened\"\r\n@@ -384,8 +385,9 @@\n                 {isTabletOrMobile && <>Recherche</>}\r\n               </button>\r\n             </div>\r\n           </BlocFilterStyle>\r\n+}\r\n           {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n           {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n             <BackIcon />\r\n             <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1706883650950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n+  const isOlder = false;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n@@ -49,9 +49,9 @@\n     parseFloat(localStorage.getItem(\"longitude\"))\r\n   );\r\n \r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n- \r\n+\r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n@@ -165,11 +165,11 @@\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n     const idService = 219;\r\n-    console.log('typeof idservice:'+typeof(idService));\r\n-    \r\n- \r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n@@ -216,9 +216,9 @@\n         if (sortBy[0] === \"distance\") {\r\n           condition += `&order[distance]=asc`;\r\n         } else if (sortBy[0] === \"price\") {\r\n           condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n+        } else if (sortBy[0] === \"rating\") {\r\n           condition += `&order[rating]=${sortBy[1]}`;\r\n         }\r\n         if (filter.deliveryModeTypes.value.length) {\r\n           for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n@@ -255,24 +255,24 @@\n                     if (obj.price && parseFloat(obj.price) > 0) {\r\n                       prices.push(parseFloat(obj.price));\r\n                     }\r\n                   }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n                 }\r\n                 if (prices.length) {\r\n                   cpService.minPrice = Math.floor(Math.min(...prices));\r\n                   cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n                   setService(cpService);\r\n-                }else{\r\n+                } else {\r\n                   cpService.minPrice = 0;\r\n                   cpService.maxPrice = 0;\r\n                   setService(cpService);\r\n                 }\r\n               }\r\n               if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n               }\r\n               setBenefits(results);\r\n               setIsPending(false);\r\n             },\r\n@@ -315,98 +315,98 @@\n   };\r\n \r\n   return (\r\n \r\n-        <Container>\r\n-           {isOlder &&\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n+    <Container>\r\n+      {isOlder &&\r\n+        <BlocFilterStyle open={click}>\r\n+          {isTabletOrMobile && (\r\n+            <button\r\n+              className=\"menu-burger is-opened\"\r\n+              onClick={toogleCloseFilter}\r\n+            >\r\n+              <span></span>\r\n+              <span></span>\r\n+              <span></span>\r\n+            </button>\r\n+          )}\r\n+          <div className=\"item-filter\">\r\n+            <RangePrice>\r\n+              <label>Prix</label>\r\n+              {service &&\r\n                 service.minPrice &&\r\n                 service.maxPrice &&\r\n                 service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-}\r\n-          {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          }\r\n-          {isOlder && isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ArtListePrestationFiche\r\n-            universe={universe}\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n+                <Nouislider\r\n+                  range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                  start={[service.minPrice, service.maxPrice]}\r\n+                  connect={true}\r\n+                  behaviour=\"tap\"\r\n+                  step={1}\r\n+                  tooltips={true}\r\n+                  format={{ to, from }}\r\n+                />\r\n+              ) : (\r\n+                \"Sur devis\"\r\n+              )}\r\n+            </RangePrice>\r\n+          </div>\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.deliveryModeTypes}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.deliveryModeTypes.value = response;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+          <div className=\"item-filter\">\r\n+            <InputAutoComplete\r\n+              filter={filter}\r\n+              setFilter={setFilter}\r\n+              placeIsSelected={placeIsSelected}\r\n+              setPlaceIsSelected={setPlaceIsSelected}\r\n+              isPendingLatLng={isPendingLatLng}\r\n+              setIsPendingLatLng={setIsPendingLatLng}\r\n+            />\r\n+          </div>\r\n+          <div className=\"btn-filter-banner\">\r\n+            <button\r\n+              className=\"btn-search-filter\"\r\n+              onClick={(e) => {\r\n+                getBenefits(false);\r\n+              }}\r\n+            >\r\n+              {isDesktopOrLaptop && (\r\n+                <>\r\n+                  <SearchIcon />\r\n+                </>\r\n+              )}\r\n+              {isTabletOrMobile && <>Recherche</>}\r\n+            </button>\r\n+          </div>\r\n+        </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      <ArtListePrestationFiche\r\n+        universe={universe}\r\n+        service={service}\r\n+        benefits={benefits}\r\n+        filter={filter}\r\n+        setFilter={setFilter}\r\n+        isPending={isPending}\r\n+      />\r\n+    </Container>\r\n+\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706887121095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,11 +173,12 @@\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n       }\r\n+      //ANONYMOUS_SERVICE\r\n       connector({\r\n         method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}${idService}${condition}`,\r\n         success: (response) => {\r\n           setService(response.data || {});\r\n         },\r\n         catch: (error) => {\r\n"
                },
                {
                    "date": 1706887945368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,414 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 219;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      //ANONYMOUS_SERVICE\r\n+      // url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}${idService}${condition}`,\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container>\r\n+      {isOlder &&\r\n+        <BlocFilterStyle open={click}>\r\n+          {isTabletOrMobile && (\r\n+            <button\r\n+              className=\"menu-burger is-opened\"\r\n+              onClick={toogleCloseFilter}\r\n+            >\r\n+              <span></span>\r\n+              <span></span>\r\n+              <span></span>\r\n+            </button>\r\n+          )}\r\n+          <div className=\"item-filter\">\r\n+            <RangePrice>\r\n+              <label>Prix</label>\r\n+              {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                <Nouislider\r\n+                  range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                  start={[service.minPrice, service.maxPrice]}\r\n+                  connect={true}\r\n+                  behaviour=\"tap\"\r\n+                  step={1}\r\n+                  tooltips={true}\r\n+                  format={{ to, from }}\r\n+                />\r\n+              ) : (\r\n+                \"Sur devis\"\r\n+              )}\r\n+            </RangePrice>\r\n+          </div>\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.deliveryModeTypes}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.deliveryModeTypes.value = response;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+          <div className=\"item-filter\">\r\n+            <InputAutoComplete\r\n+              filter={filter}\r\n+              setFilter={setFilter}\r\n+              placeIsSelected={placeIsSelected}\r\n+              setPlaceIsSelected={setPlaceIsSelected}\r\n+              isPendingLatLng={isPendingLatLng}\r\n+              setIsPendingLatLng={setIsPendingLatLng}\r\n+            />\r\n+          </div>\r\n+          <div className=\"btn-filter-banner\">\r\n+            <button\r\n+              className=\"btn-search-filter\"\r\n+              onClick={(e) => {\r\n+                getBenefits(false);\r\n+              }}\r\n+            >\r\n+              {isDesktopOrLaptop && (\r\n+                <>\r\n+                  <SearchIcon />\r\n+                </>\r\n+              )}\r\n+              {isTabletOrMobile && <>Recherche</>}\r\n+            </button>\r\n+          </div>\r\n+        </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      <ArtListePrestationFiche\r\n+        universe={universe}\r\n+        service={service}\r\n+        benefits={benefits}\r\n+        filter={filter}\r\n+        setFilter={setFilter}\r\n+        isPending={isPending}\r\n+      />\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1706888867829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,415 +159,26 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n-\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 219;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      //ANONYMOUS_SERVICE\r\n-      // url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}${idService}${condition}`,\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container>\r\n-      {isOlder &&\r\n-        <BlocFilterStyle open={click}>\r\n-          {isTabletOrMobile && (\r\n-            <button\r\n-              className=\"menu-burger is-opened\"\r\n-              onClick={toogleCloseFilter}\r\n-            >\r\n-              <span></span>\r\n-              <span></span>\r\n-              <span></span>\r\n-            </button>\r\n-          )}\r\n-          <div className=\"item-filter\">\r\n-            <RangePrice>\r\n-              <label>Prix</label>\r\n-              {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                <Nouislider\r\n-                  range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                  start={[service.minPrice, service.maxPrice]}\r\n-                  connect={true}\r\n-                  behaviour=\"tap\"\r\n-                  step={1}\r\n-                  tooltips={true}\r\n-                  format={{ to, from }}\r\n-                />\r\n-              ) : (\r\n-                \"Sur devis\"\r\n-              )}\r\n-            </RangePrice>\r\n-          </div>\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.deliveryModeTypes}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.deliveryModeTypes.value = response;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-          <div className=\"item-filter\">\r\n-            <InputAutoComplete\r\n-              filter={filter}\r\n-              setFilter={setFilter}\r\n-              placeIsSelected={placeIsSelected}\r\n-              setPlaceIsSelected={setPlaceIsSelected}\r\n-              isPendingLatLng={isPendingLatLng}\r\n-              setIsPendingLatLng={setIsPendingLatLng}\r\n-            />\r\n-          </div>\r\n-          <div className=\"btn-filter-banner\">\r\n-            <button\r\n-              className=\"btn-search-filter\"\r\n-              onClick={(e) => {\r\n-                getBenefits(false);\r\n-              }}\r\n-            >\r\n-              {isDesktopOrLaptop && (\r\n-                <>\r\n-                  <SearchIcon />\r\n-                </>\r\n-              )}\r\n-              {isTabletOrMobile && <>Recherche</>}\r\n-            </button>\r\n-          </div>\r\n-        </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-      <ArtListePrestationFiche\r\n-        universe={universe}\r\n-        service={service}\r\n-        benefits={benefits}\r\n-        filter={filter}\r\n-        setFilter={setFilter}\r\n-        isPending={isPending}\r\n-      />\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n+  const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         const cpFilter = { ...filter };\r\n-        let options = [];\r\n+        cpFilter.repairMan.options = [\r\n+          { label: \"Tous les réparateurs\", value: \"\" },\r\n+        ];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+          let o = arrayObj[i];\r\n+          cpFilter.repairMan.options.push({\r\n+            label: o.enterprise,\r\n+            value: o.id,\r\n+          });\r\n         }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n         setFilter(cpFilter);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -587,13 +198,13 @@\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n       }\r\n-      //ANONYMOUS_SERVICE\r\n+   \r\n       connector({\r\n         method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}${idService}${condition}`,\r\n-        success: (response) => {\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+          success: (response) => {\r\n           setService(response.data || {});\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n"
                },
                {
                    "date": 1706889124387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,33 +159,8 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n-  const getRepairMans = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.repairMan.options = [\r\n-          { label: \"Tous les réparateurs\", value: \"\" },\r\n-        ];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let o = arrayObj[i];\r\n-          cpFilter.repairMan.options.push({\r\n-            label: o.enterprise,\r\n-            value: o.id,\r\n-          });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n \r\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n@@ -198,13 +173,12 @@\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n         condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n       }\r\n-   \r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-          success: (response) => {\r\n+        success: (response) => {\r\n           setService(response.data || {});\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n"
                },
                {
                    "date": 1706889156038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,12 +161,12 @@\n     });\r\n   };\r\n \r\n   const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 219;\r\n+    //const idService = 219;\r\n     console.log('typeof idservice:' + typeof (idService));\r\n \r\n \r\n     if (idService) {\r\n"
                },
                {
                    "date": 1706889161791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n   };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    idService = slugIdService.split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n     //const idService = 219;\r\n     console.log('typeof idservice:' + typeof (idService));\r\n \r\n"
                },
                {
                    "date": 1706889242417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n+  const isOlder = true;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n"
                },
                {
                    "date": 1706889440456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,8 +130,9 @@\n \r\n   useEffect(() => {\r\n     getDeliveryModeTypes();\r\n     getService();\r\n+    getRepairMans();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -159,8 +160,33 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n+  const getRepairMans = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.repairMan.options = [\r\n+          { label: \"Tous les réparateurs\", value: \"\" },\r\n+        ];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let o = arrayObj[i];\r\n+          cpFilter.repairMan.options.push({\r\n+            label: o.enterprise,\r\n+            value: o.id,\r\n+          });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n \r\n   const getService = () => {\r\n     const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1706890429452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n+  const isOlder = false;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n"
                },
                {
                    "date": 1706891639033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -431,8 +431,21 @@\n         filter={filter}\r\n         setFilter={setFilter}\r\n         isPending={isPending}\r\n       />\r\n+        <ListsRepairMan\r\n+            setActiveItem={setActiveService}\r\n+            item={service}\r\n+            items={services}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            totalItems={totalServices}\r\n+            perPage={perPage}\r\n+            setPerPage={setPerPage}\r\n+            pageIndex={pageIndex}\r\n+            setPageIndex={setPageIndex}\r\n+            textButtonAjoute=\"Demander la création d’un nouveau service\"\r\n+          />\r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706891674232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { useParams } from \"react-router-dom\";\r\n+import ListsRepairMan from \"../../../components/services/listsRepairMan\";\r\n import { NotificationManager } from \"react-notifications\";\r\n import {\r\n   BackStyle,\r\n   BlocFilterStyle,\r\n"
                },
                {
                    "date": 1706891687919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { useParams } from \"react-router-dom\";\r\n-import ListsRepairMan from \"../../../components/services/listsRepairMan\";\r\n+import ListsRepairMan from \"../../components/services/listsRepairMan\";\r\n import { NotificationManager } from \"react-notifications\";\r\n import {\r\n   BackStyle,\r\n   BlocFilterStyle,\r\n"
                },
                {
                    "date": 1706891729116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,12 +188,12 @@\n     });\r\n   };\r\n \r\n   const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = 219;\r\n+    const idService = 219;\r\n     console.log('typeof idservice:' + typeof (idService));\r\n \r\n \r\n     if (idService) {\r\n"
                },
                {
                    "date": 1706891813168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -432,21 +432,9 @@\n         filter={filter}\r\n         setFilter={setFilter}\r\n         isPending={isPending}\r\n       />\r\n-        <ListsRepairMan\r\n-            setActiveItem={setActiveService}\r\n-            item={service}\r\n-            items={services}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            totalItems={totalServices}\r\n-            perPage={perPage}\r\n-            setPerPage={setPerPage}\r\n-            pageIndex={pageIndex}\r\n-            setPageIndex={setPageIndex}\r\n-            textButtonAjoute=\"Demander la création d’un nouveau service\"\r\n-          />\r\n+      \r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1706891834836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 219;\r\n+    const idService = 218;\r\n     console.log('typeof idservice:' + typeof (idService));\r\n \r\n \r\n     if (idService) {\r\n"
                },
                {
                    "date": 1706891953793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { useParams } from \"react-router-dom\";\r\n-import ListsRepairMan from \"../../components/services/listsRepairMan\";\r\n+\r\n import { NotificationManager } from \"react-notifications\";\r\n import {\r\n   BackStyle,\r\n   BlocFilterStyle,\r\n@@ -24,9 +24,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n+  const isOlder = true;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n"
                },
                {
                    "date": 1706892148076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -343,9 +343,9 @@\n \r\n   return (\r\n \r\n     <Container>\r\n-      {isOlder &&\r\n+      {\r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n"
                },
                {
                    "date": 1706892163606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n+  const isOlder = false;\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n"
                },
                {
                    "date": 1706892385570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -342,9 +342,9 @@\n   };\r\n \r\n   return (\r\n \r\n-    <Container>\r\n+    <Container style= {{marginTop: 100}}>\r\n       {\r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n"
                },
                {
                    "date": 1706892604363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -431,8 +431,9 @@\n         benefits={benefits}\r\n         filter={filter}\r\n         setFilter={setFilter}\r\n         isPending={isPending}\r\n+        isOlder={isOlder}  \r\n       />\r\n       \r\n     </Container>\r\n \r\n"
                },
                {
                    "date": 1706972443092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -433,8 +433,11 @@\n         setFilter={setFilter}\r\n         isPending={isPending}\r\n         isOlder={isOlder}  \r\n       />\r\n+      <NewMap>\r\n+\r\n+      </NewMap>\r\n       \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1706972499662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n+import Newmap from './newMap.js';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1706972572520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -434,11 +434,11 @@\n         setFilter={setFilter}\r\n         isPending={isPending}\r\n         isOlder={isOlder}  \r\n       />\r\n-      <NewMap>\r\n+      <Newmap>\r\n \r\n-      </NewMap>\r\n+      </Newmap>\r\n       \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1706972665240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from './newMap.js';\r\n+import Newmap from 'newMap.js';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1706972880644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from 'newMap.js';\r\n+import Newmap from '../../components/newMap';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1706972924820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/newMap';\r\n+import Newmap from '../../components/front/newMap';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1706972953094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap';\r\n+import Newmap from '../../components/front/newMap.js';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1707088301025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,34 @@\n     } else {\r\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n-\r\n+  const getRepairMans = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.repairMan.options = [\r\n+          { label: \"Tous les réparateurs\", value: \"\" },\r\n+        ];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let o = arrayObj[i];\r\n+          cpFilter.repairMan.options.push({\r\n+            label: o.enterprise,\r\n+            value: o.id,\r\n+          });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+        console.log(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n   const getBenefits = (refresh = false) => {\r\n     const idService = \"218\";\r\n     if (idService) {\r\n       if (!placeIsSelected) {\r\n"
                },
                {
                    "date": 1707088372743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,8 +132,9 @@\n \r\n   useEffect(() => {\r\n     getDeliveryModeTypes();\r\n     getService();\r\n+    console.log(\"Useeffect\");\r\n     getRepairMans();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n@@ -215,34 +216,9 @@\n     } else {\r\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n-  const getRepairMans = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.repairMan.options = [\r\n-          { label: \"Tous les réparateurs\", value: \"\" },\r\n-        ];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let o = arrayObj[i];\r\n-          cpFilter.repairMan.options.push({\r\n-            label: o.enterprise,\r\n-            value: o.id,\r\n-          });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-        console.log(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n+\r\n   const getBenefits = (refresh = false) => {\r\n     const idService = \"218\";\r\n     if (idService) {\r\n       if (!placeIsSelected) {\r\n"
                },
                {
                    "date": 1707088466152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n \r\n   useEffect(() => {\r\n     getDeliveryModeTypes();\r\n     getService();\r\n-    console.log(\"Useeffect\");\r\n+    console.log('Useeffect');\r\n     getRepairMans();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1707088713899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -436,8 +436,35 @@\n         isPending={isPending}\r\n         isOlder={isOlder}  \r\n       />\r\n       <Newmap>\r\n+      <FilterDefault\r\n+              className=\"services-filter\"\r\n+              formItems={\r\n+                <>\r\n+                  <Select\r\n+                    {...filter.repairMan}\r\n+                    onChange={(e) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.repairMan.value = e.value;\r\n+                      cpFilter.activeElement = \"repairMan\";\r\n+                      setFilter(cpFilter);\r\n+                      setPageIndex(0);\r\n+                    }}\r\n+                  />\r\n+                  <Select\r\n+                    {...filter.status}\r\n+                    onChange={(e) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.status.value = e.value;\r\n+                      cpFilter.activeElement = \"status\";\r\n+                      setFilter(cpFilter);\r\n+                      setPageIndex(0);\r\n+                    }}\r\n+                  />\r\n+                </>\r\n+              }\r\n+            />\r\n \r\n       </Newmap>\r\n       \r\n     </Container>\r\n"
                },
                {
                    "date": 1707088988647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,8 +171,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         const cpFilter = { ...filter };\r\n+        \r\n         cpFilter.repairMan.options = [\r\n           { label: \"Tous les réparateurs\", value: \"\" },\r\n         ];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n@@ -181,9 +182,9 @@\n             label: o.enterprise,\r\n             value: o.id,\r\n           });\r\n         }\r\n-        setFilter(cpFilter);\r\n+        ////setFilter(cpFilter);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n@@ -436,35 +437,9 @@\n         isPending={isPending}\r\n         isOlder={isOlder}  \r\n       />\r\n       <Newmap>\r\n-      <FilterDefault\r\n-              className=\"services-filter\"\r\n-              formItems={\r\n-                <>\r\n-                  <Select\r\n-                    {...filter.repairMan}\r\n-                    onChange={(e) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.repairMan.value = e.value;\r\n-                      cpFilter.activeElement = \"repairMan\";\r\n-                      setFilter(cpFilter);\r\n-                      setPageIndex(0);\r\n-                    }}\r\n-                  />\r\n-                  <Select\r\n-                    {...filter.status}\r\n-                    onChange={(e) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.status.value = e.value;\r\n-                      cpFilter.activeElement = \"status\";\r\n-                      setFilter(cpFilter);\r\n-                      setPageIndex(0);\r\n-                    }}\r\n-                  />\r\n-                </>\r\n-              }\r\n-            />\r\n+      \r\n \r\n       </Newmap>\r\n       \r\n     </Container>\r\n"
                },
                {
                    "date": 1707088998423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n             label: o.enterprise,\r\n             value: o.id,\r\n           });\r\n         }\r\n-        ////setFilter(cpFilter);\r\n+        setFilter(cpFilter);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707089504438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,21 +170,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        \r\n-        cpFilter.repairMan.options = [\r\n-          { label: \"Tous les réparateurs\", value: \"\" },\r\n-        ];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let o = arrayObj[i];\r\n-          cpFilter.repairMan.options.push({\r\n-            label: o.enterprise,\r\n-            value: o.id,\r\n-          });\r\n-        }\r\n-        setFilter(cpFilter);\r\n+console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707089575524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log('getRepairman');\r\n console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707092964725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log('getRepairman');\r\n"
                },
                {
                    "date": 1707093291239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_CLIENT_LIST}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log('getRepairman');\r\n"
                },
                {
                    "date": 1707093934519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,9 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n         success: (response) => {\r\n           setService(response.data || {});\r\n+          console.log(response.data);\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         },\r\n"
                },
                {
                    "date": 1707093986496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,9 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n         success: (response) => {\r\n           setService(response.data || {});\r\n+          console.log(\"ANONYMOUS_SERVICE\");\r\n           console.log(response.data);\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n"
                },
                {
                    "date": 1707094150602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,10 +197,9 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n         success: (response) => {\r\n           setService(response.data || {});\r\n-          console.log(\"ANONYMOUS_SERVICE\");\r\n-          console.log(response.data);\r\n+   \r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         },\r\n@@ -265,8 +264,9 @@\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n               //todo list est voir le min et max\r\n               if (service) {\r\n                 const cpService = { ...service };\r\n                 let prices = [];\r\n"
                },
                {
                    "date": 1707132884146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,17 +418,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      <ArtListePrestationFiche\r\n-        universe={universe}\r\n-        service={service}\r\n-        benefits={benefits}\r\n-        filter={filter}\r\n-        setFilter={setFilter}\r\n-        isPending={isPending}\r\n-        isOlder={isOlder}  \r\n-      />\r\n+  \r\n       <Newmap>\r\n       \r\n \r\n       </Newmap>\r\n"
                },
                {
                    "date": 1707132973651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,19 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-  \r\n+      /*\r\n+      <ArtListePrestationFiche\r\n+        universe={universe}\r\n+        service={service}\r\n+        benefits={benefits}\r\n+        filter={filter}\r\n+        setFilter={setFilter}\r\n+        isPending={isPending}\r\n+        isOlder={isOlder}  \r\n+      />\r\n+      */\r\n       <Newmap>\r\n       \r\n \r\n       </Newmap>\r\n"
                },
                {
                    "date": 1707132996938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,19 +418,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      /*\r\n-      <ArtListePrestationFiche\r\n-        universe={universe}\r\n-        service={service}\r\n-        benefits={benefits}\r\n-        filter={filter}\r\n-        setFilter={setFilter}\r\n-        isPending={isPending}\r\n-        isOlder={isOlder}  \r\n-      />\r\n-      */\r\n+   \r\n       <Newmap>\r\n       \r\n \r\n       </Newmap>\r\n"
                },
                {
                    "date": 1707133063474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,20 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-   \r\n+      {isOlder && (\r\n+      <ArtListePrestationFiche\r\n+        universe={universe}\r\n+        service={service}\r\n+        benefits={benefits}\r\n+        filter={filter}\r\n+        setFilter={setFilter}\r\n+        isPending={isPending}\r\n+        isOlder={isOlder}  \r\n+      />\r\n+      )\r\n+     }\r\n       <Newmap>\r\n       \r\n \r\n       </Newmap>\r\n"
                },
                {
                    "date": 1707133252783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,8 +338,9 @@\n   return (\r\n \r\n     <Container style= {{marginTop: 100}}>\r\n       {\r\n+         {isOlder && (\r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n@@ -406,9 +407,9 @@\n               {isTabletOrMobile && <>Recherche</>}\r\n             </button>\r\n           </div>\r\n         </BlocFilterStyle>\r\n-      }\r\n+  )}\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1707133303259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,9 @@\n   return (\r\n \r\n     <Container style= {{marginTop: 100}}>\r\n       {\r\n-         {isOlder && (\r\n+        {isOlder && (\r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n@@ -407,9 +407,9 @@\n               {isTabletOrMobile && <>Recherche</>}\r\n             </button>\r\n           </div>\r\n         </BlocFilterStyle>\r\n-  )}\r\n+  )\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1707133330431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,10 +337,9 @@\n \r\n   return (\r\n \r\n     <Container style= {{marginTop: 100}}>\r\n-      {\r\n-        {isOlder && (\r\n+         {isOlder && (\r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n"
                },
                {
                    "date": 1707133370795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -406,9 +406,9 @@\n               {isTabletOrMobile && <>Recherche</>}\r\n             </button>\r\n           </div>\r\n         </BlocFilterStyle>\r\n-  )\r\n+}\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1707133378822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -406,9 +406,9 @@\n               {isTabletOrMobile && <>Recherche</>}\r\n             </button>\r\n           </div>\r\n         </BlocFilterStyle>\r\n-}\r\n+\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1707133498498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,9 +337,10 @@\n \r\n   return (\r\n \r\n     <Container style= {{marginTop: 100}}>\r\n-         {isOlder && (\r\n+   \r\n+        {isOlder && (\r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n@@ -406,9 +407,9 @@\n               {isTabletOrMobile && <>Recherche</>}\r\n             </button>\r\n           </div>\r\n         </BlocFilterStyle>\r\n-\r\n+  )\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1707133509867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,10 +337,10 @@\n \r\n   return (\r\n \r\n     <Container style= {{marginTop: 100}}>\r\n-   \r\n-        {isOlder && (\r\n+      {\r\n+        \r\n         <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n@@ -407,9 +407,9 @@\n               {isTabletOrMobile && <>Recherche</>}\r\n             </button>\r\n           </div>\r\n         </BlocFilterStyle>\r\n-  )\r\n+      }\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n"
                },
                {
                    "date": 1707133619540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,11 +337,10 @@\n \r\n   return (\r\n \r\n     <Container style= {{marginTop: 100}}>\r\n-      {\r\n-        \r\n-        <BlocFilterStyle open={click}>\r\n+             \r\n+        {isOlder &&  <BlocFilterStyle open={click}>\r\n           {isTabletOrMobile && (\r\n             <button\r\n               className=\"menu-burger is-opened\"\r\n               onClick={toogleCloseFilter}\r\n"
                },
                {
                    "date": 1707261889833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,13 +166,13 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_CLIENT_LIST}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log('getRepairman');\r\n+        console.log('USERS_REPAIRMAN_UNIVERSES');\r\n console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707288693515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,442 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    console.log('Use effect to be clean');\r\n+    getRepairMans();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+  const getRepairMans = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log('USERS_REPAIRMAN_UNIVERSESPUBLIC');\r\n+console.log(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+   \r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container style= {{marginTop: 100}}>\r\n+             \r\n+        {isOlder &&  <BlocFilterStyle open={click}>\r\n+          {isTabletOrMobile && (\r\n+            <button\r\n+              className=\"menu-burger is-opened\"\r\n+              onClick={toogleCloseFilter}\r\n+            >\r\n+              <span></span>\r\n+              <span></span>\r\n+              <span></span>\r\n+            </button>\r\n+          )}\r\n+          <div className=\"item-filter\">\r\n+            <RangePrice>\r\n+              <label>Prix</label>\r\n+              {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                <Nouislider\r\n+                  range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                  start={[service.minPrice, service.maxPrice]}\r\n+                  connect={true}\r\n+                  behaviour=\"tap\"\r\n+                  step={1}\r\n+                  tooltips={true}\r\n+                  format={{ to, from }}\r\n+                />\r\n+              ) : (\r\n+                \"Sur devis\"\r\n+              )}\r\n+            </RangePrice>\r\n+          </div>\r\n+          <div className=\"item-filter\">\r\n+            <SelectCat\r\n+              {...filter.deliveryModeTypes}\r\n+              onChangeCallback={(response) => {\r\n+                const cpFilter = { ...filter };\r\n+                cpFilter.deliveryModeTypes.value = response;\r\n+                setFilter(cpFilter);\r\n+              }}\r\n+            />\r\n+          </div>\r\n+          <div className=\"item-filter\">\r\n+            <InputAutoComplete\r\n+              filter={filter}\r\n+              setFilter={setFilter}\r\n+              placeIsSelected={placeIsSelected}\r\n+              setPlaceIsSelected={setPlaceIsSelected}\r\n+              isPendingLatLng={isPendingLatLng}\r\n+              setIsPendingLatLng={setIsPendingLatLng}\r\n+            />\r\n+          </div>\r\n+          <div className=\"btn-filter-banner\">\r\n+            <button\r\n+              className=\"btn-search-filter\"\r\n+              onClick={(e) => {\r\n+                getBenefits(false);\r\n+              }}\r\n+            >\r\n+              {isDesktopOrLaptop && (\r\n+                <>\r\n+                  <SearchIcon />\r\n+                </>\r\n+              )}\r\n+              {isTabletOrMobile && <>Recherche</>}\r\n+            </button>\r\n+          </div>\r\n+        </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      {isOlder && (\r\n+      <ArtListePrestationFiche\r\n+        universe={universe}\r\n+        service={service}\r\n+        benefits={benefits}\r\n+        filter={filter}\r\n+        setFilter={setFilter}\r\n+        isPending={isPending}\r\n+        isOlder={isOlder}  \r\n+      />\r\n+      )\r\n+     }\r\n+      <Newmap>\r\n+      \r\n+\r\n+      </Newmap>\r\n+      \r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707289257088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSESPUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log('USERS_REPAIRMAN_UNIVERSESPUBLIC');\r\n@@ -439,446 +439,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    console.log('Useeffect');\r\n-    getRepairMans();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-  const getRepairMans = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log('USERS_REPAIRMAN_UNIVERSES');\r\n-console.log(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-   \r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container style= {{marginTop: 100}}>\r\n-             \r\n-        {isOlder &&  <BlocFilterStyle open={click}>\r\n-          {isTabletOrMobile && (\r\n-            <button\r\n-              className=\"menu-burger is-opened\"\r\n-              onClick={toogleCloseFilter}\r\n-            >\r\n-              <span></span>\r\n-              <span></span>\r\n-              <span></span>\r\n-            </button>\r\n-          )}\r\n-          <div className=\"item-filter\">\r\n-            <RangePrice>\r\n-              <label>Prix</label>\r\n-              {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                <Nouislider\r\n-                  range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                  start={[service.minPrice, service.maxPrice]}\r\n-                  connect={true}\r\n-                  behaviour=\"tap\"\r\n-                  step={1}\r\n-                  tooltips={true}\r\n-                  format={{ to, from }}\r\n-                />\r\n-              ) : (\r\n-                \"Sur devis\"\r\n-              )}\r\n-            </RangePrice>\r\n-          </div>\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.deliveryModeTypes}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.deliveryModeTypes.value = response;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-          <div className=\"item-filter\">\r\n-            <InputAutoComplete\r\n-              filter={filter}\r\n-              setFilter={setFilter}\r\n-              placeIsSelected={placeIsSelected}\r\n-              setPlaceIsSelected={setPlaceIsSelected}\r\n-              isPendingLatLng={isPendingLatLng}\r\n-              setIsPendingLatLng={setIsPendingLatLng}\r\n-            />\r\n-          </div>\r\n-          <div className=\"btn-filter-banner\">\r\n-            <button\r\n-              className=\"btn-search-filter\"\r\n-              onClick={(e) => {\r\n-                getBenefits(false);\r\n-              }}\r\n-            >\r\n-              {isDesktopOrLaptop && (\r\n-                <>\r\n-                  <SearchIcon />\r\n-                </>\r\n-              )}\r\n-              {isTabletOrMobile && <>Recherche</>}\r\n-            </button>\r\n-          </div>\r\n-        </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-      {isOlder && (\r\n-      <ArtListePrestationFiche\r\n-        universe={universe}\r\n-        service={service}\r\n-        benefits={benefits}\r\n-        filter={filter}\r\n-        setFilter={setFilter}\r\n-        isPending={isPending}\r\n-        isOlder={isOlder}  \r\n-      />\r\n-      )\r\n-     }\r\n-      <Newmap>\r\n-      \r\n-\r\n-      </Newmap>\r\n-      \r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707289374730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSESPUBLIC}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log('USERS_REPAIRMAN_UNIVERSESPUBLIC');\r\n"
                },
                {
                    "date": 1707290059301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSESPUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log('USERS_REPAIRMAN_UNIVERSESPUBLIC');\r\n"
                },
                {
                    "date": 1707292578702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,13 +166,13 @@\n   };\r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSESPUBLIC}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log('USERS_REPAIRMAN_UNIVERSESPUBLIC');\r\n+        console.log('USERS_REPAIRMAN_PUBLIC');\r\n console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707292857945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,10 +170,11 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log('USERS_REPAIRMAN_PUBLIC');\r\n+console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n console.log(arrayObj);\r\n+console.log('USERS_REPAIRMAN_PUBLIC END');\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707293159882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n   useEffect(() => {\r\n     getDeliveryModeTypes();\r\n     getService();\r\n     console.log('Use effect to be clean');\r\n-    getRepairMans();\r\n+    getRepairMen();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -163,9 +163,9 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n-  const getRepairMans = () => {\r\n+  const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n"
                },
                {
                    "date": 1707308093825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n+      //getBenefits(true);\r\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n \r\n@@ -169,11 +169,11 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const repairForGoogleMap = response.data[\"hydra:member\"] || [];\r\n console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n-console.log(arrayObj);\r\n+console.log(repairForGoogleMap);\r\n console.log('USERS_REPAIRMAN_PUBLIC END');\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -431,8 +431,9 @@\n         isOlder={isOlder}  \r\n       />\r\n       )\r\n      }\r\n+    \r\n       <Newmap>\r\n       \r\n \r\n       </Newmap>\r\n"
                },
                {
                    "date": 1707308388276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n       path: `/univers/${slugIdUniverse}`,\r\n     },\r\n     { name: service ? service.name : \"\", path: \"/\" },\r\n   ];\r\n-\r\n+  const repairmenForGoogleMap = [];\r\n   useEffect(() => {\r\n     if (universe.allUniverses) {\r\n       const id = slugIdUniverse.split(\"-\").pop();\r\n       if (id) {\r\n@@ -169,12 +169,12 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        const repairForGoogleMap = response.data[\"hydra:member\"] || [];\r\n-console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n-console.log(repairForGoogleMap);\r\n-console.log('USERS_REPAIRMAN_PUBLIC END');\r\n+        repairmenForGoogleMap = response.data[\"hydra:member\"] || [];\r\n+        console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n+        console.log(repairmenForGoogleMap);\r\n+        console.log('USERS_REPAIRMAN_PUBLIC END');\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n@@ -198,9 +198,9 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n         success: (response) => {\r\n           setService(response.data || {});\r\n-   \r\n+\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         },\r\n@@ -337,78 +337,78 @@\n   };\r\n \r\n   return (\r\n \r\n-    <Container style= {{marginTop: 100}}>\r\n-             \r\n-        {isOlder &&  <BlocFilterStyle open={click}>\r\n-          {isTabletOrMobile && (\r\n-            <button\r\n-              className=\"menu-burger is-opened\"\r\n-              onClick={toogleCloseFilter}\r\n-            >\r\n-              <span></span>\r\n-              <span></span>\r\n-              <span></span>\r\n-            </button>\r\n-          )}\r\n-          <div className=\"item-filter\">\r\n-            <RangePrice>\r\n-              <label>Prix</label>\r\n-              {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                <Nouislider\r\n-                  range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                  start={[service.minPrice, service.maxPrice]}\r\n-                  connect={true}\r\n-                  behaviour=\"tap\"\r\n-                  step={1}\r\n-                  tooltips={true}\r\n-                  format={{ to, from }}\r\n-                />\r\n-              ) : (\r\n-                \"Sur devis\"\r\n-              )}\r\n-            </RangePrice>\r\n-          </div>\r\n-          <div className=\"item-filter\">\r\n-            <SelectCat\r\n-              {...filter.deliveryModeTypes}\r\n-              onChangeCallback={(response) => {\r\n-                const cpFilter = { ...filter };\r\n-                cpFilter.deliveryModeTypes.value = response;\r\n-                setFilter(cpFilter);\r\n-              }}\r\n-            />\r\n-          </div>\r\n-          <div className=\"item-filter\">\r\n-            <InputAutoComplete\r\n-              filter={filter}\r\n-              setFilter={setFilter}\r\n-              placeIsSelected={placeIsSelected}\r\n-              setPlaceIsSelected={setPlaceIsSelected}\r\n-              isPendingLatLng={isPendingLatLng}\r\n-              setIsPendingLatLng={setIsPendingLatLng}\r\n-            />\r\n-          </div>\r\n-          <div className=\"btn-filter-banner\">\r\n-            <button\r\n-              className=\"btn-search-filter\"\r\n-              onClick={(e) => {\r\n-                getBenefits(false);\r\n-              }}\r\n-            >\r\n-              {isDesktopOrLaptop && (\r\n-                <>\r\n-                  <SearchIcon />\r\n-                </>\r\n-              )}\r\n-              {isTabletOrMobile && <>Recherche</>}\r\n-            </button>\r\n-          </div>\r\n-        </BlocFilterStyle>\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      {isOlder && <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <RangePrice>\r\n+            <label>Prix</label>\r\n+            {service &&\r\n+              service.minPrice &&\r\n+              service.maxPrice &&\r\n+              service.minPrice != service.maxPrice ? (\r\n+              <Nouislider\r\n+                range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                start={[service.minPrice, service.maxPrice]}\r\n+                connect={true}\r\n+                behaviour=\"tap\"\r\n+                step={1}\r\n+                tooltips={true}\r\n+                format={{ to, from }}\r\n+              />\r\n+            ) : (\r\n+              \"Sur devis\"\r\n+            )}\r\n+          </RangePrice>\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <SelectCat\r\n+            {...filter.deliveryModeTypes}\r\n+            onChangeCallback={(response) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.deliveryModeTypes.value = response;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={(e) => {\r\n+              getBenefits(false);\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n       }\r\n       {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n       {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n         <BackIcon />\r\n@@ -420,25 +420,21 @@\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n       {isOlder && (\r\n-      <ArtListePrestationFiche\r\n-        universe={universe}\r\n-        service={service}\r\n-        benefits={benefits}\r\n-        filter={filter}\r\n-        setFilter={setFilter}\r\n-        isPending={isPending}\r\n-        isOlder={isOlder}  \r\n-      />\r\n+        <ArtListePrestationFiche\r\n+          universe={universe}\r\n+          service={service}\r\n+          benefits={benefits}\r\n+          filter={filter}\r\n+          setFilter={setFilter}\r\n+          isPending={isPending}\r\n+          isOlder={isOlder}\r\n+        />\r\n       )\r\n-     }\r\n-    \r\n-      <Newmap>\r\n-      \r\n+      }\r\n+      <Newmap mapRepairMen={repairmenForGoogleMap} >   </Newmap>\r\n \r\n-      </Newmap>\r\n-      \r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707308824852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n       path: `/univers/${slugIdUniverse}`,\r\n     },\r\n     { name: service ? service.name : \"\", path: \"/\" },\r\n   ];\r\n-  const repairmenForGoogleMap = [];\r\n+  const repairmenForGoogleMap ;\r\n   useEffect(() => {\r\n     if (universe.allUniverses) {\r\n       const id = slugIdUniverse.split(\"-\").pop();\r\n       if (id) {\r\n"
                },
                {
                    "date": 1707308888896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n       path: `/univers/${slugIdUniverse}`,\r\n     },\r\n     { name: service ? service.name : \"\", path: \"/\" },\r\n   ];\r\n-  const repairmenForGoogleMap ;\r\n+ \r\n   useEffect(() => {\r\n     if (universe.allUniverses) {\r\n       const id = slugIdUniverse.split(\"-\").pop();\r\n       if (id) {\r\n@@ -431,9 +431,9 @@\n           isOlder={isOlder}\r\n         />\r\n       )\r\n       }\r\n-      <Newmap mapRepairMen={repairmenForGoogleMap} >   </Newmap>\r\n+      <Newmap mapRepairMen={getRepairMen.repairmenForGoogleMap} >   </Newmap>\r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1707309037177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,8 +163,9 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n+  const repairmenForGoogleMap=\"\";\r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n"
                },
                {
                    "date": 1707309202270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     parseFloat(localStorage.getItem(\"longitude\"))\r\n   );\r\n \r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n-\r\n+  const [mapdata, setmapdata] = useState(false);\r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n@@ -170,9 +170,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        repairmenForGoogleMap = response.data[\"hydra:member\"] || [];\r\n+        setmapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n         console.log(repairmenForGoogleMap);\r\n         console.log('USERS_REPAIRMAN_PUBLIC END');\r\n       },\r\n"
                },
                {
                    "date": 1707309273172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n       data: {},\r\n       success: (response) => {\r\n         setmapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n-        console.log(repairmenForGoogleMap);\r\n+        console.log(mapdata);\r\n         console.log('USERS_REPAIRMAN_PUBLIC END');\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707309312031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -432,9 +432,9 @@\n           isOlder={isOlder}\r\n         />\r\n       )\r\n       }\r\n-      <Newmap mapRepairMen={getRepairMen.repairmenForGoogleMap} >   </Newmap>\r\n+      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1707309436730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n-  const repairmenForGoogleMap=\"\";\r\n+ \r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n"
                },
                {
                    "date": 1707309452728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,11 +171,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         setmapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log('USERS_REPAIRMAN_PUBLIC BEGIN');\r\n-        console.log(mapdata);\r\n-        console.log('USERS_REPAIRMAN_PUBLIC END');\r\n+       \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707309500127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,8 +430,9 @@\n           isOlder={isOlder}\r\n         />\r\n       )\r\n       }\r\n+      console.log(mapdata);\r\n       <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n \r\n     </Container>\r\n \r\n"
                },
                {
                    "date": 1707309587394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,8 +430,9 @@\n           isOlder={isOlder}\r\n         />\r\n       )\r\n       }\r\n+      console.log(\"before newmap, mapdata baove\");\r\n       console.log(mapdata);\r\n       <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707309772301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,8 +334,10 @@\n     }\r\n     setFilter(cpFilter);\r\n   };\r\n \r\n+  console.log(mapdata);\r\n+\r\n   return (\r\n \r\n     <Container style={{ marginTop: 100 }}>\r\n \r\n@@ -430,10 +432,9 @@\n           isOlder={isOlder}\r\n         />\r\n       )\r\n       }\r\n-      console.log(\"before newmap, mapdata baove\");\r\n-      console.log(mapdata);\r\n+     \r\n       <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n \r\n     </Container>\r\n \r\n"
                },
                {
                    "date": 1707311137127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,10 +334,10 @@\n     }\r\n     setFilter(cpFilter);\r\n   };\r\n \r\n-  console.log(mapdata);\r\n \r\n+\r\n   return (\r\n \r\n     <Container style={{ marginTop: 100 }}>\r\n \r\n"
                },
                {
                    "date": 1707311206150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -334,10 +334,8 @@\n     }\r\n     setFilter(cpFilter);\r\n   };\r\n \r\n-\r\n-\r\n   return (\r\n \r\n     <Container style={{ marginTop: 100 }}>\r\n \r\n"
                },
                {
                    "date": 1707311316233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         setmapdata(response.data[\"hydra:member\"] || []);\r\n-       \r\n+        console.log( \"data for mapp were loaded\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707313117568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     parseFloat(localStorage.getItem(\"longitude\"))\r\n   );\r\n \r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setmapdata] = useState(false);\r\n+  const [mapdata, setMapdata] = useState(false);\r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n@@ -170,9 +170,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        setmapdata(response.data[\"hydra:member\"] || []);\r\n+        setmapData(response.data[\"hydra:member\"] || []);\r\n         console.log( \"data for mapp were loaded\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707313131027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        setmapData(response.data[\"hydra:member\"] || []);\r\n+        setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log( \"data for mapp were loaded\");\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707316426823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,12 +130,13 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [universe]);\r\n \r\n   useEffect(() => {\r\n+    getRepairMen();\r\n     getDeliveryModeTypes();\r\n     getService();\r\n     console.log('Use effect to be clean');\r\n-    getRepairMen();\r\n+    \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707327799538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,443 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+import { now } from \"moment\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [mapdata, setMapdata] = useState(false);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+ \r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \"time I send my request to server\");\r\n+    getRepairMen();\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    console.log('Use effect to be clean');\r\n+    \r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      //getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+ \r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        setMapdata(response.data[\"hydra:member\"] || []);\r\n+        console.log( now() + \"time when  serveur responses\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      {isOlder && <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <RangePrice>\r\n+            <label>Prix</label>\r\n+            {service &&\r\n+              service.minPrice &&\r\n+              service.maxPrice &&\r\n+              service.minPrice != service.maxPrice ? (\r\n+              <Nouislider\r\n+                range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                start={[service.minPrice, service.maxPrice]}\r\n+                connect={true}\r\n+                behaviour=\"tap\"\r\n+                step={1}\r\n+                tooltips={true}\r\n+                format={{ to, from }}\r\n+              />\r\n+            ) : (\r\n+              \"Sur devis\"\r\n+            )}\r\n+          </RangePrice>\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <SelectCat\r\n+            {...filter.deliveryModeTypes}\r\n+            onChangeCallback={(response) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.deliveryModeTypes.value = response;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={(e) => {\r\n+              getBenefits(false);\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      {isOlder && (\r\n+        <ArtListePrestationFiche\r\n+          universe={universe}\r\n+          service={service}\r\n+          benefits={benefits}\r\n+          filter={filter}\r\n+          setFilter={setFilter}\r\n+          isPending={isPending}\r\n+          isOlder={isOlder}\r\n+        />\r\n+      )\r\n+      }\r\n+     \r\n+      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707328052305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,443 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+import { now } from \"moment\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [mapdata, setMapdata] = useState(false);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+ \r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    console.log('Use effect to be clean');\r\n+    \r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      //getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+ \r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        setMapdata(response.data[\"hydra:member\"] || []);\r\n+        console.log( now() + \"time when  serveur responses\");\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      {isOlder && <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <RangePrice>\r\n+            <label>Prix</label>\r\n+            {service &&\r\n+              service.minPrice &&\r\n+              service.maxPrice &&\r\n+              service.minPrice != service.maxPrice ? (\r\n+              <Nouislider\r\n+                range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                start={[service.minPrice, service.maxPrice]}\r\n+                connect={true}\r\n+                behaviour=\"tap\"\r\n+                step={1}\r\n+                tooltips={true}\r\n+                format={{ to, from }}\r\n+              />\r\n+            ) : (\r\n+              \"Sur devis\"\r\n+            )}\r\n+          </RangePrice>\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <SelectCat\r\n+            {...filter.deliveryModeTypes}\r\n+            onChangeCallback={(response) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.deliveryModeTypes.value = response;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={(e) => {\r\n+              getBenefits(false);\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      {isOlder && (\r\n+        <ArtListePrestationFiche\r\n+          universe={universe}\r\n+          service={service}\r\n+          benefits={benefits}\r\n+          filter={filter}\r\n+          setFilter={setFilter}\r\n+          isPending={isPending}\r\n+          isOlder={isOlder}\r\n+        />\r\n+      )\r\n+      }\r\n+     \r\n+      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707328919131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,458 +174,18 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log( now() + \"time when  serveur responses\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n+        console.log('checjiin thez mpa mapRepairMen');\r\n+        Object.keys(mapdata).forEach(key => {\r\n+          console.log('tjre beautifi life:'+key, mapdata[key]);\r\n         });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      {isOlder && <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <RangePrice>\r\n-            <label>Prix</label>\r\n-            {service &&\r\n-              service.minPrice &&\r\n-              service.maxPrice &&\r\n-              service.minPrice != service.maxPrice ? (\r\n-              <Nouislider\r\n-                range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                start={[service.minPrice, service.maxPrice]}\r\n-                connect={true}\r\n-                behaviour=\"tap\"\r\n-                step={1}\r\n-                tooltips={true}\r\n-                format={{ to, from }}\r\n-              />\r\n-            ) : (\r\n-              \"Sur devis\"\r\n-            )}\r\n-          </RangePrice>\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <SelectCat\r\n-            {...filter.deliveryModeTypes}\r\n-            onChangeCallback={(response) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.deliveryModeTypes.value = response;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={(e) => {\r\n-              getBenefits(false);\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-      {isOlder && (\r\n-        <ArtListePrestationFiche\r\n-          universe={universe}\r\n-          service={service}\r\n-          benefits={benefits}\r\n-          filter={filter}\r\n-          setFilter={setFilter}\r\n-          isPending={isPending}\r\n-          isOlder={isOlder}\r\n-        />\r\n-      )\r\n-      }\r\n-     \r\n-      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-import { now } from \"moment\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState(false);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n- \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \"time I send my request to server\");\r\n-    getRepairMen();\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        setMapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log( now() + \"time when  serveur responses\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n \r\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n@@ -883,445 +443,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState(false);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n- \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getRepairMen();\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        setMapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log( \"data for mapp were loaded\");\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      {isOlder && <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <RangePrice>\r\n-            <label>Prix</label>\r\n-            {service &&\r\n-              service.minPrice &&\r\n-              service.maxPrice &&\r\n-              service.minPrice != service.maxPrice ? (\r\n-              <Nouislider\r\n-                range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                start={[service.minPrice, service.maxPrice]}\r\n-                connect={true}\r\n-                behaviour=\"tap\"\r\n-                step={1}\r\n-                tooltips={true}\r\n-                format={{ to, from }}\r\n-              />\r\n-            ) : (\r\n-              \"Sur devis\"\r\n-            )}\r\n-          </RangePrice>\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <SelectCat\r\n-            {...filter.deliveryModeTypes}\r\n-            onChangeCallback={(response) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.deliveryModeTypes.value = response;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={(e) => {\r\n-              getBenefits(false);\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-      {isOlder && (\r\n-        <ArtListePrestationFiche\r\n-          universe={universe}\r\n-          service={service}\r\n-          benefits={benefits}\r\n-          filter={filter}\r\n-          setFilter={setFilter}\r\n-          isPending={isPending}\r\n-          isOlder={isOlder}\r\n-        />\r\n-      )\r\n-      }\r\n-     \r\n-      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707329054275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,11 +174,11 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log('checjiin thez mpa mapRepairMen');\r\n+        console.log('success repairman public');\r\n         Object.keys(mapdata).forEach(key => {\r\n-          console.log('tjre beautifi life:'+key, mapdata[key]);\r\n+          console.log('beautifull:'+key, mapdata[key]);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329192723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(mapdata).forEach(key => {\r\n-          console.log('beautifull:'+key, mapdata[key]);\r\n+          console.log('beautifull:'+key, mapdata[key['SIRET']]);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329259127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(mapdata).forEach(key => {\r\n-          console.log('beautifull:'+key, mapdata[key['SIRET']]);\r\n+          console.log('beautifull:'+key, mapdata[key]);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329371026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(mapdata).forEach(key => {\r\n-          console.log('beautifull:'+key, mapdata[key]);\r\n+          console.log('beayt:'+key, mapdata[key]);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329515701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(mapdata).forEach(key => {\r\n-          console.log('beayt:'+key, mapdata[key]);\r\n+          console.log('beayt:'+key, key);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329643836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     parseFloat(localStorage.getItem(\"longitude\"))\r\n   );\r\n \r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState(false);\r\n+  const [mapdata, setMapdata] = useState([]);\r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n@@ -176,9 +176,9 @@\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(mapdata).forEach(key => {\r\n-          console.log('beayt:'+key, key);\r\n+          console.log('beayt:'+key, mapdata);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329718399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,10 +175,10 @@\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n-        Object.keys(mapdata).forEach(key => {\r\n-          console.log('beayt:'+key, mapdata);\r\n+        Object.keys(response.data).forEach(key => {\r\n+          console.log('beayt:'+key);\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329806487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,8 +177,10 @@\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(response.data).forEach(key => {\r\n           console.log('beayt:'+key);\r\n+          console.log('beayt:'+response.data['@id']);\r\n+          response.data\r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329853425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,11 +175,11 @@\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n-        Object.keys(response.data).forEach(key => {\r\n+        Object.keys(response.data).forEach(key, value => {\r\n           console.log('beayt:'+key);\r\n-          console.log('beayt:'+response.data['@id']);\r\n+          console.log('beayt:'value);\r\n           response.data\r\n         });\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707329858666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.keys(response.data).forEach(key, value => {\r\n           console.log('beayt:'+key);\r\n-          console.log('beayt:'value);\r\n+          console.log('beayt:'+value);\r\n           response.data\r\n         });\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707329963773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,12 +175,12 @@\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n-        Object.keys(response.data).forEach(key, value => {\r\n+        Object.values(response.data).forEach(value => {\r\n           console.log('beayt:'+key);\r\n           console.log('beayt:'+value);\r\n-          response.data\r\n+         \r\n         });\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707329970730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n         Object.values(response.data).forEach(value => {\r\n-          console.log('beayt:'+key);\r\n+     \r\n           console.log('beayt:'+value);\r\n          \r\n         });\r\n       },\r\n"
                },
                {
                    "date": 1707330095240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,13 +175,13 @@\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n-        Object.values(response.data).forEach(value => {\r\n+ \r\n      \r\n-          console.log('beayt:'+value);\r\n+          console.log('beayt:'+mapdata);\r\n          \r\n-        });\r\n+       ;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707330133093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n  \r\n      \r\n-          console.log('beayt:'+mapdata);\r\n+          console.log(mapdata);\r\n          \r\n        ;\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707330170253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n  \r\n      \r\n-          console.log(mapdata);\r\n+          console.log(response.data[\"hydra:member\"] );\r\n          \r\n        ;\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707330198787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n  \r\n      \r\n-          console.log(response.data[\"hydra:member\"] );\r\n+          console.log(response.data[] );\r\n          \r\n        ;\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707330314411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,11 +175,17 @@\n       data: {},\r\n       success: (response) => {\r\n         setMapdata(response.data[\"hydra:member\"] || []);\r\n         console.log('success repairman public');\r\n- \r\n-     \r\n-          console.log(response.data[] );\r\n+ /*\r\n+ \"@context\": \"/api/contexts/User\"\r\n+​\"@id\": \"/api/users/repairman\"\r\n+​\"@type\": \"hydra:Collection\"\r\n+​\"hydra:member\": Array(95) [ {…}, {…}, {…}, … ]\r\n+​0: Object { \"@id\": \"/api/user/1\", \"@type\": \"User\", username: \"superadmin@example.com\", … }\r\n+​​1: Object { \"@id\": \"/api/user/2\", \"@type\": \"User\", username: \"admin@example.com\", … }\r\n+   */  \r\n+          console.log(response.data [\"hydra:member\"]);\r\n          \r\n        ;\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707330857732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,14 @@\n ​0: Object { \"@id\": \"/api/user/1\", \"@type\": \"User\", username: \"superadmin@example.com\", … }\r\n ​​1: Object { \"@id\": \"/api/user/2\", \"@type\": \"User\", username: \"admin@example.com\", … }\r\n    */  \r\n           console.log(response.data [\"hydra:member\"]);\r\n-         \r\n+          \r\n+          response.data[\"hydra:member\"].forEach(myFunction);\r\n+          \r\n+          function myFunction(value) {\r\n+            console.log( value + \"<br>\");\r\n+          }\r\n        ;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707330946222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,10 +187,10 @@\n           console.log(response.data [\"hydra:member\"]);\r\n           \r\n           response.data[\"hydra:member\"].forEach(myFunction);\r\n           \r\n-          function myFunction(value) {\r\n-            console.log( value + \"<br>\");\r\n+          function myFunction(object) {\r\n+            console.log( object.username + \"<br>\");\r\n           }\r\n        ;\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707330989448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,9 +188,9 @@\n           \r\n           response.data[\"hydra:member\"].forEach(myFunction);\r\n           \r\n           function myFunction(object) {\r\n-            console.log( object.username + \"<br>\");\r\n+            console.log( object.username+ object.latitude+object.longitude + \"<br>\");\r\n           }\r\n        ;\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707331036512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,452 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+import { now } from \"moment\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [mapdata, setMapdata] = useState([]);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+ \r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    console.log('Use effect to be clean');\r\n+    \r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      //getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+ \r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        setMapdata(response.data[\"hydra:member\"] || []);\r\n+        console.log('success repairman public');\r\n+ \r\n+          console.log(mapdata[\"hydra:member\"]);\r\n+          \r\n+          response.data[\"hydra:member\"].forEach(myFunction);\r\n+          \r\n+          function myFunction(object) {\r\n+            console.log( object.username+ object.latitude+object.longitude + \"<br>\");\r\n+          }\r\n+       ;\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      {isOlder && <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <RangePrice>\r\n+            <label>Prix</label>\r\n+            {service &&\r\n+              service.minPrice &&\r\n+              service.maxPrice &&\r\n+              service.minPrice != service.maxPrice ? (\r\n+              <Nouislider\r\n+                range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                start={[service.minPrice, service.maxPrice]}\r\n+                connect={true}\r\n+                behaviour=\"tap\"\r\n+                step={1}\r\n+                tooltips={true}\r\n+                format={{ to, from }}\r\n+              />\r\n+            ) : (\r\n+              \"Sur devis\"\r\n+            )}\r\n+          </RangePrice>\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <SelectCat\r\n+            {...filter.deliveryModeTypes}\r\n+            onChangeCallback={(response) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.deliveryModeTypes.value = response;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={(e) => {\r\n+              getBenefits(false);\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      {isOlder && (\r\n+        <ArtListePrestationFiche\r\n+          universe={universe}\r\n+          service={service}\r\n+          benefits={benefits}\r\n+          filter={filter}\r\n+          setFilter={setFilter}\r\n+          isPending={isPending}\r\n+          isOlder={isOlder}\r\n+        />\r\n+      )\r\n+      }\r\n+     \r\n+      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707331688886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = false;\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n@@ -173,484 +174,36 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        setMapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log('success repairman public');\r\n- \r\n-          console.log(mapdata[\"hydra:member\"]);\r\n-          \r\n-          response.data[\"hydra:member\"].forEach(myFunction);\r\n-          \r\n-          function myFunction(object) {\r\n-            console.log( object.username+ object.latitude+object.longitude + \"<br>\");\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+          const cpFilter = { ...filter };\r\n+          cpFilter.repairMan.options = [\r\n+            { label: \"Tous les réparateurs\", value: \"\", showcases: [] },\r\n+          ];\r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            let showcases = [];\r\n+            for (let j = 0; j < o.showcases.length; j++) {\r\n+              showcases.push({\r\n+                label: o.showcases[j].name,\r\n+                value: o.showcases[j].id,\r\n+              });\r\n+            }\r\n+            cpFilter.repairMan.options.push({\r\n+              label: o.enterprise,\r\n+              value: o.id,\r\n+              showcases,\r\n+            });\r\n           }\r\n-       ;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-\r\n+          setFilter(cpFilter);\r\n+          setRepairMans(cpFilter.repairMan.options);\r\n         },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      {isOlder && <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <RangePrice>\r\n-            <label>Prix</label>\r\n-            {service &&\r\n-              service.minPrice &&\r\n-              service.maxPrice &&\r\n-              service.minPrice != service.maxPrice ? (\r\n-              <Nouislider\r\n-                range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                start={[service.minPrice, service.maxPrice]}\r\n-                connect={true}\r\n-                behaviour=\"tap\"\r\n-                step={1}\r\n-                tooltips={true}\r\n-                format={{ to, from }}\r\n-              />\r\n-            ) : (\r\n-              \"Sur devis\"\r\n-            )}\r\n-          </RangePrice>\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <SelectCat\r\n-            {...filter.deliveryModeTypes}\r\n-            onChangeCallback={(response) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.deliveryModeTypes.value = response;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={(e) => {\r\n-              getBenefits(false);\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-      {isOlder && (\r\n-        <ArtListePrestationFiche\r\n-          universe={universe}\r\n-          service={service}\r\n-          benefits={benefits}\r\n-          filter={filter}\r\n-          setFilter={setFilter}\r\n-          isPending={isPending}\r\n-          isOlder={isOlder}\r\n-        />\r\n-      )\r\n-      }\r\n-     \r\n-      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-import { now } from \"moment\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState([]);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n- \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        setMapdata(response.data[\"hydra:member\"] || []);\r\n-        console.log('success repairman public');\r\n- /*\r\n- \"@context\": \"/api/contexts/User\"\r\n-​\"@id\": \"/api/users/repairman\"\r\n-​\"@type\": \"hydra:Collection\"\r\n-​\"hydra:member\": Array(95) [ {…}, {…}, {…}, … ]\r\n-​0: Object { \"@id\": \"/api/user/1\", \"@type\": \"User\", username: \"superadmin@example.com\", … }\r\n-​​1: Object { \"@id\": \"/api/user/2\", \"@type\": \"User\", username: \"admin@example.com\", … }\r\n-   */  \r\n-          console.log(response.data [\"hydra:member\"]);\r\n-          \r\n-          response.data[\"hydra:member\"].forEach(myFunction);\r\n-          \r\n-          function myFunction(object) {\r\n-            console.log( object.username+ object.latitude+object.longitude + \"<br>\");\r\n-          }\r\n-       ;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n \r\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1707332219289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,17 +187,13 @@\n               showcases.push({\r\n                 label: o.showcases[j].name,\r\n                 value: o.showcases[j].id,\r\n               });\r\n+              console.log(o.showcases[j].name);\r\n             }\r\n-            cpFilter.repairMan.options.push({\r\n-              label: o.enterprise,\r\n-              value: o.id,\r\n-              showcases,\r\n-            });\r\n+          \r\n           }\r\n-          setFilter(cpFilter);\r\n-          setRepairMans(cpFilter.repairMan.options);\r\n+          \r\n         },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707332259414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,12 +175,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n-          const cpFilter = { ...filter };\r\n-          cpFilter.repairMan.options = [\r\n-            { label: \"Tous les réparateurs\", value: \"\", showcases: [] },\r\n-          ];\r\n+       \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n             let showcases = [];\r\n             for (let j = 0; j < o.showcases.length; j++) {\r\n"
                },
                {
                    "date": 1707332808389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,8 +186,9 @@\n                 value: o.showcases[j].id,\r\n               });\r\n               console.log(o.showcases[j].name);\r\n             }\r\n+           \r\n           \r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707333122533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n               showcases.push({\r\n                 label: o.showcases[j].name,\r\n                 value: o.showcases[j].id,\r\n               });\r\n-              console.log(o.showcases[j].name);\r\n+              console.log(o.showcases);\r\n             }\r\n            \r\n           \r\n           }\r\n"
                },
                {
                    "date": 1707333153467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n               showcases.push({\r\n                 label: o.showcases[j].name,\r\n                 value: o.showcases[j].id,\r\n               });\r\n-              console.log(o.showcases);\r\n+              console.log(showcases);\r\n             }\r\n            \r\n           \r\n           }\r\n"
                },
                {
                    "date": 1707333195334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,17 +178,9 @@\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n        \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n-            let showcases = [];\r\n-            for (let j = 0; j < o.showcases.length; j++) {\r\n-              showcases.push({\r\n-                label: o.showcases[j].name,\r\n-                value: o.showcases[j].id,\r\n-              });\r\n-              console.log(showcases);\r\n-            }\r\n-           \r\n+            console.log(o);\r\n           \r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707333233689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n        \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n-            console.log(o);\r\n+            console.log(o['User']);\r\n           \r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707333256206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n        \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n-            console.log(o['User']);\r\n+            console.log(arrayObj[i]['User']);\r\n           \r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707333276249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n        \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n-            console.log(arrayObj[i]['User']);\r\n+            console.log(o);\r\n           \r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707333313465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,10 +178,12 @@\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n        \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n-            console.log(o);\r\n-          \r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              console.log(val);\r\n+            });\r\n           }\r\n           \r\n         },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707380587006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n             \r\n             Object.values(o).forEach(val => {\r\n-              console.log(val);\r\n+              //console.log(val);\r\n             });\r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707489689161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n+import Newmap from '../../components/front/newmap.js';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1707491073328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newmap.js';\r\n+import Newmap from '../../components/front/newMap.js';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1707491086040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n+\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1707491190900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import Base from \"../../theme/front/base\";\r\n-\r\n+import Newmap from '../../components/front/newMap.js';\r\n import Nouislider from \"nouislider-react\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n"
                },
                {
                    "date": 1707497052165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,9 +443,9 @@\n         />\r\n       )\r\n       }\r\n      \r\n-      <Newmap mapRepairMen={mapdata} >   </Newmap>\r\n+      <Newmap  >   </Newmap>\r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1707497713821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,9 +443,9 @@\n         />\r\n       )\r\n       }\r\n      \r\n-      <Newmap  >   </Newmap>\r\n+      <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1707742558004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,9 +430,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      {isOlder && (\r\n+      {false && (\r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n           benefits={benefits}\r\n"
                },
                {
                    "date": 1707742587193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,9 +430,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      {false && (\r\n+      {isOlder===false && (\r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n           benefits={benefits}\r\n"
                },
                {
                    "date": 1707742593585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,9 +430,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      {isOlder===false && (\r\n+      {isOlder===true && (\r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n           benefits={benefits}\r\n"
                },
                {
                    "date": 1707742617949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,20 +430,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      {isOlder===true && (\r\n-        <ArtListePrestationFiche\r\n-          universe={universe}\r\n-          service={service}\r\n-          benefits={benefits}\r\n-          filter={filter}\r\n-          setFilter={setFilter}\r\n-          isPending={isPending}\r\n-          isOlder={isOlder}\r\n-        />\r\n-      )\r\n-      }\r\n+    \r\n      \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707742800596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n     getDeliveryModeTypes();\r\n-    getService();\r\n+    //getService();\r\n     console.log('Use effect to be clean');\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n@@ -190,9 +190,9 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n-\r\n+/*\r\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n@@ -219,8 +219,9 @@\n     } else {\r\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n+  */\r\n \r\n   const getBenefits = (refresh = false) => {\r\n     const idService = \"218\";\r\n     if (idService) {\r\n@@ -430,9 +431,20 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-    \r\n+      {isOlder && (\r\n+        <ArtListePrestationFiche\r\n+          universe={universe}\r\n+          service={service}\r\n+          benefits={benefits}\r\n+          filter={filter}\r\n+          setFilter={setFilter}\r\n+          isPending={isPending}\r\n+          isOlder={isOlder}\r\n+        />\r\n+      )\r\n+      }\r\n      \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707742906470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,442 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+import { now } from \"moment\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = false;\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [mapdata, setMapdata] = useState([]);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+ \r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    getDeliveryModeTypes();\r\n+    //getService();\r\n+    console.log('Use effect to be clean');\r\n+    \r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      //getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+ \r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              //console.log(val);\r\n+            });\r\n+          }\r\n+          \r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+/*\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+  */\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      {isOlder && <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <RangePrice>\r\n+            <label>Prix</label>\r\n+            {service &&\r\n+              service.minPrice &&\r\n+              service.maxPrice &&\r\n+              service.minPrice != service.maxPrice ? (\r\n+              <Nouislider\r\n+                range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                start={[service.minPrice, service.maxPrice]}\r\n+                connect={true}\r\n+                behaviour=\"tap\"\r\n+                step={1}\r\n+                tooltips={true}\r\n+                format={{ to, from }}\r\n+              />\r\n+            ) : (\r\n+              \"Sur devis\"\r\n+            )}\r\n+          </RangePrice>\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <SelectCat\r\n+            {...filter.deliveryModeTypes}\r\n+            onChangeCallback={(response) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.deliveryModeTypes.value = response;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={(e) => {\r\n+              getBenefits(false);\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+     \r\n+     \r\n+      <Newmap  ></Newmap>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707742937110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n+  const isOlder = true;\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n@@ -431,450 +431,8 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-     \r\n-     \r\n-      <Newmap  ></Newmap>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-import { now } from \"moment\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState([]);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n- \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    getDeliveryModeTypes();\r\n-    //getService();\r\n-    console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(val => {\r\n-              //console.log(val);\r\n-            });\r\n-          }\r\n-          \r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-/*\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-  */\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      {isOlder && <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <RangePrice>\r\n-            <label>Prix</label>\r\n-            {service &&\r\n-              service.minPrice &&\r\n-              service.maxPrice &&\r\n-              service.minPrice != service.maxPrice ? (\r\n-              <Nouislider\r\n-                range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                start={[service.minPrice, service.maxPrice]}\r\n-                connect={true}\r\n-                behaviour=\"tap\"\r\n-                step={1}\r\n-                tooltips={true}\r\n-                format={{ to, from }}\r\n-              />\r\n-            ) : (\r\n-              \"Sur devis\"\r\n-            )}\r\n-          </RangePrice>\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <SelectCat\r\n-            {...filter.deliveryModeTypes}\r\n-            onChangeCallback={(response) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.deliveryModeTypes.value = response;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={(e) => {\r\n-              getBenefits(false);\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n       {isOlder && (\r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n"
                },
                {
                    "date": 1707742991665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,41 +134,18 @@\n \r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n-    getDeliveryModeTypes();\r\n+    //getDeliveryModeTypes();\r\n     //getService();\r\n     console.log('Use effect to be clean');\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+  \r\n \r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n+\r\n  \r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n"
                },
                {
                    "date": 1707743365851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n+  const isOlder = false;\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n"
                },
                {
                    "date": 1707746988793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -408,9 +408,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      {isOlder && (\r\n+      \r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n           benefits={benefits}\r\n@@ -418,10 +418,10 @@\n           setFilter={setFilter}\r\n           isPending={isPending}\r\n           isOlder={isOlder}\r\n         />\r\n-      )\r\n-      }\r\n+      \r\n+      \r\n      \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707747009216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -408,9 +408,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      \r\n+      {isOlder && (\r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n           benefits={benefits}\r\n@@ -418,10 +418,10 @@\n           setFilter={setFilter}\r\n           isPending={isPending}\r\n           isOlder={isOlder}\r\n         />\r\n-      \r\n-      \r\n+      )\r\n+      }\r\n      \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707747243730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n-  const isOlder = false;\r\n+  const isOlder = true;\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n"
                },
                {
                    "date": 1707747374610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,10 +134,10 @@\n \r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n-    //getDeliveryModeTypes();\r\n-    //getService();\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n     console.log('Use effect to be clean');\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n@@ -167,9 +167,9 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n-/*\r\n+\r\n   const getService = () => {\r\n     //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n     //idService = slugIdService.split(\"-\").pop();\r\n     //const idService = slugIdService.split(\"-\").pop();\r\n@@ -196,10 +196,10 @@\n     } else {\r\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n-  */\r\n \r\n+\r\n   const getBenefits = (refresh = false) => {\r\n     const idService = \"218\";\r\n     if (idService) {\r\n       if (!placeIsSelected) {\r\n"
                },
                {
                    "date": 1707747494401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,35 @@\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n-  \r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpState = { ...state };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({\r\n+            value: arrayObj[i].id,\r\n+            checked: false,\r\n+            label: arrayObj[i].name,\r\n+            data: { ...arrayObj[i] },\r\n+            children: DeliveryModesContent,\r\n+            setChildren: (key, data) => setChildren(key, data),\r\n+            stateChildren: stateDeliveryModes(arrayObj[i].id),\r\n+          });\r\n+        }\r\n+        cpState.deliveryModes.options = options;\r\n+        setState(cpState);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n \r\n \r\n  \r\n   const getRepairMen = () => {\r\n"
                },
                {
                    "date": 1707747562855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,169 @@\n     console.log('Use effect to be clean');\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      placeholder: \"Univers\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      isSearchable: true,\r\n+    },\r\n+    category: {\r\n+      placeholder: \"catégorie(s)\",\r\n+      options: [{ label: \"Toutes les catégories\", value: \"\", subCategory: [] }],\r\n+      value: \"\",\r\n+      isSearchable: true,\r\n+    },\r\n+    subCategory: {\r\n+      placeholder: \"Sous catégorie(s)\",\r\n+      options: [{ label: \"Toutes les sous-catégories\", value: \"\" }],\r\n+      value: \"\",\r\n+      isSearchable: true,\r\n+    },\r\n+    service: {\r\n+      placeholder: \"Services\",\r\n+      options: [\r\n+        {\r\n+          label: \"Tous les services\",\r\n+          value: \"\",\r\n+          subCategory: [],\r\n+          benefits: [],\r\n+        },\r\n+      ],\r\n+      value: defaultService,\r\n+      isSearchable: true,\r\n+    },\r\n+    repairMan: {\r\n+      placeholder: \"Réparateurs\",\r\n+      options: [{ label: \"Tous les réparateurs\", value: \"\", showcases: [] }],\r\n+      value: \"\",\r\n+      isSearchable: true,\r\n+    },\r\n+    activeElement: \"\",\r\n+  });\r\n+  const [paramsUrlBenefit, setParamsUrlBenefit] = useState(\"\");\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [message, setMessage] = useState(null);\r\n+  const [showModal, setShowModal] = useState(false);\r\n+  const [dataModal, setDataModal] = useState({\r\n+    title: \"\",\r\n+    type: \"\",\r\n+  });\r\n \r\n+  const stateDeliveryModes = (parent) => {\r\n+    return {\r\n+      id: { value: \"\" },\r\n+      price: {\r\n+        name: `${parent}_price`,\r\n+        label: \"Prix\",\r\n+        type: \"text\",\r\n+        placeholder: \"Prix\",\r\n+        value: \"\",\r\n+        empty: true,\r\n+        min: 0,\r\n+        required: true,\r\n+        error: false,\r\n+        errorMessage: \"\",\r\n+        isNumber: true,\r\n+      },\r\n+      radius: {\r\n+        name: `${parent}_radius`,\r\n+        label: \"Rayon max\",\r\n+        value: false,\r\n+        options: [\r\n+          { value: false, label: \"France\" },\r\n+          { value: true, label: \"Rayon défini\" },\r\n+        ],\r\n+        required: false,\r\n+        error: false,\r\n+        errorMessage: \"\",\r\n+      },\r\n+      distance: {\r\n+        name: `${parent}_distance`,\r\n+        label: \"\",\r\n+        type: \"text\",\r\n+        value: \"\",\r\n+        empty: true,\r\n+        min: 1,\r\n+        max: 999,\r\n+        required: false,\r\n+        error: false,\r\n+        errorMessage: \"\",\r\n+        isNumber: true,\r\n+      },\r\n+    };\r\n+  };\r\n+\r\n+  const [state, setState] = useState({\r\n+    id: { value: null },\r\n+    typeService: {\r\n+      name: \"typeService\",\r\n+      label: \"Type de prestation\",\r\n+      value: \"\",\r\n+      options: [\r\n+        { value: \"forfait\", label: \"Forfait\" },\r\n+        { value: \"devis\", label: \"Devis\" },\r\n+      ],\r\n+      disabled: false,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+    },\r\n+    deliveryModes: {\r\n+      label: \"Modes de délivrance\",\r\n+      options: [],\r\n+      error: false,\r\n+      other: { typeService: null },\r\n+    },\r\n+    priceQuote: {\r\n+      type: \"text\",\r\n+      name: \"priceQuote\",\r\n+      placeholder: \"Prix\",\r\n+      value: \"\",\r\n+      required: false,\r\n+      empty: true,\r\n+      min: 0,\r\n+      max: 5000,\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      isNumber: true,\r\n+    },\r\n+    precisionQuote: {\r\n+      name: \"precisionQuote\",\r\n+      label: \"Précision de prise en charge du devis\",\r\n+      placeholder:\r\n+        \"Indiquez votre fonctionnement : déplacement à domicile, visioconférence etc..\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: false,\r\n+      as: \"textarea\",\r\n+    },\r\n+    motif: {\r\n+      name: \"motif\",\r\n+      label: \"\",\r\n+      placeholder: \"Motif de suppression\",\r\n+      value: \"\",\r\n+      error: false,\r\n+      errorMessage: \"\",\r\n+      required: true,\r\n+      type: \"text\",\r\n+    },\r\n+  });\r\n+\r\n+  const setChildren = (index, data) => {\r\n+    const cpState = { ...state };\r\n+    cpState.deliveryModes.options[index].stateChildren = data;\r\n+    cpState.deliveryModes.error = false;\r\n+    setState(cpState);\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    getBenefits();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [pageIndex, perPage]);\r\n+\r\n   const getDeliveryModeTypes = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: endPoints.DELIVERY_MODE_TYPES,\r\n"
                },
                {
                    "date": 1707747607302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,48 +140,9 @@\n     console.log('Use effect to be clean');\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      placeholder: \"Univers\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      isSearchable: true,\r\n-    },\r\n-    category: {\r\n-      placeholder: \"catégorie(s)\",\r\n-      options: [{ label: \"Toutes les catégories\", value: \"\", subCategory: [] }],\r\n-      value: \"\",\r\n-      isSearchable: true,\r\n-    },\r\n-    subCategory: {\r\n-      placeholder: \"Sous catégorie(s)\",\r\n-      options: [{ label: \"Toutes les sous-catégories\", value: \"\" }],\r\n-      value: \"\",\r\n-      isSearchable: true,\r\n-    },\r\n-    service: {\r\n-      placeholder: \"Services\",\r\n-      options: [\r\n-        {\r\n-          label: \"Tous les services\",\r\n-          value: \"\",\r\n-          subCategory: [],\r\n-          benefits: [],\r\n-        },\r\n-      ],\r\n-      value: defaultService,\r\n-      isSearchable: true,\r\n-    },\r\n-    repairMan: {\r\n-      placeholder: \"Réparateurs\",\r\n-      options: [{ label: \"Tous les réparateurs\", value: \"\", showcases: [] }],\r\n-      value: \"\",\r\n-      isSearchable: true,\r\n-    },\r\n-    activeElement: \"\",\r\n-  });\r\n+  \r\n   const [paramsUrlBenefit, setParamsUrlBenefit] = useState(\"\");\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [message, setMessage] = useState(null);\r\n   const [showModal, setShowModal] = useState(false);\r\n"
                },
                {
                    "date": 1707747625108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,17 +141,10 @@\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   \r\n-  const [paramsUrlBenefit, setParamsUrlBenefit] = useState(\"\");\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [message, setMessage] = useState(null);\r\n-  const [showModal, setShowModal] = useState(false);\r\n-  const [dataModal, setDataModal] = useState({\r\n-    title: \"\",\r\n-    type: \"\",\r\n-  });\r\n \r\n+\r\n   const stateDeliveryModes = (parent) => {\r\n     return {\r\n       id: { value: \"\" },\r\n       price: {\r\n"
                },
                {
                    "date": 1707747638728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,8 +141,9 @@\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   \r\n+  const [isPending, setIsPending] = useState(false);\r\n \r\n \r\n   const stateDeliveryModes = (parent) => {\r\n     return {\r\n"
                },
                {
                    "date": 1707747647607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,8 @@\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   \r\n-  const [isPending, setIsPending] = useState(false);\r\n \r\n \r\n   const stateDeliveryModes = (parent) => {\r\n     return {\r\n"
                },
                {
                    "date": 1707747712972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { useParams } from \"react-router-dom\";\r\n-\r\n+import DeliveryModesContent from \"../../../components/deliveryModesContent\";\r\n import { NotificationManager } from \"react-notifications\";\r\n import {\r\n   BackStyle,\r\n   BlocFilterStyle,\r\n"
                },
                {
                    "date": 1707747730132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { useParams } from \"react-router-dom\";\r\n-import DeliveryModesContent from \"../../../components/deliveryModesContent\";\r\n+import DeliveryModesContent from \"../../components/deliveryModesContent\";\r\n import { NotificationManager } from \"react-notifications\";\r\n import {\r\n   BackStyle,\r\n   BlocFilterStyle,\r\n"
                },
                {
                    "date": 1707747762108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n"
                },
                {
                    "date": 1707747781227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n"
                },
                {
                    "date": 1707747791816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  \r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n"
                },
                {
                    "date": 1707747821185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  \r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n"
                },
                {
                    "date": 1707747853684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n"
                },
                {
                    "date": 1707747887123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n+\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const [filter, setFilter] = useState({\r\n     deliveryModeTypes: {\r\n"
                },
                {
                    "date": 1707747926918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-\r\n+  const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const [filter, setFilter] = useState({\r\n     deliveryModeTypes: {\r\n"
                },
                {
                    "date": 1707748165628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -552,9 +552,9 @@\n         <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n           <SearchIcon /> Rechercher une prestation\r\n         </div>\r\n       )}\r\n-      {isOlder && (\r\n+  \r\n         <ArtListePrestationFiche\r\n           universe={universe}\r\n           service={service}\r\n           benefits={benefits}\r\n@@ -562,10 +562,10 @@\n           setFilter={setFilter}\r\n           isPending={isPending}\r\n           isOlder={isOlder}\r\n         />\r\n-      )\r\n-      }\r\n+  \r\n+  \r\n      \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707748322138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -547,25 +547,11 @@\n         <BackIcon />\r\n         <span>Retour à l'univers</span>\r\n       </BackStyle>\r\n       }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n+    \r\n+      \r\n   \r\n-        <ArtListePrestationFiche\r\n-          universe={universe}\r\n-          service={service}\r\n-          benefits={benefits}\r\n-          filter={filter}\r\n-          setFilter={setFilter}\r\n-          isPending={isPending}\r\n-          isOlder={isOlder}\r\n-        />\r\n-  \r\n-  \r\n      \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707748355157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -471,88 +471,8 @@\n \r\n   return (\r\n \r\n     <Container style={{ marginTop: 100 }}>\r\n-\r\n-      {isOlder && <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <RangePrice>\r\n-            <label>Prix</label>\r\n-            {service &&\r\n-              service.minPrice &&\r\n-              service.maxPrice &&\r\n-              service.minPrice != service.maxPrice ? (\r\n-              <Nouislider\r\n-                range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                start={[service.minPrice, service.maxPrice]}\r\n-                connect={true}\r\n-                behaviour=\"tap\"\r\n-                step={1}\r\n-                tooltips={true}\r\n-                format={{ to, from }}\r\n-              />\r\n-            ) : (\r\n-              \"Sur devis\"\r\n-            )}\r\n-          </RangePrice>\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <SelectCat\r\n-            {...filter.deliveryModeTypes}\r\n-            onChangeCallback={(response) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.deliveryModeTypes.value = response;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={(e) => {\r\n-              getBenefits(false);\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-    \r\n-      \r\n-  \r\n-     \r\n       <Newmap  ></Newmap>\r\n \r\n     </Container>\r\n \r\n"
                },
                {
                    "date": 1707748504682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,88 +40,16 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n \r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n \r\n+\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState([]);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+\r\n   const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n- \r\n+\r\n+\r\n   useEffect(() => {\r\n     if (universe.allUniverses) {\r\n       const id = slugIdUniverse.split(\"-\").pop();\r\n       if (id) {\r\n@@ -138,158 +66,20 @@\n \r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n+\r\n     console.log('Use effect to be clean');\r\n     \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   \r\n \r\n \r\n-  const stateDeliveryModes = (parent) => {\r\n-    return {\r\n-      id: { value: \"\" },\r\n-      price: {\r\n-        name: `${parent}_price`,\r\n-        label: \"Prix\",\r\n-        type: \"text\",\r\n-        placeholder: \"Prix\",\r\n-        value: \"\",\r\n-        empty: true,\r\n-        min: 0,\r\n-        required: true,\r\n-        error: false,\r\n-        errorMessage: \"\",\r\n-        isNumber: true,\r\n-      },\r\n-      radius: {\r\n-        name: `${parent}_radius`,\r\n-        label: \"Rayon max\",\r\n-        value: false,\r\n-        options: [\r\n-          { value: false, label: \"France\" },\r\n-          { value: true, label: \"Rayon défini\" },\r\n-        ],\r\n-        required: false,\r\n-        error: false,\r\n-        errorMessage: \"\",\r\n-      },\r\n-      distance: {\r\n-        name: `${parent}_distance`,\r\n-        label: \"\",\r\n-        type: \"text\",\r\n-        value: \"\",\r\n-        empty: true,\r\n-        min: 1,\r\n-        max: 999,\r\n-        required: false,\r\n-        error: false,\r\n-        errorMessage: \"\",\r\n-        isNumber: true,\r\n-      },\r\n-    };\r\n-  };\r\n \r\n-  const [state, setState] = useState({\r\n-    id: { value: null },\r\n-    typeService: {\r\n-      name: \"typeService\",\r\n-      label: \"Type de prestation\",\r\n-      value: \"\",\r\n-      options: [\r\n-        { value: \"forfait\", label: \"Forfait\" },\r\n-        { value: \"devis\", label: \"Devis\" },\r\n-      ],\r\n-      disabled: false,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-    },\r\n-    deliveryModes: {\r\n-      label: \"Modes de délivrance\",\r\n-      options: [],\r\n-      error: false,\r\n-      other: { typeService: null },\r\n-    },\r\n-    priceQuote: {\r\n-      type: \"text\",\r\n-      name: \"priceQuote\",\r\n-      placeholder: \"Prix\",\r\n-      value: \"\",\r\n-      required: false,\r\n-      empty: true,\r\n-      min: 0,\r\n-      max: 5000,\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      isNumber: true,\r\n-    },\r\n-    precisionQuote: {\r\n-      name: \"precisionQuote\",\r\n-      label: \"Précision de prise en charge du devis\",\r\n-      placeholder:\r\n-        \"Indiquez votre fonctionnement : déplacement à domicile, visioconférence etc..\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: false,\r\n-      as: \"textarea\",\r\n-    },\r\n-    motif: {\r\n-      name: \"motif\",\r\n-      label: \"\",\r\n-      placeholder: \"Motif de suppression\",\r\n-      value: \"\",\r\n-      error: false,\r\n-      errorMessage: \"\",\r\n-      required: true,\r\n-      type: \"text\",\r\n-    },\r\n-  });\r\n \r\n-  const setChildren = (index, data) => {\r\n-    const cpState = { ...state };\r\n-    cpState.deliveryModes.options[index].stateChildren = data;\r\n-    cpState.deliveryModes.error = false;\r\n-    setState(cpState);\r\n-  };\r\n \r\n-  useEffect(() => {\r\n-    getBenefits();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [pageIndex, perPage]);\r\n \r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpState = { ...state };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({\r\n-            value: arrayObj[i].id,\r\n-            checked: false,\r\n-            label: arrayObj[i].name,\r\n-            data: { ...arrayObj[i] },\r\n-            children: DeliveryModesContent,\r\n-            setChildren: (key, data) => setChildren(key, data),\r\n-            stateChildren: stateDeliveryModes(arrayObj[i].id),\r\n-          });\r\n-        }\r\n-        cpState.deliveryModes.options = options;\r\n-        setState(cpState);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n  \r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n@@ -342,134 +132,14 @@\n     }\r\n   };\r\n \r\n \r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n \r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n \r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n \r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n+ \r\n+ \r\n \r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n   return (\r\n \r\n     <Container style={{ marginTop: 100 }}>\r\n       <Newmap  ></Newmap>\r\n"
                },
                {
                    "date": 1707748788726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,41 +102,12 @@\n       },\r\n     });\r\n   };\r\n \r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n+  \r\n \r\n \r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n \r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n  \r\n  \r\n \r\n   return (\r\n"
                },
                {
                    "date": 1707748919328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-\r\n+import {RepairManlatlng} from './repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n@@ -39,32 +39,19 @@\n   });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n+  \r\n \r\n \r\n \r\n \r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n \r\n-  const universe = useSelector((state) => state.universe);\r\n \r\n \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n \r\n+  \r\n+\r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n \r\n"
                },
                {
                    "date": 1707748971992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from './repairManPositions.js'\r\n+import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707749002215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n+import {RepairManlatlng} from '../../../components/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707749012265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../../components/repairManPositions.js'\r\n+import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707749023343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n+import {RepairManlatlng} from '../components/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707749031099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../components/repairManPositions.js'\r\n+import {RepairManlatlng} from '../../../components/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707749042265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,108 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import DeliveryModesContent from \"../../components/deliveryModesContent\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+import { now } from \"moment\";\r\n+import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+\r\n+    console.log('Use effect to be clean');\r\n+    \r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+ \r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              //console.log(val);\r\n+            });\r\n+          }\r\n+          \r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+ \r\n+ \r\n+\r\n+  return (\r\n+\r\n+    <Container style={{ marginTop: 100 }}>\r\n+      <Newmap  ></Newmap>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707749301600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,128 +89,10 @@\n       },\r\n     });\r\n   };\r\n \r\n-  \r\n-\r\n-\r\n-\r\n- \r\n- \r\n-\r\n   return (\r\n-\r\n     <Container style={{ marginTop: 100 }}>\r\n       <Newmap  ></Newmap>\r\n-\r\n     </Container>\r\n-\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import DeliveryModesContent from \"../../components/deliveryModesContent\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../../components/repairManPositions.js'\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  \r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-\r\n-    console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(val => {\r\n-              //console.log(val);\r\n-            });\r\n-          }\r\n-          \r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n- \r\n- \r\n-\r\n-  return (\r\n-\r\n-    <Container style={{ marginTop: 100 }}>\r\n-      <Newmap  ></Newmap>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707749379000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,19 @@\n import React, { useEffect, useState } from \"react\";\r\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import DeliveryModesContent from \"../../components/deliveryModesContent\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n+\r\n+\r\n import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n+\r\n import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+;\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n+\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n+\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n@@ -39,26 +26,16 @@\n   });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n-  \r\n \r\n \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n   \r\n \r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n-\r\n     console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n   \r\n \r\n \r\n"
                },
                {
                    "date": 1707749418290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,11 @@\n import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-\r\n-\r\n import Newmap from '../../components/front/newMap.js';\r\n-\r\n import \"nouislider/distribute/nouislider.css\";\r\n-;\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-\r\n import { now } from \"moment\";\r\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n"
                },
                {
                    "date": 1707749520645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,36 +20,23 @@\n   });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-  \r\n-\r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n   }, []);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n  \r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n-            \r\n             Object.values(o).forEach(val => {\r\n               //console.log(val);\r\n             });\r\n           }\r\n"
                },
                {
                    "date": 1707749834262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,19 @@\n import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n+\r\n+\r\n import Newmap from '../../components/front/newMap.js';\r\n+\r\n import \"nouislider/distribute/nouislider.css\";\r\n+;\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n+\r\n import { now } from \"moment\";\r\n-\r\n+import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n@@ -20,23 +26,36 @@\n   });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n+\r\n+\r\n+  \r\n+\r\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n   }, []);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n  \r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n+            \r\n             Object.values(o).forEach(val => {\r\n               //console.log(val);\r\n             });\r\n           }\r\n"
                },
                {
                    "date": 1707749879736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,8 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n-      <Newmap  ></Newmap>\r\n+      <Newmap  RepairManlatlng ></Newmap>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707749988771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,8 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n-      <Newmap  RepairManlatlng ></Newmap>\r\n+      <Newmap  repM = {RepairManlatlng} ></Newmap>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707750042779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n \r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../components/repairManPositions.js'\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707750069532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,15 @@\n import React, { useEffect, useState } from \"react\";\r\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-\r\n-\r\n+import { now } from \"moment\";\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n import Newmap from '../../components/front/newMap.js';\r\n-\r\n import \"nouislider/distribute/nouislider.css\";\r\n-;\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n \r\n-import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n"
                },
                {
                    "date": 1707750306615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n"
                },
                {
                    "date": 1707750790763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+\r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n@@ -64,8 +64,8 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n-      <Newmap  repM = {RepairManlatlng} ></Newmap>\r\n+      <Newmap ></Newmap>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707750875029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n"
                },
                {
                    "date": 1707751852686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,85 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+  }, []);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.id} row={row}  />\r\n+  );\r\n+\r\n+  const repairList = RepairManlatlng.map((position,i) => {\r\n+     \r\n+    \r\n+    \r\n+  \r\n+  }\r\n+\r\n+\r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              //console.log(val);\r\n+            });\r\n+          }\r\n+          \r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+     \r\n+      <Newmap >\r\n+     \r\n+      </Newmap>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707751860890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,10 @@\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.id} row={row}  />\r\n   );\r\n \r\n-  const repairList = RepairManlatlng.map((position,i) => {\r\n-     \r\n-    \r\n-    \r\n-  \r\n-  }\r\n+ \r\n \r\n-\r\n   const getRepairMen = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n@@ -82,76 +76,4 @@\n       </Newmap>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-  \r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-  }, []);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(val => {\r\n-              //console.log(val);\r\n-            });\r\n-          }\r\n-          \r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-      <Newmap ></Newmap>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707751914355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n"
                },
                {
                    "date": 1707751930115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,13 @@\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n-\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n+\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n"
                },
                {
                    "date": 1707752119436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,33 @@\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.id} row={row}  />\r\n   );\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n \r\n+    return data.map(rowRenderservices);\r\n+  };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n     connector({\r\n"
                },
                {
                    "date": 1707752132407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n \r\n-    return data.map(rowRenderservices);\r\n+    return data.map(rowRenderArt);\r\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n"
                },
                {
                    "date": 1707752178287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n   useEffect(() => {\r\n     console.log( now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n+    showData();\r\n   }, []);\r\n   \r\n \r\n \r\n"
                },
                {
                    "date": 1707752206586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n     <ArtItem key={row.id} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n+    console.log(data);\r\n     if (data === false)\r\n       return (\r\n         <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n           Chargement...\r\n"
                },
                {
                    "date": 1707752261753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n     <ArtItem key={row.id} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n+    console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n         <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n"
                },
                {
                    "date": 1707752421984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.lat} row={row}  />\r\n+  );\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    console.log(\"RepairManlatlng is pending\");\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    return data.map(rowRenderArt);\r\n+  };\r\n+ \r\n+\r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              //console.log(val);\r\n+            });\r\n+          }\r\n+          \r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+     \r\n+      <Newmap >\r\n+     \r\n+      </Newmap>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707752469086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n+    console.log(\"row ->\"+row);\r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n@@ -103,110 +104,4 @@\n       </Newmap>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-  \r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.id} row={row}  />\r\n-  );\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    console.log(\"RepairManlatlng is pending\");\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    return data.map(rowRenderArt);\r\n-  };\r\n- \r\n-\r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(val => {\r\n-              //console.log(val);\r\n-            });\r\n-          }\r\n-          \r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-     \r\n-      <Newmap >\r\n-     \r\n-      </Newmap>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707752484793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-    console.log(\"row ->\"+row);\r\n+    console.log(\"row ->\"+row)\r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n"
                },
                {
                    "date": 1707752512141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-    console.log(\"row ->\"+row)\r\n+    console.log(\"row ->\".row);\r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n"
                },
                {
                    "date": 1707752531118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-    console.log(\"row ->\".row);\r\n+    console.log(\"row ->\",row)\r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n"
                },
                {
                    "date": 1707752556203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-    console.log(\"row ->\",row)\r\n+    console.log(row)\r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n"
                },
                {
                    "date": 1707752589402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-    console.log(row)\r\n+    console.log(row),\r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n"
                },
                {
                    "date": 1707752645644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-    console.log(row),\r\n+  \r\n     <ArtItem key={row.lat} row={row}  />\r\n   );\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n"
                },
                {
                    "date": 1707752686171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n   const rowRenderArt = (row) => (\r\n   \r\n     <ArtItem key={row.lat} row={row}  />\r\n-  );\r\n+    {console.log(\"ddd\"  );}\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n"
                },
                {
                    "date": 1707752694651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n   const rowRenderArt = (row) => (\r\n   \r\n     <ArtItem key={row.lat} row={row}  />\r\n-    {console.log(\"ddd\"  );}\r\n+    {{console.log(\"ddd\"  );}}\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n"
                },
                {
                    "date": 1707752714973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,11 +40,10 @@\n \r\n \r\n \r\n   const rowRenderArt = (row) => (\r\n-  \r\n-    <ArtItem key={row.lat} row={row}  />\r\n-    {{console.log(\"ddd\"  );}}\r\n+     <ArtItem key={row.lat} row={row}  />\r\n+  ) \r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n"
                },
                {
                    "date": 1707752731575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n \r\n \r\n   const rowRenderArt = (row) => (\r\n      <ArtItem key={row.lat} row={row}  />\r\n+     console.log(\"ddd\");\r\n   ) \r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     console.log(\"RepairManlatlng is pending\");\r\n"
                },
                {
                    "date": 1707752757780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n \r\n \r\n   const rowRenderArt = (row) => (\r\n      <ArtItem key={row.lat} row={row}  />\r\n-     console.log(\"ddd\");\r\n+\r\n   ) \r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     console.log(\"RepairManlatlng is pending\");\r\n"
                },
                {
                    "date": 1707752958258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,12 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n \r\n-    return data.map(rowRenderArt);\r\n+    console.log( data.map(rowRenderArt));\r\n+    console.log( data.map(rowRenderArt));\r\n+    console.log( data.map(rowRenderArt));\r\n+    return (rowRenderArt);\r\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n"
                },
                {
                    "date": 1707753033990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,11 +68,9 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n \r\n-    console.log( data.map(rowRenderArt));\r\n-    console.log( data.map(rowRenderArt));\r\n-    console.log( data.map(rowRenderArt));\r\n+    console.log( rowRenderArt);\r\n     return (rowRenderArt);\r\n   };\r\n  \r\n \r\n"
                },
                {
                    "date": 1707753167466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,10 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n \r\n-    console.log( rowRenderArt);\r\n-    return (rowRenderArt);\r\n+    console.log(data.map(rowRenderArt));\r\n+    return (data.map(rowRenderArt));\r\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n"
                },
                {
                    "date": 1707753527343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,7 +102,10 @@\n      \r\n       <Newmap >\r\n      \r\n       </Newmap>\r\n+      <Row style={props.isLoading ? { padding: \"50px 0\" } : null}>\r\n+        {props.isLoading ? <Loader /> : showData()}\r\n+      </Row>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707753561572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,10 @@\n      \r\n       <Newmap >\r\n      \r\n       </Newmap>\r\n-      <Row style={props.isLoading ? { padding: \"50px 0\" } : null}>\r\n-        {props.isLoading ? <Loader /> : showData()}\r\n+      <Row>\r\n+         showData()\r\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707753576602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,12 @@\n      \r\n       <Newmap >\r\n      \r\n       </Newmap>\r\n+      <Col>\r\n       <Row>\r\n          showData()\r\n       </Row>\r\n+      </Col>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707753632980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n+import { Row, Col} from \"react-bootstrap\";\r\n \r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n"
                },
                {
                    "date": 1707753716621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n      \r\n       </Newmap>\r\n       <Col>\r\n       <Row>\r\n-         showData()\r\n+         {showData()}\r\n       </Row>\r\n       </Col>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1707759741230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n             \r\n             Object.values(o).forEach(val => {\r\n-              //console.log(val);\r\n+              console.log(val);\r\n             });\r\n           }\r\n           \r\n         },\r\n"
                },
                {
                    "date": 1707797982330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col} from \"react-bootstrap\";\r\n+\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+     <ArtItem key={row.lat} row={row}  />\r\n+\r\n+  ) \r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    console.log(\"RepairManlatlng is pending\");\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    console.log(data.map(rowRenderArt));\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+ \r\n+\r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       /*\r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              console.log(val);\r\n+            });\r\n+          }\r\n+         */\r\n+        console.log(response.data); \r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+     \r\n+      <Newmap >\r\n+     \r\n+      </Newmap>\r\n+      <Col>\r\n+      <Row>\r\n+         {showData()}\r\n+      </Row>\r\n+      </Col>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707798247673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,17 +81,17 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       /*\r\n+       \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let o = arrayObj[i];\r\n             \r\n-            Object.values(o).forEach(val => {\r\n-              console.log(val);\r\n+            Object.values(o).forEach(key, val => {\r\n+              console.log(key,\"::\",val);\r\n             });\r\n           }\r\n-         */\r\n+         \r\n         console.log(response.data); \r\n         },\r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -112,118 +112,4 @@\n       </Col>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col} from \"react-bootstrap\";\r\n-\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-  \r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-     <ArtItem key={row.lat} row={row}  />\r\n-\r\n-  ) \r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    console.log(\"RepairManlatlng is pending\");\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    console.log(data.map(rowRenderArt));\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n- \r\n-\r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(val => {\r\n-              console.log(val);\r\n-            });\r\n-          }\r\n-          \r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-     \r\n-      <Newmap >\r\n-     \r\n-      </Newmap>\r\n-      <Col>\r\n-      <Row>\r\n-         {showData()}\r\n-      </Row>\r\n-      </Col>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707798342375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,14 +83,16 @@\n       success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n        \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(key, val => {\r\n-              console.log(key,\"::\",val);\r\n+            let obj = arrayObj[i];\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              console.log(key, value);\r\n             });\r\n+         \r\n           }\r\n+          \r\n          \r\n         console.log(response.data); \r\n         },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707799105068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,20 +75,36 @@\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n+    const  fieldToRetrieve = [\r\n+      'firstName',\r\n+      'lastName',\r\n+      'email',\r\n+      'entreprise',\r\n+      'gender',\r\n+      'postalCode',\r\n+      'city', \r\n+      'latitude',\r\n+      'longitude'\r\n+\r\n+    ];\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n           const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n+          \r\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let obj = arrayObj[i];\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n-              console.log(key, value);\r\n+    \r\n+             if (fieldToRetrieve.find(value)) \r\n+                console.log('selected->',key,value);\r\n+             else\r\n+                console.log('no retrieved:',key, value);\r\n             });\r\n          \r\n           }\r\n           \r\n"
                },
                {
                    "date": 1707799671358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,20 +75,21 @@\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n-    const  fieldToRetrieve = [\r\n-      'firstName',\r\n-      'lastName',\r\n-      'email',\r\n-      'entreprise',\r\n-      'gender',\r\n-      'postalCode',\r\n-      'city', \r\n-      'latitude',\r\n-      'longitude'\r\n-\r\n+    const dataArray = [\r\n+      {\"firstName\":\"David\"},\r\n+      {\"lastName\":\"New York\"},\r\n+      {\"email\":\"Jenna\"},\r\n+      {\"entreprise\":\"David\"},\r\n+      {\"gender\":\"New York\"},\r\n+      {\"postalCode\":\"Jenna\"},\r\n+      {\"city\":\"David\"},\r\n+      {\"latitude\":\"New York\"},\r\n+      {\"longitude\":\"Jenna\"}\r\n+    \r\n     ];\r\n+  \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -104,9 +105,13 @@\n                 console.log('selected->',key,value);\r\n              else\r\n                 console.log('no retrieved:',key, value);\r\n             });\r\n-         \r\n+            \r\n+\r\n+            // name exists on the object\r\n+            console.log(dataArray.filter(item => key in item));\r\n+            \r\n           }\r\n           \r\n          \r\n         console.log(response.data); \r\n"
                },
                {
                    "date": 1707800333241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,23 +99,20 @@\n           for (let i = 0; i < arrayObj.length; i++) {\r\n             let obj = arrayObj[i];\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n-    \r\n-             if (fieldToRetrieve.find(value)) \r\n-                console.log('selected->',key,value);\r\n-             else\r\n-                console.log('no retrieved:',key, value);\r\n-            });\r\n+              // Check if key exists\r\n+              let hasKey = dataArray.hasOwnProperty(key); \r\n+              if (hasKey) {\r\n+                console.log('This key exists.');\r\n+              } else {\r\n+                console.log('This key does not exist.');\r\n+              }\r\n+              console.log( key, value);\r\n             \r\n-\r\n-            // name exists on the object\r\n-            console.log(dataArray.filter(item => key in item));\r\n-            \r\n           }\r\n           \r\n          \r\n-        console.log(response.data); \r\n         },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707800344678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n               console.log( key, value);\r\n             \r\n           }\r\n           \r\n-         \r\n+        }\r\n         },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707800388163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,11 +108,11 @@\n                 console.log('This key does not exist.');\r\n               }\r\n               console.log( key, value);\r\n             \r\n+            }\r\n+          \r\n           }\r\n-          \r\n-        }\r\n         },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n"
                },
                {
                    "date": 1707800436141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n                 console.log('This key does not exist.');\r\n               }\r\n               console.log( key, value);\r\n             \r\n-            }\r\n+            })\r\n           \r\n           }\r\n         },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707800718270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,20 +75,20 @@\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n-    const dataArray = [\r\n-      {\"firstName\":\"David\"},\r\n-      {\"lastName\":\"New York\"},\r\n-      {\"email\":\"Jenna\"},\r\n-      {\"entreprise\":\"David\"},\r\n-      {\"gender\":\"New York\"},\r\n-      {\"postalCode\":\"Jenna\"},\r\n-      {\"city\":\"David\"},\r\n-      {\"latitude\":\"New York\"},\r\n-      {\"longitude\":\"Jenna\"}\r\n+    let dataArray {\r\n+      firstName:\"David\",\r\n+      lastName:\"New York\",\r\n+      email:\"Jenna\",\r\n+      entreprise:\"David\",\r\n+      gender:\"New York\",\r\n+      postalCode:\"Jenna\",\r\n+      city:\"David\",\r\n+      latitude:\"New York\",\r\n+      longitude:\"Jenna\"\r\n+    }\r\n     \r\n-    ];\r\n   \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n@@ -104,9 +104,9 @@\n               let hasKey = dataArray.hasOwnProperty(key); \r\n               if (hasKey) {\r\n                 console.log('This key exists.');\r\n               } else {\r\n-                console.log('This key does not exist.');\r\n+                console.log('not found exist.');\r\n               }\r\n               console.log( key, value);\r\n             \r\n             })\r\n"
                },
                {
                    "date": 1707800749226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n   };\r\n  \r\n \r\n   const getRepairMen = () => {\r\n-    let dataArray {\r\n+    let dataArray = {\r\n       firstName:\"David\",\r\n       lastName:\"New York\",\r\n       email:\"Jenna\",\r\n       entreprise:\"David\",\r\n"
                },
                {
                    "date": 1707800809796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,13 +102,13 @@\n               const [key, value] = entry;\r\n               // Check if key exists\r\n               let hasKey = dataArray.hasOwnProperty(key); \r\n               if (hasKey) {\r\n-                console.log('This key exists.');\r\n+                console.log( key, value);\r\n               } else {\r\n-                console.log('not found exist.');\r\n+                //console.log('not found exist.');\r\n               }\r\n-              console.log( key, value);\r\n+              \r\n             \r\n             })\r\n           \r\n           }\r\n"
                },
                {
                    "date": 1707800848287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,11 +106,10 @@\n                 console.log( key, value);\r\n               } else {\r\n                 //console.log('not found exist.');\r\n               }\r\n-              \r\n-            \r\n             })\r\n+            console.log(arrayObj);\r\n           \r\n           }\r\n         },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707801084057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,137 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col} from \"react-bootstrap\";\r\n+\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+     <ArtItem key={row.lat} row={row}  />\r\n+\r\n+  ) \r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    console.log(\"RepairManlatlng is pending\");\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    console.log(data.map(rowRenderArt));\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+ \r\n+\r\n+  const getRepairMen = () => {\r\n+    let dataArray = {\r\n+      username:\"\",\r\n+      firstName:\"David\",\r\n+      lastName:\"New York\",\r\n+      email:\"Jenna\",\r\n+      entreprise:\"David\",\r\n+      gender:\"New York\",\r\n+      postalCode:\"Jenna\",\r\n+      city:\"David\",\r\n+      latitude:\"New York\",\r\n+      longitude:\"Jenna\",\r\n+      picture:\"true\"\r\n+    }\r\n+    \r\n+  \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+          \r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let obj = arrayObj[i];\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              // Check if key exists\r\n+              let hasKey = dataArray.hasOwnProperty(key); \r\n+              if (hasKey) {\r\n+                console.log( key, value);\r\n+              } else {\r\n+                //console.log('not found exist.');\r\n+              }\r\n+            })\r\n+            \r\n+          \r\n+          }\r\n+          console.log(arrayObj);\r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+     \r\n+      <Newmap >\r\n+     \r\n+      </Newmap>\r\n+      <Col>\r\n+      <Row>\r\n+         {showData()}\r\n+      </Row>\r\n+      </Col>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707801679817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n import { Row, Col} from \"react-bootstrap\";\r\n@@ -35,13 +34,8 @@\n     console.log('Use effect to be clean');\r\n     showData();\r\n   }, []);\r\n   \r\n-\r\n-\r\n-\r\n-\r\n-\r\n   const rowRenderArt = (row) => (\r\n      <ArtItem key={row.lat} row={row}  />\r\n \r\n   ) \r\n@@ -76,21 +70,25 @@\n  \r\n \r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n-      username:\"\",\r\n-      firstName:\"David\",\r\n-      lastName:\"New York\",\r\n-      email:\"Jenna\",\r\n-      entreprise:\"David\",\r\n+      username:\"username\",\r\n+      firstName:\"firstname\",\r\n+      lastName:\"lastname\",\r\n+      email:\"email\",\r\n+      entreprise:\"label\",\r\n       gender:\"New York\",\r\n-      postalCode:\"Jenna\",\r\n-      city:\"David\",\r\n-      latitude:\"New York\",\r\n-      longitude:\"Jenna\",\r\n-      picture:\"true\"\r\n+      postalCode:\"postalcode\",\r\n+      city:\"city_code\",\r\n+      latitude:\"lat\",\r\n+      longitude:\"lng\",\r\n+      picture:\"picture\",\r\n+      description:\"description\", \r\n+      facebook:\"facebook\",\r\n+      instagram:\"instagram\"\r\n     }\r\n-    \r\n+    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n+     \r\n   \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n@@ -104,9 +102,9 @@\n               const [key, value] = entry;\r\n               // Check if key exists\r\n               let hasKey = dataArray.hasOwnProperty(key); \r\n               if (hasKey) {\r\n-                console.log( key, value);\r\n+                console.log( dataArray[key].value, key, value);\r\n               } else {\r\n                 //console.log('not found exist.');\r\n               }\r\n             })\r\n@@ -134,138 +132,4 @@\n       </Col>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col} from \"react-bootstrap\";\r\n-\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-  \r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-     <ArtItem key={row.lat} row={row}  />\r\n-\r\n-  ) \r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    console.log(\"RepairManlatlng is pending\");\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    console.log(data.map(rowRenderArt));\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n- \r\n-\r\n-  const getRepairMen = () => {\r\n-    let dataArray = {\r\n-      firstName:\"David\",\r\n-      lastName:\"New York\",\r\n-      email:\"Jenna\",\r\n-      entreprise:\"David\",\r\n-      gender:\"New York\",\r\n-      postalCode:\"Jenna\",\r\n-      city:\"David\",\r\n-      latitude:\"New York\",\r\n-      longitude:\"Jenna\"\r\n-    }\r\n-    \r\n-  \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-          \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let obj = arrayObj[i];\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              // Check if key exists\r\n-              let hasKey = dataArray.hasOwnProperty(key); \r\n-              if (hasKey) {\r\n-                console.log( key, value);\r\n-              } else {\r\n-                //console.log('not found exist.');\r\n-              }\r\n-            })\r\n-            console.log(arrayObj);\r\n-          \r\n-          }\r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-     \r\n-      <Newmap >\r\n-     \r\n-      </Newmap>\r\n-      <Col>\r\n-      <Row>\r\n-         {showData()}\r\n-      </Row>\r\n-      </Col>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707801723932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n               const [key, value] = entry;\r\n               // Check if key exists\r\n               let hasKey = dataArray.hasOwnProperty(key); \r\n               if (hasKey) {\r\n-                console.log( dataArray[key].value, key, value);\r\n+                console.log( dataArray.find[key].value, key, value);\r\n               } else {\r\n                 //console.log('not found exist.');\r\n               }\r\n             })\r\n"
                },
                {
                    "date": 1707801805220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n               const [key, value] = entry;\r\n               // Check if key exists\r\n               let hasKey = dataArray.hasOwnProperty(key); \r\n               if (hasKey) {\r\n-                console.log( dataArray.find[key].value, key, value);\r\n+                console.log( dataArray[key].value, key, value);\r\n               } else {\r\n                 //console.log('not found exist.');\r\n               }\r\n             })\r\n"
                },
                {
                    "date": 1707802767620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n import React, { useEffect, useState } from \"react\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n-import { Row, Col} from \"react-bootstrap\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n \r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-import {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n@@ -25,21 +25,21 @@\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n \r\n-  \r\n \r\n+\r\n   useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n+    console.log(now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();\r\n   }, []);\r\n-  \r\n+\r\n   const rowRenderArt = (row) => (\r\n-     <ArtItem key={row.lat} row={row}  />\r\n+    <ArtItem key={row.lat} row={row} />\r\n \r\n-  ) \r\n+  )\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n@@ -66,70 +66,79 @@\n \r\n     console.log(data.map(rowRenderArt));\r\n     return (data.map(rowRenderArt));\r\n   };\r\n- \r\n \r\n+\r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n-      username:\"username\",\r\n-      firstName:\"firstname\",\r\n-      lastName:\"lastname\",\r\n-      email:\"email\",\r\n-      entreprise:\"label\",\r\n-      gender:\"New York\",\r\n-      postalCode:\"postalcode\",\r\n-      city:\"city_code\",\r\n-      latitude:\"lat\",\r\n-      longitude:\"lng\",\r\n-      picture:\"picture\",\r\n-      description:\"description\", \r\n-      facebook:\"facebook\",\r\n-      instagram:\"instagram\"\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      entreprise: \"label\",\r\n+      gender: \"New York\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\"\r\n     }\r\n     //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n-     \r\n-  \r\n+\r\n+    var getIndexIfObjWithOwnAttr = function (array, attr) {\r\n+      for (var i = 0; i < array.length; i++) {\r\n+        if (array[i].hasOwnProperty(attr)) {\r\n+          return array[i][attr];\r\n+        }\r\n+      }\r\n+      return false;\r\n+    }\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-          \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let obj = arrayObj[i];\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              // Check if key exists\r\n-              let hasKey = dataArray.hasOwnProperty(key); \r\n-              if (hasKey) {\r\n-                console.log( dataArray[key].value, key, value);\r\n-              } else {\r\n-                //console.log('not found exist.');\r\n-              }\r\n-            })\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          Object.entries(obj).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            // Check if key exists\r\n+            let hasKey = dataArray.hasOwnProperty(key);\r\n+            if (hasKey) {\r\n+              \r\n+              console.log(getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n+            } else {\r\n+              //console.log('not found exist.');\r\n+            }\r\n             \r\n-          \r\n-          }\r\n-          console.log(arrayObj);\r\n-        },\r\n+          })\r\n+\r\n+\r\n+        }\r\n+        console.log(arrayObj);\r\n+      },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n-     \r\n+\r\n       <Newmap >\r\n-     \r\n+\r\n       </Newmap>\r\n       <Col>\r\n-      <Row>\r\n-         {showData()}\r\n-      </Row>\r\n+        <Row>\r\n+          {showData()}\r\n+        </Row>\r\n       </Col>\r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707803007454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n \r\n     var getIndexIfObjWithOwnAttr = function (array, attr) {\r\n       for (var i = 0; i < array.length; i++) {\r\n         if (array[i].hasOwnProperty(attr)) {\r\n-          return array[i][attr];\r\n+          return array[i][attr].value;\r\n         }\r\n       }\r\n       return false;\r\n     }\r\n"
                },
                {
                    "date": 1707803099172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,11 +88,11 @@\n     }\r\n     //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n \r\n     var getIndexIfObjWithOwnAttr = function (array, attr) {\r\n-      for (var i = 0; i < array.length; i++) {\r\n-        if (array[i].hasOwnProperty(attr)) {\r\n-          return array[i][attr].value;\r\n+  \r\n+        if (array.hasOwnProperty(attr)) {\r\n+          return array[attr].value;\r\n         }\r\n       }\r\n       return false;\r\n     }\r\n"
                },
                {
                    "date": 1707803157643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,17 +109,13 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              \r\n               console.log(getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n-            \r\n           })\r\n-\r\n-\r\n         }\r\n         console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707803218104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n       instagram: \"instagram\"\r\n     }\r\n     //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n \r\n-    var getIndexIfObjWithOwnAttr = function (array, attr) {\r\n+    getIndexIfObjWithOwnAttr = function (array, attr) {\r\n   \r\n         if (array.hasOwnProperty(attr)) {\r\n           return array[attr].value;\r\n         }\r\n"
                },
                {
                    "date": 1707803583987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,9 @@\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n     //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n-\r\n-    getIndexIfObjWithOwnAttr = function (array, attr) {\r\n-  \r\n+    const getIndexIfObjWithOwnAttr = (array, attr) => {\r\n         if (array.hasOwnProperty(attr)) {\r\n           return array[attr].value;\r\n         }\r\n       }\r\n@@ -109,9 +107,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log(getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n+              console.log(this.getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           })\r\n"
                },
                {
                    "date": 1707803598049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n               console.log(this.getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n-          })\r\n+          });\r\n         }\r\n         console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707803607945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n-        }\r\n+        };\r\n         console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707803619237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n         console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n-      },\r\n+      }\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1707803773116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n@@ -23,12 +22,8 @@\n   });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-\r\n-\r\n   useEffect(() => {\r\n     console.log(now() + \" ->time I send my request to server\");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n@@ -66,8 +61,16 @@\n \r\n     console.log(data.map(rowRenderArt));\r\n     return (data.map(rowRenderArt));\r\n   };\r\n+    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n+  const getIndexIfObjWithOwnAttr = (array, attr) => {\r\n+    if (array.hasOwnProperty(attr)) {\r\n+      return array[attr].value;\r\n+    }\r\n+    return false;\r\n+  }\r\n+   \r\n \r\n \r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n@@ -85,16 +88,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n-    const getIndexIfObjWithOwnAttr = (array, attr) => {\r\n-        if (array.hasOwnProperty(attr)) {\r\n-          return array[attr].value;\r\n-        }\r\n-      }\r\n-      return false;\r\n-    }\r\n+   \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -117,9 +113,9 @@\n         console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n-      }\r\n+      };\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1707803792594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,10 +113,10 @@\n         console.log(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n-      };\r\n-    });\r\n+      }\r\n+    })\r\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n"
                },
                {
                    "date": 1707803818751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,9 +114,9 @@\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n-    })\r\n+    });\r\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n"
                },
                {
                    "date": 1707803847233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log(this.getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n+              console.log(getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n"
                },
                {
                    "date": 1707803890696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,19 +61,20 @@\n \r\n     console.log(data.map(rowRenderArt));\r\n     return (data.map(rowRenderArt));\r\n   };\r\n-    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n+\r\n+\r\n+\r\n+  const getRepairMen = () => {\r\n+        //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n   const getIndexIfObjWithOwnAttr = (array, attr) => {\r\n     if (array.hasOwnProperty(attr)) {\r\n       return array[attr].value;\r\n     }\r\n     return false;\r\n   }\r\n    \r\n-\r\n-\r\n-  const getRepairMen = () => {\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n"
                },
                {
                    "date": 1707803926617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n   const getIndexIfObjWithOwnAttr = (array, attr) => {\r\n     if (array.hasOwnProperty(attr)) {\r\n       return array[attr].value;\r\n     }\r\n-    return false;\r\n+    return true;\r\n   }\r\n    \r\n     let dataArray = {\r\n       username: \"username\",\r\n"
                },
                {
                    "date": 1707803988934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,14 +66,9 @@\n \r\n \r\n   const getRepairMen = () => {\r\n         //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n-  const getIndexIfObjWithOwnAttr = (array, attr) => {\r\n-    if (array.hasOwnProperty(attr)) {\r\n-      return array[attr].value;\r\n-    }\r\n-    return true;\r\n-  }\r\n+ \r\n    \r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n@@ -104,9 +99,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log(getIndexIfObjWithOwnAttr(dataArray,key), key, value);\r\n+              console.log(getIndexIfObjWithOwnAttr(dataArray[key]), key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n"
                },
                {
                    "date": 1707803997927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log(getIndexIfObjWithOwnAttr(dataArray[key]), key, value);\r\n+              console.log((dataArray[key], key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n"
                },
                {
                    "date": 1707804008103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log((dataArray[key], key, value);\r\n+              console.log(dataArray[key], key, value);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n"
                },
                {
                    "date": 1707804587482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,23 +91,27 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n+        result=[];\r\n+        let rrow=0;\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n+             result[i][dataArray[key]]=value;\r\n+             \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n         };\r\n         console.log(arrayObj);\r\n+        console.log(result);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1707804649136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,11 +65,11 @@\n \r\n \r\n \r\n   const getRepairMen = () => {\r\n-        //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n- \r\n-   \r\n+    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n+\r\n+\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n@@ -84,27 +84,27 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-   \r\n+    let result = [];\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        result=[];\r\n-        let rrow=0;\r\n+\r\n+        let rrow = 0;\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n-             result[i][dataArray[key]]=value;\r\n-             \r\n+              result[i][dataArray[key]] = value;\r\n+\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n"
                },
                {
                    "date": 1707804833043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,17 +101,18 @@\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n-              result[i][dataArray[key]] = value;\r\n+              result[dataArray[key]] = value;\r\n+              console.log(result);\r\n \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n         };\r\n         console.log(arrayObj);\r\n-        console.log(result);\r\n+       \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1707804877276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n       entreprise: \"label\",\r\n-      gender: \"New York\",\r\n+      gender: \"genre\",\r\n       postalCode: \"postalcode\",\r\n       city: \"city_code\",\r\n       latitude: \"lat\",\r\n       longitude: \"lng\",\r\n"
                },
                {
                    "date": 1707805081925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,11 @@\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n     let result = [];\r\n+    var newArray = [];\r\n+\r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -102,16 +105,16 @@\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n-              console.log(result);\r\n-\r\n+              newArray.pushValues(result);\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n         };\r\n         console.log(arrayObj);\r\n+        console.log(newArray);\r\n        \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707805215151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,10 @@\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n-              newArray.pushValues(result);\r\n+              newArray.push(...result);\r\n+              \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n"
                },
                {
                    "date": 1707805356617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,14 +105,15 @@\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n-              newArray.push(...result);\r\n+           \r\n               \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n+          newArray.push(...result);\r\n         };\r\n         console.log(arrayObj);\r\n         console.log(newArray);\r\n        \r\n"
                },
                {
                    "date": 1707805471834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,9 @@\n           newArray.push(...result);\r\n         };\r\n         console.log(arrayObj);\r\n         console.log(newArray);\r\n+        \r\n        \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707805535593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,12 +111,12 @@\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n-          newArray.push(...result);\r\n+          console.log(result);\r\n         };\r\n         console.log(arrayObj);\r\n-        console.log(newArray);\r\n+    \r\n         \r\n        \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707805566782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,9 @@\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n           console.log(result);\r\n+          newArray.push(result);\r\n         };\r\n         console.log(arrayObj);\r\n     \r\n         \r\n"
                },
                {
                    "date": 1707805590228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n           console.log(result);\r\n-          newArray.push(result);\r\n+          newArray.push(...result);\r\n         };\r\n         console.log(arrayObj);\r\n     \r\n         \r\n"
                },
                {
                    "date": 1707805758596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,17 +104,17 @@\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n-              result[dataArray[key]] = value;\r\n+              result[i][dataArray[key]] = value;\r\n            \r\n               \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n           });\r\n           console.log(result);\r\n-          newArray.push(...result);\r\n+          \r\n         };\r\n         console.log(arrayObj);\r\n     \r\n         \r\n"
                },
                {
                    "date": 1707805855052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,142 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    console.log(now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.lat} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    console.log(\"RepairManlatlng is pending\");\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+    console.log(data.map(rowRenderArt));\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getRepairMen = () => {\r\n+    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n+\r\n+\r\n+    let dataArray = {\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      entreprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\"\r\n+    }\r\n+    var result = [];\r\n+    var newArray = [];\r\n+\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+\r\n+        \r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          Object.entries(obj).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            // Check if key exists\r\n+            let hasKey = dataArray.hasOwnProperty(key);\r\n+            if (hasKey) {\r\n+              console.log(dataArray[key], key, value);\r\n+              result[i][dataArray[key]] = value;\r\n+           \r\n+              \r\n+            } else {\r\n+              //console.log('not found exist.');\r\n+            }\r\n+          });\r\n+          console.log(result);\r\n+          \r\n+        };\r\n+        console.log(arrayObj);\r\n+    \r\n+        \r\n+       \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      <Newmap >\r\n+\r\n+      </Newmap>\r\n+      <Col>\r\n+        <Row>\r\n+          {showData()}\r\n+        </Row>\r\n+      </Col>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707805877585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    var result = [];\r\n+    var result = [1000];\r\n     var newArray = [];\r\n \r\n \r\n     connector({\r\n@@ -139,146 +139,4 @@\n       </Col>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    console.log(now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.lat} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    console.log(\"RepairManlatlng is pending\");\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-    console.log(data.map(rowRenderArt));\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getRepairMen = () => {\r\n-    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n-\r\n-\r\n-    let dataArray = {\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      entreprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\"\r\n-    }\r\n-    let result = [];\r\n-    var newArray = [];\r\n-\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n-        let rrow = 0;\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          Object.entries(obj).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            // Check if key exists\r\n-            let hasKey = dataArray.hasOwnProperty(key);\r\n-            if (hasKey) {\r\n-              console.log(dataArray[key], key, value);\r\n-              result[i][dataArray[key]] = value;\r\n-           \r\n-              \r\n-            } else {\r\n-              //console.log('not found exist.');\r\n-            }\r\n-          });\r\n-          console.log(result);\r\n-          \r\n-        };\r\n-        console.log(arrayObj);\r\n-    \r\n-        \r\n-       \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      <Newmap >\r\n-\r\n-      </Newmap>\r\n-      <Col>\r\n-        <Row>\r\n-          {showData()}\r\n-        </Row>\r\n-      </Col>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707805972745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    var result = [1000];\r\n+    var result = [][];\r\n     var newArray = [];\r\n \r\n \r\n     connector({\r\n"
                },
                {
                    "date": 1707805994709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    var result = [][];\r\n+    var result = [[]];\r\n     var newArray = [];\r\n \r\n \r\n     connector({\r\n"
                },
                {
                    "date": 1707806111569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,37 +84,36 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    var result = [[]];\r\n-    var newArray = [];\r\n+    var result = [];\r\n+   \r\n \r\n \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n-        \r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               console.log(dataArray[key], key, value);\r\n-              result[i][dataArray[key]] = value;\r\n+              result[dataArray[key]] = value;\r\n            \r\n               \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n+            console.log(result);\r\n           });\r\n-          console.log(result);\r\n           \r\n+          \r\n         };\r\n         console.log(arrayObj);\r\n     \r\n         \r\n"
                },
                {
                    "date": 1707806325294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,10 @@\n       instagram: \"instagram\"\r\n     }\r\n     var result = [];\r\n    \r\n+    var tresult = [];\r\n \r\n-\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -109,8 +109,9 @@\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n             console.log(result);\r\n+            tresult[i]=result;\r\n           });\r\n           \r\n           \r\n         };\r\n"
                },
                {
                    "date": 1707806395084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log(dataArray[key], key, value);\r\n+              //console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n            \r\n               \r\n             } else {\r\n"
                },
                {
                    "date": 1707806465895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,13 +108,13 @@\n               \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n-            console.log(result);\r\n-            tresult[i]=result;\r\n+            \r\n           });\r\n           \r\n-          \r\n+          console.log(result);\r\n+            tresult[i]=result;\r\n         };\r\n         console.log(arrayObj);\r\n     \r\n         \r\n"
                },
                {
                    "date": 1707806624672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n             \r\n           });\r\n           \r\n           console.log(result);\r\n-            tresult[i]=result;\r\n+           \r\n         };\r\n         console.log(arrayObj);\r\n     \r\n         \r\n"
                },
                {
                    "date": 1707806678085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,11 +85,11 @@\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n     var result = [];\r\n-   \r\n-    var tresult = [];\r\n+              \r\n \r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -101,12 +101,10 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              //console.log(dataArray[key], key, value);\r\n+              console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n-           \r\n-              \r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n             \r\n"
                },
                {
                    "date": 1707806839355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    var result = [];\r\n+   \r\n               \r\n \r\n \r\n     connector({\r\n@@ -95,8 +95,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n"
                },
                {
                    "date": 1707807022837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,22 +96,24 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n+          var rrows =[];\r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              console.log(dataArray[key], key, value);\r\n+              //console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n+\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n             \r\n           });\r\n-          \r\n+          rrows[i].concat(...result);\r\n           console.log(result);\r\n            \r\n         };\r\n         console.log(arrayObj);\r\n"
                },
                {
                    "date": 1707807078468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n-          var rrows =[];\r\n+     \r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n@@ -111,9 +111,9 @@\n               //console.log('not found exist.');\r\n             }\r\n             \r\n           });\r\n-          rrows[i].concat(...result);\r\n+     \r\n           console.log(result);\r\n            \r\n         };\r\n         console.log(arrayObj);\r\n"
                },
                {
                    "date": 1707807367034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,17 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-   \r\n+    var objelems = {\r\n+      length: 0,\r\n+    \r\n+      ajoutElem: function ajoutElem(elem) {\r\n+        // obj.length est automatiquement incrémenté\r\n+        // quand on ajoute un élément\r\n+        [].push.call(this, elem);\r\n+      },\r\n+    };\r\n               \r\n \r\n \r\n     connector({\r\n@@ -113,11 +121,11 @@\n             \r\n           });\r\n      \r\n           console.log(result);\r\n-           \r\n+          objelems.ajoutElem(result);\r\n         };\r\n-        console.log(arrayObj);\r\n+        console.log(objelems);\r\n     \r\n         \r\n        \r\n       },\r\n"
                },
                {
                    "date": 1707807601170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n     showData();\r\n   }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.lat} row={row} />\r\n+    <ArtItem key={row.entreprise} row={row} />\r\n \r\n   )\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n@@ -104,31 +104,24 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n-     \r\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               //console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n-\r\n             } else {\r\n               //console.log('not found exist.');\r\n             }\r\n-            \r\n           });\r\n-     \r\n           console.log(result);\r\n           objelems.ajoutElem(result);\r\n         };\r\n         console.log(objelems);\r\n-    \r\n-        \r\n-       \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1707807868227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,18 @@\n     console.log(data.map(rowRenderArt));\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n+  var objelems = {\r\n+    length: 0,\r\n+  \r\n+    ajoutElem: function ajoutElem(elem) {\r\n+      // obj.length est automatiquement incrémenté\r\n+      // quand on ajoute un élément\r\n+      [].push.call(this, elem);\r\n+    },\r\n+  };\r\n \r\n-\r\n   const getRepairMen = () => {\r\n     //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n \r\n \r\n@@ -84,17 +92,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n-    var objelems = {\r\n-      length: 0,\r\n-    \r\n-      ajoutElem: function ajoutElem(elem) {\r\n-        // obj.length est automatiquement incrémenté\r\n-        // quand on ajoute un élément\r\n-        [].push.call(this, elem);\r\n-      },\r\n-    };\r\n+ \r\n               \r\n \r\n \r\n     connector({\r\n"
                },
                {
                    "date": 1707807979452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n \r\n   )\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n+    let data = objelems;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707807997879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \r\n   )\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n-    let data = objelems;\r\n+    data = objelems;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707808073849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \r\n   )\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n-    data = objelems;\r\n+    data = objelems.Object;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707808094456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \r\n   )\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n-    data = objelems.Object;\r\n+    data = objelems;\r\n     console.log(\"RepairManlatlng is pending\");\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707808685488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,16 @@\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n+  var objelems = {\r\n+    length: 0,\r\n+    ajoutElem: function ajoutElem(elem) {\r\n+      // obj.length est automatiquement incrémenté\r\n+      // quand on ajoute un élément\r\n+      [].push.call(this, elem);\r\n+    },\r\n+  };\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n@@ -34,11 +42,16 @@\n     <ArtItem key={row.entreprise} row={row} />\r\n \r\n   )\r\n   const showData = () => {\r\n+    \r\n     let data = RepairManlatlng;\r\n     data = objelems;\r\n-    console.log(\"RepairManlatlng is pending\");\r\n+    if (ispending)\r\n+      console.log(\"RepairManlatlng is pending\");\r\n+    else\r\n+      console.log(\"RepairManlatlng was loaded\");\r\n+ \r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n         <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n@@ -63,22 +76,11 @@\n     console.log(data.map(rowRenderArt));\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n-  var objelems = {\r\n-    length: 0,\r\n-  \r\n-    ajoutElem: function ajoutElem(elem) {\r\n-      // obj.length est automatiquement incrémenté\r\n-      // quand on ajoute un élément\r\n-      [].push.call(this, elem);\r\n-    },\r\n-  };\r\n+ \r\n \r\n   const getRepairMen = () => {\r\n-    //{ label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.66  },\r\n-\r\n-\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n@@ -93,12 +95,8 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\"\r\n     }\r\n- \r\n-              \r\n-\r\n-\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -111,15 +109,14 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              //console.log(dataArray[key], key, value);\r\n               result[dataArray[key]] = value;\r\n             } else {\r\n-              //console.log('not found exist.');\r\n+        \r\n             }\r\n           });\r\n-          console.log(result);\r\n+          //console.log(result);\r\n           objelems.ajoutElem(result);\r\n         };\r\n         console.log(objelems);\r\n       },\r\n"
                },
                {
                    "date": 1707808762399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n+  const [isPending, setIsPending] = useState(0);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n@@ -42,16 +43,16 @@\n     <ArtItem key={row.entreprise} row={row} />\r\n \r\n   )\r\n   const showData = () => {\r\n-    \r\n+\r\n     let data = RepairManlatlng;\r\n     data = objelems;\r\n     if (ispending)\r\n       console.log(\"RepairManlatlng is pending\");\r\n     else\r\n       console.log(\"RepairManlatlng was loaded\");\r\n- \r\n+\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n         <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n@@ -76,10 +77,10 @@\n     console.log(data.map(rowRenderArt));\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n- \r\n \r\n+\r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n@@ -111,9 +112,9 @@\n             let hasKey = dataArray.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               result[dataArray[key]] = value;\r\n             } else {\r\n-        \r\n+\r\n             }\r\n           });\r\n           //console.log(result);\r\n           objelems.ajoutElem(result);\r\n"
                },
                {
                    "date": 1707808783257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n+  setIsPending(true);\r\n   var objelems = {\r\n     length: 0,\r\n     ajoutElem: function ajoutElem(elem) {\r\n       // obj.length est automatiquement incrémenté\r\n"
                },
                {
                    "date": 1707808996207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n-  setIsPending(true);\r\n+  \r\n   var objelems = {\r\n     length: 0,\r\n     ajoutElem: function ajoutElem(elem) {\r\n       // obj.length est automatiquement incrémenté\r\n@@ -33,9 +33,9 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n-    console.log(now() + \" ->time I send my request to server\");\r\n+    setIsPending(true);\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();\r\n   }, []);\r\n@@ -124,8 +124,9 @@\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n+      setIsPending(false);\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1707809258248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n     data = objelems;\r\n-    if (ispending)\r\n+    if (isPending)\r\n       console.log(\"RepairManlatlng is pending\");\r\n     else\r\n       console.log(\"RepairManlatlng was loaded\");\r\n \r\n@@ -120,13 +120,14 @@\n           //console.log(result);\r\n           objelems.ajoutElem(result);\r\n         };\r\n         console.log(objelems);\r\n+        setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n-      setIsPending(false);\r\n+    \r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1707809564225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,13 +47,17 @@\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n     data = objelems;\r\n-    if (isPending)\r\n-      console.log(\"RepairManlatlng is pending\");\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      console.log(objelems);\r\n+    }\r\n     else\r\n+    {\r\n       console.log(\"RepairManlatlng was loaded\");\r\n-\r\n+      console.log(objelems);\r\n+    }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n         <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n"
                },
                {
                    "date": 1707809604043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       console.log(objelems);\r\n     }\r\n     else\r\n     {\r\n-      console.log(\"RepairManlatlng was loaded\");\r\n+      console.log(\"RepairManlatlng was loaded--->\");\r\n       console.log(objelems);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n"
                },
                {
                    "date": 1707809683147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   \r\n-  var objelems = {\r\n+  const objelems = {\r\n     length: 0,\r\n     ajoutElem: function ajoutElem(elem) {\r\n       // obj.length est automatiquement incrémenté\r\n       // quand on ajoute un élément\r\n"
                },
                {
                    "date": 1707809770599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   )\r\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n-    data = objelems;\r\n+    //data = objelems;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(objelems);\r\n     }\r\n"
                },
                {
                    "date": 1707810078997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const [isPending, setIsPending] = useState(0);\r\n+  const [objElement, setObjElem] = useState(0);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n@@ -124,8 +125,9 @@\n           //console.log(result);\r\n           objelems.ajoutElem(result);\r\n         };\r\n         console.log(objelems);\r\n+        setObjElem(objelems);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707810094489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   )\r\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n-    //data = objelems;\r\n+    data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(objelems);\r\n     }\r\n"
                },
                {
                    "date": 1707810165206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,14 +50,14 @@\n     let data = RepairManlatlng;\r\n     data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n-      console.log(objelems);\r\n+      console.log(data);\r\n     }\r\n     else\r\n     {\r\n       console.log(\"RepairManlatlng was loaded--->\");\r\n-      console.log(objelems);\r\n+      console.log(data);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707810199642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   )\r\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n-    data = objElement;\r\n+    //data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(data);\r\n     }\r\n"
                },
                {
                    "date": 1707810245333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   )\r\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n-    //data = objElement;\r\n+    data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(data);\r\n     }\r\n"
                },
                {
                    "date": 1707810771718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   const [isPending, setIsPending] = useState(0);\r\n-  const [objElement, setObjElem] = useState(0);\r\n+  const [objElement, setObjElem] = useState(objelems);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n"
                },
                {
                    "date": 1707810838915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,16 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n+  const objelems = {\r\n+    length: 0,\r\n+    ajoutElem: function ajoutElem(elem) {\r\n+      // obj.length est automatiquement incrémenté\r\n+      // quand on ajoute un élément\r\n+      [].push.call(this, elem);\r\n+    },\r\n+  };\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [objElement, setObjElem] = useState(objelems);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n@@ -22,16 +30,9 @@\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   \r\n-  const objelems = {\r\n-    length: 0,\r\n-    ajoutElem: function ajoutElem(elem) {\r\n-      // obj.length est automatiquement incrémenté\r\n-      // quand on ajoute un élément\r\n-      [].push.call(this, elem);\r\n-    },\r\n-  };\r\n+  \r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707810982021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,9 @@\n     data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(data);\r\n+      return <></>\r\n     }\r\n     else\r\n     {\r\n       console.log(\"RepairManlatlng was loaded--->\");\r\n"
                },
                {
                    "date": 1707811315804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n+  const tabArray = [];\r\n   const objelems = {\r\n     length: 0,\r\n     ajoutElem: function ajoutElem(elem) {\r\n       // obj.length est automatiquement incrémenté\r\n@@ -81,9 +82,9 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n \r\n-    console.log(data.map(rowRenderArt));\r\n+\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n \r\n@@ -125,8 +126,9 @@\n             }\r\n           });\r\n           //console.log(result);\r\n           objelems.ajoutElem(result);\r\n+          tabArray.push(result);\r\n         };\r\n         console.log(objelems);\r\n         setObjElem(objelems);\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1707811377285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,8 +129,9 @@\n           objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n         };\r\n         console.log(objelems);\r\n+        console.log(tabArray);\r\n         setObjElem(objelems);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707811479155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n   )\r\n   const showData = () => {\r\n \r\n     let data = RepairManlatlng;\r\n-    data = objElement;\r\n+    //data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(data);\r\n       return <></>\r\n"
                },
                {
                    "date": 1707811591591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,9 @@\n           //console.log(result);\r\n           objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n         };\r\n+        console.log(\"Check the result of connector\");\r\n         console.log(objelems);\r\n         console.log(tabArray);\r\n         setObjElem(objelems);\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1707811755538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n       [].push.call(this, elem);\r\n     },\r\n   };\r\n   const [isPending, setIsPending] = useState(0);\r\n-  const [objElement, setObjElem] = useState(objelems);\r\n+  const [xobjElement, setxObjElem] = useState(objelems);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n@@ -58,9 +58,9 @@\n     }\r\n     else\r\n     {\r\n       console.log(\"RepairManlatlng was loaded--->\");\r\n-      console.log(data);\r\n+      console.log(xobjElement);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n@@ -131,9 +131,9 @@\n         };\r\n         console.log(\"Check the result of connector\");\r\n         console.log(objelems);\r\n         console.log(tabArray);\r\n-        setObjElem(objelems);\r\n+        setxObjElem(objelems);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707812107338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n     else\r\n     {\r\n       console.log(\"RepairManlatlng was loaded--->\");\r\n       console.log(xobjElement);\r\n+      data= xobjElement;\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707812387030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n-  const tabArray = [];\r\n+  \r\n   const objelems = {\r\n     length: 0,\r\n     ajoutElem: function ajoutElem(elem) {\r\n       // obj.length est automatiquement incrémenté\r\n@@ -21,9 +21,9 @@\n       [].push.call(this, elem);\r\n     },\r\n   };\r\n   const [isPending, setIsPending] = useState(0);\r\n-  const [xobjElement, setxObjElem] = useState(objelems);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n"
                },
                {
                    "date": 1707812478974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,15 +126,15 @@\n \r\n             }\r\n           });\r\n           //console.log(result);\r\n-          objelems.ajoutElem(result);\r\n+          //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n         };\r\n         console.log(\"Check the result of connector\");\r\n-        console.log(objelems);\r\n+        //console.log(objelems);\r\n         console.log(tabArray);\r\n-        setxObjElem(objelems);\r\n+        setxObjElem(tabArray);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707812523895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,10 @@\n     }\r\n     else\r\n     {\r\n       console.log(\"RepairManlatlng was loaded--->\");\r\n-      console.log(xobjElement);\r\n-      data= xobjElement;\r\n+      console.log(tabArray);\r\n+      data= tabArray;\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707812889132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,16 +12,9 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n   const isOlder = true;\r\n   \r\n-  const objelems = {\r\n-    length: 0,\r\n-    ajoutElem: function ajoutElem(elem) {\r\n-      // obj.length est automatiquement incrémenté\r\n-      // quand on ajoute un élément\r\n-      [].push.call(this, elem);\r\n-    },\r\n-  };\r\n+  \r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n"
                },
                {
                    "date": 1707813135759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n-      entreprise: \"label\",\r\n+      enterprise: \"label\",\r\n       gender: \"genre\",\r\n       postalCode: \"postalcode\",\r\n       city: \"city_code\",\r\n       latitude: \"lat\",\r\n"
                },
                {
                    "date": 1707813439103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     showData();\r\n   }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.entreprise} row={row} />\r\n+    <ArtItem key={row.enterprise} row={row} />\r\n \r\n   )\r\n   const showData = () => {\r\n \r\n"
                },
                {
                    "date": 1707813466090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     showData();\r\n   }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.enterprise} row={row} />\r\n+    <ArtItem key={row.label} row={row} />\r\n \r\n   )\r\n   const showData = () => {\r\n \r\n"
                },
                {
                    "date": 1707814017783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n     else\r\n     {\r\n       console.log(\"RepairManlatlng was loaded--->\");\r\n       console.log(tabArray);\r\n-      data= tabArray;\r\n+      //data= tabArray;\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707816158967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,7 +146,18 @@\n         <Row>\r\n           {showData()}\r\n         </Row>\r\n       </Col>\r\n+      <ListProduits\r\n+       data={services}\r\n+       perPage={perPage}\r\n+       setPerPage={setPerPage}\r\n+       pageIndex={pageIndex}\r\n+       setPageIndex={setPageIndex}\r\n+       totalItemsLength={totalServices}\r\n+       pagination={true}\r\n+       isLoading={isPending}\r\n+     />\r\n     </Container>\r\n+       \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707816178155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,18 +146,9 @@\n         <Row>\r\n           {showData()}\r\n         </Row>\r\n       </Col>\r\n-      <ListProduits\r\n-       data={services}\r\n-       perPage={perPage}\r\n-       setPerPage={setPerPage}\r\n-       pageIndex={pageIndex}\r\n-       setPageIndex={setPageIndex}\r\n-       totalItemsLength={totalServices}\r\n-       pagination={true}\r\n-       isLoading={isPending}\r\n-     />\r\n+  \r\n     </Container>\r\n        \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707816235867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,11 +50,10 @@\n       return <></>\r\n     }\r\n     else\r\n     {\r\n-      console.log(\"RepairManlatlng was loaded--->\");\r\n-      console.log(tabArray);\r\n-      //data= tabArray;\r\n+      //console.log(\"RepairManlatlng was loaded--->\");\r\n+      //console.log(tabArray);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707817726482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,10 +79,15 @@\n \r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n \r\n-\r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n"
                },
                {
                    "date": 1707817742321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,46 @@\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n \r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+    connector({\r\n+      method: \"get\",\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      },\r\n+      catch: (error) => {\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        console.log(error);\r\n+      },\r\n+      },\r\n+    });\r\n+    });\r\n+  };\r\n+  };\r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n"
                },
                {
                    "date": 1707817918551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,160 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  \r\n+  \r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  \r\n+  \r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    setIsPending(true);\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.label} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      console.log(data);\r\n+      return <></>\r\n+    }\r\n+    else\r\n+    {\r\n+      //console.log(\"RepairManlatlng was loaded--->\");\r\n+      //console.log(tabArray);\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+\r\n+\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let dataArray = {\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\"\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          Object.entries(obj).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            // Check if key exists\r\n+            let hasKey = dataArray.hasOwnProperty(key);\r\n+            if (hasKey) {\r\n+              result[dataArray[key]] = value;\r\n+            } else {\r\n+\r\n+            }\r\n+          });\r\n+          //console.log(result);\r\n+          //objelems.ajoutElem(result);\r\n+          tabArray.push(result);\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    \r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      <Newmap >\r\n+\r\n+      </Newmap>\r\n+      <Col>\r\n+        <Row>\r\n+          {showData()}\r\n+        </Row>\r\n+      </Col>\r\n+  \r\n+    </Container>\r\n+       \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707818509537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,452 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+import { now } from \"moment\";\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+  const isOlder = true;\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [mapdata, setMapdata] = useState([]);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+ \r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    console.log( now() + \" ->time I send my request to server\");\r\n+    getRepairMen();\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    console.log('Use effect to be clean');\r\n+    \r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      //getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+ \r\n+  const getRepairMen = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let o = arrayObj[i];\r\n+            \r\n+            Object.values(o).forEach(val => {\r\n+              //console.log(val);\r\n+            });\r\n+          }\r\n+          \r\n+        },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    //idService = slugIdService.split(\"-\").pop();\r\n+    //const idService = slugIdService.split(\"-\").pop();\r\n+    const idService = 218;\r\n+    console.log('typeof idservice:' + typeof (idService));\r\n+\r\n+\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"218\";\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        } else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              console.log(results);\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                } else {\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n+              } else if (sortBy[0] === \"rating\") {\r\n+                results = sortObjects(results, 'rating', sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      {isOlder && <BlocFilterStyle open={click}>\r\n+        {isTabletOrMobile && (\r\n+          <button\r\n+            className=\"menu-burger is-opened\"\r\n+            onClick={toogleCloseFilter}\r\n+          >\r\n+            <span></span>\r\n+            <span></span>\r\n+            <span></span>\r\n+          </button>\r\n+        )}\r\n+        <div className=\"item-filter\">\r\n+          <RangePrice>\r\n+            <label>Prix</label>\r\n+            {service &&\r\n+              service.minPrice &&\r\n+              service.maxPrice &&\r\n+              service.minPrice != service.maxPrice ? (\r\n+              <Nouislider\r\n+                range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                start={[service.minPrice, service.maxPrice]}\r\n+                connect={true}\r\n+                behaviour=\"tap\"\r\n+                step={1}\r\n+                tooltips={true}\r\n+                format={{ to, from }}\r\n+              />\r\n+            ) : (\r\n+              \"Sur devis\"\r\n+            )}\r\n+          </RangePrice>\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <SelectCat\r\n+            {...filter.deliveryModeTypes}\r\n+            onChangeCallback={(response) => {\r\n+              const cpFilter = { ...filter };\r\n+              cpFilter.deliveryModeTypes.value = response;\r\n+              setFilter(cpFilter);\r\n+            }}\r\n+          />\r\n+        </div>\r\n+        <div className=\"item-filter\">\r\n+          <InputAutoComplete\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            placeIsSelected={placeIsSelected}\r\n+            setPlaceIsSelected={setPlaceIsSelected}\r\n+            isPendingLatLng={isPendingLatLng}\r\n+            setIsPendingLatLng={setIsPendingLatLng}\r\n+          />\r\n+        </div>\r\n+        <div className=\"btn-filter-banner\">\r\n+          <button\r\n+            className=\"btn-search-filter\"\r\n+            onClick={(e) => {\r\n+              getBenefits(false);\r\n+            }}\r\n+          >\r\n+            {isDesktopOrLaptop && (\r\n+              <>\r\n+                <SearchIcon />\r\n+              </>\r\n+            )}\r\n+            {isTabletOrMobile && <>Recherche</>}\r\n+          </button>\r\n+        </div>\r\n+      </BlocFilterStyle>\r\n+      }\r\n+      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+        <BackIcon />\r\n+        <span>Retour à l'univers</span>\r\n+      </BackStyle>\r\n+      }\r\n+      {isOlder && isTabletOrMobile && (\r\n+        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+          <SearchIcon /> Rechercher une prestation\r\n+        </div>\r\n+      )}\r\n+      {isOlder && (\r\n+        <ArtListePrestationFiche\r\n+          universe={universe}\r\n+          service={service}\r\n+          benefits={benefits}\r\n+          filter={filter}\r\n+          setFilter={setFilter}\r\n+          isPending={isPending}\r\n+          isOlder={isOlder}\r\n+        />\r\n+      )\r\n+      }\r\n+     \r\n+      <Newmap  ></Newmap>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707818566485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,460 +1,8 @@\n import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ArtListePrestationFiche from \"../../components/front/artListePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n import { now } from \"moment\";\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [mapdata, setMapdata] = useState([]);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n- \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    console.log( now() + \" ->time I send my request to server\");\r\n-    getRepairMen();\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    console.log('Use effect to be clean');\r\n-    \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n- \r\n-  const getRepairMen = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let o = arrayObj[i];\r\n-            \r\n-            Object.values(o).forEach(val => {\r\n-              //console.log(val);\r\n-            });\r\n-          }\r\n-          \r\n-        },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    //const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    //idService = slugIdService.split(\"-\").pop();\r\n-    //const idService = slugIdService.split(\"-\").pop();\r\n-    const idService = 218;\r\n-    console.log('typeof idservice:' + typeof (idService));\r\n-\r\n-\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"218\";\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        } else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              console.log(results);\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = { ...results[i], rating: results[i].user.googleRating || 0 };\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                } else {\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results, 'minPrice', sortBy[1]);\r\n-              } else if (sortBy[0] === \"rating\") {\r\n-                results = sortObjects(results, 'rating', sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      {isOlder && <BlocFilterStyle open={click}>\r\n-        {isTabletOrMobile && (\r\n-          <button\r\n-            className=\"menu-burger is-opened\"\r\n-            onClick={toogleCloseFilter}\r\n-          >\r\n-            <span></span>\r\n-            <span></span>\r\n-            <span></span>\r\n-          </button>\r\n-        )}\r\n-        <div className=\"item-filter\">\r\n-          <RangePrice>\r\n-            <label>Prix</label>\r\n-            {service &&\r\n-              service.minPrice &&\r\n-              service.maxPrice &&\r\n-              service.minPrice != service.maxPrice ? (\r\n-              <Nouislider\r\n-                range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                start={[service.minPrice, service.maxPrice]}\r\n-                connect={true}\r\n-                behaviour=\"tap\"\r\n-                step={1}\r\n-                tooltips={true}\r\n-                format={{ to, from }}\r\n-              />\r\n-            ) : (\r\n-              \"Sur devis\"\r\n-            )}\r\n-          </RangePrice>\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <SelectCat\r\n-            {...filter.deliveryModeTypes}\r\n-            onChangeCallback={(response) => {\r\n-              const cpFilter = { ...filter };\r\n-              cpFilter.deliveryModeTypes.value = response;\r\n-              setFilter(cpFilter);\r\n-            }}\r\n-          />\r\n-        </div>\r\n-        <div className=\"item-filter\">\r\n-          <InputAutoComplete\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            placeIsSelected={placeIsSelected}\r\n-            setPlaceIsSelected={setPlaceIsSelected}\r\n-            isPendingLatLng={isPendingLatLng}\r\n-            setIsPendingLatLng={setIsPendingLatLng}\r\n-          />\r\n-        </div>\r\n-        <div className=\"btn-filter-banner\">\r\n-          <button\r\n-            className=\"btn-search-filter\"\r\n-            onClick={(e) => {\r\n-              getBenefits(false);\r\n-            }}\r\n-          >\r\n-            {isDesktopOrLaptop && (\r\n-              <>\r\n-                <SearchIcon />\r\n-              </>\r\n-            )}\r\n-            {isTabletOrMobile && <>Recherche</>}\r\n-          </button>\r\n-        </div>\r\n-      </BlocFilterStyle>\r\n-      }\r\n-      {isOlder && isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-      {isOlder && <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-        <BackIcon />\r\n-        <span>Retour à l'univers</span>\r\n-      </BackStyle>\r\n-      }\r\n-      {isOlder && isTabletOrMobile && (\r\n-        <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-          <SearchIcon /> Rechercher une prestation\r\n-        </div>\r\n-      )}\r\n-      {isOlder && (\r\n-        <ArtListePrestationFiche\r\n-          universe={universe}\r\n-          service={service}\r\n-          benefits={benefits}\r\n-          filter={filter}\r\n-          setFilter={setFilter}\r\n-          isPending={isPending}\r\n-          isOlder={isOlder}\r\n-        />\r\n-      )\r\n-      }\r\n-     \r\n-      <Newmap  ></Newmap>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n \r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n@@ -609,200 +157,4 @@\n     </Container>\r\n        \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-export default function MapArtisansUnivers() {\r\n-  const isOlder = true;\r\n-  \r\n-  \r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  \r\n-  \r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    setIsPending(true);\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.label} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      console.log(data);\r\n-      return <></>\r\n-    }\r\n-    else\r\n-    {\r\n-      //console.log(\"RepairManlatlng was loaded--->\");\r\n-      //console.log(tabArray);\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-\r\n-\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-    connector({\r\n-      method: \"get\",\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      },\r\n-      catch: (error) => {\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        console.log(error);\r\n-      },\r\n-      },\r\n-    });\r\n-    });\r\n-  };\r\n-  };\r\n-  const getRepairMen = () => {\r\n-    let dataArray = {\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\"\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          Object.entries(obj).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            // Check if key exists\r\n-            let hasKey = dataArray.hasOwnProperty(key);\r\n-            if (hasKey) {\r\n-              result[dataArray[key]] = value;\r\n-            } else {\r\n-\r\n-            }\r\n-          });\r\n-          //console.log(result);\r\n-          //objelems.ajoutElem(result);\r\n-          tabArray.push(result);\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    \r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      <Newmap >\r\n-\r\n-      </Newmap>\r\n-      <Col>\r\n-        <Row>\r\n-          {showData()}\r\n-        </Row>\r\n-      </Col>\r\n-  \r\n-    </Container>\r\n-       \r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707818626008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n+  \r\n   const isOlder = true;\r\n   \r\n   \r\n   const [isPending, setIsPending] = useState(0);\r\n"
                },
                {
                    "date": 1707818647147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n-  \r\n+\r\n   const isOlder = true;\r\n   \r\n   \r\n   const [isPending, setIsPending] = useState(0);\r\n@@ -80,17 +80,10 @@\n \r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-\r\n   \r\n+  \r\n   const getRepairMen = () => {\r\n     let dataArray = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n"
                },
                {
                    "date": 1707820788148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,10 @@\n       return <></>\r\n     }\r\n     else\r\n     {\r\n-      //console.log(\"RepairManlatlng was loaded--->\");\r\n-      //console.log(tabArray);\r\n+      console.log(\"RepairManlatlng was loaded--->\");\r\n+      console.log(tabArray);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707821055149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     showData();\r\n   }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.label} row={row} />\r\n+    <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n   const showData = () => {\r\n \r\n"
                },
                {
                    "date": 1707821475207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       return <></>\r\n     }\r\n     else\r\n     {\r\n-      console.log(\"RepairManlatlng was loaded--->\");\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n       console.log(tabArray);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n"
                },
                {
                    "date": 1707821923013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n             } else {\r\n \r\n             }\r\n           });\r\n-          //console.log(result);\r\n+          console.log(result);\r\n           //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n         };\r\n         console.log(\"Check the result of connector\");\r\n"
                },
                {
                    "date": 1707822043579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n             } else {\r\n \r\n             }\r\n           });\r\n-          console.log(result);\r\n+          console.log(obj);\r\n           //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n         };\r\n         console.log(\"Check the result of connector\");\r\n"
                },
                {
                    "date": 1707888053601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n-  \r\n-  \r\n+\r\n+\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n@@ -24,10 +24,10 @@\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n-  \r\n-  \r\n+\r\n+\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n@@ -49,10 +49,9 @@\n       console.log(\"RepairManlatlng is pending-->\");\r\n       console.log(data);\r\n       return <></>\r\n     }\r\n-    else\r\n-    {\r\n+    else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       console.log(tabArray);\r\n     }\r\n     console.log(data);\r\n@@ -80,12 +79,12 @@\n \r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n-  \r\n-  \r\n+\r\n+\r\n   const getRepairMen = () => {\r\n-    let dataArray = {\r\n+    let userFieldMap = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n@@ -111,11 +110,15 @@\n           let obj = arrayObj[i];\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n             // Check if key exists\r\n-            let hasKey = dataArray.hasOwnProperty(key);\r\n+            let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              result[dataArray[key]] = value;\r\n+              if (key === 'picture')\r\n+              {\r\n+                console.log(\"Image url\",key, value)\r\n+              }\r\n+              result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n           });\r\n@@ -131,9 +134,9 @@\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n-    \r\n+\r\n     });\r\n   };\r\n \r\n   return (\r\n@@ -146,9 +149,9 @@\n         <Row>\r\n           {showData()}\r\n         </Row>\r\n       </Col>\r\n-  \r\n+\r\n     </Container>\r\n-       \r\n+\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707888307841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       return <></>\r\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      console.log(tabArray);\r\n+      data =tabArray;\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707890476587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,8 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n-\r\n-\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n@@ -46,14 +44,14 @@\n     let data = RepairManlatlng;\r\n     //data = objElement;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n-      console.log(data);\r\n       return <></>\r\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      data =tabArray;\r\n+      data = tabArray.filter(image);\r\n+      data.filter((elt) => elt['picture'].length > 0);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707890488594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       return <></>\r\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      data = tabArray.filter(image);\r\n+      data = tabArray;\r\n       data.filter((elt) => elt['picture'].length > 0);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n"
                },
                {
                    "date": 1707890533064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       data = tabArray;\r\n-      data.filter((elt) => elt['picture'].length > 0);\r\n+      data.filter((elt) => elt['picture'] !== null);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707890560320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       data = tabArray;\r\n-      data.filter((elt) => elt['picture'] !== null);\r\n+      data.filter((elt) => elt['picture'] === null);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707890641601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       data = tabArray;\r\n-      data.filter((elt) => elt['picture'] === null);\r\n+      data.filter((elt) => elt[picture] === null);\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707890734415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       data = tabArray;\r\n-      data.filter((elt) => elt[picture] === null);\r\n+      data.filter((elt) => elt['picture'] === \"null\");\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707891135992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,10 +48,17 @@\n       return <></>\r\n     }\r\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      data = tabArray;\r\n-      data.filter((elt) => elt['picture'] === \"null\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+        if (item[picture].length > 0){\r\n+          xdata[xrow] = item;\r\n+          xrow ++;\r\n+        }\r\n+      data = xdata; \r\n+      })\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707891145002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        if (item[picture].length > 0){\r\n+        if (item['picture'].length > 0){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n       data = xdata; \r\n"
                },
                {
                    "date": 1707891182296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        if (item['picture'].length > 0){\r\n+        if (item['picture'] != null){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n       data = xdata; \r\n"
                },
                {
                    "date": 1707891219077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        if (item['picture'] != null){\r\n+        if (item['picture'] != ''){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n       data = xdata; \r\n"
                },
                {
                    "date": 1707892134854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,14 +51,17 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        if (item['picture'] != ''){\r\n+        if (item['picture'] != '' && xrow < 3){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n+     \r\n+           \r\n+      \r\n+      })\r\n       data = xdata; \r\n-      })\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1707892179415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        if (item['picture'] != '' && xrow < 3){\r\n+        if (item['picture'] != '' && xrow < 4){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n      \r\n"
                },
                {
                    "date": 1707892451925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,15 +51,13 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n+        console.log(item);\r\n         if (item['picture'] != '' && xrow < 4){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n-     \r\n-           \r\n-      \r\n       })\r\n       data = xdata; \r\n     }\r\n     console.log(data);\r\n"
                },
                {
                    "date": 1707892504238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        console.log(item);\r\n+        console.log(\"filterin\",item);\r\n         if (item['picture'] != '' && xrow < 4){\r\n           xdata[xrow] = item;\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707892617294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,11 +51,12 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        console.log(\"filterin\",item);\r\n+        \r\n         if (item['picture'] != '' && xrow < 4){\r\n           xdata[xrow] = item;\r\n+          console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n       })\r\n       data = xdata; \r\n"
                },
                {
                    "date": 1707892682576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n-        if (item['picture'] != '' && xrow < 4){\r\n+        if ((item['picture'] != '') && (xrow < 4)){\r\n           xdata[xrow] = item;\r\n           console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707892763655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n-        if ((item['picture'] != '') && (xrow < 4)){\r\n+        if ((item['picture'] != '') & (xrow < 4)){\r\n           xdata[xrow] = item;\r\n           console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707892912993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n-        if ((item['picture'] != '') & (xrow < 4)){\r\n+        if (item['picture'] != '') {\r\n           xdata[xrow] = item;\r\n           console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707892937311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n-        if (item['picture'] != '') {\r\n+        if (item['picture'] = '') {\r\n           xdata[xrow] = item;\r\n           console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707892972298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n-        if (item['picture'] = '') {\r\n+        if (item['picture'] !== '') {\r\n           xdata[xrow] = item;\r\n           console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707893058204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n-        if (item['picture'] !== '') {\r\n+        if (item['picture'] !== null) {\r\n           xdata[xrow] = item;\r\n           console.log(\"filterin\",item);\r\n           xrow ++;\r\n         }\r\n"
                },
                {
                    "date": 1707893110825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,14 @@\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n         if (item['picture'] !== null) {\r\n-          xdata[xrow] = item;\r\n-          console.log(\"filterin\",item);\r\n+          if(xrow < 4) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\",item);\r\n+\r\n+          }\r\n+          \r\n           xrow ++;\r\n         }\r\n       })\r\n       data = xdata; \r\n"
                },
                {
                    "date": 1707893144112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n         \r\n         if (item['picture'] !== null) {\r\n-          if(xrow < 4) {\r\n+          if(xrow < 3) {\r\n             xdata[xrow] = item;\r\n             console.log(\"filterin\",item);\r\n \r\n           }\r\n"
                },
                {
                    "date": 1707893747925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,9 +155,9 @@\n \r\n       <Newmap >\r\n \r\n       </Newmap>\r\n-      <Col>\r\n+      <Col style= {{ marginBottom:50 }}>\r\n         <Row>\r\n           {showData()}\r\n         </Row>\r\n       </Col>\r\n"
                },
                {
                    "date": 1707893766319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,12 +152,12 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n \r\n-      <Newmap >\r\n+      <Newmap style= {{ marginBottom:50 }} >\r\n \r\n       </Newmap>\r\n-      <Col style= {{ marginBottom:50 }}>\r\n+      <Col >\r\n         <Row>\r\n           {showData()}\r\n         </Row>\r\n       </Col>\r\n"
                },
                {
                    "date": 1707893962701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,10 @@\n       longitude: \"lng\",\r\n       picture: \"picture\",\r\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n-      instagram: \"instagram\"\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n     }\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n"
                },
                {
                    "date": 1707894022132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,12 +124,9 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              if (key === 'picture')\r\n-              {\r\n-                console.log(\"Image url\",key, value)\r\n-              }\r\n+            \r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n"
                },
                {
                    "date": 1707894031079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,14 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-            \r\n+              /*\r\n+              if (key === 'picture')\r\n+              {\r\n+                console.log(\"Image url\",key, value)\r\n+              }\r\n+              */\r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n"
                },
                {
                    "date": 1707896922571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,20 +51,20 @@\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n-        \r\n+\r\n         if (item['picture'] !== null) {\r\n-          if(xrow < 3) {\r\n+          if (xrow < 3) {\r\n             xdata[xrow] = item;\r\n-            console.log(\"filterin\",item);\r\n+            console.log(\"filterin\", item);\r\n \r\n           }\r\n-          \r\n-          xrow ++;\r\n+\r\n+          xrow++;\r\n         }\r\n       })\r\n-      data = xdata; \r\n+      data = xdata;\r\n     }\r\n     console.log(data);\r\n     if (data === false)\r\n       return (\r\n@@ -155,17 +155,22 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 100 }}>\r\n \r\n-      <Newmap style= {{ marginBottom:50 }} >\r\n+      <Newmap style={{ marginBottom: 50 }} >\r\n \r\n       </Newmap>\r\n-      <Col >\r\n-        <Row>\r\n-          {showData()}\r\n-        </Row>\r\n-      </Col>\r\n \r\n+      <Row>\r\n+        <Col>\r\n+          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1707897799529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,14 +124,14 @@\n             const [key, value] = entry;\r\n             // Check if key exists\r\n             let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              /*\r\n-              if (key === 'picture')\r\n+              \r\n+              if (key === 'role')\r\n               {\r\n-                console.log(\"Image url\",key, value)\r\n+                console.log(\"Role\",key, value)\r\n               }\r\n-              */\r\n+             \r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n"
                },
                {
                    "date": 1707897846817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,8 +109,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\",\r\n       address: \"address\",\r\n+      address: \"role\",\r\n     }\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n"
                },
                {
                    "date": 1707897913982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n       description: \"description\",\r\n       facebook: \"facebook\",\r\n       instagram: \"instagram\",\r\n       address: \"address\",\r\n-      address: \"role\",\r\n+      roles: \"roles\",\r\n     }\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n@@ -126,11 +126,11 @@\n             // Check if key exists\r\n             let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               \r\n-              if (key === 'role')\r\n+              if (key === 'roles')\r\n               {\r\n-                console.log(\"Role\",key, value)\r\n+                console.log(\"Roles\",key, value)\r\n               }\r\n              \r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n"
                },
                {
                    "date": 1707898248317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,16 @@\n             if (hasKey) {\r\n               \r\n               if (key === 'roles')\r\n               {\r\n-                console.log(\"Roles\",key, value)\r\n+                console.log(\"Roles\",key, value);\r\n+                value.forEach((item, index) => {\r\n+              \r\n+                  console.log(item);\r\n+\r\n+\r\n+                };\r\n+                //ROLES.ROLE_REPAIRMAN\r\n               }\r\n              \r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n"
                },
                {
                    "date": 1707898259457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n               \r\n                   console.log(item);\r\n \r\n \r\n-                };\r\n+                });\r\n                 //ROLES.ROLE_REPAIRMAN\r\n               }\r\n              \r\n               result[userFieldMap[key]] = value;\r\n"
                },
                {
                    "date": 1707898752118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,10 +120,14 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n+          let toKeep = true;\r\n+          console.log(\"filtre ligne repa\",obj[\"roles\"]);\r\n+          \r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n+\r\n             // Check if key exists\r\n             let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n               \r\n@@ -132,14 +136,13 @@\n                 console.log(\"Roles\",key, value);\r\n                 value.forEach((item, index) => {\r\n               \r\n                   console.log(item);\r\n-\r\n-\r\n+                  if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                    toKeep = true;\r\n+                  }\r\n                 });\r\n-                //ROLES.ROLE_REPAIRMAN\r\n               }\r\n-             \r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n"
                },
                {
                    "date": 1707898794090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n-\r\n+import { ROLES, PREFIX_BACKEND } from \"./../vars\";\r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n"
                },
                {
                    "date": 1707898811563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../vars\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../vars.js\";\r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n"
                },
                {
                    "date": 1707898819448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../vars.js\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n import Newmap from '../../components/front/newMap.js';\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n"
                },
                {
                    "date": 1707898960927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n-          console.log(\"filtre ligne repa\",obj[\"roles\"]);\r\n+          console.log(\"filtre ligne repa\",obj[\"roles\"].find(ROLES.ROLE_REPAIRMAN));\r\n           \r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n"
                },
                {
                    "date": 1707899239049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,10 +121,11 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n-          console.log(\"filtre ligne repa\",obj[\"roles\"].find(ROLES.ROLE_REPAIRMAN));\r\n           \r\n+          const result = obj[\"roles\"].filter( e => e[key] == ROLES.ROLE_REPAIRMAN)\r\n+          console.log(\"filtre ligne repa\",result);\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n             // Check if key exists\r\n"
                },
                {
                    "date": 1707899248158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n           \r\n-          const result = obj[\"roles\"].filter( e => e[key] == ROLES.ROLE_REPAIRMAN)\r\n+          result = obj[\"roles\"].filter( e => e[key] == ROLES.ROLE_REPAIRMAN)\r\n           console.log(\"filtre ligne repa\",result);\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n"
                },
                {
                    "date": 1707899264536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n           \r\n-          result = obj[\"roles\"].filter( e => e[key] == ROLES.ROLE_REPAIRMAN)\r\n+          result = obj[\"roles\"].filter( e => e[\"key\"] == ROLES.ROLE_REPAIRMAN)\r\n           console.log(\"filtre ligne repa\",result);\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n"
                },
                {
                    "date": 1707899457462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,10 +122,13 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n           \r\n-          result = obj[\"roles\"].filter( e => e[\"key\"] == ROLES.ROLE_REPAIRMAN)\r\n-          console.log(\"filtre ligne repa\",result);\r\n+     \r\n+          const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n+\r\n+         \r\n+          console.log(\"filtre ligne repa\",found);\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n             // Check if key exists\r\n"
                },
                {
                    "date": 1707899771542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,22 +120,20 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n-          let toKeep = true;\r\n+          const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n           \r\n-     \r\n-          const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n-\r\n          \r\n-          console.log(\"filtre ligne repa\",found);\r\n+          if (toKeep){\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n             // Check if key exists\r\n             let hasKey = userFieldMap.hasOwnProperty(key);\r\n             if (hasKey) {\r\n-              \r\n+              /*\r\n               if (key === 'roles')\r\n               {\r\n                 console.log(\"Roles\",key, value);\r\n                 value.forEach((item, index) => {\r\n@@ -144,13 +142,14 @@\n                   if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n                     toKeep = true;\r\n                   }\r\n                 });\r\n-              }\r\n+              }*/\r\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n+          }\r\n           });\r\n           console.log(obj);\r\n           //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n"
                },
                {
                    "date": 1707899792239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n           const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n           \r\n          \r\n-          if (toKeep){\r\n+          if (toKeep) {\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n \r\n             // Check if key exists\r\n@@ -147,9 +147,9 @@\n               result[userFieldMap[key]] = value;\r\n             } else {\r\n \r\n             }\r\n-          }\r\n+          \r\n           });\r\n           console.log(obj);\r\n           //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n"
                },
                {
                    "date": 1707899804182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,8 +149,9 @@\n \r\n             }\r\n           \r\n           });\r\n+        }\r\n           console.log(obj);\r\n           //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n         };\r\n"
                },
                {
                    "date": 1707899905869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          \r\n+          toKeep = true;\r\n          \r\n           if (toKeep) {\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n"
                },
                {
                    "date": 1707899944108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          toKeep = true;\r\n+          toKeep = false;\r\n          \r\n           if (toKeep) {\r\n           Object.entries(obj).forEach(entry => {\r\n             const [key, value] = entry;\r\n"
                },
                {
                    "date": 1707900040719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,41 +120,42 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element ==  ROLES.ROLE_REPAIRMAN);\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n           toKeep = false;\r\n-         \r\n+\r\n           if (toKeep) {\r\n-          Object.entries(obj).forEach(entry => {\r\n-            const [key, value] = entry;\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n \r\n-            // Check if key exists\r\n-            let hasKey = userFieldMap.hasOwnProperty(key);\r\n-            if (hasKey) {\r\n-              /*\r\n-              if (key === 'roles')\r\n-              {\r\n-                console.log(\"Roles\",key, value);\r\n-                value.forEach((item, index) => {\r\n-              \r\n-                  console.log(item);\r\n-                  if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                    toKeep = true;\r\n-                  }\r\n-                });\r\n-              }*/\r\n-              result[userFieldMap[key]] = value;\r\n-            } else {\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+                result[userFieldMap[key]] = value;\r\n+              } else {\r\n \r\n-            }\r\n-          \r\n-          });\r\n-        }\r\n-          console.log(obj);\r\n+              }\r\n+\r\n+            });\r\n+            console.log(obj);\r\n           //objelems.ajoutElem(result);\r\n           tabArray.push(result);\r\n+          }\r\n+          \r\n         };\r\n         console.log(\"Check the result of connector\");\r\n         //console.log(objelems);\r\n         console.log(tabArray);\r\n"
                },
                {
                    "date": 1707900070658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          toKeep = false;\r\n+          \r\n \r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1707900130667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,10 +144,8 @@\n                     }\r\n                   });\r\n                 }*/\r\n                 result[userFieldMap[key]] = value;\r\n-              } else {\r\n-\r\n               }\r\n \r\n             });\r\n             console.log(obj);\r\n"
                },
                {
                    "date": 1707902272446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,11 +111,13 @@\n       instagram: \"instagram\",\r\n       address: \"address\",\r\n       roles: \"roles\",\r\n     }\r\n+    //USERS_REPAIRMAN_UNIVERSES\r\n+    //USERS_REPAIRMAN_PUBLIC\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n"
                },
                {
                    "date": 1707902343031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          \r\n+          toKeep=true;\r\n \r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1707902379375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,11 +122,11 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          toKeep=true;\r\n+          //const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          //let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep=true;\r\n \r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1707902838864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,11 +56,9 @@\n         if (item['picture'] !== null) {\r\n           if (xrow < 3) {\r\n             xdata[xrow] = item;\r\n             console.log(\"filterin\", item);\r\n-\r\n           }\r\n-\r\n           xrow++;\r\n         }\r\n       })\r\n       data = xdata;\r\n@@ -85,16 +83,87 @@\n         >\r\n           Aucune donnée\r\n         </h3>\r\n       );\r\n-\r\n-\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n \r\n+  \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          \r\n \r\n-  const getRepairMen = () => {\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(obj);\r\n+          //objelems.ajoutElem(result);\r\n+          tabArray.push(result);\r\n+          }\r\n+          \r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMenUniverses = () => {\r\n     let userFieldMap = {\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n@@ -111,10 +180,9 @@\n       instagram: \"instagram\",\r\n       address: \"address\",\r\n       roles: \"roles\",\r\n     }\r\n-    //USERS_REPAIRMAN_UNIVERSES\r\n-    //USERS_REPAIRMAN_PUBLIC\r\n+   \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -122,11 +190,11 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n-          //const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          //let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep=true;\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          \r\n \r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n@@ -164,9 +232,8 @@\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n-\r\n     });\r\n   };\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1707902999985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,18 +168,8 @@\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n       enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n       roles: \"roles\",\r\n     }\r\n    \r\n     connector({\r\n@@ -189,13 +179,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          \r\n-\r\n+tokeep = true;\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n \r\n@@ -218,18 +204,16 @@\n               }\r\n \r\n             });\r\n             console.log(obj);\r\n-          //objelems.ajoutElem(result);\r\n-          tabArray.push(result);\r\n+          \r\n+          //tabArray.push(result);\r\n           }\r\n           \r\n         };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n+  \r\n+\r\n+      //  setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1707903058055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n \r\n             });\r\n-            console.log(obj);\r\n+            console.log(\"SHOWCASES\",obj);\r\n           \r\n           //tabArray.push(result);\r\n           }\r\n           \r\n"
                },
                {
                    "date": 1707903085039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n-tokeep = true;\r\n+let tokeep = true;\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n \r\n"
                },
                {
                    "date": 1707903094408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n-let tokeep = true;\r\n+let toKeep = true;\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n \r\n"
                },
                {
                    "date": 1707903333075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n       address: \"address\",\r\n       roles: \"roles\",\r\n     }\r\n \r\n-  \r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -118,10 +118,10 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          \r\n \r\n+\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n \r\n@@ -144,12 +144,12 @@\n               }\r\n \r\n             });\r\n             console.log(obj);\r\n-          //objelems.ajoutElem(result);\r\n-          tabArray.push(result);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n           }\r\n-          \r\n+\r\n         };\r\n         console.log(\"Check the result of connector\");\r\n         //console.log(objelems);\r\n         console.log(tabArray);\r\n@@ -170,18 +170,19 @@\n       email: \"email\",\r\n       enterprise: \"label\",\r\n       roles: \"roles\",\r\n     }\r\n-   \r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n+console (\"reparemanshwocas\",arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n-let toKeep = true;\r\n+          let toKeep = true;\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n \r\n@@ -203,17 +204,17 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n \r\n             });\r\n-            console.log(\"SHOWCASES\",obj);\r\n-          \r\n-          //tabArray.push(result);\r\n+\r\n+\r\n+            //tabArray.push(result);\r\n           }\r\n-          \r\n+\r\n         };\r\n-  \r\n \r\n-      //  setIsPending(false);\r\n+\r\n+        //  setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1707903411703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,11 +177,13 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      \r\n console (\"reparemanshwocas\",arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n+          let obj = arrayObj[i];\r\n           let toKeep = true;\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1707903784816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n     setIsPending(true);\r\n     getRepairMen();\r\n+    getRepairMenUniverses();\r\n     console.log('Use effect to be clean');\r\n     showData();\r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1707903955846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n       \r\n-console (\"reparemanshwocas\",arrayObj);\r\n+console.log(\"reparemanshwocas\",arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n"
                },
                {
                    "date": 1707904120379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n       enterprise: \"label\",\r\n-      roles: \"roles\",\r\n+      showcases: \"showcases\",\r\n     }\r\n \r\n     connector({\r\n       method: \"get\",\r\n@@ -191,32 +191,29 @@\n \r\n               // Check if key exists\r\n               let hasKey = userFieldMap.hasOwnProperty(key);\r\n               if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n+                \r\n+                if (key === 'showcases')\r\n                 {\r\n-                  console.log(\"Roles\",key, value);\r\n+                  console.log(\"Showcases\",key, value);\r\n                   value.forEach((item, index) => {\r\n                 \r\n                     console.log(item);\r\n+                    /*\r\n                     if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n                       toKeep = true;\r\n-                    }\r\n+                    }*/\r\n                   });\r\n-                }*/\r\n+                }\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n \r\n             });\r\n-\r\n-\r\n             //tabArray.push(result);\r\n           }\r\n \r\n         };\r\n-\r\n-\r\n         //  setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707907831324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,247 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  useEffect(() => {\r\n+    setIsPending(true);\r\n+    getRepairMen();\r\n+    \r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 3) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n+\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+\r\n+\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            // attach showcases\r\n+           // getShowcases();\r\n+            console.log(obj);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n+          }\r\n+\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id:\"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      \r\n+console.log(userId,\"reparemanshwocas\",arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          let toKeep = true;\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                \r\n+                if (key === 'showcases')\r\n+                {\r\n+                  console.log(\"Showcases\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    /*\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }*/\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            //tabArray.push(result);\r\n+          }\r\n+\r\n+        };\r\n+        //  setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      <Newmap style={{ marginBottom: 50 }} >\r\n+\r\n+      </Newmap>\r\n+\r\n+      <Row>\r\n+        <Col>\r\n+          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707907895964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n \r\n             });\r\n             // attach showcases\r\n            // getShowcases();\r\n-            console.log(obj);\r\n+            console.log(\"repairman whothout showcase\",obj);\r\n             //objelems.ajoutElem(result);\r\n             tabArray.push(result);\r\n           }\r\n \r\n@@ -244,248 +244,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  useEffect(() => {\r\n-    setIsPending(true);\r\n-    getRepairMen();\r\n-    getRepairMenUniverses();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 3) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-\r\n-\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(obj);\r\n-            //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n-          }\r\n-\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMenUniverses = () => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      \r\n-console.log(\"reparemanshwocas\",arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          let toKeep = true;\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                \r\n-                if (key === 'showcases')\r\n-                {\r\n-                  console.log(\"Showcases\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    /*\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }*/\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            //tabArray.push(result);\r\n-          }\r\n-\r\n-        };\r\n-        //  setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      <Newmap style={{ marginBottom: 50 }} >\r\n-\r\n-      </Newmap>\r\n-\r\n-      <Row>\r\n-        <Col>\r\n-          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707908024832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,10 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"whole file\",arrayObj);\r\n+    \r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1707909077933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,9 @@\n   };\r\n \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n+      userId :'@id',\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n"
                },
                {
                    "date": 1707909105652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n \r\n             });\r\n             // attach showcases\r\n            // getShowcases();\r\n-            console.log(\"repairman whothout showcase\",obj);\r\n+            console.log(\"repairman whothout showcase\",result);\r\n             //objelems.ajoutElem(result);\r\n             tabArray.push(result);\r\n           }\r\n \r\n"
                },
                {
                    "date": 1707909255465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n   };\r\n \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n-      userId :'@id',\r\n+      '@id' :\"userId\",\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n"
                },
                {
                    "date": 1707909417669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,8 +149,9 @@\n \r\n             });\r\n             // attach showcases\r\n            // getShowcases();\r\n+            getShowcases(result['userId']);\r\n             console.log(\"repairman whothout showcase\",result);\r\n             //objelems.ajoutElem(result);\r\n             tabArray.push(result);\r\n           }\r\n@@ -185,9 +186,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n       \r\n-console.log(userId,\"reparemanshwocas\",arrayObj);\r\n+console.log(userId,\"<-->shwocas\",arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           let toKeep = true;\r\n"
                },
                {
                    "date": 1707909599665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,12 +178,12 @@\n       email: \"email\",\r\n       enterprise: \"label\",\r\n       showcases: \"showcases\",\r\n     }\r\n-\r\n+    \r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n       \r\n"
                },
                {
                    "date": 1707911472298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n \r\n   const isOlder = true;\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairMenshowCases, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n@@ -29,10 +30,12 @@\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n     setIsPending(true);\r\n-    getRepairMen();\r\n-    \r\n+    initShowCase();\r\n+    console.log(\"repairMenshowCases\",repairMenshowCases);\r\n+    //getRepairMen();\r\n+\r\n     console.log('Use effect to be clean');\r\n     showData();\r\n   }, []);\r\n \r\n@@ -89,9 +92,9 @@\n   };\r\n \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n-      '@id' :\"userId\",\r\n+      '@id': \"userId\",\r\n       username: \"username\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n@@ -115,10 +118,10 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\",arrayObj);\r\n-    \r\n+        console.log(\"whole file\", arrayObj);\r\n+\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n@@ -148,11 +151,11 @@\n               }\r\n \r\n             });\r\n             // attach showcases\r\n-           // getShowcases();\r\n+            // getShowcases();\r\n             getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\",result);\r\n+            console.log(\"repairman whothout showcase\", result);\r\n             //objelems.ajoutElem(result);\r\n             tabArray.push(result);\r\n           }\r\n \r\n@@ -167,62 +170,69 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n+\r\n+\r\n+  const initShowCase= () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+      },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        }\r\n+      });\r\n+  }\r\n   //getRepairMenUniverses\r\n   const getShowcases = (userId) => {\r\n     let userFieldMap = {\r\n       username: \"username\",\r\n-      id:\"id\",\r\n+      id: \"id\",\r\n       firstName: \"firstname\",\r\n       lastName: \"lastname\",\r\n       email: \"email\",\r\n       enterprise: \"label\",\r\n       showcases: \"showcases\",\r\n     }\r\n-    \r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      \r\n-console.log(userId,\"<-->shwocas\",arrayObj);\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n           let obj = arrayObj[i];\r\n-          let toKeep = true;\r\n-          if (toKeep) {\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n               let hasKey = userFieldMap.hasOwnProperty(key);\r\n               if (hasKey) {\r\n-                \r\n-                if (key === 'showcases')\r\n-                {\r\n-                  console.log(\"Showcases\",key, value);\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n                   value.forEach((item, index) => {\r\n-                \r\n                     console.log(item);\r\n-                    /*\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }*/\r\n                   });\r\n                 }\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n \r\n             });\r\n+            console.log(\"univer repa\", result );\r\n             //tabArray.push(result);\r\n           }\r\n+          break;\r\n+        }\r\n+      },\r\n \r\n-        };\r\n-        //  setIsPending(false);\r\n-      },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n     });\r\n"
                },
                {
                    "date": 1707911560580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,8 +204,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n         console.log(userId, \"<-->shwocas\", arrayObj);\r\n         // recherche du userid\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           let obj = arrayObj[i];\r\n"
                },
                {
                    "date": 1707911597845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,9 +179,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n+        setShowCases(\"initShowCase\",arrayObj);\r\n       },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         }\r\n"
                },
                {
                    "date": 1707911652533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n   const toogleCloseFilter = () => setClick(false);\r\n   useEffect(() => {\r\n     setIsPending(true);\r\n     initShowCase();\r\n+  \r\n     console.log(\"repairMenshowCases\",repairMenshowCases);\r\n     //getRepairMen();\r\n \r\n     console.log('Use effect to be clean');\r\n@@ -179,9 +180,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(\"initShowCase\",arrayObj);\r\n+        setShowCases(arrayObj);\r\n       },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         }\r\n"
                },
                {
                    "date": 1707912484569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n   const [isPending, setIsPending] = useState(0);\r\n@@ -28,15 +29,31 @@\n \r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCasebyUniverse= ( univers) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+      },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        }\r\n+      });\r\n+  }\r\n+\r\n+\r\n   useEffect(() => {\r\n     setIsPending(true);\r\n-    initShowCase();\r\n+    //initShowCasebyUniverse();\r\n   \r\n     console.log(\"repairMenshowCases\",repairMenshowCases);\r\n-    //getRepairMen();\r\n-\r\n+    getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();\r\n   }, []);\r\n \r\n@@ -111,10 +128,8 @@\n       instagram: \"instagram\",\r\n       address: \"address\",\r\n       roles: \"roles\",\r\n     }\r\n-\r\n-\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n@@ -126,10 +141,8 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-\r\n-\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n \r\n@@ -153,9 +166,9 @@\n \r\n             });\r\n             // attach showcases\r\n             // getShowcases();\r\n-            getShowcases(result['userId']);\r\n+            //getShowcases(result['userId']);\r\n             console.log(\"repairman whothout showcase\", result);\r\n             //objelems.ajoutElem(result);\r\n             tabArray.push(result);\r\n           }\r\n@@ -173,22 +186,9 @@\n     });\r\n   };\r\n \r\n \r\n-  const initShowCase= () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-      },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        }\r\n-      });\r\n-  }\r\n+\r\n   //getRepairMenUniverses\r\n   const getShowcases = (userId) => {\r\n     let userFieldMap = {\r\n       username: \"username\",\r\n"
                },
                {
                    "date": 1707915166263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  const initShowCasebyUniverse= ( univers) => {\r\n+  const initShowCaseAllUniverses= () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n@@ -48,14 +48,14 @@\n \r\n \r\n   useEffect(() => {\r\n     setIsPending(true);\r\n-    //initShowCasebyUniverse();\r\n-  \r\n+    initShowCaseAllUniverses();\r\n+  /*\r\n     console.log(\"repairMenshowCases\",repairMenshowCases);\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n-    showData();\r\n+    showData();*/\r\n   }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n"
                },
                {
                    "date": 1707915363462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,10 +49,11 @@\n \r\n   useEffect(() => {\r\n     setIsPending(true);\r\n     initShowCaseAllUniverses();\r\n+    console.log(\"repairMenshowCases\",repairMenshowCases);\r\n+    \r\n   /*\r\n-    console.log(\"repairMenshowCases\",repairMenshowCases);\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();*/\r\n   }, []);\r\n"
                },
                {
                    "date": 1707915547150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,10 @@\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n+ \r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const [repairMenshowCases, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n@@ -47,13 +49,14 @@\n   }\r\n \r\n \r\n   useEffect(() => {\r\n-    setIsPending(true);\r\n+    setIsPendingShowCase(true);\r\n     initShowCaseAllUniverses();\r\n     console.log(\"repairMenshowCases\",repairMenshowCases);\r\n-    \r\n+\r\n   /*\r\n+   setIsPending(true);\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();*/\r\n   }, []);\r\n"
                },
                {
                    "date": 1707915665563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n  \r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairMenshowCases, setShowCases] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n@@ -40,8 +40,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n       },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         }\r\n@@ -49,11 +50,12 @@\n   }\r\n \r\n \r\n   useEffect(() => {\r\n-    setIsPendingShowCase(true);\r\n+    setPendingShowCase(true);\r\n     initShowCaseAllUniverses();\r\n-    console.log(\"repairMenshowCases\",repairMenshowCases);\r\n+    if (!isPendingShowcase)\r\n+     console.log(\"repairMenshowCases\",showCasesArray);\r\n \r\n   /*\r\n    setIsPending(true);\r\n     getRepairMen();\r\n"
                },
                {
                    "date": 1707915726685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,11 @@\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();*/\r\n   }, []);\r\n+  useEffect(() => {\r\n+     console.log(\"repairMenshowCases\",showCasesArray);\r\n+  }, [isPendingShowcase]);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n"
                },
                {
                    "date": 1707915746097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,9 @@\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     initShowCaseAllUniverses();\r\n-    if (!isPendingShowcase)\r\n-     console.log(\"repairMenshowCases\",showCasesArray);\r\n+   \r\n \r\n   /*\r\n    setIsPending(true);\r\n     getRepairMen();\r\n"
                },
                {
                    "date": 1707916449691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,24 @@\n         }\r\n       });\r\n   }\r\n \r\n+  const filterShowCaseByUnivers= () => \r\n+  {\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      if (key === 'showcases') {\r\n+          console.log(\"Showcases\", key, value);\r\n+          value.forEach((item, index) => {\r\n+            console.log(item);\r\n+          });\r\n+        }\r\n+        //result[userFieldMap[key]] = value;\r\n+      \r\n+      \r\n+  }\r\n \r\n+\r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     initShowCaseAllUniverses();\r\n    \r\n@@ -62,8 +77,11 @@\n     showData();*/\r\n   }, []);\r\n   useEffect(() => {\r\n      console.log(\"repairMenshowCases\",showCasesArray);\r\n+     // creation d'une array par univers, userid\r\n+     let showcasebyUnivers =[];\r\n+\r\n   }, [isPendingShowcase]);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n"
                },
                {
                    "date": 1707916481737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n- \r\n+\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n@@ -32,9 +32,9 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  const initShowCaseAllUniverses= () => {\r\n+  const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n@@ -42,248 +42,248 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setShowCases(arrayObj);\r\n         setPendingShowCase(false);\r\n       },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        }\r\n-      });\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers= () => \r\n-  {\r\n+  const filterShowCaseByUnivers = () => {\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       if (key === 'showcases') {\r\n-          console.log(\"Showcases\", key, value);\r\n-          value.forEach((item, index) => {\r\n-            console.log(item);\r\n-          });\r\n-        }\r\n-        //result[userFieldMap[key]] = value;\r\n-      \r\n-      \r\n-  }\r\n+        console.log(\"Showcases\", key, value);\r\n+        value.forEach((item, index) => {\r\n+          console.log(item);\r\n+        });\r\n+      }\r\n+      //result[userFieldMap[key]] = value;\r\n \r\n \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    initShowCaseAllUniverses();\r\n-   \r\n+    }\r\n+  };\r\n \r\n-  /*\r\n-   setIsPending(true);\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();*/\r\n-  }, []);\r\n+\r\n   useEffect(() => {\r\n-     console.log(\"repairMenshowCases\",showCasesArray);\r\n-     // creation d'une array par univers, userid\r\n-     let showcasebyUnivers =[];\r\n+      setPendingShowCase(true);\r\n+      initShowCaseAllUniverses();\r\n \r\n-  }, [isPendingShowcase]);\r\n \r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n+      /*\r\n+       setIsPending(true);\r\n+        getRepairMen();\r\n+        console.log('Use effect to be clean');\r\n+        showData();*/\r\n+    }, []);\r\n+    useEffect(() => {\r\n+      console.log(\"repairMenshowCases\", showCasesArray);\r\n+      // creation d'une array par univers, userid\r\n+      let showcasebyUnivers = [];\r\n \r\n-  )\r\n-  const showData = () => {\r\n+    }, [isPendingShowcase]);\r\n \r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n+    const rowRenderArt = (row) => (\r\n+      <ArtItem key={row.email} row={row} />\r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 3) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n+    )\r\n+    const showData = () => {\r\n+\r\n+      let data = RepairManlatlng;\r\n+      //data = objElement;\r\n+      if (isPending) {\r\n+        console.log(\"RepairManlatlng is pending-->\");\r\n+        return <></>\r\n+      }\r\n+      else {\r\n+        console.log(\"RepairManlatlng was show in showdata--->\");\r\n+        let xdata = [];\r\n+        let xrow = 0;\r\n+        tabArray.forEach((item, index) => {\r\n+\r\n+          if (item['picture'] !== null) {\r\n+            if (xrow < 3) {\r\n+              xdata[xrow] = item;\r\n+              console.log(\"filterin\", item);\r\n+            }\r\n+            xrow++;\r\n           }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n+        })\r\n+        data = xdata;\r\n+      }\r\n+      console.log(data);\r\n+      if (data === false)\r\n+        return (\r\n+          <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+            Chargement...\r\n+          </p>\r\n+        );\r\n+      if (data.length === 0)\r\n+        return (\r\n+          <h3\r\n+            style={{\r\n+              textAlign: \"center\",\r\n+              width: \"100%\",\r\n+              fontSize: \"22px\",\r\n+              fontWeight: \"600\",\r\n+              margin: \"40px 0\",\r\n+            }}\r\n+          >\r\n+            Aucune donnée\r\n+          </h3>\r\n+        );\r\n+      return (data.map(rowRenderArt));\r\n+    };\r\n \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\", arrayObj);\r\n+    const getRepairMen = () => {\r\n+      let userFieldMap = {\r\n+        '@id': \"userId\",\r\n+        username: \"username\",\r\n+        firstName: \"firstname\",\r\n+        lastName: \"lastname\",\r\n+        email: \"email\",\r\n+        enterprise: \"label\",\r\n+        gender: \"genre\",\r\n+        postalCode: \"postalcode\",\r\n+        city: \"city_code\",\r\n+        latitude: \"lat\",\r\n+        longitude: \"lng\",\r\n+        picture: \"picture\",\r\n+        description: \"description\",\r\n+        facebook: \"facebook\",\r\n+        instagram: \"instagram\",\r\n+        address: \"address\",\r\n+        roles: \"roles\",\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+        data: {},\r\n+        success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+          console.log(\"whole file\", arrayObj);\r\n \r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            var result = [];\r\n+            let obj = arrayObj[i];\r\n+            const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+            let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+            if (toKeep) {\r\n+              Object.entries(obj).forEach(entry => {\r\n+                const [key, value] = entry;\r\n \r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n+                // Check if key exists\r\n+                let hasKey = userFieldMap.hasOwnProperty(key);\r\n+                if (hasKey) {\r\n+                  /*\r\n+                  if (key === 'roles')\r\n+                  {\r\n+                    console.log(\"Roles\",key, value);\r\n+                    value.forEach((item, index) => {\r\n+                  \r\n+                      console.log(item);\r\n+                      if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                        toKeep = true;\r\n+                      }\r\n+                    });\r\n+                  }*/\r\n+                  result[userFieldMap[key]] = value;\r\n+                }\r\n \r\n-            });\r\n-            // attach showcases\r\n-            // getShowcases();\r\n-            //getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n-          }\r\n+              });\r\n+              // attach showcases\r\n+              // getShowcases();\r\n+              //getShowcases(result['userId']);\r\n+              console.log(\"repairman whothout showcase\", result);\r\n+              //objelems.ajoutElem(result);\r\n+              tabArray.push(result);\r\n+            }\r\n \r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n+          };\r\n+          console.log(\"Check the result of connector\");\r\n+          //console.log(objelems);\r\n+          console.log(tabArray);\r\n+          setxObjElem(tabArray);\r\n+          setIsPending(false);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        }\r\n+      });\r\n+    };\r\n \r\n \r\n \r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n+    //getRepairMenUniverses\r\n+    const getShowcases = (userId) => {\r\n+      let userFieldMap = {\r\n+        username: \"username\",\r\n+        id: \"id\",\r\n+        firstName: \"firstname\",\r\n+        lastName: \"lastname\",\r\n+        email: \"email\",\r\n+        enterprise: \"label\",\r\n+        showcases: \"showcases\",\r\n+      }\r\n \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+        data: {},\r\n+        success: (response) => {\r\n+          const arrayObj = response.data[\"hydra:member\"] || [];\r\n+          var result = [];\r\n+          console.log(userId, \"<-->shwocas\", arrayObj);\r\n+          // recherche du userid\r\n+          for (let i = 0; i < arrayObj.length; i++) {\r\n+            let obj = arrayObj[i];\r\n+            if (obj[\"@id\"] === \"/api/user/114\") {\r\n+              console.log(obj);\r\n+              Object.entries(obj).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                let hasKey = userFieldMap.hasOwnProperty(key);\r\n+                if (hasKey) {\r\n+                  if (key === 'showcases') {\r\n+                    console.log(\"Showcases\", key, value);\r\n+                    value.forEach((item, index) => {\r\n+                      console.log(item);\r\n+                    });\r\n+                  }\r\n+                  result[userFieldMap[key]] = value;\r\n                 }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n \r\n-            });\r\n-            console.log(\"univer repa\", result );\r\n-            //tabArray.push(result);\r\n+              });\r\n+              console.log(\"univer repa\", result);\r\n+              //tabArray.push(result);\r\n+            }\r\n+            break;\r\n           }\r\n-          break;\r\n+        },\r\n+\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n         }\r\n-      },\r\n+      });\r\n+    };\r\n \r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n+    return (\r\n+      <Container style={{ marginTop: 100 }}>\r\n \r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n+        <Newmap style={{ marginBottom: 50 }} >\r\n \r\n-      <Newmap style={{ marginBottom: 50 }} >\r\n+        </Newmap>\r\n \r\n-      </Newmap>\r\n+        <Row>\r\n+          <Col>\r\n+            <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+              Découvrez nos artisans en France</div>\r\n+          </Col>\r\n+        </Row>\r\n+        <Row>\r\n+          {showData()}\r\n+        </Row>\r\n \r\n-      <Row>\r\n-        <Col>\r\n-          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n+      </Container>\r\n \r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n+    );\r\n+  }\r\n"
                },
                {
                    "date": 1707916508080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n       //result[userFieldMap[key]] = value;\r\n \r\n \r\n     }\r\n-  };\r\n+  }\r\n \r\n \r\n   useEffect(() => {\r\n       setPendingShowCase(true);\r\n"
                },
                {
                    "date": 1707916653596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,24 +48,22 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = () => {\r\n+  const filterShowCaseByUnivers = (() => {\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       if (key === 'showcases') {\r\n         console.log(\"Showcases\", key, value);\r\n         value.forEach((item, index) => {\r\n           console.log(item);\r\n         });\r\n       }\r\n-      //result[userFieldMap[key]] = value;\r\n+   \r\n+    });\r\n+  });\r\n \r\n \r\n-    }\r\n-  }\r\n-\r\n-\r\n   useEffect(() => {\r\n       setPendingShowCase(true);\r\n       initShowCaseAllUniverses();\r\n \r\n@@ -76,11 +74,10 @@\n         console.log('Use effect to be clean');\r\n         showData();*/\r\n     }, []);\r\n     useEffect(() => {\r\n-      console.log(\"repairMenshowCases\", showCasesArray);\r\n-      // creation d'une array par univers, userid\r\n-      let showcasebyUnivers = [];\r\n+      filterShowCaseByUnivers();\r\n+      \r\n \r\n     }, [isPendingShowcase]);\r\n \r\n     const rowRenderArt = (row) => (\r\n"
                },
                {
                    "date": 1707916733439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,11 @@\n         console.log('Use effect to be clean');\r\n         showData();*/\r\n     }, []);\r\n     useEffect(() => {\r\n-      filterShowCaseByUnivers();\r\n-      \r\n+      console.log(\"repairMenshowCases\", showCasesArray);\r\n+      // creation d'une array par univers, userid\r\n+      let showcasebyUnivers = [];\r\n \r\n     }, [isPendingShowcase]);\r\n \r\n     const rowRenderArt = (row) => (\r\n"
                },
                {
                    "date": 1707916856977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n \r\n   useEffect(() => {\r\n       setPendingShowCase(true);\r\n       initShowCaseAllUniverses();\r\n+      filterShowCaseByUnivers();\r\n \r\n \r\n       /*\r\n        setIsPending(true);\r\n@@ -75,9 +76,11 @@\n         showData();*/\r\n     }, []);\r\n     useEffect(() => {\r\n       console.log(\"repairMenshowCases\", showCasesArray);\r\n+\r\n       // creation d'une array par univers, userid\r\n+      \r\n       let showcasebyUnivers = [];\r\n \r\n     }, [isPendingShowcase]);\r\n \r\n"
                },
                {
                    "date": 1707916953888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n \r\n   useEffect(() => {\r\n       setPendingShowCase(true);\r\n       initShowCaseAllUniverses();\r\n-      filterShowCaseByUnivers();\r\n+    \r\n \r\n \r\n       /*\r\n        setIsPending(true);\r\n@@ -76,9 +76,9 @@\n         showData();*/\r\n     }, []);\r\n     useEffect(() => {\r\n       console.log(\"repairMenshowCases\", showCasesArray);\r\n-\r\n+      filterShowCaseByUnivers();\r\n       // creation d'une array par univers, userid\r\n       \r\n       let showcasebyUnivers = [];\r\n \r\n"
                },
                {
                    "date": 1707917015266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,9 @@\n     }, []);\r\n     useEffect(() => {\r\n       console.log(\"repairMenshowCases\", showCasesArray);\r\n       filterShowCaseByUnivers();\r\n-      // creation d'une array par univers, userid\r\n-      \r\n-      let showcasebyUnivers = [];\r\n+    \r\n \r\n     }, [isPendingShowcase]);\r\n \r\n     const rowRenderArt = (row) => (\r\n"
                },
                {
                    "date": 1707917072148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = (() => {\r\n+    console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       if (key === 'showcases') {\r\n         console.log(\"Showcases\", key, value);\r\n"
                },
                {
                    "date": 1707917118684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n   }\r\n \r\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n+    showCasesArray.forEach(entry => {\r\n       const [key, value] = entry;\r\n       if (key === 'showcases') {\r\n         console.log(\"Showcases\", key, value);\r\n         value.forEach((item, index) => {\r\n"
                },
                {
                    "date": 1707917154132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,11 @@\n   }\r\n \r\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n-    showCasesArray.forEach(entry => {\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n+      console.log(key);\r\n       if (key === 'showcases') {\r\n         console.log(\"Showcases\", key, value);\r\n         value.forEach((item, index) => {\r\n           console.log(item);\r\n"
                },
                {
                    "date": 1707917171805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n-      console.log(key);\r\n+      console.log(key,value);\r\n       if (key === 'showcases') {\r\n         console.log(\"Showcases\", key, value);\r\n         value.forEach((item, index) => {\r\n           console.log(item);\r\n"
                },
                {
                    "date": 1707917368606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,10 @@\n     console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       console.log(key,value);\r\n-      if (key === 'showcases') {\r\n-        console.log(\"Showcases\", key, value);\r\n-        value.forEach((item, index) => {\r\n-          console.log(item);\r\n-        });\r\n-      }\r\n+      \r\n+      \r\n    \r\n     });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1707917415312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,11 +52,12 @@\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n-      console.log(key,value);\r\n-      \r\n-      \r\n+      value.forEach((item, index) => {\r\n+          console.log(item);\r\n+        });\r\n+      }\r\n    \r\n     });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1707917504385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,13 +52,15 @@\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n-      value.forEach((item, index) => {\r\n-          console.log(item);\r\n-        });\r\n-      }\r\n+      console.log(key,value);\r\n+      let oneUser  = value;\r\n+      oneUser.forEach((item, index) => {\r\n+        console.log(item);\r\n+      });\r\n    \r\n+   \r\n     });\r\n   });\r\n \r\n \r\n"
                },
                {
                    "date": 1707917520636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       console.log(key,value);\r\n-      let oneUser  = value;\r\n+      const oneUser  = value;\r\n       oneUser.forEach((item, index) => {\r\n         console.log(item);\r\n       });\r\n    \r\n"
                },
                {
                    "date": 1707917546802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       console.log(key,value);\r\n       const oneUser  = value;\r\n-      oneUser.forEach((item, index) => {\r\n+      Object.entries(oneUser).forEach((item, index) => {\r\n         console.log(item);\r\n       });\r\n    \r\n    \r\n"
                },
                {
                    "date": 1707917729411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,11 +54,10 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       console.log(key,value);\r\n       const oneUser  = value;\r\n-      Object.entries(oneUser).forEach((item, index) => {\r\n-        console.log(item);\r\n-      });\r\n+      console.log(oneUser['showcases']);\r\n+     \r\n    \r\n    \r\n     });\r\n   });\r\n"
                },
                {
                    "date": 1707917788674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,10 @@\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n-      console.log(key,value);\r\n-      const oneUser  = value;\r\n+      //console.log(key,value);\r\n+      let oneUser  = value;\r\n       console.log(oneUser['showcases']);\r\n      \r\n    \r\n    \r\n"
                },
                {
                    "date": 1707918141812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,15 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser  = value;\r\n-      console.log(oneUser['showcases']);\r\n-     \r\n-   \r\n-   \r\n+      \r\n+      let showcases = oneUser['showcases'];\r\n+      Object.entries(showcases).forEach(entry => {\r\n+        const [key, value] = entry;\r\n+        let showcase =value;\r\n+        console.log(\"showcase\",showcase);\r\n+      });\r\n     });\r\n   });\r\n \r\n \r\n"
                },
                {
                    "date": 1707918237064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,14 +54,14 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser  = value;\r\n-      \r\n+      console.log(\"oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let showcase =value;\r\n-        console.log(\"showcase\",showcase);\r\n+        console.log(\"showcase\", showcase);\r\n       });\r\n     });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1707918352053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser  = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n+      console.log(\"oneUser\", oneUser['@id']);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let showcase =value;\r\n"
                },
                {
                    "date": 1707918582600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,14 +54,14 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser  = value;\r\n-      console.log(\"oneUser\", oneUser['@id']);\r\n+      //console.log(\"oneUser\", oneUser['@id']);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let showcase =value;\r\n-        console.log(\"showcase\", showcase);\r\n+        console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase);\r\n       });\r\n     });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1707918646884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let showcase =value;\r\n-        console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase);\r\n+        console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase['@id']);\r\n       });\r\n     });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1707919218858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,20 +50,30 @@\n   }\r\n \r\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n+\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n+      let xOneRow = [];\r\n+      let xOneCol = [];\r\n+let xi= 0;\r\n+\r\n       let oneUser  = value;\r\n       //console.log(\"oneUser\", oneUser['@id']);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let showcase =value;\r\n-        console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase['@id']);\r\n+        //console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase['@id']);\r\n+        xOneCol[\"user_id\"] = oneUser['@id'];\r\n+        xOneCol[\"univers_id\"] = showcase['@id'];\r\n+        xOneRow[xi] = xOneCol;\r\n+        xi++;\r\n       });\r\n     });\r\n+    console.log(\" xOneRow\", xOneRow);\r\n   });\r\n \r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707919261740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,14 +50,14 @@\n   }\r\n \r\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n-\r\n+    let xOneRow = [];\r\n+    let xOneCol = [];\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n-      let xOneRow = [];\r\n-      let xOneCol = [];\r\n+     \r\n let xi= 0;\r\n \r\n       let oneUser  = value;\r\n       //console.log(\"oneUser\", oneUser['@id']);\r\n"
                },
                {
                    "date": 1707919323804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,20 +52,20 @@\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     let xOneRow = [];\r\n     let xOneCol = [];\r\n+    let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n-     \r\n-let xi= 0;\r\n \r\n-      let oneUser  = value;\r\n+      \r\n+      let oneUser = value;\r\n       //console.log(\"oneUser\", oneUser['@id']);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n-        let showcase =value;\r\n+        let showcase = value;\r\n         //console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase['@id']);\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n         xOneCol[\"univers_id\"] = showcase['@id'];\r\n         xOneRow[xi] = xOneCol;\r\n@@ -76,226 +76,226 @@\n   });\r\n \r\n \r\n   useEffect(() => {\r\n-      setPendingShowCase(true);\r\n-      initShowCaseAllUniverses();\r\n-    \r\n+    setPendingShowCase(true);\r\n+    initShowCaseAllUniverses();\r\n \r\n \r\n-      /*\r\n-       setIsPending(true);\r\n-        getRepairMen();\r\n-        console.log('Use effect to be clean');\r\n-        showData();*/\r\n-    }, []);\r\n-    useEffect(() => {\r\n-      console.log(\"repairMenshowCases\", showCasesArray);\r\n-      filterShowCaseByUnivers();\r\n-    \r\n \r\n-    }, [isPendingShowcase]);\r\n+    /*\r\n+     setIsPending(true);\r\n+      getRepairMen();\r\n+      console.log('Use effect to be clean');\r\n+      showData();*/\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    filterShowCaseByUnivers();\r\n \r\n-    const rowRenderArt = (row) => (\r\n-      <ArtItem key={row.email} row={row} />\r\n \r\n-    )\r\n-    const showData = () => {\r\n+  }, [isPendingShowcase]);\r\n \r\n-      let data = RepairManlatlng;\r\n-      //data = objElement;\r\n-      if (isPending) {\r\n-        console.log(\"RepairManlatlng is pending-->\");\r\n-        return <></>\r\n-      }\r\n-      else {\r\n-        console.log(\"RepairManlatlng was show in showdata--->\");\r\n-        let xdata = [];\r\n-        let xrow = 0;\r\n-        tabArray.forEach((item, index) => {\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n \r\n-          if (item['picture'] !== null) {\r\n-            if (xrow < 3) {\r\n-              xdata[xrow] = item;\r\n-              console.log(\"filterin\", item);\r\n-            }\r\n-            xrow++;\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 3) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n           }\r\n-        })\r\n-        data = xdata;\r\n-      }\r\n-      console.log(data);\r\n-      if (data === false)\r\n-        return (\r\n-          <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-            Chargement...\r\n-          </p>\r\n-        );\r\n-      if (data.length === 0)\r\n-        return (\r\n-          <h3\r\n-            style={{\r\n-              textAlign: \"center\",\r\n-              width: \"100%\",\r\n-              fontSize: \"22px\",\r\n-              fontWeight: \"600\",\r\n-              margin: \"40px 0\",\r\n-            }}\r\n-          >\r\n-            Aucune donnée\r\n-          </h3>\r\n-        );\r\n-      return (data.map(rowRenderArt));\r\n-    };\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n \r\n-    const getRepairMen = () => {\r\n-      let userFieldMap = {\r\n-        '@id': \"userId\",\r\n-        username: \"username\",\r\n-        firstName: \"firstname\",\r\n-        lastName: \"lastname\",\r\n-        email: \"email\",\r\n-        enterprise: \"label\",\r\n-        gender: \"genre\",\r\n-        postalCode: \"postalcode\",\r\n-        city: \"city_code\",\r\n-        latitude: \"lat\",\r\n-        longitude: \"lng\",\r\n-        picture: \"picture\",\r\n-        description: \"description\",\r\n-        facebook: \"facebook\",\r\n-        instagram: \"instagram\",\r\n-        address: \"address\",\r\n-        roles: \"roles\",\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-        data: {},\r\n-        success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-          console.log(\"whole file\", arrayObj);\r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"whole file\", arrayObj);\r\n \r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            var result = [];\r\n-            let obj = arrayObj[i];\r\n-            const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-            let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-            if (toKeep) {\r\n-              Object.entries(obj).forEach(entry => {\r\n-                const [key, value] = entry;\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n \r\n-                // Check if key exists\r\n-                let hasKey = userFieldMap.hasOwnProperty(key);\r\n-                if (hasKey) {\r\n-                  /*\r\n-                  if (key === 'roles')\r\n-                  {\r\n-                    console.log(\"Roles\",key, value);\r\n-                    value.forEach((item, index) => {\r\n-                  \r\n-                      console.log(item);\r\n-                      if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                        toKeep = true;\r\n-                      }\r\n-                    });\r\n-                  }*/\r\n-                  result[userFieldMap[key]] = value;\r\n-                }\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n \r\n-              });\r\n-              // attach showcases\r\n-              // getShowcases();\r\n-              //getShowcases(result['userId']);\r\n-              console.log(\"repairman whothout showcase\", result);\r\n-              //objelems.ajoutElem(result);\r\n-              tabArray.push(result);\r\n-            }\r\n+            });\r\n+            // attach showcases\r\n+            // getShowcases();\r\n+            //getShowcases(result['userId']);\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n+          }\r\n \r\n-          };\r\n-          console.log(\"Check the result of connector\");\r\n-          //console.log(objelems);\r\n-          console.log(tabArray);\r\n-          setxObjElem(tabArray);\r\n-          setIsPending(false);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        }\r\n-      });\r\n-    };\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n \r\n \r\n \r\n-    //getRepairMenUniverses\r\n-    const getShowcases = (userId) => {\r\n-      let userFieldMap = {\r\n-        username: \"username\",\r\n-        id: \"id\",\r\n-        firstName: \"firstname\",\r\n-        lastName: \"lastname\",\r\n-        email: \"email\",\r\n-        enterprise: \"label\",\r\n-        showcases: \"showcases\",\r\n-      }\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n \r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-        data: {},\r\n-        success: (response) => {\r\n-          const arrayObj = response.data[\"hydra:member\"] || [];\r\n-          var result = [];\r\n-          console.log(userId, \"<-->shwocas\", arrayObj);\r\n-          // recherche du userid\r\n-          for (let i = 0; i < arrayObj.length; i++) {\r\n-            let obj = arrayObj[i];\r\n-            if (obj[\"@id\"] === \"/api/user/114\") {\r\n-              console.log(obj);\r\n-              Object.entries(obj).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                let hasKey = userFieldMap.hasOwnProperty(key);\r\n-                if (hasKey) {\r\n-                  if (key === 'showcases') {\r\n-                    console.log(\"Showcases\", key, value);\r\n-                    value.forEach((item, index) => {\r\n-                      console.log(item);\r\n-                    });\r\n-                  }\r\n-                  result[userFieldMap[key]] = value;\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n                 }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n \r\n-              });\r\n-              console.log(\"univer repa\", result);\r\n-              //tabArray.push(result);\r\n-            }\r\n-            break;\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n           }\r\n-        },\r\n-\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n+          break;\r\n         }\r\n-      });\r\n-    };\r\n+      },\r\n \r\n-    return (\r\n-      <Container style={{ marginTop: 100 }}>\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n \r\n-        <Newmap style={{ marginBottom: 50 }} >\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n \r\n-        </Newmap>\r\n+      <Newmap style={{ marginBottom: 50 }} >\r\n \r\n-        <Row>\r\n-          <Col>\r\n-            <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-              Découvrez nos artisans en France</div>\r\n-          </Col>\r\n-        </Row>\r\n-        <Row>\r\n-          {showData()}\r\n-        </Row>\r\n+      </Newmap>\r\n \r\n-      </Container>\r\n+      <Row>\r\n+        <Col>\r\n+          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n \r\n-    );\r\n-  }\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707919617400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,20 +51,19 @@\n \r\n   const filterShowCaseByUnivers = (() => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     let xOneRow = [];\r\n-    let xOneCol = [];\r\n+    \r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n-\r\n-      \r\n       let oneUser = value;\r\n       //console.log(\"oneUser\", oneUser['@id']);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n+        let xOneCol = [];\r\n         let showcase = value;\r\n         //console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase['@id']);\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n         xOneCol[\"univers_id\"] = showcase['@id'];\r\n"
                },
                {
                    "date": 1707919932330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,11 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = (() => {\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n-    let xOneRow = [];\r\n+    let xOneRows = [];\r\n     \r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n@@ -63,16 +63,18 @@\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n-        //console.log(\"oneUser\", oneUser['@id'],\"showcase\", showcase['@id']);\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n         xOneCol[\"univers_id\"] = showcase['@id'];\r\n-        xOneRow[xi] = xOneCol;\r\n-        xi++;\r\n+        if (xOneCol[\"univers_id\"] == universId){\r\n+             xOneRows[xi] = xOneCol;\r\n+             xi++;\r\n+        }     \r\n+        \r\n       });\r\n     });\r\n-    console.log(\" xOneRow\", xOneRow);\r\n+    console.log(\" xOneRows\", xOneRows);\r\n   });\r\n \r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707919961758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n+  const filterShowCaseByUnivers = ((universId=30) => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     let xOneRows = [];\r\n     \r\n     let xi = 0;\r\n"
                },
                {
                    "date": 1707920035570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = ((universId=30) => {\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     let xOneRows = [];\r\n     \r\n     let xi = 0;\r\n@@ -65,11 +65,12 @@\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n         xOneCol[\"univers_id\"] = showcase['@id'];\r\n+        xOneRows[xi] = xOneCol;\r\n+             xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n-             xOneRows[xi] = xOneCol;\r\n-             xi++;\r\n+             \r\n         }     \r\n         \r\n       });\r\n     });\r\n"
                },
                {
                    "date": 1707920439729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n-\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n@@ -79,9 +79,10 @@\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n-    initShowCaseAllUniverses();\r\n+ \r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n \r\n \r\n \r\n     /*\r\n"
                },
                {
                    "date": 1707920465897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n export default function MapArtisansUnivers() {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1707920496998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n     console.log(\"filterShowCaseByUnivers\");\r\n     let xOneRows = [];\r\n-    \r\n+    console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n"
                },
                {
                    "date": 1707920542966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n       showData();*/\r\n   }, []);\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n-    filterShowCaseByUnivers();\r\n+    filterShowCaseByUnivers(slugIdUniverse);\r\n \r\n \r\n   }, [isPendingShowcase]);\r\n \r\n"
                },
                {
                    "date": 1707920560952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\");\r\n+    console.log(\"filterShowCaseByUnivers\",universId);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n"
                },
                {
                    "date": 1707920629701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,10 @@\n       showData();*/\r\n   }, []);\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n-    filterShowCaseByUnivers(slugIdUniverse);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n \r\n \r\n   }, [isPendingShowcase]);\r\n \r\n"
                },
                {
                    "date": 1707920830978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n-        xOneCol[\"univers_id\"] = showcase['@id'];\r\n+        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"-\").pop();;\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n              \r\n"
                },
                {
                    "date": 1707921134824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n+        console.log(\"univer\",showcase['@id'].substr(-1, 2)); \r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"-\").pop();;\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n"
                },
                {
                    "date": 1707921192463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n-        console.log(\"univer\",showcase['@id'].substr(-1, 2)); \r\n+        console.log(\"univer\",showcase['@id'].substr(-2, 2)); \r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"-\").pop();;\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n"
                },
                {
                    "date": 1707921379261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,10 @@\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n-        console.log(\"univer\",showcase['@id'].substr(-2, 2)); \r\n-        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"-\").pop();;\r\n+        console.log('univer pop',showcase['@id'].split(\"-\").pop()); // '30\r\n+        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"-\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n              \r\n"
                },
                {
                    "date": 1707921446267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,10 @@\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'];\r\n-        console.log('univer pop',showcase['@id'].split(\"-\").pop()); // '30\r\n-        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"-\").pop();\r\n+        console.log('univer pop',showcase['@id'].split(\"/\").pop()); // '30\r\n+        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n              \r\n"
                },
                {
                    "date": 1707921515354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,9 @@\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n-        xOneCol[\"user_id\"] = oneUser['@id'];\r\n-        console.log('univer pop',showcase['@id'].split(\"/\").pop()); // '30\r\n+        xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n"
                },
                {
                    "date": 1707921665983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,10 @@\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+        xOneCol[\"api_user\"] = oneUser['@id'];\r\n+        xOneCol[\"api_univers\"]= showcase['@id'];\r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n"
                },
                {
                    "date": 1707921719118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n+        xOneCol[\"lastname\"] = oneUser['lastname'];\r\n         xOneCol[\"api_univers\"]= showcase['@id'];\r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n"
                },
                {
                    "date": 1707921763374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser = value;\r\n-      //console.log(\"oneUser\", oneUser['@id']);\r\n+      console.log(\"oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n         let xOneCol = [];\r\n"
                },
                {
                    "date": 1707922021257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,17 +59,24 @@\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser = value;\r\n       console.log(\"oneUser\", oneUser);\r\n+      \r\n+     \r\n       let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      \r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n+        \r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n-        xOneCol[\"lastname\"] = oneUser['lastname'];\r\n-        xOneCol[\"api_univers\"]= showcase['@id'];\r\n+        xOneCol[\"lastName\"] = oneUser['lastName'];\r\n+        xOneCol[\"api_univers\"]= showcase['title'];\r\n+        xOneCol[\"univers_title\"] =  showcase['@id'].split(\"/\").pop();\r\n+\r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n"
                },
                {
                    "date": 1707922072641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n         xOneCol[\"lastName\"] = oneUser['lastName'];\r\n-        xOneCol[\"api_univers\"]= showcase['title'];\r\n+        xOneCol[\"api_univers_name\"]= showcase['name'];\r\n         xOneCol[\"univers_title\"] =  showcase['@id'].split(\"/\").pop();\r\n \r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n"
                },
                {
                    "date": 1707922187012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,12 +71,10 @@\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n-        xOneCol[\"lastName\"] = oneUser['lastName'];\r\n-        xOneCol[\"api_univers_name\"]= showcase['name'];\r\n-        xOneCol[\"univers_title\"] =  showcase['@id'].split(\"/\").pop();\r\n-\r\n+        xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+        xOneCol[\"univers_name\"]= showcase['name'];\r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n         xOneRows[xi] = xOneCol;\r\n              xi++;\r\n         if (xOneCol[\"univers_id\"] == universId){\r\n"
                },
                {
                    "date": 1707922346158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n         \r\n       });\r\n     });\r\n     console.log(\" xOneRows\", xOneRows);\r\n+    setUniversShowCase(tabArray);\r\n   });\r\n \r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707922360171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         \r\n       });\r\n     });\r\n     console.log(\" xOneRows\", xOneRows);\r\n-    setUniversShowCase(tabArray);\r\n+    setUniversShowCase(xOneRows);\r\n   });\r\n \r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707922451244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n+\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n@@ -83,9 +84,9 @@\n         \r\n       });\r\n     });\r\n     console.log(\" xOneRows\", xOneRows);\r\n-    setUniversShowCase(xOneRows);\r\n+    setShowCases(xOneRows);\r\n   });\r\n \r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1707922602026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,38 +51,38 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\",universId);\r\n+    console.log(\"filterShowCaseByUnivers\", universId);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser = value;\r\n       console.log(\"oneUser\", oneUser);\r\n-      \r\n-     \r\n+\r\n+\r\n       let showcases = oneUser['showcases'];\r\n       console.log(\"showcases\", showcases);\r\n-      \r\n+\r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n-        \r\n+\r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n         xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-        xOneCol[\"univers_name\"]= showcase['name'];\r\n-        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-        xOneRows[xi] = xOneCol;\r\n-             xi++;\r\n-        if (xOneCol[\"univers_id\"] == universId){\r\n-             \r\n-        }     \r\n-        \r\n+        xOneCol[\"univers_name\"] = showcase['name'];\r\n+        xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+\r\n+        if (xOneCol[\"univers_id\"] == universId) {\r\n+          xOneRows[xi] = xOneCol;\r\n+          xi++;\r\n+        }\r\n+\r\n       });\r\n     });\r\n     console.log(\" xOneRows\", xOneRows);\r\n     setShowCases(xOneRows);\r\n@@ -90,9 +90,9 @@\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n- \r\n+\r\n     initShowCaseAllUniverses(slugIdUniverse);\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1707922628742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,38 +51,38 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\", universId);\r\n+    console.log(\"filterShowCaseByUnivers\",universId);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser = value;\r\n       console.log(\"oneUser\", oneUser);\r\n-\r\n-\r\n+      \r\n+     \r\n       let showcases = oneUser['showcases'];\r\n       console.log(\"showcases\", showcases);\r\n-\r\n+      \r\n       Object.entries(showcases).forEach(entry => {\r\n         const [key, value] = entry;\r\n-\r\n+        \r\n         let xOneCol = [];\r\n         let showcase = value;\r\n         xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n         xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-        xOneCol[\"univers_name\"] = showcase['name'];\r\n-        xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-\r\n-        if (xOneCol[\"univers_id\"] == universId) {\r\n-          xOneRows[xi] = xOneCol;\r\n-          xi++;\r\n-        }\r\n-\r\n+        xOneCol[\"univers_name\"]= showcase['name'];\r\n+        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n+        xOneRows[xi] = xOneCol;\r\n+             xi++;\r\n+        if (xOneCol[\"univers_id\"] == universId){\r\n+             \r\n+        }     \r\n+        \r\n       });\r\n     });\r\n     console.log(\" xOneRows\", xOneRows);\r\n     setShowCases(xOneRows);\r\n@@ -90,9 +90,9 @@\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n-\r\n+ \r\n     initShowCaseAllUniverses(slugIdUniverse);\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1707922718611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,13 +75,13 @@\n         xOneCol[\"api_user\"] = oneUser['@id'];\r\n         xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n         xOneCol[\"univers_name\"]= showcase['name'];\r\n         xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-        xOneRows[xi] = xOneCol;\r\n-             xi++;\r\n+        \r\n         if (xOneCol[\"univers_id\"] == universId){\r\n-             \r\n-        }     \r\n+          xOneRows[xi] = xOneCol;\r\n+          xi++;\r\n+                }     \r\n         \r\n       });\r\n     });\r\n     console.log(\" xOneRows\", xOneRows);\r\n"
                },
                {
                    "date": 1707922930005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,31 +60,31 @@\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser = value;\r\n       console.log(\"oneUser\", oneUser);\r\n-      \r\n-     \r\n       let showcases = oneUser['showcases'];\r\n       console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+          Object.entries(showcases).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            \r\n+            let xOneCol = [];\r\n+            let showcase = value;\r\n+            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+            xOneCol[\"api_user\"] = oneUser['@id'];\r\n+            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+            xOneCol[\"univers_name\"]= showcase['name'];\r\n+            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n+            \r\n+            if (xOneCol[\"univers_id\"] == universId){\r\n+              xOneRows[xi] = xOneCol;\r\n+              xi++;\r\n+                    }     \r\n+            \r\n+          });\r\n+        }\r\n+        });\r\n       \r\n-      Object.entries(showcases).forEach(entry => {\r\n-        const [key, value] = entry;\r\n-        \r\n-        let xOneCol = [];\r\n-        let showcase = value;\r\n-        xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-        xOneCol[\"api_user\"] = oneUser['@id'];\r\n-        xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-        xOneCol[\"univers_name\"]= showcase['name'];\r\n-        xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-        \r\n-        if (xOneCol[\"univers_id\"] == universId){\r\n-          xOneRows[xi] = xOneCol;\r\n-          xi++;\r\n-                }     \r\n-        \r\n-      });\r\n-    });\r\n     console.log(\" xOneRows\", xOneRows);\r\n     setShowCases(xOneRows);\r\n   });\r\n \r\n"
                },
                {
                    "date": 1707923081974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n             \r\n-            if (xOneCol[\"univers_id\"] == universId){\r\n+            if (xOneCol[\"univers_id\"] === universId){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n             \r\n"
                },
                {
                    "date": 1707923132816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,316 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"filterShowCaseByUnivers\",universId);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+          Object.entries(showcases).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            \r\n+            let xOneCol = [];\r\n+            let showcase = value;\r\n+            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+            xOneCol[\"api_user\"] = oneUser['@id'];\r\n+            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+            xOneCol[\"univers_name\"]= showcase['name'];\r\n+            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n+            \r\n+            if (xOneCol[\"univers_id\"] == universId){\r\n+              xOneRows[xi] = xOneCol;\r\n+              xi++;\r\n+                    }     \r\n+            \r\n+          });\r\n+        }\r\n+        });\r\n+      \r\n+    console.log(\" xOneRows\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+ \r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n+\r\n+\r\n+\r\n+    /*\r\n+     setIsPending(true);\r\n+      getRepairMen();\r\n+      console.log('Use effect to be clean');\r\n+      showData();*/\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+\r\n+\r\n+  }, [isPendingShowcase]);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 3) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"whole file\", arrayObj);\r\n+\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            // attach showcases\r\n+            // getShowcases();\r\n+            //getShowcases(result['userId']);\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n+          }\r\n+\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      <Newmap style={{ marginBottom: 50 }} >\r\n+\r\n+      </Newmap>\r\n+\r\n+      <Row>\r\n+        <Col>\r\n+          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707923466674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n             xOneCol[\"api_user\"] = oneUser['@id'];\r\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            \r\n+            console.log(\"compare\",xOneCol[\"univers_id\"], )\r\n             if (xOneCol[\"univers_id\"] == universId){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n@@ -313,320 +313,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\",universId);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-          Object.entries(showcases).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            \r\n-            let xOneCol = [];\r\n-            let showcase = value;\r\n-            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-            xOneCol[\"api_user\"] = oneUser['@id'];\r\n-            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-            xOneCol[\"univers_name\"]= showcase['name'];\r\n-            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            \r\n-            if (xOneCol[\"univers_id\"] === universId){\r\n-              xOneRows[xi] = xOneCol;\r\n-              xi++;\r\n-                    }     \r\n-            \r\n-          });\r\n-        }\r\n-        });\r\n-      \r\n-    console.log(\" xOneRows\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n- \r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n-\r\n-\r\n-\r\n-    /*\r\n-     setIsPending(true);\r\n-      getRepairMen();\r\n-      console.log('Use effect to be clean');\r\n-      showData();*/\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-\r\n-\r\n-  }, [isPendingShowcase]);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 3) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\", arrayObj);\r\n-\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            // attach showcases\r\n-            // getShowcases();\r\n-            //getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n-          }\r\n-\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      <Newmap style={{ marginBottom: 50 }} >\r\n-\r\n-      </Newmap>\r\n-\r\n-      <Row>\r\n-        <Col>\r\n-          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707923472671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n             xOneCol[\"api_user\"] = oneUser['@id'];\r\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"], )\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],universId );\r\n             if (xOneCol[\"univers_id\"] == universId){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n"
                },
                {
                    "date": 1707923598309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,10 +73,10 @@\n             xOneCol[\"api_user\"] = oneUser['@id'];\r\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],universId );\r\n-            if (xOneCol[\"univers_id\"] == universId){\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],{universId} );\r\n+            if (xOneCol[\"univers_id\"] == {universId}){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n             \r\n"
                },
                {
                    "date": 1707923641886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,10 +73,10 @@\n             xOneCol[\"api_user\"] = oneUser['@id'];\r\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],{universId} );\r\n-            if (xOneCol[\"univers_id\"] == {universId}){\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],universId );\r\n+            if (xOneCol[\"univers_id\"] == universId){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n             \r\n"
                },
                {
                    "date": 1707923698808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n             xOneCol[\"api_user\"] = oneUser['@id'];\r\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],universId );\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\");\r\n             if (xOneCol[\"univers_id\"] == universId){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n"
                },
                {
                    "date": 1707923732887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n             xOneCol[\"api_user\"] = oneUser['@id'];\r\n             xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n             xOneCol[\"univers_name\"]= showcase['name'];\r\n             xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\");\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\", xOneCol[\"univers_id\"]  == universId ,\"-\");\r\n             if (xOneCol[\"univers_id\"] == universId){\r\n               xOneRows[xi] = xOneCol;\r\n               xi++;\r\n                     }     \r\n"
                },
                {
                    "date": 1707923815723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,18 +90,17 @@\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n- \r\n     initShowCaseAllUniverses(slugIdUniverse);\r\n \r\n \r\n \r\n-    /*\r\n+  \r\n      setIsPending(true);\r\n       getRepairMen();\r\n       console.log('Use effect to be clean');\r\n-      showData();*/\r\n+      showData();\r\n   }, []);\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1707930698792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,13 +212,18 @@\n                       toKeep = true;\r\n                     }\r\n                   });\r\n                 }*/\r\n+\r\n+                \r\n+\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n \r\n             });\r\n             // attach showcases\r\n+            // verifier que le repairman est dans l'univers  \r\n+                 \r\n             // getShowcases();\r\n             //getShowcases(result['userId']);\r\n             console.log(\"repairman whothout showcase\", result);\r\n             //objelems.ajoutElem(result);\r\n"
                },
                {
                    "date": 1707934182935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,320 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"filterShowCaseByUnivers\",universId);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+          Object.entries(showcases).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            \r\n+            let xOneCol = [];\r\n+            let showcase = value;\r\n+            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+            xOneCol[\"api_user\"] = oneUser['@id'];\r\n+            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+            xOneCol[\"univers_name\"]= showcase['name'];\r\n+            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\", xOneCol[\"univers_id\"]  == universId ,\"-\");\r\n+            if (xOneCol[\"univers_id\"] == universId){\r\n+              xOneRows[xi] = xOneCol;\r\n+              xi++;\r\n+                    }     \r\n+            \r\n+          });\r\n+        }\r\n+        });\r\n+      \r\n+    console.log(\" xOneRows\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n+\r\n+\r\n+\r\n+  \r\n+     setIsPending(true);\r\n+      getRepairMen();\r\n+      console.log('Use effect to be clean');\r\n+      showData();\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+\r\n+\r\n+  }, [isPendingShowcase]);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 3) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"whole file\", arrayObj);\r\n+\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+\r\n+                \r\n+\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            // attach showcases\r\n+            // verifier que le repairman est dans l'univers  \r\n+                 \r\n+            // getShowcases();\r\n+            //getShowcases(result['userId']);\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n+          }\r\n+\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      <Newmap style={{ marginBottom: 100 }} >\r\n+\r\n+      </Newmap>\r\n+\r\n+      <Row>\r\n+        <Col>\r\n+          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707934332037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,316 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"filterShowCaseByUnivers\",universId);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+          Object.entries(showcases).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            \r\n+            let xOneCol = [];\r\n+            let showcase = value;\r\n+            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+            xOneCol[\"api_user\"] = oneUser['@id'];\r\n+            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+            xOneCol[\"univers_name\"]= showcase['name'];\r\n+            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n+            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\", xOneCol[\"univers_id\"]  == universId ,\"-\");\r\n+            if (xOneCol[\"univers_id\"] == universId){\r\n+              xOneRows[xi] = xOneCol;\r\n+              xi++;\r\n+                    }     \r\n+            \r\n+          });\r\n+        }\r\n+        });\r\n+      \r\n+    console.log(\" xOneRows\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n+     setIsPending(true);\r\n+      getRepairMen();\r\n+      console.log('Use effect to be clean');\r\n+      showData();\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+\r\n+\r\n+  }, [isPendingShowcase]);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 3) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"whole file\", arrayObj);\r\n+\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+\r\n+                \r\n+\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            // attach showcases\r\n+            // verifier que le repairman est dans l'univers  \r\n+                 \r\n+            // getShowcases();\r\n+            //getShowcases(result['userId']);\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n+          }\r\n+\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 100 }}>\r\n+\r\n+      <Newmap style={{ marginBottom: 100 }} >\r\n+\r\n+      </Newmap>\r\n+\r\n+      <Row >\r\n+        <Col>\r\n+          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        </Col>\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707934386170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,14 +293,14 @@\n     });\r\n   };\r\n \r\n   return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n+    <Container>\r\n+<Row >\r\n+      <Newmap  >\r\n \r\n-      <Newmap style={{ marginBottom: 100 }} >\r\n-\r\n       </Newmap>\r\n-\r\n+      </Row>\r\n       <Row >\r\n         <Col>\r\n           <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n             Découvrez nos artisans en France</div>\r\n@@ -313,644 +313,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\",universId);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-          Object.entries(showcases).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            \r\n-            let xOneCol = [];\r\n-            let showcase = value;\r\n-            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-            xOneCol[\"api_user\"] = oneUser['@id'];\r\n-            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-            xOneCol[\"univers_name\"]= showcase['name'];\r\n-            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\", xOneCol[\"univers_id\"]  == universId ,\"-\");\r\n-            if (xOneCol[\"univers_id\"] == universId){\r\n-              xOneRows[xi] = xOneCol;\r\n-              xi++;\r\n-                    }     \r\n-            \r\n-          });\r\n-        }\r\n-        });\r\n-      \r\n-    console.log(\" xOneRows\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n-\r\n-\r\n-\r\n-  \r\n-     setIsPending(true);\r\n-      getRepairMen();\r\n-      console.log('Use effect to be clean');\r\n-      showData();\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-\r\n-\r\n-  }, [isPendingShowcase]);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 3) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\", arrayObj);\r\n-\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n-\r\n-                \r\n-\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            // attach showcases\r\n-            // verifier que le repairman est dans l'univers  \r\n-                 \r\n-            // getShowcases();\r\n-            //getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n-          }\r\n-\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      <Newmap style={{ marginBottom: 100 }} >\r\n-\r\n-      </Newmap>\r\n-\r\n-      <Row>\r\n-        <Col>\r\n-          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\",universId);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-          Object.entries(showcases).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            \r\n-            let xOneCol = [];\r\n-            let showcase = value;\r\n-            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-            xOneCol[\"api_user\"] = oneUser['@id'];\r\n-            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-            xOneCol[\"univers_name\"]= showcase['name'];\r\n-            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\", xOneCol[\"univers_id\"]  == universId ,\"-\");\r\n-            if (xOneCol[\"univers_id\"] == universId){\r\n-              xOneRows[xi] = xOneCol;\r\n-              xi++;\r\n-                    }     \r\n-            \r\n-          });\r\n-        }\r\n-        });\r\n-      \r\n-    console.log(\" xOneRows\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n-\r\n-\r\n-\r\n-  \r\n-     setIsPending(true);\r\n-      getRepairMen();\r\n-      console.log('Use effect to be clean');\r\n-      showData();\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-\r\n-\r\n-  }, [isPendingShowcase]);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 3) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\", arrayObj);\r\n-\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n-\r\n-                \r\n-\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            // attach showcases\r\n-            // verifier que le repairman est dans l'univers  \r\n-                 \r\n-            // getShowcases();\r\n-            //getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n-          }\r\n-\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 100 }}>\r\n-\r\n-      <Newmap style={{ marginBottom: 50 }} >\r\n-\r\n-      </Newmap>\r\n-\r\n-      <Row>\r\n-        <Col>\r\n-          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707934428507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,9 +293,9 @@\n     });\r\n   };\r\n \r\n   return (\r\n-    <Container>\r\n+    <Container style={{ marginTop:50 }}>\r\n <Row >\r\n       <Newmap  >\r\n \r\n       </Newmap>\r\n"
                },
                {
                    "date": 1707934483460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\",universId);\r\n+    console.log(\"filterShowCaseByUnivers\", universId);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n@@ -63,40 +63,40 @@\n       console.log(\"oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n       console.log(\"showcases\", showcases);\r\n       if (showcases != null) {\r\n-          Object.entries(showcases).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            \r\n-            let xOneCol = [];\r\n-            let showcase = value;\r\n-            xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-            xOneCol[\"api_user\"] = oneUser['@id'];\r\n-            xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-            xOneCol[\"univers_name\"]= showcase['name'];\r\n-            xOneCol[\"univers_id\"] =  showcase['@id'].split(\"/\").pop();\r\n-            console.log(\"compare\",xOneCol[\"univers_id\"],\"-\",universId ,\"-\", xOneCol[\"univers_id\"]  == universId ,\"-\");\r\n-            if (xOneCol[\"univers_id\"] == universId){\r\n-              xOneRows[xi] = xOneCol;\r\n-              xi++;\r\n-                    }     \r\n-            \r\n-          });\r\n-        }\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n         });\r\n-      \r\n+      }\r\n+    });\r\n+\r\n     console.log(\" xOneRows\", xOneRows);\r\n     setShowCases(xOneRows);\r\n   });\r\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     initShowCaseAllUniverses(slugIdUniverse);\r\n-     setIsPending(true);\r\n-      getRepairMen();\r\n-      console.log('Use effect to be clean');\r\n-      showData();\r\n+    setIsPending(true);\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n   }, []);\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n@@ -209,17 +209,17 @@\n                     }\r\n                   });\r\n                 }*/\r\n \r\n-                \r\n \r\n+\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n \r\n             });\r\n             // attach showcases\r\n             // verifier que le repairman est dans l'univers  \r\n-                 \r\n+\r\n             // getShowcases();\r\n             //getShowcases(result['userId']);\r\n             console.log(\"repairman whothout showcase\", result);\r\n             //objelems.ajoutElem(result);\r\n@@ -293,13 +293,13 @@\n     });\r\n   };\r\n \r\n   return (\r\n-    <Container style={{ marginTop:50 }}>\r\n-<Row >\r\n-      <Newmap  >\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginTop: 50 }}  >\r\n \r\n-      </Newmap>\r\n+        </Newmap>\r\n       </Row>\r\n       <Row >\r\n         <Col>\r\n           <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1707934502532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -295,9 +295,9 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row >\r\n-        <Newmap style={{ marginTop: 50 }}  >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n \r\n         </Newmap>\r\n       </Row>\r\n       <Row >\r\n"
                },
                {
                    "date": 1707934523095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,15 +299,12 @@\n         <Newmap style={{ marginBottom: 50 }}  >\r\n \r\n         </Newmap>\r\n       </Row>\r\n-      <Row >\r\n-        <Col>\r\n-          <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+\r\n+      <Row>\r\n+      <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n             Découvrez nos artisans en France</div>\r\n-        </Col>\r\n-      </Row>\r\n-      <Row>\r\n         {showData()}\r\n       </Row>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707934557671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,9 +301,9 @@\n         </Newmap>\r\n       </Row>\r\n \r\n       <Row>\r\n-      <div style={{ width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+      <div style={{ marginTop:50 , width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n             Découvrez nos artisans en France</div>\r\n         {showData()}\r\n       </Row>\r\n \r\n"
                },
                {
                    "date": 1707937644776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"filterShowCaseByUnivers\", universId);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\" xOneRows\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n+    setIsPending(true);\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+\r\n+\r\n+  }, [isPendingShowcase]);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+  const showData = () => {\r\n+\r\n+    let data = RepairManlatlng;\r\n+    //data = objElement;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 6) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    console.log(data);\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      gender: \"genre\",\r\n+      postalCode: \"postalcode\",\r\n+      city: \"city_code\",\r\n+      latitude: \"lat\",\r\n+      longitude: \"lng\",\r\n+      picture: \"picture\",\r\n+      description: \"description\",\r\n+      facebook: \"facebook\",\r\n+      instagram: \"instagram\",\r\n+      address: \"address\",\r\n+      roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"whole file\", arrayObj);\r\n+\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+\r\n+              // Check if key exists\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                /*\r\n+                if (key === 'roles')\r\n+                {\r\n+                  console.log(\"Roles\",key, value);\r\n+                  value.forEach((item, index) => {\r\n+                \r\n+                    console.log(item);\r\n+                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n+                      toKeep = true;\r\n+                    }\r\n+                  });\r\n+                }*/\r\n+\r\n+\r\n+\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            // attach showcases\r\n+            // verifier que le repairman est dans l'univers  \r\n+\r\n+            // getShowcases();\r\n+            //getShowcases(result['userId']);\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            //objelems.ajoutElem(result);\r\n+            tabArray.push(result);\r\n+          }\r\n+\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        //console.log(objelems);\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+      <div style={{ marginTop:50 , width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+            Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707938558249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,77 +87,13 @@\n     console.log(\" xOneRows\", xOneRows);\r\n     setShowCases(xOneRows);\r\n   });\r\n \r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n-    setIsPending(true);\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-\r\n-\r\n-  }, [isPendingShowcase]);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 6) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n+  \r\n+  const userIsInThisUniverse = (universId, userId) => {\r\n+     return false;\r\n+  }\r\n+  \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\",\r\n       username: \"username\",\r\n@@ -222,9 +158,11 @@\n             // getShowcases();\r\n             //getShowcases(result['userId']);\r\n             console.log(\"repairman whothout showcase\", result);\r\n             //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n+            if (userIsInThisUniverse()) {\r\n+              tabArray.push(result);\r\n+            }\r\n           }\r\n \r\n         };\r\n         console.log(\"Check the result of connector\");\r\n@@ -239,170 +177,8 @@\n     });\r\n   };\r\n \r\n \r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-      <div style={{ marginTop:50 , width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\", universId);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\" xOneRows\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-\r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     initShowCaseAllUniverses(slugIdUniverse);\r\n     setIsPending(true);\r\n@@ -436,9 +212,9 @@\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n         if (item['picture'] !== null) {\r\n-          if (xrow < 3) {\r\n+          if (xrow < 6) {\r\n             xdata[xrow] = item;\r\n             console.log(\"filterin\", item);\r\n           }\r\n           xrow++;\r\n@@ -469,92 +245,12 @@\n       );\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\", arrayObj);\r\n \r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n \r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n \r\n \r\n-\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            // attach showcases\r\n-            // verifier que le repairman est dans l'univers  \r\n-\r\n-            // getShowcases();\r\n-            //getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            //objelems.ajoutElem(result);\r\n-            tabArray.push(result);\r\n-          }\r\n-\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n   //getRepairMenUniverses\r\n   const getShowcases = (userId) => {\r\n     let userFieldMap = {\r\n       username: \"username\",\r\n@@ -614,10 +310,10 @@\n         </Newmap>\r\n       </Row>\r\n \r\n       <Row>\r\n-      <div style={{ marginTop:50 , width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-            Découvrez nos artisans en France</div>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n         {showData()}\r\n       </Row>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1707939249903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"filterShowCaseByUnivers\", universId);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\" xOneRows\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (userId) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"showCasesArray\",showCasesArray);\r\n+    console.log(\"userId UniversId\",userId,universId);\r\n+    return false;\r\n+  }\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            if (userIsInThisUniverse(result['userId'])) {\r\n+              tabArray.push(result);\r\n+            }\r\n+          }\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n+    setIsPending(true);\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, [isPendingShowcase]);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 6) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707939725761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,12 +89,14 @@\n     setShowCases(xOneRows);\r\n   });\r\n \r\n   \r\n-  const userIsInThisUniverse = (userId) => {\r\n+  const userIsInThisUniverse = (api_user) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"showCasesArray\",showCasesArray);\r\n-    console.log(\"userId UniversId\",userId,universId);\r\n+    console.log(\"userId UniversId\",api_user,universId);\r\n+    const found = showCasesArray.find((element) => element[\"api_user\"] == api_user);\r\n+    console.log(\"found\", found);\r\n     return false;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n@@ -282,326 +284,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\", universId);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\" xOneRows\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (universId, userId) => {\r\n-     return false;\r\n-  }\r\n-  \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      gender: \"genre\",\r\n-      postalCode: \"postalcode\",\r\n-      city: \"city_code\",\r\n-      latitude: \"lat\",\r\n-      longitude: \"lng\",\r\n-      picture: \"picture\",\r\n-      description: \"description\",\r\n-      facebook: \"facebook\",\r\n-      instagram: \"instagram\",\r\n-      address: \"address\",\r\n-      roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"whole file\", arrayObj);\r\n-\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-\r\n-              // Check if key exists\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                /*\r\n-                if (key === 'roles')\r\n-                {\r\n-                  console.log(\"Roles\",key, value);\r\n-                  value.forEach((item, index) => {\r\n-                \r\n-                    console.log(item);\r\n-                    if (item.value == ROLES.ROLE_REPAIRMAN) {\r\n-                      toKeep = true;\r\n-                    }\r\n-                  });\r\n-                }*/\r\n-\r\n-\r\n-\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            // attach showcases\r\n-            // verifier que le repairman est dans l'univers  \r\n-\r\n-            // getShowcases();\r\n-            //getShowcases(result['userId']);\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            //objelems.ajoutElem(result);\r\n-            if (userIsInThisUniverse()) {\r\n-              tabArray.push(result);\r\n-            }\r\n-          }\r\n-\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        //console.log(objelems);\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n-    setIsPending(true);\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-\r\n-\r\n-  }, [isPendingShowcase]);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-  const showData = () => {\r\n-\r\n-    let data = RepairManlatlng;\r\n-    //data = objElement;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 6) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    console.log(data);\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707940696889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,10 +93,20 @@\n   const userIsInThisUniverse = (api_user) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n-    const found = showCasesArray.find((element) => element[\"api_user\"] == api_user);\r\n-    console.log(\"found\", found);\r\n+    let zFound = false;\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      \r\n+      }\r\n+    }  \r\n+    console.log('compare', showCasesArray[i].api_user, '-',showCasesArray[i].univers_id, '-');\r\n+    console.log(\"found\", zFound);\r\n     return false;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n"
                },
                {
                    "date": 1707940837425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,19 +95,19 @@\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('compare', showCasesArray[i].api_user, '-',showCasesArray[i].univers_id, '-');\r\n+    \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n           zFound = true;\r\n           break;\r\n         }\r\n-      \r\n       }\r\n+      console.log(\"found\", zFound);\r\n     }  \r\n-    console.log('compare', showCasesArray[i].api_user, '-',showCasesArray[i].univers_id, '-');\r\n-    console.log(\"found\", zFound);\r\n-    return false;\r\n+    return zFound;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n"
                },
                {
                    "date": 1707940962208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,10 @@\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('compare', showCasesArray[i].api_user, '-',showCasesArray[i].univers_id, '-');\r\n+      console.log('compare', showCasesArray[i].api_user, '-' ,api_user\r\n+                           , showCasesArray[i].univers_id, '-', universId );\r\n     \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n           zFound = true;\r\n"
                },
                {
                    "date": 1707941048598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n         if (item['picture'] !== null) {\r\n-          if (xrow < 6) {\r\n+          if (xrow < 12) {\r\n             xdata[xrow] = item;\r\n             console.log(\"filterin\", item);\r\n           }\r\n           xrow++;\r\n"
                },
                {
                    "date": 1707941131596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('compare', showCasesArray[i].api_user, '-' ,api_user\r\n+      console.log('comparing before display', showCasesArray[i].api_user, '-' ,api_user\r\n                            , showCasesArray[i].univers_id, '-', universId );\r\n     \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n"
                },
                {
                    "date": 1707941216589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,10 +95,10 @@\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('comparing before display', showCasesArray[i].api_user, '-' ,api_user\r\n-                           , showCasesArray[i].univers_id, '-', universId );\r\n+      console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n     \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n           zFound = true;\r\n"
                },
                {
                    "date": 1707941638021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n-  }, [isPendingShowcase]);\r\n+  }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n"
                },
                {
                    "date": 1707942045723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,299 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"initShowCaseAllUniverses\",arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"filterShowCaseByUnivers\", universId);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\" xOneRows\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"showCasesArray\",showCasesArray);\r\n+    console.log(\"userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"repairman whothout showcase\", result);\r\n+            if (userIsInThisUniverse(result['userId'])) {\r\n+              tabArray.push(result);\r\n+            }\r\n+          }\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    initShowCaseAllUniverses(slugIdUniverse);\r\n+    setIsPending(true);\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    showData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707942573353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         }\r\n       }\r\n       console.log(\"found\", zFound);\r\n     }  \r\n-    return zFound;\r\n+    return true;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n@@ -296,302 +296,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\", universId);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\" xOneRows\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"showCasesArray\",showCasesArray);\r\n-    console.log(\"userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"repairman whothout showcase\", result);\r\n-            if (userIsInThisUniverse(result['userId'])) {\r\n-              tabArray.push(result);\r\n-            }\r\n-          }\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n-    setIsPending(true);\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    showData();\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707942744977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,9 @@\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n+    console.log(\"USER? userIsInThisUniverse\");\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n                            ,':',showCasesArray[i].univers_id, '-', universId );\r\n     \r\n"
                },
                {
                    "date": 1707942793069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n-    console.log(\"USER? userIsInThisUniverse\");\r\n+    console.log(\"USER? userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n                            ,':',showCasesArray[i].univers_id, '-', universId );\r\n     \r\n"
                },
                {
                    "date": 1707942828781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"showCasesArray\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n-    console.log(\"USER? userIsInThisUniverse : len\", showCasesArray.length);\r\n+    console.log(\"Komp USER? userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n                            ,':',showCasesArray[i].univers_id, '-', universId );\r\n     \r\n"
                },
                {
                    "date": 1707943160931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n   const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"initShowCaseAllUniverses\",arrayObj );\r\n"
                },
                {
                    "date": 1707943186225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n   const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=2&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"initShowCaseAllUniverses\",arrayObj );\r\n"
                },
                {
                    "date": 1707943197132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n \r\n   const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=2&itemsPerPage=1000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"initShowCaseAllUniverses\",arrayObj );\r\n"
                },
                {
                    "date": 1707943671641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,8 +142,9 @@\n               }\r\n             });\r\n             console.log(\"repairman whothout showcase\", result);\r\n             if (userIsInThisUniverse(result['userId'])) {\r\n+              console.log(\"userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n           }\r\n         };\r\n"
                },
                {
                    "date": 1707943713672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,8 +145,12 @@\n             if (userIsInThisUniverse(result['userId'])) {\r\n               console.log(\"userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n+            else\r\n+            {\r\n+              console.log(\"WARNING CHECK user Is ot InThisUniverse\", result);\r\n+            }\r\n           }\r\n         };\r\n         console.log(\"Check the result of connector\");\r\n         console.log(tabArray);\r\n"
                },
                {
                    "date": 1707943744859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n               tabArray.push(result);\r\n             }\r\n             else\r\n             {\r\n-              console.log(\"WARNING CHECK user Is ot InThisUniverse\", result);\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n             }\r\n           }\r\n         };\r\n         console.log(\"Check the result of connector\");\r\n"
                },
                {
                    "date": 1707943764505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n               }\r\n             });\r\n             console.log(\"repairman whothout showcase\", result);\r\n             if (userIsInThisUniverse(result['userId'])) {\r\n-              console.log(\"userIsInThisUniverse\", result);\r\n+              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n             else\r\n             {\r\n"
                },
                {
                    "date": 1707943830074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n         }\r\n       }\r\n       console.log(\"found\", zFound);\r\n     }  \r\n-    return true;\r\n+    return zFound;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n"
                },
                {
                    "date": 1707944058630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"showCasesArray\",showCasesArray);\r\n+    console.log(\"SHOWCASE\",showCasesArray);\r\n     console.log(\"userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     console.log(\"Komp USER? userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n"
                },
                {
                    "date": 1707945569195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n-  }, []);\r\n+  }, [slugIdUniverse]);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n"
                },
                {
                    "date": 1707945860008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,9 @@\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n-    initShowCaseAllUniverses(slugIdUniverse);\r\n+    initShowCaseAllUniverses();\r\n     setIsPending(true);\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     showData();\r\n@@ -176,9 +176,9 @@\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n-  }, [slugIdUniverse]);\r\n+  }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n"
                },
                {
                    "date": 1707945945000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,8 +125,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n+        initShowCaseAllUniverses();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n"
                },
                {
                    "date": 1707946154702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n         }\r\n       }\r\n       console.log(\"found\", zFound);\r\n     }  \r\n-    return zFound;\r\n+    return true;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n"
                },
                {
                    "date": 1707946659621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"initShowCaseAllUniverses\",arrayObj );\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n         setShowCases(arrayObj);\r\n         setPendingShowCase(false);\r\n       },\r\n       catch: (error) => {\r\n@@ -92,14 +92,14 @@\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"SHOWCASE\",showCasesArray);\r\n-    console.log(\"userId UniversId\",api_user,universId);\r\n+    console.log(\"STEP 4 1 SHOWCASE NEVER BE EMPTY\",showCasesArray);\r\n+    console.log(\"STEP 4 2 userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n-    console.log(\"Komp USER? userIsInThisUniverse : len\", showCasesArray.length);\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('Komp before display', showCasesArray[i].api_user, '-' ,api_user\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n                            ,':',showCasesArray[i].univers_id, '-', universId );\r\n     \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n@@ -127,9 +127,9 @@\n       data: {},\r\n       success: (response) => {\r\n         initShowCaseAllUniverses();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n@@ -141,9 +141,9 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            console.log(\"repairman whothout showcase\", result);\r\n+            console.log(\"STEP 3 VERIFY USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'])) {\r\n               console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n"
                },
                {
                    "date": 1707946751423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,10 +92,10 @@\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 SHOWCASE NEVER BE EMPTY\",showCasesArray);\r\n-    console.log(\"STEP 4 2 userId UniversId\",api_user,universId);\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n"
                },
                {
                    "date": 1707946880687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n         setShowCases(arrayObj);\r\n         setPendingShowCase(false);\r\n+        return arrayObj ;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1707947395084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n         setShowCases(arrayObj);\r\n         setPendingShowCase(false);\r\n-        return arrayObj ;\r\n+        \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n@@ -126,9 +126,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        initShowCaseAllUniverses();\r\n+      \r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n@@ -167,20 +167,23 @@\n \r\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n     setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n-  }, []);\r\n+  }, [isPendingShowcase]);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n"
                },
                {
                    "date": 1707947545781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n       data: {},\r\n       success: (response) => {\r\n       \r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC\", arrayObj);\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1707947957973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"filterShowCaseByUnivers\", universId);\r\n+    console.log(\"STEP 1 filterShowCaseByUnivers (showCasesArray)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n@@ -142,9 +142,9 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            console.log(\"STEP 3 VERIFY USER HAVE SHOWCASE\", result);\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'])) {\r\n               console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n@@ -181,9 +181,9 @@\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n-  }, [isPendingShowcase]);\r\n+  }, []);\r\n \r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n"
                },
                {
                    "date": 1707948061124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,310 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId) => {\r\n+    console.log(\"STEP 1 filterShowCaseByUnivers (showCasesArray)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    console.log(universId);\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP Inconnu  xOneRows contient les utilisateurs avec l'univers et les showcases\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return true;\r\n+  }\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'])) {\r\n+              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707948475109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,142 +35,16 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"STEP 1 filterShowCaseByUnivers (showCasesArray)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP Inconnu  xOneRows contient les utilisateurs avec l'univers et les showcases\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n   \r\n-  const userIsInThisUniverse = (api_user) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return true;\r\n-  }\r\n-  \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'])) {\r\n-              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  \r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n@@ -183,170 +57,8 @@\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n   }, []);\r\n \r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n   const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n@@ -396,9 +108,9 @@\n         });\r\n       }\r\n     });\r\n \r\n-    console.log(\" xOneRows\", xOneRows);\r\n+    console.log(\"STEP 2  xOneRows contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n   });\r\n \r\n   \r\n@@ -475,26 +187,9 @@\n     });\r\n   };\r\n \r\n \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, []);\r\n \r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-\r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n"
                },
                {
                    "date": 1707948653114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,14 +50,15 @@\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, []);\r\n-\r\n+/*\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     filterShowCaseByUnivers(id);\r\n   }, []);\r\n+  */\r\n \r\n   const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n@@ -76,9 +77,9 @@\n     });\r\n   }\r\n \r\n   const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"STEP 1 filterShowCaseByUnivers (showCasesArray)\", universId, showCasesArray);\r\n+    console.log(\"STEP 1 filterShowCaseByUnivers (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n"
                },
                {
                    "date": 1707949002254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,10 +40,10 @@\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n   \r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n     getRepairMen();\r\n@@ -64,11 +64,13 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n         setShowCases(arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -76,10 +78,10 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = ((universId) => {\r\n-    console.log(\"STEP 1 filterShowCaseByUnivers (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     console.log(universId);\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n"
                },
                {
                    "date": 1707949250101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n+  \r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, []);\r\n+/*\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+  */\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return true;\r\n+  }\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'])) {\r\n+              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707949477519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,14 +95,15 @@\n           const [key, value] = entry;\r\n \r\n           let xOneCol = [];\r\n           let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n           xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n           xOneCol[\"api_user\"] = oneUser['@id'];\r\n           xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n           xOneCol[\"univers_name\"] = showcase['name'];\r\n           xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n           if (xOneCol[\"univers_id\"] == universId) {\r\n             xOneRows[xi] = xOneCol;\r\n             xi++;\r\n           }\r\n@@ -110,9 +111,9 @@\n         });\r\n       }\r\n     });\r\n \r\n-    console.log(\"STEP 2  xOneRows contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n   });\r\n \r\n   \r\n@@ -314,322 +315,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-  \r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, []);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    console.log(universId);\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return true;\r\n-  }\r\n-  \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'])) {\r\n-              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707950045922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses RETRIEVE USER/UNIVERs WITH SHOWCASE\",arrayObj );\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         filterShowCaseByUnivers(universId, arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n"
                },
                {
                    "date": 1707950526475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,11 @@\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n     //const id = slugIdUniverse.split(\"-\").pop();\r\n     //filterShowCaseByUnivers(id);\r\n-  \r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    \r\n+   \r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n"
                },
                {
                    "date": 1707950606463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,320 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    \r\n+   \r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n+    getRepairMen();\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, []);\r\n+/*\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+  */\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setShowCases(xOneRows);\r\n+  });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return true;\r\n+  }\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'])) {\r\n+              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            //tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707951080924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,9 +287,9 @@\n               }\r\n \r\n             });\r\n             console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n+            tabArray.push(result);\r\n           }\r\n           break;\r\n         }\r\n       },\r\n@@ -317,324 +317,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    \r\n-   \r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n-    getRepairMen();\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, []);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-  });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return true;\r\n-  }\r\n-  \r\n-  const getRepairMen = () => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'])) {\r\n-              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            //tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707951218718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,9 @@\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n+    xOneRows.push();\r\n   });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n@@ -136,9 +137,9 @@\n         }\r\n       }\r\n       console.log(\"found\", zFound);\r\n     }  \r\n-    return true;\r\n+    return zFound;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n"
                },
                {
                    "date": 1707951354251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,9 @@\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n-    xOneRows.push();\r\n-  });\r\n+    });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1707951647328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,8 +156,9 @@\n       success: (response) => {\r\n       \r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1707951763172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     \r\n    \r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n-    getRepairMen();\r\n+    getRepairMen(showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, []);\r\n@@ -139,9 +139,9 @@\n     }  \r\n     return zFound;\r\n   }\r\n   \r\n-  const getRepairMen = () => {\r\n+  const getRepairMen = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1707951868951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n     \r\n    \r\n     setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \");\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n     getRepairMen(showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n"
                },
                {
                    "date": 1707952051144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,10 @@\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n+    \r\n+    showCasesArray = xOneRows;\r\n     });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n"
                },
                {
                    "date": 1707952171044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n     \r\n-    showCasesArray = xOneRows;\r\n+    //showCasesArray = xOneRows;\r\n     });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n"
                },
                {
                    "date": 1707952243701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,9 @@\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n-    \r\n-    //showCasesArray = xOneRows;\r\n+    showCasesArray = xOneRows;\r\n     });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n"
                },
                {
                    "date": 1707952384346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     getRepairMen(showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n-  }, []);\r\n+  }, [slugIdUniverse]);\r\n /*\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1707952608152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n         }\r\n       }\r\n       console.log(\"found\", zFound);\r\n     }  \r\n-    return zFound;\r\n+    return true;\r\n   }\r\n   \r\n   const getRepairMen = (showCasesArray) => {\r\n     let userFieldMap = {\r\n"
                },
                {
                    "date": 1707952793401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,17 +149,18 @@\n       city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n       description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n       address: \"address\", roles: \"roles\",\r\n     }\r\n+    let xshowCasesArray = showCasesArray;\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n       \r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",xshowCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1707952948779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,18 +149,18 @@\n       city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n       description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n       address: \"address\", roles: \"roles\",\r\n     }\r\n-    let xshowCasesArray = showCasesArray;\r\n+    \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n       \r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",xshowCasesArray);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1707953084384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     \r\n    \r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    getRepairMen(showCasesArray);\r\n+    getRepairMen();\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, [slugIdUniverse]);\r\n@@ -140,9 +140,9 @@\n     }  \r\n     return true;\r\n   }\r\n   \r\n-  const getRepairMen = (showCasesArray) => {\r\n+  const getRepairMen = () => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1707953143948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,8 @@\n     initShowCaseAllUniverses();\r\n     //const id = slugIdUniverse.split(\"-\").pop();\r\n     //filterShowCaseByUnivers(id);\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    \r\n-   \r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n     getRepairMen();\r\n     console.log('Use effect to be clean');\r\n@@ -137,9 +135,9 @@\n         }\r\n       }\r\n       console.log(\"found\", zFound);\r\n     }  \r\n-    return true;\r\n+    return zFound;\r\n   }\r\n   \r\n   const getRepairMen = () => {\r\n     let userFieldMap = {\r\n"
                },
                {
                    "date": 1707953324003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n     //filterShowCaseByUnivers(id);\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    getRepairMen();\r\n+    getRepairMen(showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, [slugIdUniverse]);\r\n@@ -138,9 +138,9 @@\n     }  \r\n     return zFound;\r\n   }\r\n   \r\n-  const getRepairMen = () => {\r\n+  const getRepairMen = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1707953489588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setShowCases(xOneRows);\r\n-    showCasesArray = xOneRows;\r\n+    \r\n     });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n"
                },
                {
                    "date": 1707953551212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,321 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n+    getRepairMen(showCasesArray);\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, [slugIdUniverse]);\r\n+/*\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+  */\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    \r\n+    showCasesArray = xOneRows;\r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'])) {\r\n+              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        console.log(\"Check the result of connector\");\r\n+        console.log(tabArray);\r\n+        setxObjElem(tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707953793325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n+    //\r\n     //const id = slugIdUniverse.split(\"-\").pop();\r\n     //filterShowCaseByUnivers(id);\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n     setIsPending(true);\r\n@@ -318,325 +319,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    getRepairMen(showCasesArray);\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, [slugIdUniverse]);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setShowCases(xOneRows);\r\n-    \r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'])) {\r\n-              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        console.log(\"Check the result of connector\");\r\n-        console.log(tabArray);\r\n-        setxObjElem(tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707953868838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,10 @@\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     \r\n     showCasesArray = xOneRows;\r\n+    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n+   \r\n     });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user) => {\r\n"
                },
                {
                    "date": 1707953898564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+  const filterShowCaseByUnivers = ((universId ) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n"
                },
                {
                    "date": 1707953916304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n+        filterShowCaseByUnivers(universId);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707954083104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -79,9 +79,9 @@\n       }\r\n     });\r\n   }\r\n \r\n-  const filterShowCaseByUnivers = ((universId ) => {\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n"
                },
                {
                    "date": 1707954322171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         filterShowCaseByUnivers(universId, arrayObj);\r\n+        getRepairMen(arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707954505594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,11 +185,12 @@\n               console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n             }\r\n           }\r\n         };\r\n-        console.log(\"Check the result of connector\");\r\n-        console.log(tabArray);\r\n+      \r\n+    \r\n         setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1707954666592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n    \r\n     });\r\n \r\n   \r\n-  const userIsInThisUniverse = (api_user) => {\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n@@ -175,9 +175,9 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'])) {\r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n               console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n             else\r\n"
                },
                {
                    "date": 1707954876205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,327 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    //\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n+    getRepairMen(showCasesArray);\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, [slugIdUniverse]);\r\n+/*\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+  */\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n+        getRepairMen(arrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    \r\n+    showCasesArray = xOneRows;\r\n+    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n+   \r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n+                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            console.log(\"STEP 4  no empty SHOWCASE\", showCasesArray);\r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+      \r\n+    \r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707954912229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n             });\r\n             console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             console.log(\"STEP 4  no empty SHOWCASE\", showCasesArray);\r\n             if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n             else\r\n             {\r\n@@ -324,330 +324,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    //\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    getRepairMen(showCasesArray);\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, [slugIdUniverse]);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n-        getRepairMen(arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    \r\n-    showCasesArray = xOneRows;\r\n-    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n-   \r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-      \r\n-    \r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707955145348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,10 +128,10 @@\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i].api_user, '-' ,api_user\r\n-                           ,':',showCasesArray[i].univers_id, '-', universId );\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['@id'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n     \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n           zFound = true;\r\n"
                },
                {
                    "date": 1707955339545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,17 +175,18 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            console.log(\"STEP 4  no empty SHOWCASE\", showCasesArray);\r\n+            tabArray.push(result);\r\n+            /*\r\n             if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n               console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n             else\r\n             {\r\n               console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n+            }*/\r\n           }\r\n         };\r\n       \r\n     \r\n"
                },
                {
                    "date": 1707955369349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n           }\r\n         };\r\n       \r\n     \r\n-        setxObjElem(tabArray);\r\n+        \r\n         console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707955465485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n           }\r\n         };\r\n       \r\n     \r\n-        \r\n+        setxObjElem(tabArray);\r\n         console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1707955779580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,328 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    //\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n+    getRepairMen(showCasesArray);\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, [slugIdUniverse]);\r\n+/*\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+  */\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n+        getRepairMen(arrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    \r\n+    showCasesArray = xOneRows;\r\n+    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n+   \r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['@id'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = () => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            tabArray.push(result);\r\n+            /*\r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }*/\r\n+          }\r\n+        };\r\n+      \r\n+    \r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707956090580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     //filterShowCaseByUnivers(id);\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    getRepairMen(showCasesArray);\r\n+    //getRepairMen(showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, [slugIdUniverse]);\r\n@@ -325,332 +325,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    //\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    getRepairMen(showCasesArray);\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, [slugIdUniverse]);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n-        getRepairMen(arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    \r\n-    showCasesArray = xOneRows;\r\n-    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n-   \r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['@id'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            tabArray.push(result);\r\n-            /*\r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }*/\r\n-          }\r\n-        };\r\n-      \r\n-    \r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1707956245069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n     }  \r\n     return zFound;\r\n   }\r\n   \r\n-  const getRepairMen = () => {\r\n+  const getRepairMen = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1707956516114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     \r\n     showCasesArray = xOneRows;\r\n     console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n-   \r\n+    return xOneRows;\r\n     });\r\n \r\n   \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n"
                },
                {
                    "date": 1707956530729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n+        arrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n         getRepairMen(arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n"
                },
                {
                    "date": 1707956931982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,10 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         arrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        console.log(\"STEP 1 :REsult \", arrayObj );\r\n+       \r\n         getRepairMen(arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n"
                },
                {
                    "date": 1707957000533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,10 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        arrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n-        console.log(\"STEP 1 :REsult \", arrayObj );\r\n+        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n        \r\n         getRepairMen(arrayObj);\r\n         setPendingShowCase(false);\r\n         \r\n"
                },
                {
                    "date": 1707957017412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,330 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+    //\r\n+    //const id = slugIdUniverse.split(\"-\").pop();\r\n+    //filterShowCaseByUnivers(id);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n+    //getRepairMen(showCasesArray);\r\n+    console.log('Use effect to be clean');\r\n+    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+    showData();\r\n+  }, [slugIdUniverse]);\r\n+/*\r\n+  useEffect(() => {\r\n+    console.log(\"repairMenshowCases\", showCasesArray);\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    filterShowCaseByUnivers(id);\r\n+  }, []);\r\n+  */\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n+       \r\n+        getRepairMen(filteredArrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    \r\n+    showCasesArray = xOneRows;\r\n+    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n+    return xOneRows;\r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['@id'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+      console.log(\"found\", zFound);\r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+      \r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            tabArray.push(result);\r\n+            /*\r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }*/\r\n+          }\r\n+        };\r\n+      \r\n+    \r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row >\r\n+        <Newmap style={{ marginBottom: 50 }}  >\r\n+\r\n+        </Newmap>\r\n+      </Row>\r\n+\r\n+      <Row>\r\n+        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          Découvrez nos artisans en France</div>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1707957195993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n     let zFound = false;\r\n     console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['@id'], '-' ,api_user\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n                            ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n     \r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId ) {\r\n@@ -177,348 +177,17 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            tabArray.push(result);\r\n-            /*\r\n+            \r\n             if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n               console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n             else\r\n             {\r\n               console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }*/\r\n-          }\r\n-        };\r\n-      \r\n-    \r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n-        </Newmap>\r\n-      </Row>\r\n-\r\n-      <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-    //\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    //getRepairMen(showCasesArray);\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n-  }, [slugIdUniverse]);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n-        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n-       \r\n-        getRepairMen(arrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    \r\n-    showCasesArray = xOneRows;\r\n-    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n-    return xOneRows;\r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['@id'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-      console.log(\"found\", zFound);\r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-      \r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            tabArray.push(result);\r\n-            /*\r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n             }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }*/\r\n           }\r\n         };\r\n       \r\n     \r\n"
                },
                {
                    "date": 1708005977634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,10 +317,9 @@\n         </Newmap>\r\n       </Row>\r\n \r\n       <Row>\r\n-        <div style={{ marginTop: 50, width: '100%', height: '100%', color: '#465A61', fontSize: 48, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          Découvrez nos artisans en France</div>\r\n+      <CordStyle>  Découvrez nos artisans en France   </CordStyle>\r\n         {showData()}\r\n       </Row>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1708006036514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,8 +317,10 @@\n         </Newmap>\r\n       </Row>\r\n \r\n       <Row>\r\n+      <Row><div style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        Prestations favorites des utilisateurs</div></Row>\r\n       <CordStyle>  Découvrez nos artisans en France   </CordStyle>\r\n         {showData()}\r\n       </Row>\r\n \r\n"
                },
                {
                    "date": 1708006129108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,12 +316,15 @@\n \r\n         </Newmap>\r\n       </Row>\r\n \r\n+      \r\n+      <Row \r\n+      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n+               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+                 Découvrez nos artisans en France>\r\n+      </Row>\r\n       <Row>\r\n-      <Row><div style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        Prestations favorites des utilisateurs</div></Row>\r\n-      <CordStyle>  Découvrez nos artisans en France   </CordStyle>\r\n         {showData()}\r\n       </Row>\r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1708006135340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,9 +320,9 @@\n       \r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-                 Découvrez nos artisans en France>\r\n+                 Découvrez nos artisans en France\r\n       </Row>\r\n       <Row>\r\n         {showData()}\r\n       </Row>\r\n"
                },
                {
                    "date": 1708010820161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n           zFound = true;\r\n           break;\r\n         }\r\n       }\r\n-      console.log(\"found\", zFound);\r\n+    \r\n     }  \r\n     return zFound;\r\n   }\r\n   \r\n"
                },
                {
                    "date": 1708010997821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n   }\r\n   \r\n   const getRepairMen = (showCasesArray) => {\r\n     let userFieldMap = {\r\n-      '@id': \"userId\",\r\n+      '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n       city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n       description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n"
                },
                {
                    "date": 1708011749707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,8 @@\n     //filterShowCaseByUnivers(id);\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    //getRepairMen(showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n     showData();\r\n   }, [slugIdUniverse]);\r\n"
                },
                {
                    "date": 1708012186283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,21 +311,16 @@\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row >\r\n         <Newmap style={{ marginBottom: 50 }}  >\r\n-\r\n         </Newmap>\r\n       </Row>\r\n-\r\n-      \r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n                  Découvrez nos artisans en France\r\n       </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n+    \r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1708012334808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,11 @@\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n                  Découvrez nos artisans en France\r\n       </Row>\r\n-    \r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1708012395766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,9 +158,8 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-      \r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n         console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n@@ -187,10 +186,8 @@\n               console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n             }\r\n           }\r\n         };\r\n-      \r\n-    \r\n         setxObjElem(tabArray);\r\n         console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n         setIsPending(false);\r\n       },\r\n@@ -199,10 +196,8 @@\n       }\r\n     });\r\n   };\r\n \r\n-\r\n-\r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n"
                },
                {
                    "date": 1708012582632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n-    showData();\r\n+ \r\n   }, [slugIdUniverse]);\r\n /*\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n"
                },
                {
                    "date": 1708012614045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     setIsPending(true);\r\n     console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n     console.log('Use effect to be clean');\r\n     console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n- \r\n+    //showData();\r\n   }, [slugIdUniverse]);\r\n /*\r\n   useEffect(() => {\r\n     console.log(\"repairMenshowCases\", showCasesArray);\r\n"
                },
                {
                    "date": 1708012832555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,16 +40,11 @@\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n-    //\r\n-    //const id = slugIdUniverse.split(\"-\").pop();\r\n-    //filterShowCaseByUnivers(id);\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n     setIsPending(true);\r\n-    console.log(\"STEP USE EFFECT 2 getRepairMen() \",showCasesArray);\r\n-    console.log('Use effect to be clean');\r\n-    console.log(\"STEP USE EFFECT 3 Show DATA \");\r\n+\r\n     //showData();\r\n   }, [slugIdUniverse]);\r\n /*\r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1708012970844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,16 +45,10 @@\n     setIsPending(true);\r\n \r\n     //showData();\r\n   }, [slugIdUniverse]);\r\n-/*\r\n-  useEffect(() => {\r\n-    console.log(\"repairMenshowCases\", showCasesArray);\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    filterShowCaseByUnivers(id);\r\n-  }, []);\r\n-  */\r\n \r\n+\r\n   const initShowCaseAllUniverses = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n@@ -110,11 +104,8 @@\n       }\r\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    \r\n-    showCasesArray = xOneRows;\r\n-    console.log(\"STEP 2  showCasesArray  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", showCasesArray);\r\n     return xOneRows;\r\n     });\r\n \r\n   \r\n"
                },
                {
                    "date": 1708013159030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,307 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import Newmap from '../../components/front/newMap.js';\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+\r\n+  }, [slugIdUniverse]);\r\n+\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n+       \r\n+        getRepairMen(filteredArrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    return xOneRows;\r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    \r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            \r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+     \r\n+      <Row \r\n+      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n+               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+                 Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708013208387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n+\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n"
                },
                {
                    "date": 1708013298459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newmapreact.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n@@ -299,319 +300,11 @@\n       </Row>\r\n       <Row>\r\n         {showData()}\r\n       </Row>\r\n+      <NewMap>\r\n+        </NewMap>\r\n \r\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import Newmap from '../../components/front/newMap.js';\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-\r\n-    //showData();\r\n-  }, [slugIdUniverse]);\r\n-\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n-        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n-       \r\n-        getRepairMen(filteredArrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    return xOneRows;\r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    \r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            \r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row >\r\n-        <Newmap style={{ marginBottom: 50 }}  >\r\n-        </Newmap>\r\n-      </Row>\r\n-      <Row \r\n-      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n-               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-                 Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708013359965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,19 +291,19 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     \r\n+     <NewMap>\r\n+        </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n                  Découvrez nos artisans en France\r\n       </Row>\r\n       <Row>\r\n         {showData()}\r\n       </Row>\r\n-      <NewMap>\r\n-        </NewMap>\r\n+      \r\n \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1708013669135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newmapreact.js\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n"
                },
                {
                    "date": 1708013701924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n+import NewMap from \"../../components/front/newmapreact.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n"
                },
                {
                    "date": 1708013826760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newmapreact.js\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n"
                },
                {
                    "date": 1708014784722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,310 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newmapreact.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+\r\n+  }, [slugIdUniverse]);\r\n+\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n+       \r\n+        getRepairMen(filteredArrayObj);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    return xOneRows;\r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    \r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            \r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+     <NewMap>\r\n+        </NewMap>\r\n+      <Row \r\n+      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n+               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+                 Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+      \r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708015702326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newmapreact.js\";\r\n+import NewMap from \"../../components/front/newmap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n@@ -307,314 +307,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-\r\n-  }, [slugIdUniverse]);\r\n-\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n-        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n-       \r\n-        getRepairMen(filteredArrayObj);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    return xOneRows;\r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    \r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            \r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-     <NewMap>\r\n-        </NewMap>\r\n-      <Row \r\n-      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n-               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-                 Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-      \r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708015707504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newmap.js\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n"
                },
                {
                    "date": 1708015722504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n+import NewMap from \"../../components/front/newmapreact.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n"
                },
                {
                    "date": 1708016925419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newmapreact.js\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers() {\r\n \r\n"
                },
                {
                    "date": 1708017134738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,9 +291,9 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap>\r\n+     <NewMap filterObjet={filteredArrayObj}>\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708017158489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,9 +291,9 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap filterObjet={filteredArrayObj}>\r\n+     <NewMap filteredArrayObj={filteredArrayObj}>\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708017280988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n-\r\n+  const  filteredArrayObj=[];\r\n   \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n@@ -57,9 +57,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n         console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n        \r\n         getRepairMen(filteredArrayObj);\r\n         setPendingShowCase(false);\r\n"
                },
                {
                    "date": 1708017472580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n         console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n        \r\n         getRepairMen(filteredArrayObj);\r\n         setPendingShowCase(false);\r\n"
                },
                {
                    "date": 1708017547300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n+  const [filteredArrayObj, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n@@ -35,9 +36,9 @@\n \r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n-  const  filteredArrayObj=[];\r\n+\r\n   \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n@@ -57,9 +58,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n         console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n        \r\n         getRepairMen(filteredArrayObj);\r\n         setPendingShowCase(false);\r\n"
                },
                {
                    "date": 1708017633462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,9 +292,9 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap filteredArrayObj={filteredArrayObj}>\r\n+     <NewMap positionx ={filteredArrayObj}>\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708018111782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        setFilteredObject(filteredArrayObj);\r\n         console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n        \r\n         getRepairMen(filteredArrayObj);\r\n         setPendingShowCase(false);\r\n"
                },
                {
                    "date": 1708018144788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n+        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n         setFilteredObject(filteredArrayObj);\r\n         console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n        \r\n         getRepairMen(filteredArrayObj);\r\n"
                },
                {
                    "date": 1708018246500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n-  const [filteredArrayObj, setFilteredObject] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n@@ -58,13 +58,13 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n-        const filteredArrayObj=filterShowCaseByUnivers(universId, arrayObj);\r\n-        setFilteredObject(filteredArrayObj);\r\n-        console.log(\"STEP 1 :REsult \", filteredArrayObj );\r\n+        const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n+        setFilteredObject(repairManArr);\r\n+        console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n-        getRepairMen(filteredArrayObj);\r\n+        getRepairMen(repairManArr);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -293,9 +293,9 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap positionx ={filteredArrayObj}>\r\n+     <NewMap positionx ={repairManArr}>\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708018333769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,9 +293,9 @@\n   };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap positionx ={repairManArr}>\r\n+     <NewMap positionx = {{repairManArr}}>\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708018459612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -291,11 +291,12 @@\n       }\r\n     });\r\n   };\r\n \r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap positionx = {{repairManArr}}>\r\n+     <NewMap {...repairManArr}>\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708018618674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,13 +290,13 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n+  var positionxtestdata = [ { label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.68}];\r\n \r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap {...repairManArr}>\r\n+     <NewMap positionx = {positionxtestdata}   >\r\n         </NewMap>\r\n       <Row \r\n       style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n"
                },
                {
                    "date": 1708018669451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,10 +290,9 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n-  var positionxtestdata = [ { label: \"Chez Denys\", postalcode: \"75006\", city_code: \"Paris\", lastname: \"DBG\", lat :43.21, lng: 1.68}];\r\n-\r\n+  var positionxtestdata = RepairManlatlng;\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n      <NewMap positionx = {positionxtestdata}   >\r\n         </NewMap>\r\n"
                },
                {
                    "date": 1708019136615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+\r\n+  }, [slugIdUniverse]);\r\n+\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n+        setFilteredObject(repairManArr);\r\n+        console.log(\"STEP 1 :REsult \", repairManArr );\r\n+       \r\n+        getRepairMen(repairManArr);\r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    return xOneRows;\r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    \r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            \r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  //getRepairMenUniverses\r\n+  const getShowcases = (userId) => {\r\n+    let userFieldMap = {\r\n+      username: \"username\",\r\n+      id: \"id\",\r\n+      firstName: \"firstname\",\r\n+      lastName: \"lastname\",\r\n+      email: \"email\",\r\n+      enterprise: \"label\",\r\n+      showcases: \"showcases\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        var result = [];\r\n+        console.log(userId, \"<-->shwocas\", arrayObj);\r\n+        // recherche du userid\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let obj = arrayObj[i];\r\n+          if (obj[\"@id\"] === \"/api/user/114\") {\r\n+            console.log(obj);\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                if (key === 'showcases') {\r\n+                  console.log(\"Showcases\", key, value);\r\n+                  value.forEach((item, index) => {\r\n+                    console.log(item);\r\n+                  });\r\n+                }\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+\r\n+            });\r\n+            console.log(\"univer repa\", result);\r\n+            tabArray.push(result);\r\n+          }\r\n+          break;\r\n+        }\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+  var positionxtestdata = RepairManlatlng;\r\n+  \r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+     <NewMap positionx = {positionxtestdata}   >\r\n+        </NewMap>\r\n+      <Row \r\n+      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n+               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+                 Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+      \r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708114906973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n-  var positionxtestdata = RepairManlatlng;\r\n+  const  positionxtestdata = RepairManlatlng;\r\n   \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n      <NewMap positionx = {positionxtestdata}   >\r\n@@ -310,316 +310,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-\r\n-  }, [slugIdUniverse]);\r\n-\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n-        setFilteredObject(repairManArr);\r\n-        console.log(\"STEP 1 :REsult \", repairManArr );\r\n-       \r\n-        getRepairMen(repairManArr);\r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    return xOneRows;\r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-    \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    \r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            \r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-  var positionxtestdata = RepairManlatlng;\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-     <NewMap positionx = {positionxtestdata}   >\r\n-        </NewMap>\r\n-      <Row \r\n-      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n-               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-                 Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-      \r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708115340829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,10 @@\n \r\n   )\r\n \r\n   const showData = () => {\r\n-    let data = RepairManlatlng;\r\n+    //let data = RepairManlatlng;\r\n+    let data = tabArray;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n"
                },
                {
                    "date": 1708115431389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,10 +191,10 @@\n \r\n   )\r\n \r\n   const showData = () => {\r\n-    //let data = RepairManlatlng;\r\n-    let data = tabArray;\r\n+    let data = RepairManlatlng;\r\n+\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n"
                },
                {
                    "date": 1708115448053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,18 +201,9 @@\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n+     \r\n       data = xdata;\r\n     }\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1708115464577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n \r\n   )\r\n \r\n   const showData = () => {\r\n-    let data = RepairManlatlng;\r\n+   \r\n \r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n@@ -201,9 +201,18 @@\n     else {\r\n       console.log(\"RepairManlatlng was show in showdata--->\");\r\n       let xdata = [];\r\n       let xrow = 0;\r\n-     \r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n       data = xdata;\r\n     }\r\n     if (data === false)\r\n       return (\r\n"
                },
                {
                    "date": 1708115476536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,10 +191,9 @@\n \r\n   )\r\n \r\n   const showData = () => {\r\n-   \r\n-\r\n+    let data =\"\" ;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n"
                },
                {
                    "date": 1708115498343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n           if (xrow < 12) {\r\n             xdata[xrow] = item;\r\n             console.log(\"filterin\", item);\r\n           }\r\n-          xrow++;\r\n+          //xrow++;\r\n         }\r\n       })\r\n       data = xdata;\r\n     }\r\n"
                },
                {
                    "date": 1708115509745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,9 +207,9 @@\n           if (xrow < 12) {\r\n             xdata[xrow] = item;\r\n             console.log(\"filterin\", item);\r\n           }\r\n-          //xrow++;\r\n+          xrow++;\r\n         }\r\n       })\r\n       data = xdata;\r\n     }\r\n"
                },
                {
                    "date": 1708115526620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,10 @@\n \r\n   )\r\n \r\n   const showData = () => {\r\n-    let data =\"\" ;\r\n+    let data = RepairManlatlng;\r\n+\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n"
                },
                {
                    "date": 1708115577721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n-      console.log(\"RepairManlatlng was show in showdata--->\");\r\n+      console.log(\"STEP map  is cmusterering\",tabArray);\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n"
                },
                {
                    "date": 1708115681837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n         setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         getRepairMen(repairManArr);\r\n+        showData();\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708115783274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,8 @@\n         setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         getRepairMen(repairManArr);\r\n-        showData();\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -191,8 +190,55 @@\n     <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n \r\n+  const showDataConst = (data) => {\r\n+    \r\n+\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is cmusterering\",tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n \r\n     if (isPending) {\r\n"
                },
                {
                    "date": 1708115819834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n         setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         getRepairMen(repairManArr);\r\n+        showDataConst(repairManArr);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708115993157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         getRepairMen(repairManArr);\r\n-        showDataConst(repairManArr);\r\n+        showDataBuilder(repairManArr);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -191,9 +191,9 @@\n     <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n \r\n-  const showDataConst = (data) => {\r\n+  const showDataBuilder = (data) => {\r\n     \r\n \r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n"
                },
                {
                    "date": 1708116136919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,59 +288,8 @@\n \r\n \r\n \r\n \r\n-  //getRepairMenUniverses\r\n-  const getShowcases = (userId) => {\r\n-    let userFieldMap = {\r\n-      username: \"username\",\r\n-      id: \"id\",\r\n-      firstName: \"firstname\",\r\n-      lastName: \"lastname\",\r\n-      email: \"email\",\r\n-      enterprise: \"label\",\r\n-      showcases: \"showcases\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        var result = [];\r\n-        console.log(userId, \"<-->shwocas\", arrayObj);\r\n-        // recherche du userid\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let obj = arrayObj[i];\r\n-          if (obj[\"@id\"] === \"/api/user/114\") {\r\n-            console.log(obj);\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                if (key === 'showcases') {\r\n-                  console.log(\"Showcases\", key, value);\r\n-                  value.forEach((item, index) => {\r\n-                    console.log(item);\r\n-                  });\r\n-                }\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-\r\n-            });\r\n-            console.log(\"univer repa\", result);\r\n-            tabArray.push(result);\r\n-          }\r\n-          break;\r\n-        }\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n   const  positionxtestdata = RepairManlatlng;\r\n   \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1708116290778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,10 +288,9 @@\n \r\n \r\n \r\n \r\n-  const  positionxtestdata = RepairManlatlng;\r\n-  \r\n+  const  positionxtestdata= \"\";\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n      <NewMap positionx = {positionxtestdata}   >\r\n         </NewMap>\r\n"
                },
                {
                    "date": 1708116307821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,9 +288,10 @@\n \r\n \r\n \r\n \r\n-  const  positionxtestdata= \"\";\r\n+  const  positionxtestdata = RepairManlatlng;\r\n+  \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n      <NewMap positionx = {positionxtestdata}   >\r\n         </NewMap>\r\n"
                },
                {
                    "date": 1708116528825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n-      console.log(\"STEP map  is cmusterering\",tabArray);\r\n+      console.log(\"STEPMAP IN THE BUILDER\",tabArray);\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n"
                },
                {
                    "date": 1708116781724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n-        setFilteredObject(repairManArr);\r\n+        //setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         getRepairMen(repairManArr);\r\n         showDataBuilder(repairManArr);\r\n@@ -179,8 +179,9 @@\n         };\r\n         setxObjElem(tabArray);\r\n         console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n         setIsPending(false);\r\n+        return tabArray;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1708116837663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,10 +62,10 @@\n         const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n         //setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n-        getRepairMen(repairManArr);\r\n-        showDataBuilder(repairManArr);\r\n+        xFilteredArray = getRepairMen(repairManArr);\r\n+        showDataBuilder(xFilteredArray);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708116845752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n         //setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n-        xFilteredArray = getRepairMen(repairManArr);\r\n+        const xFilteredArray = getRepairMen(repairManArr);\r\n         showDataBuilder(xFilteredArray);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n"
                },
                {
                    "date": 1708117018824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         //setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n-        showDataBuilder(xFilteredArray);\r\n+        //showDataBuilder(xFilteredArray);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -192,55 +192,10 @@\n     <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n \r\n-  const showDataBuilder = (data) => {\r\n-    \r\n \r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEPMAP IN THE BUILDER\",tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n \r\n     if (isPending) {\r\n"
                },
                {
                    "date": 1708120108594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n-      console.log(\"STEP map  is cmusterering\",tabArray);\r\n+      console.log(\"STEP map  is musterering\",tabArray);\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n"
                },
                {
                    "date": 1708120258604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n         //setFilteredObject(repairManArr);\r\n         console.log(\"STEP 1 :REsult \", repairManArr );\r\n        \r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n-        //showDataBuilder(xFilteredArray);\r\n+        showDataBuilder(xFilteredArray);\r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -193,9 +193,55 @@\n \r\n   )\r\n \r\n \r\n+  const showDataBuilder = (data) => {\r\n+    let data = RepairManlatlng;\r\n \r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\",tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n \r\n     if (isPending) {\r\n"
                },
                {
                    "date": 1708120298352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n \r\n   )\r\n \r\n \r\n-  const showDataBuilder = (data) => {\r\n+  const showDataBuilder = (sdata) => {\r\n     let data = RepairManlatlng;\r\n \r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n"
                },
                {
                    "date": 1708120312148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,10 +194,9 @@\n   )\r\n \r\n \r\n   const showDataBuilder = (sdata) => {\r\n-    let data = RepairManlatlng;\r\n-\r\n+    let data = sdata;\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n"
                },
                {
                    "date": 1708120360187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,9 +301,9 @@\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n                  Découvrez nos artisans en France\r\n       </Row>\r\n       <Row>\r\n-        {showData()}\r\n+        \r\n       </Row>\r\n       \r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1708120507364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,54 +193,10 @@\n \r\n   )\r\n \r\n \r\n-  const showDataBuilder = (sdata) => {\r\n-    let data = sdata;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\",tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n+  \r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n \r\n     if (isPending) {\r\n@@ -301,9 +257,9 @@\n                fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n                  Découvrez nos artisans en France\r\n       </Row>\r\n       <Row>\r\n-        \r\n+        {showData()}\r\n       </Row>\r\n       \r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1708120746051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,11 +59,8 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n-        //setFilteredObject(repairManArr);\r\n-        console.log(\"STEP 1 :REsult \", repairManArr );\r\n-       \r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n         showDataBuilder(xFilteredArray);\r\n         setPendingShowCase(false);\r\n         \r\n@@ -193,19 +190,63 @@\n \r\n   )\r\n \r\n \r\n-  \r\n+  const showDataBuilder = (sdata) => {\r\n+    let data =sdata;\r\n \r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is usterering\",tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n \r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n-      console.log(\"STEP map  is musterering\",tabArray);\r\n+      console.log(\"STEP map  is usterering\",tabArray);\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n"
                },
                {
                    "date": 1708120926720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,10 @@\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n-        showDataBuilder(xFilteredArray);\r\n+        setFilteredObject(xFilteredArray);\r\n+      \r\n         setPendingShowCase(false);\r\n         \r\n       },\r\n       catch: (error) => {\r\n@@ -237,9 +238,9 @@\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n   const showData = () => {\r\n-    let data = RepairManlatlng;\r\n+    let data = repairManArr;\r\n \r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n"
                },
                {
                    "date": 1708120945883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,9 +245,9 @@\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n-      console.log(\"STEP map  is usterering\",tabArray);\r\n+      console.log(\"STEP map  is musterering\",tabArray);\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n"
                },
                {
                    "date": 1708120993680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,54 +191,10 @@\n \r\n   )\r\n \r\n \r\n-  const showDataBuilder = (sdata) => {\r\n-    let data =sdata;\r\n \r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is usterering\",tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n   const showData = () => {\r\n     let data = repairManArr;\r\n \r\n     if (isPending) {\r\n"
                },
                {
                    "date": 1708121128537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -243,9 +243,9 @@\n \r\n \r\n \r\n \r\n-  const  positionxtestdata = RepairManlatlng;\r\n+  const  positionxtestdata = repairManArr;\r\n   \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n      <NewMap positionx = {positionxtestdata}   >\r\n"
                },
                {
                    "date": 1708121518499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -243,9 +243,8 @@\n \r\n \r\n \r\n \r\n-  const  positionxtestdata = repairManArr;\r\n   \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n      <NewMap positionx = {positionxtestdata}   >\r\n"
                },
                {
                    "date": 1708121533570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,266 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  \r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    initShowCaseAllUniverses();\r\n+     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    setIsPending(true);\r\n+\r\n+  }, [slugIdUniverse]);\r\n+\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        setShowCases(arrayObj);\r\n+        const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n+        const xFilteredArray = getRepairMen(repairManArr);\r\n+        setFilteredObject(xFilteredArray);\r\n+      \r\n+        setPendingShowCase(false);\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    return xOneRows;\r\n+    });\r\n+\r\n+  \r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+    \r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId ) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    \r\n+    }  \r\n+    return zFound;\r\n+  }\r\n+  \r\n+  const getRepairMen = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            \r\n+            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else\r\n+            {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        setIsPending(false);\r\n+        return tabArray;\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+\r\n+  const showData = () => {\r\n+    let data = repairManArr;\r\n+\r\n+    const  positionxtestdata = repairManArr;\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\",tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  \r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+     <NewMap positionx = {positionxtestdata}   >\r\n+        </NewMap>\r\n+      <Row \r\n+      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n+               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+                 Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+      \r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708121608489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n         setShowCases(arrayObj);\r\n         const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n+        const  positionxtestdata = repairManArr;\r\n         setFilteredObject(xFilteredArray);\r\n       \r\n         setPendingShowCase(false);\r\n         \r\n@@ -196,274 +197,9 @@\n \r\n   const showData = () => {\r\n     let data = repairManArr;\r\n \r\n-    const  positionxtestdata = repairManArr;\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\",tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  \r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-     <NewMap positionx = {positionxtestdata}   >\r\n-        </NewMap>\r\n-      <Row \r\n-      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n-               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-                 Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-      \r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  \r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n-     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n-    setIsPending(true);\r\n-\r\n-  }, [slugIdUniverse]);\r\n-\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n-        setShowCases(arrayObj);\r\n-        const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n-        const xFilteredArray = getRepairMen(repairManArr);\r\n-        setFilteredObject(xFilteredArray);\r\n-      \r\n-        setPendingShowCase(false);\r\n-        \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    return xOneRows;\r\n-    });\r\n-\r\n-  \r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n     \r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    \r\n-    }  \r\n-    return zFound;\r\n-  }\r\n-  \r\n-  const getRepairMen = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            \r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else\r\n-            {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n-        setIsPending(false);\r\n-        return tabArray;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-\r\n-  const showData = () => {\r\n-    let data = repairManArr;\r\n-\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n@@ -507,8 +243,9 @@\n   };\r\n \r\n \r\n \r\n+  const  positionxtestdata = xFilteredArray;\r\n \r\n \r\n   \r\n   return (\r\n"
                },
                {
                    "date": 1708121699774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -243,9 +243,9 @@\n   };\r\n \r\n \r\n \r\n-  const  positionxtestdata = xFilteredArray;\r\n+  const  positionxtestdata = repairManArr;\r\n \r\n \r\n   \r\n   return (\r\n"
                },
                {
                    "date": 1708122265300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,14 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  \r\n+\r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n-     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \",showCasesArray);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", showCasesArray);\r\n     setIsPending(true);\r\n \r\n   }, [slugIdUniverse]);\r\n \r\n@@ -56,17 +56,17 @@\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\",universId, arrayObj );\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n-        const repairManArr=filterShowCaseByUnivers(universId, arrayObj);\r\n+        const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n-        const  positionxtestdata = repairManArr;\r\n+        const positionxtestdata = repairManArr;\r\n         setFilteredObject(xFilteredArray);\r\n-      \r\n+\r\n         setPendingShowCase(false);\r\n-        \r\n+\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n@@ -107,51 +107,51 @@\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     return xOneRows;\r\n-    });\r\n+  });\r\n \r\n-  \r\n+\r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\",showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\",api_user,universId);\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n     let zFound = false;\r\n     console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       /*\r\n       console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n                            ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-    \r\n+\r\n       if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId ) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n           zFound = true;\r\n           break;\r\n         }\r\n       }\r\n-    \r\n-    }  \r\n+\r\n+    }\r\n     return zFound;\r\n   }\r\n-  \r\n+\r\n   const getRepairMen = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\",latitude: \"lat\",  longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\",  instagram: \"instagram\", \r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n       address: \"address\", roles: \"roles\",\r\n     }\r\n-    \r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log (\"STEP 2 CHECK WARNING Contents of showCasesArray\",showCasesArray);\r\n+        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n@@ -164,21 +164,20 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            \r\n-            if (userIsInThisUniverse(result['userId'],showCasesArray)) {\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n               tabArray.push(result);\r\n             }\r\n-            else\r\n-            {\r\n+            else {\r\n               console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n-        console.log (\"STEP 2 CHECK WARNING setxObjElem\",tabArray);\r\n+        console.log(\"STEP 2 CHECK WARNING setxObjElem\", tabArray);\r\n         setIsPending(false);\r\n         return tabArray;\r\n       },\r\n       catch: (error) => {\r\n@@ -196,16 +195,16 @@\n \r\n \r\n   const showData = () => {\r\n     let data = repairManArr;\r\n+    const positionxtestdata = repairManArr;\r\n \r\n-    \r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n-      console.log(\"STEP map  is musterering\",tabArray);\r\n+      console.log(\"STEP map  is musterering\", tabArray);\r\n       let xdata = [];\r\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n@@ -241,28 +240,42 @@\n       );\r\n     return (data.map(rowRenderArt));\r\n   };\r\n \r\n+  /*\r\n+  \r\n+  <NewMap positionx = {positionxtestdata}   >\r\n+          </NewMap>\r\n+        <Row></Row>\r\n+  \r\n+  */\r\n \r\n+ const showMap = () => {\r\n+       let data = repairManArr;\r\n+       return (\"this is the map\");\r\n+ }\r\n \r\n-  const  positionxtestdata = repairManArr;\r\n \r\n-\r\n-  \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-     <NewMap positionx = {positionxtestdata}   >\r\n-        </NewMap>\r\n-      <Row \r\n-      style={{ marginBottom:'2%', marginTop:'2%' ,width: '100%', height: '100%', color: '#465A61', fontSize: 40, \r\n-               fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-                 Découvrez nos artisans en France\r\n+      <Row>\r\n+        {showMap()}\r\n+\r\n       </Row>\r\n+\r\n       <Row>\r\n+\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n         {showData()}\r\n       </Row>\r\n-      \r\n \r\n+\r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1708122300603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,9 +261,9 @@\n         {showMap()}\r\n \r\n       </Row>\r\n \r\n-      <Row>\r\n+      <Row\r\n \r\n         style={{\r\n           marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n           fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n"
                },
                {
                    "date": 1708122341986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,9 +250,9 @@\n   */\r\n \r\n  const showMap = () => {\r\n        let data = repairManArr;\r\n-       return (\"this is the map\");\r\n+       return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n  }\r\n \r\n \r\n   return (\r\n"
                },
                {
                    "date": 1708122388339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,8 +248,87 @@\n         <Row></Row>\r\n   \r\n   */\r\n \r\n+        useEffect(() => {\r\n+          const repairIcon = {\r\n+            url: imgVector,\r\n+            scaledSize: new window.google.maps.Size(40, 40),\r\n+          };\r\n+       \r\n+      \r\n+          // Initialize the map\r\n+          const mapOptions = {\r\n+            center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+            zoom: 8, // Set the initial zoom level\r\n+          };\r\n+          const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+          console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n+          let xi = 0;\r\n+          const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            let position = value;\r\n+            if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+      \r\n+            const marker = new window.google.maps.Marker({\r\n+              position,\r\n+              map,\r\n+              icon: repairIcon,\r\n+            });\r\n+            let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+            addInfoWindow(marker, renderx);\r\n+            xi++;\r\n+            return marker;\r\n+          }  );\r\n+          new MarkerClusterer({ map, markers, options });\r\n+        \r\n+      \r\n+          /*\r\n+          const markers = RepairManlatlng.map((position, i) => {\r\n+            const marker = new window.google.maps.Marker({\r\n+              position,\r\n+              map,\r\n+              icon: repairIcon,\r\n+            });\r\n+            let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+            addInfoWindow(marker, renderx);\r\n+            return marker;\r\n+          });\r\n+      */\r\n+          var options = {\r\n+          maxZoom: 20,\r\n+          styles: [{\r\n+            width: 153,\r\n+            height: 53,\r\n+            textColor: '#000f',\r\n+          }]\r\n+      \r\n+        };\r\n+        //new MarkerClusterer({ map, markers, options });\r\n+        // Create markers\r\n+      \r\n+        function addInfoWindow(marker, message) {\r\n+          var infoWindow = new window.google.maps.InfoWindow({\r\n+            content: message\r\n+          });\r\n+          window.google.maps.event.addListener(marker, 'click', function () {\r\n+            infoWindow.open(map, marker);\r\n+          });\r\n+          marker.addListener('mouseover', function () {\r\n+            // open your popup window\r\n+            infoWindow.open(map, marker);\r\n+          });\r\n+      \r\n+          marker.addListener('mouseout', function () {\r\n+            // close your popup window\r\n+            infoWindow.close();\r\n+          });\r\n+        }\r\n+      \r\n+      \r\n+      \r\n+      }, []);\r\n+\r\n  const showMap = () => {\r\n        let data = repairManArr;\r\n        return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n  }\r\n"
                },
                {
                    "date": 1708122416216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n import { useMediaQuery } from \"react-responsive\";\r\n import { now } from \"moment\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n"
                },
                {
                    "date": 1708122504686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,89 +250,91 @@\n         <Row></Row>\r\n   \r\n   */\r\n \r\n-        useEffect(() => {\r\n-          const repairIcon = {\r\n-            url: imgVector,\r\n-            scaledSize: new window.google.maps.Size(40, 40),\r\n-          };\r\n-       \r\n-      \r\n-          // Initialize the map\r\n-          const mapOptions = {\r\n-            center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-            zoom: 8, // Set the initial zoom level\r\n-          };\r\n-          const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n-          console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n-          let xi = 0;\r\n-          const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            let position = value;\r\n-            if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n-      \r\n-            const marker = new window.google.maps.Marker({\r\n-              position,\r\n-              map,\r\n-              icon: repairIcon,\r\n-            });\r\n-            let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-            addInfoWindow(marker, renderx);\r\n-            xi++;\r\n-            return marker;\r\n-          }  );\r\n-          new MarkerClusterer({ map, markers, options });\r\n-        \r\n-      \r\n-          /*\r\n-          const markers = RepairManlatlng.map((position, i) => {\r\n-            const marker = new window.google.maps.Marker({\r\n-              position,\r\n-              map,\r\n-              icon: repairIcon,\r\n-            });\r\n-            let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-            addInfoWindow(marker, renderx);\r\n-            return marker;\r\n-          });\r\n-      */\r\n-          var options = {\r\n-          maxZoom: 20,\r\n-          styles: [{\r\n-            width: 153,\r\n-            height: 53,\r\n-            textColor: '#000f',\r\n-          }]\r\n-      \r\n+     \r\n+\r\n+ const showMap = () => {\r\n+       let data = repairManArr;\r\n+\r\n+       useEffect(() => {\r\n+        const repairIcon = {\r\n+          url: imgVector,\r\n+          scaledSize: new window.google.maps.Size(40, 40),\r\n         };\r\n-        //new MarkerClusterer({ map, markers, options });\r\n-        // Create markers\r\n-      \r\n-        function addInfoWindow(marker, message) {\r\n-          var infoWindow = new window.google.maps.InfoWindow({\r\n-            content: message\r\n+     \r\n+    \r\n+        // Initialize the map\r\n+        const mapOptions = {\r\n+          center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+          zoom: 8, // Set the initial zoom level\r\n+        };\r\n+        const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+        console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n+        let xi = 0;\r\n+        const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let position = value;\r\n+          if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+    \r\n+          const marker = new window.google.maps.Marker({\r\n+            position,\r\n+            map,\r\n+            icon: repairIcon,\r\n           });\r\n-          window.google.maps.event.addListener(marker, 'click', function () {\r\n-            infoWindow.open(map, marker);\r\n-          });\r\n-          marker.addListener('mouseover', function () {\r\n-            // open your popup window\r\n-            infoWindow.open(map, marker);\r\n-          });\r\n+          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+          addInfoWindow(marker, renderx);\r\n+          xi++;\r\n+          return marker;\r\n+        }  );\r\n+        new MarkerClusterer({ map, markers, options });\r\n       \r\n-          marker.addListener('mouseout', function () {\r\n-            // close your popup window\r\n-            infoWindow.close();\r\n+    \r\n+        /*\r\n+        const markers = RepairManlatlng.map((position, i) => {\r\n+          const marker = new window.google.maps.Marker({\r\n+            position,\r\n+            map,\r\n+            icon: repairIcon,\r\n           });\r\n-        }\r\n-      \r\n-      \r\n-      \r\n-      }, []);\r\n-\r\n- const showMap = () => {\r\n-       let data = repairManArr;\r\n+          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+          addInfoWindow(marker, renderx);\r\n+          return marker;\r\n+        });\r\n+    */\r\n+        var options = {\r\n+        maxZoom: 20,\r\n+        styles: [{\r\n+          width: 153,\r\n+          height: 53,\r\n+          textColor: '#000f',\r\n+        }]\r\n+    \r\n+      };\r\n+      //new MarkerClusterer({ map, markers, options });\r\n+      // Create markers\r\n+    \r\n+      function addInfoWindow(marker, message) {\r\n+        var infoWindow = new window.google.maps.InfoWindow({\r\n+          content: message\r\n+        });\r\n+        window.google.maps.event.addListener(marker, 'click', function () {\r\n+          infoWindow.open(map, marker);\r\n+        });\r\n+        marker.addListener('mouseover', function () {\r\n+          // open your popup window\r\n+          infoWindow.open(map, marker);\r\n+        });\r\n+    \r\n+        marker.addListener('mouseout', function () {\r\n+          // close your popup window\r\n+          infoWindow.close();\r\n+        });\r\n+      }\r\n+    \r\n+    \r\n+    \r\n+    }, []);\r\n        return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n  }\r\n \r\n \r\n"
                },
                {
                    "date": 1708122717195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,71 @@\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     initShowCaseAllUniverses();\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", showCasesArray);\r\n     setIsPending(true);\r\n+   \r\n+      const repairIcon = {\r\n+        url: imgVector,\r\n+        scaledSize: new window.google.maps.Size(40, 40),\r\n+      };\r\n+   \r\n+  \r\n+      // Initialize the map\r\n+      const mapOptions = {\r\n+        center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+        zoom: 8, // Set the initial zoom level\r\n+      };\r\n+      const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+      console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n+      let xi = 0;\r\n+      const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n+        const [key, value] = entry;\r\n+        let position = value;\r\n+        if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+  \r\n+        const marker = new window.google.maps.Marker({\r\n+          position,\r\n+          map,\r\n+          icon: repairIcon,\r\n+        });\r\n+        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+        addInfoWindow(marker, renderx);\r\n+        xi++;\r\n+        return marker;\r\n+      }  );\r\n+      new MarkerClusterer({ map, markers, options });\r\n+    \r\n+      var options = {\r\n+      maxZoom: 20,\r\n+      styles: [{\r\n+        width: 153,\r\n+        height: 53,\r\n+        textColor: '#000f',\r\n+      }]\r\n+  \r\n+    };\r\n \r\n+  \r\n+    function addInfoWindow(marker, message) {\r\n+      var infoWindow = new window.google.maps.InfoWindow({\r\n+        content: message\r\n+      });\r\n+      window.google.maps.event.addListener(marker, 'click', function () {\r\n+        infoWindow.open(map, marker);\r\n+      });\r\n+      marker.addListener('mouseover', function () {\r\n+        // open your popup window\r\n+        infoWindow.open(map, marker);\r\n+      });\r\n+  \r\n+      marker.addListener('mouseout', function () {\r\n+        // close your popup window\r\n+        infoWindow.close();\r\n+      });\r\n+    }\r\n+  \r\n+  \r\n+\r\n   }, [slugIdUniverse]);\r\n \r\n \r\n   const initShowCaseAllUniverses = () => {\r\n@@ -255,86 +317,11 @@\n \r\n  const showMap = () => {\r\n        let data = repairManArr;\r\n \r\n-       useEffect(() => {\r\n-        const repairIcon = {\r\n-          url: imgVector,\r\n-          scaledSize: new window.google.maps.Size(40, 40),\r\n-        };\r\n-     \r\n-    \r\n-        // Initialize the map\r\n-        const mapOptions = {\r\n-          center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-          zoom: 8, // Set the initial zoom level\r\n-        };\r\n-        const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n-        console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n-        let xi = 0;\r\n-        const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let position = value;\r\n-          if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n-    \r\n-          const marker = new window.google.maps.Marker({\r\n-            position,\r\n-            map,\r\n-            icon: repairIcon,\r\n-          });\r\n-          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-          addInfoWindow(marker, renderx);\r\n-          xi++;\r\n-          return marker;\r\n-        }  );\r\n-        new MarkerClusterer({ map, markers, options });\r\n       \r\n     \r\n-        /*\r\n-        const markers = RepairManlatlng.map((position, i) => {\r\n-          const marker = new window.google.maps.Marker({\r\n-            position,\r\n-            map,\r\n-            icon: repairIcon,\r\n-          });\r\n-          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-          addInfoWindow(marker, renderx);\r\n-          return marker;\r\n-        });\r\n-    */\r\n-        var options = {\r\n-        maxZoom: 20,\r\n-        styles: [{\r\n-          width: 153,\r\n-          height: 53,\r\n-          textColor: '#000f',\r\n-        }]\r\n-    \r\n-      };\r\n-      //new MarkerClusterer({ map, markers, options });\r\n-      // Create markers\r\n-    \r\n-      function addInfoWindow(marker, message) {\r\n-        var infoWindow = new window.google.maps.InfoWindow({\r\n-          content: message\r\n-        });\r\n-        window.google.maps.event.addListener(marker, 'click', function () {\r\n-          infoWindow.open(map, marker);\r\n-        });\r\n-        marker.addListener('mouseover', function () {\r\n-          // open your popup window\r\n-          infoWindow.open(map, marker);\r\n-        });\r\n-    \r\n-        marker.addListener('mouseout', function () {\r\n-          // close your popup window\r\n-          infoWindow.close();\r\n-        });\r\n-      }\r\n-    \r\n-    \r\n-    \r\n-    }, []);\r\n+ \r\n        return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n  }\r\n \r\n \r\n"
                },
                {
                    "date": 1708122813615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n+    positions =initShowCaseAllUniverses();\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", showCasesArray);\r\n     setIsPending(true);\r\n    \r\n       const repairIcon = {\r\n@@ -124,12 +124,11 @@\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n         const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n-        const positionxtestdata = repairManArr;\r\n         setFilteredObject(xFilteredArray);\r\n-\r\n         setPendingShowCase(false);\r\n+        return repairManArr;\r\n \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708122829326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    positions =initShowCaseAllUniverses();\r\n+    const positions =initShowCaseAllUniverses();\r\n     console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", showCasesArray);\r\n     setIsPending(true);\r\n    \r\n       const repairIcon = {\r\n"
                },
                {
                    "date": 1708122967051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,26 +41,29 @@\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n \r\n   useEffect(() => {\r\n+    // Initialize the map\r\n+    const mapOptions = {\r\n+      center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+      zoom: 8, // Set the initial zoom level\r\n+    };\r\n+    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+    const repairIcon = {\r\n+      url: imgVector,\r\n+      scaledSize: new window.google.maps.Size(40, 40),\r\n+    };\r\n+ \r\n+\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     const positions =initShowCaseAllUniverses();\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", showCasesArray);\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", positions);\r\n     setIsPending(true);\r\n    \r\n-      const repairIcon = {\r\n-        url: imgVector,\r\n-        scaledSize: new window.google.maps.Size(40, 40),\r\n-      };\r\n    \r\n   \r\n-      // Initialize the map\r\n-      const mapOptions = {\r\n-        center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-        zoom: 8, // Set the initial zoom level\r\n-      };\r\n-      const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+      \r\n       console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n       let xi = 0;\r\n       const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n         const [key, value] = entry;\r\n"
                },
                {
                    "date": 1708123294819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,59 +41,32 @@\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n \r\n   useEffect(() => {\r\n-    // Initialize the map\r\n-    const mapOptions = {\r\n-      center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-      zoom: 8, // Set the initial zoom level\r\n-    };\r\n-    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n-    const repairIcon = {\r\n-      url: imgVector,\r\n-      scaledSize: new window.google.maps.Size(40, 40),\r\n-    };\r\n+\r\n  \r\n \r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    const positions =initShowCaseAllUniverses();\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", positions);\r\n+    positions =initShowCaseAllUniverses();\r\n+    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", positions );\r\n     setIsPending(true);\r\n    \r\n    \r\n   \r\n       \r\n-      console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n-      let xi = 0;\r\n-      const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n-        const [key, value] = entry;\r\n-        let position = value;\r\n-        if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n-  \r\n-        const marker = new window.google.maps.Marker({\r\n-          position,\r\n-          map,\r\n-          icon: repairIcon,\r\n-        });\r\n-        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-        addInfoWindow(marker, renderx);\r\n-        xi++;\r\n-        return marker;\r\n-      }  );\r\n-      new MarkerClusterer({ map, markers, options });\r\n+      \r\n     \r\n-      var options = {\r\n-      maxZoom: 20,\r\n-      styles: [{\r\n-        width: 153,\r\n-        height: 53,\r\n-        textColor: '#000f',\r\n-      }]\r\n+   \r\n   \r\n-    };\r\n+ \r\n+  \r\n+  \r\n \r\n-  \r\n+  }, [slugIdUniverse]);\r\n+\r\n+\r\n+  const initShowCaseAllUniverses = () => {\r\n     function addInfoWindow(marker, message) {\r\n       var infoWindow = new window.google.maps.InfoWindow({\r\n         content: message\r\n       });\r\n@@ -109,30 +82,68 @@\n         // close your popup window\r\n         infoWindow.close();\r\n       });\r\n     }\r\n+    var options = {\r\n+      maxZoom: 20,\r\n+      styles: [{\r\n+        width: 153,\r\n+        height: 53,\r\n+        textColor: '#000f',\r\n+      }]\r\n   \r\n-  \r\n \r\n-  }, [slugIdUniverse]);\r\n-\r\n-\r\n-  const initShowCaseAllUniverses = () => {\r\n+    };\r\n+           // Initialize the map\r\n+    const mapOptions = {\r\n+      center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+      zoom: 8, // Set the initial zoom level\r\n+    };\r\n+    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+    const repairIcon = {\r\n+      url: imgVector,\r\n+      scaledSize: new window.google.maps.Size(40, 40),\r\n+    };\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n+\r\n+ \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n         const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n         setFilteredObject(xFilteredArray);\r\n         setPendingShowCase(false);\r\n-        return repairManArr;\r\n \r\n+\r\n+        positions = repairManArr;\r\n+        \r\n+        console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n+        let xi = 0;\r\n+        const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let position = value;\r\n+          if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+    \r\n+          const marker = new window.google.maps.Marker({\r\n+            position,\r\n+            map,\r\n+            icon: repairIcon,\r\n+          });\r\n+          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+          addInfoWindow(marker, renderx);\r\n+          xi++;\r\n+          return marker;\r\n+        }  );\r\n+        new MarkerClusterer({ map, markers, options });\r\n+\r\n+\r\n+\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1708123304745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n         setFilteredObject(xFilteredArray);\r\n         setPendingShowCase(false);\r\n \r\n \r\n-        positions = repairManArr;\r\n+        const positions = repairManArr;\r\n         \r\n         console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n         let xi = 0;\r\n         const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n"
                },
                {
                    "date": 1708123329330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n \r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n     positions =initShowCaseAllUniverses();\r\n-    console.log(\"STEP USE EFFECT 1 DANGER CHECK Showcase \", positions );\r\n+\r\n     setIsPending(true);\r\n    \r\n    \r\n   \r\n"
                },
                {
                    "date": 1708123343062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n  \r\n \r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    positions =initShowCaseAllUniverses();\r\n+initShowCaseAllUniverses();\r\n \r\n     setIsPending(true);\r\n    \r\n    \r\n"
                },
                {
                    "date": 1708123424171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,27 +41,12 @@\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n \r\n   useEffect(() => {\r\n-\r\n- \r\n-\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-initShowCaseAllUniverses();\r\n-\r\n+    initShowCaseAllUniverses();\r\n     setIsPending(true);\r\n-   \r\n-   \r\n-  \r\n-      \r\n-      \r\n-    \r\n-   \r\n-  \r\n- \r\n-  \r\n-  \r\n \r\n   }, [slugIdUniverse]);\r\n \r\n \r\n@@ -76,9 +61,9 @@\n       marker.addListener('mouseover', function () {\r\n         // open your popup window\r\n         infoWindow.open(map, marker);\r\n       });\r\n-  \r\n+\r\n       marker.addListener('mouseout', function () {\r\n         // close your popup window\r\n         infoWindow.close();\r\n       });\r\n@@ -89,12 +74,12 @@\n         width: 153,\r\n         height: 53,\r\n         textColor: '#000f',\r\n       }]\r\n-  \r\n \r\n+\r\n     };\r\n-           // Initialize the map\r\n+    // Initialize the map\r\n     const mapOptions = {\r\n       center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n       zoom: 8, // Set the initial zoom level\r\n     };\r\n@@ -108,9 +93,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n \r\n- \r\n+\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n@@ -119,17 +104,17 @@\n         setFilteredObject(xFilteredArray);\r\n         setPendingShowCase(false);\r\n \r\n \r\n-        const positions = repairManArr;\r\n-        \r\n-        console.log(\"STEP WHATS THE MAPPER\",positions,typeof (positions.positionx));\r\n+        const positions = xFilteredArray;\r\n+\r\n+        console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n         let xi = 0;\r\n-        const markers=  Object.entries(positions.positionx).forEach(entry => {\r\n+        const markers = Object.entries(positions.positionx).forEach(entry => {\r\n           const [key, value] = entry;\r\n           let position = value;\r\n-          if (xi <10)  console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n-    \r\n+          if (xi < 10) console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+\r\n           const marker = new window.google.maps.Marker({\r\n             position,\r\n             map,\r\n             icon: repairIcon,\r\n@@ -137,9 +122,9 @@\n           let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n           addInfoWindow(marker, renderx);\r\n           xi++;\r\n           return marker;\r\n-        }  );\r\n+        });\r\n         new MarkerClusterer({ map, markers, options });\r\n \r\n \r\n \r\n@@ -325,20 +310,20 @@\n         <Row></Row>\r\n   \r\n   */\r\n \r\n-     \r\n \r\n- const showMap = () => {\r\n-       let data = repairManArr;\r\n \r\n-      \r\n-    \r\n- \r\n-       return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n- }\r\n+  const showMap = () => {\r\n+    let data = repairManArr;\r\n \r\n \r\n+\r\n+\r\n+    return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n+  }\r\n+\r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         {showMap()}\r\n"
                },
                {
                    "date": 1708123445189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,8 @@\n         const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n         const xFilteredArray = getRepairMen(repairManArr);\r\n         setFilteredObject(xFilteredArray);\r\n         setPendingShowCase(false);\r\n-\r\n-\r\n         const positions = xFilteredArray;\r\n \r\n         console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n         let xi = 0;\r\n"
                },
                {
                    "date": 1708123523712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n         const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n-        const xFilteredArray = getRepairMen(repairManArr);\r\n+        xFilteredArray = getRepairMen(repairManArr);\r\n         setFilteredObject(xFilteredArray);\r\n         setPendingShowCase(false);\r\n         const positions = xFilteredArray;\r\n \r\n"
                },
                {
                    "date": 1708123650389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,34 +99,10 @@\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n         const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n-        xFilteredArray = getRepairMen(repairManArr);\r\n-        setFilteredObject(xFilteredArray);\r\n-        setPendingShowCase(false);\r\n-        const positions = xFilteredArray;\r\n-\r\n-        console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n-        let xi = 0;\r\n-        const markers = Object.entries(positions.positionx).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let position = value;\r\n-          if (xi < 10) console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n-\r\n-          const marker = new window.google.maps.Marker({\r\n-            position,\r\n-            map,\r\n-            icon: repairIcon,\r\n-          });\r\n-          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-          addInfoWindow(marker, renderx);\r\n-          xi++;\r\n-          return marker;\r\n-        });\r\n-        new MarkerClusterer({ map, markers, options });\r\n-\r\n-\r\n-\r\n+        getRepairMen(repairManArr);\r\n+        \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n@@ -235,10 +211,34 @@\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n-        console.log(\"STEP 2 CHECK WARNING setxObjElem\", tabArray);\r\n-        setIsPending(false);\r\n+  \r\n+        const positions = xFilteredArray;\r\n+positions = tabArray;\r\n+        console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n+        let xi = 0;\r\n+        const markers = Object.entries(positions.positionx).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let position = value;\r\n+          if (xi < 10) console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+\r\n+          const marker = new window.google.maps.Marker({\r\n+            position,\r\n+            map,\r\n+            icon: repairIcon,\r\n+          });\r\n+          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+          addInfoWindow(marker, renderx);\r\n+          xi++;\r\n+          return marker;\r\n+        });\r\n+        new MarkerClusterer({ map, markers, options });\r\n+\r\n+\r\n+\r\n+\r\n+\r\n         return tabArray;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708123703314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,45 +50,9 @@\n   }, [slugIdUniverse]);\r\n \r\n \r\n   const initShowCaseAllUniverses = () => {\r\n-    function addInfoWindow(marker, message) {\r\n-      var infoWindow = new window.google.maps.InfoWindow({\r\n-        content: message\r\n-      });\r\n-      window.google.maps.event.addListener(marker, 'click', function () {\r\n-        infoWindow.open(map, marker);\r\n-      });\r\n-      marker.addListener('mouseover', function () {\r\n-        // open your popup window\r\n-        infoWindow.open(map, marker);\r\n-      });\r\n-\r\n-      marker.addListener('mouseout', function () {\r\n-        // close your popup window\r\n-        infoWindow.close();\r\n-      });\r\n-    }\r\n-    var options = {\r\n-      maxZoom: 20,\r\n-      styles: [{\r\n-        width: 153,\r\n-        height: 53,\r\n-        textColor: '#000f',\r\n-      }]\r\n-\r\n-\r\n-    };\r\n-    // Initialize the map\r\n-    const mapOptions = {\r\n-      center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-      zoom: 8, // Set the initial zoom level\r\n-    };\r\n-    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n-    const repairIcon = {\r\n-      url: imgVector,\r\n-      scaledSize: new window.google.maps.Size(40, 40),\r\n-    };\r\n+   \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n@@ -168,9 +132,46 @@\n     }\r\n     return zFound;\r\n   }\r\n \r\n-  const getRepairMen = (showCasesArray) => {\r\n+  \r\n+  function addInfoWindow(marker, message) {\r\n+    var infoWindow = new window.google.maps.InfoWindow({\r\n+      content: message\r\n+    });\r\n+    window.google.maps.event.addListener(marker, 'click', function () {\r\n+      infoWindow.open(map, marker);\r\n+    });\r\n+    marker.addListener('mouseover', function () {\r\n+      // open your popup window\r\n+      infoWindow.open(map, marker);\r\n+    });\r\n+\r\n+    marker.addListener('mouseout', function () {\r\n+      // close your popup window\r\n+      infoWindow.close();\r\n+    });\r\n+  }\r\n+  var options = {\r\n+    maxZoom: 20,\r\n+    styles: [{\r\n+      width: 153,\r\n+      height: 53,\r\n+      textColor: '#000f',\r\n+    }]\r\n+\r\n+\r\n+  };\r\n+  // Initialize the map\r\n+  const mapOptions = {\r\n+    center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+    zoom: 8, // Set the initial zoom level\r\n+  };\r\n+  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+  const repairIcon = {\r\n+    url: imgVector,\r\n+    scaledSize: new window.google.maps.Size(40, 40),\r\n+  };\r\n     let userFieldMap = {\r\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1708123780844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,25 +311,15 @@\n   */\r\n \r\n \r\n \r\n-  const showMap = () => {\r\n-    let data = repairManArr;\r\n \r\n \r\n \r\n-\r\n-    return <div id='map' style={{ width: '100%', height: '100vh' }}></div>;\r\n-  }\r\n-\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        {showMap()}\r\n+   \r\n \r\n-      </Row>\r\n-\r\n       <Row\r\n \r\n         style={{\r\n           marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n"
                },
                {
                    "date": 1708123879944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n   }, [slugIdUniverse]);\r\n \r\n \r\n   const initShowCaseAllUniverses = () => {\r\n-   \r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n@@ -64,15 +64,15 @@\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n         const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n         getRepairMen(repairManArr);\r\n-        \r\n+\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n     });\r\n-  }\r\n+  \r\n \r\n   const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n@@ -132,9 +132,9 @@\n     }\r\n     return zFound;\r\n   }\r\n \r\n-  \r\n+\r\n   function addInfoWindow(marker, message) {\r\n     var infoWindow = new window.google.maps.InfoWindow({\r\n       content: message\r\n     });\r\n@@ -170,169 +170,167 @@\n   const repairIcon = {\r\n     url: imgVector,\r\n     scaledSize: new window.google.maps.Size(40, 40),\r\n   };\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n+  let userFieldMap = {\r\n+    '@id': \"userId\", id: \"id\",\r\n+    username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+    email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+    city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+    description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+    address: \"address\", roles: \"roles\",\r\n+  }\r\n \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+    data: {},\r\n+    success: (response) => {\r\n+      const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+      console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+      for (let i = 0; i < arrayObj.length; i++) {\r\n+        var result = [];\r\n+        let obj = arrayObj[i];\r\n+        const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+        let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+        if (toKeep) {\r\n+          Object.entries(obj).forEach(entry => {\r\n+            const [key, value] = entry;\r\n+            let hasKey = userFieldMap.hasOwnProperty(key);\r\n+            if (hasKey) {\r\n+              result[userFieldMap[key]] = value;\r\n+            }\r\n+          });\r\n+          console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n \r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n+          if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+            console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+            tabArray.push(result);\r\n           }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-  \r\n-        const positions = xFilteredArray;\r\n-positions = tabArray;\r\n-        console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n-        let xi = 0;\r\n-        const markers = Object.entries(positions.positionx).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let position = value;\r\n-          if (xi < 10) console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+          else {\r\n+            console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+          }\r\n+        }\r\n+      };\r\n+      setxObjElem(tabArray);\r\n \r\n-          const marker = new window.google.maps.Marker({\r\n-            position,\r\n-            map,\r\n-            icon: repairIcon,\r\n-          });\r\n-          let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-          addInfoWindow(marker, renderx);\r\n-          xi++;\r\n-          return marker;\r\n+      const positions = xFilteredArray;\r\n+      positions = tabArray;\r\n+      console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n+      let xi = 0;\r\n+      const markers = Object.entries(positions.positionx).forEach(entry => {\r\n+        const [key, value] = entry;\r\n+        let position = value;\r\n+        if (xi < 10) console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n+\r\n+        const marker = new window.google.maps.Marker({\r\n+          position,\r\n+          map,\r\n+          icon: repairIcon,\r\n         });\r\n-        new MarkerClusterer({ map, markers, options });\r\n+        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n+        addInfoWindow(marker, renderx);\r\n+        xi++;\r\n+        return marker;\r\n+      });\r\n+      new MarkerClusterer({ map, markers, options });\r\n \r\n \r\n \r\n+      return tabArray;\r\n+    },\r\n+    catch: (error) => {\r\n+      console.log(error);\r\n+    }\r\n+  });\r\n+};\r\n \r\n+const rowRenderArt = (row) => (\r\n+  <ArtItem key={row.email} row={row} />\r\n \r\n-        return tabArray;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n+)\r\n \r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n \r\n-  )\r\n \r\n \r\n+const showData = () => {\r\n+  let data = repairManArr;\r\n+  const positionxtestdata = repairManArr;\r\n \r\n+  if (isPending) {\r\n+    console.log(\"RepairManlatlng is pending-->\");\r\n+    return <></>\r\n+  }\r\n+  else {\r\n+    console.log(\"STEP map  is musterering\", tabArray);\r\n+    let xdata = [];\r\n+    let xrow = 0;\r\n+    tabArray.forEach((item, index) => {\r\n \r\n-  const showData = () => {\r\n-    let data = repairManArr;\r\n-    const positionxtestdata = repairManArr;\r\n+      if (item['picture'] !== null) {\r\n+        if (xrow < 12) {\r\n+          xdata[xrow] = item;\r\n+          console.log(\"filterin\", item);\r\n+        }\r\n+        xrow++;\r\n+      }\r\n+    })\r\n+    data = xdata;\r\n+  }\r\n+  if (data === false)\r\n+    return (\r\n+      <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+        Chargement...\r\n+      </p>\r\n+    );\r\n+  if (data.length === 0)\r\n+    return (\r\n+      <h3\r\n+        style={{\r\n+          textAlign: \"center\",\r\n+          width: \"100%\",\r\n+          fontSize: \"22px\",\r\n+          fontWeight: \"600\",\r\n+          margin: \"40px 0\",\r\n+        }}\r\n+      >\r\n+        Aucune donnée\r\n+      </h3>\r\n+    );\r\n+  return (data.map(rowRenderArt));\r\n+};\r\n \r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\", tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n+/*\r\n+ \r\n+<NewMap positionx = {positionxtestdata}   >\r\n+        </NewMap>\r\n+      <Row></Row>\r\n+ \r\n+*/\r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n \r\n-  /*\r\n-  \r\n-  <NewMap positionx = {positionxtestdata}   >\r\n-          </NewMap>\r\n-        <Row></Row>\r\n-  \r\n-  */\r\n \r\n \r\n \r\n \r\n+return (\r\n+  <Container style={{ marginTop: 50 }}>\r\n \r\n \r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-   \r\n+    <Row\r\n \r\n-      <Row\r\n+      style={{\r\n+        marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+        fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+      }}>\r\n+      Découvrez nos artisans en France\r\n+    </Row>\r\n+    <Row>\r\n+      {showData()}\r\n+    </Row>\r\n \r\n-        style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n \r\n+  </Container>\r\n \r\n-    </Container>\r\n-\r\n-  );\r\n+);\r\n }\r\n"
                },
                {
                    "date": 1708123988408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n-        const repairManArr = filterShowCaseByUnivers(universId, arrayObj);\r\n+        filterShowCaseByUnivers(universId, arrayObj);\r\n         getRepairMen(repairManArr);\r\n \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708124399786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,25 +47,22 @@\n     initShowCaseAllUniverses();\r\n     setIsPending(true);\r\n \r\n   }, [slugIdUniverse]);\r\n-\r\n-\r\n+  \r\n   const initShowCaseAllUniverses = () => {\r\n \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n-\r\n-\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n-        filterShowCaseByUnivers(universId, arrayObj);\r\n-        getRepairMen(repairManArr);\r\n+       \r\n+        return  ( filterShowCaseByUnivers(universId, arrayObj));\r\n \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -110,8 +107,11 @@\n     return xOneRows;\r\n   });\r\n \r\n \r\n+\r\n+\r\n+\r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n"
                },
                {
                    "date": 1708124415927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,9 +213,9 @@\n         }\r\n       };\r\n       setxObjElem(tabArray);\r\n \r\n-      const positions = xFilteredArray;\r\n+      //const positions = xFilteredArray;\r\n       positions = tabArray;\r\n       console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n       let xi = 0;\r\n       const markers = Object.entries(positions.positionx).forEach(entry => {\r\n"
                },
                {
                    "date": 1708124463692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,31 +213,9 @@\n         }\r\n       };\r\n       setxObjElem(tabArray);\r\n \r\n-      //const positions = xFilteredArray;\r\n-      positions = tabArray;\r\n-      console.log(\"STEP WHATS THE MAPPER\", positions, typeof (positions.positionx));\r\n-      let xi = 0;\r\n-      const markers = Object.entries(positions.positionx).forEach(entry => {\r\n-        const [key, value] = entry;\r\n-        let position = value;\r\n-        if (xi < 10) console.log(\"STEP WHAT 7772 int he map oneUser\", position);\r\n-\r\n-        const marker = new window.google.maps.Marker({\r\n-          position,\r\n-          map,\r\n-          icon: repairIcon,\r\n-        });\r\n-        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code']\r\n-        addInfoWindow(marker, renderx);\r\n-        xi++;\r\n-        return marker;\r\n-      });\r\n-      new MarkerClusterer({ map, markers, options });\r\n-\r\n-\r\n-\r\n+     \r\n       return tabArray;\r\n     },\r\n     catch: (error) => {\r\n       console.log(error);\r\n@@ -254,10 +232,10 @@\n \r\n \r\n const showData = () => {\r\n   let data = repairManArr;\r\n-  const positionxtestdata = repairManArr;\r\n \r\n+\r\n   if (isPending) {\r\n     console.log(\"RepairManlatlng is pending-->\");\r\n     return <></>\r\n   }\r\n"
                },
                {
                    "date": 1708124507709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,45 +133,10 @@\n     return zFound;\r\n   }\r\n \r\n \r\n-  function addInfoWindow(marker, message) {\r\n-    var infoWindow = new window.google.maps.InfoWindow({\r\n-      content: message\r\n-    });\r\n-    window.google.maps.event.addListener(marker, 'click', function () {\r\n-      infoWindow.open(map, marker);\r\n-    });\r\n-    marker.addListener('mouseover', function () {\r\n-      // open your popup window\r\n-      infoWindow.open(map, marker);\r\n-    });\r\n \r\n-    marker.addListener('mouseout', function () {\r\n-      // close your popup window\r\n-      infoWindow.close();\r\n-    });\r\n-  }\r\n-  var options = {\r\n-    maxZoom: 20,\r\n-    styles: [{\r\n-      width: 153,\r\n-      height: 53,\r\n-      textColor: '#000f',\r\n-    }]\r\n \r\n-\r\n-  };\r\n-  // Initialize the map\r\n-  const mapOptions = {\r\n-    center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-    zoom: 8, // Set the initial zoom level\r\n-  };\r\n-  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n-  const repairIcon = {\r\n-    url: imgVector,\r\n-    scaledSize: new window.google.maps.Size(40, 40),\r\n-  };\r\n   let userFieldMap = {\r\n     '@id': \"userId\", id: \"id\",\r\n     username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n     email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1708124700566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,12 +131,12 @@\n \r\n     }\r\n     return zFound;\r\n   }\r\n+const getRepairMan=()=>\r\n+{\r\n \r\n \r\n-\r\n-\r\n   let userFieldMap = {\r\n     '@id': \"userId\", id: \"id\",\r\n     username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n     email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n"
                },
                {
                    "date": 1708126590282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,15 +43,20 @@\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    initShowCaseAllUniverses();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var repairmenwithShowcase = getAllRepairManWithShowCase();\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n     setIsPending(true);\r\n \r\n-  }, [slugIdUniverse]);\r\n-  \r\n-  const initShowCaseAllUniverses = () => {\r\n+  }, []);\r\n \r\n+  const getAllRepairManWithShowCase = () => {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n@@ -59,19 +64,19 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setShowCases(arrayObj);\r\n-       \r\n-        return  ( filterShowCaseByUnivers(universId, arrayObj));\r\n+        return (arrayObj);\r\n \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n     });\r\n-  \r\n+  }\r\n \r\n-  const filterShowCaseByUnivers = ((universId, showCasesArray) => {\r\n+\r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n@@ -131,149 +136,136 @@\n \r\n     }\r\n     return zFound;\r\n   }\r\n-const getRepairMan=()=>\r\n-{\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n \r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n \r\n-  let userFieldMap = {\r\n-    '@id': \"userId\", id: \"id\",\r\n-    username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-    email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-    city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-    description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-    address: \"address\", roles: \"roles\",\r\n-  }\r\n-\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-    data: {},\r\n-    success: (response) => {\r\n-      const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-      console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-      for (let i = 0; i < arrayObj.length; i++) {\r\n-        var result = [];\r\n-        let obj = arrayObj[i];\r\n-        const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-        let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-        if (toKeep) {\r\n-          Object.entries(obj).forEach(entry => {\r\n-            const [key, value] = entry;\r\n-            let hasKey = userFieldMap.hasOwnProperty(key);\r\n-            if (hasKey) {\r\n-              result[userFieldMap[key]] = value;\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n             }\r\n-          });\r\n-          console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-          if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-            console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-            tabArray.push(result);\r\n+            else {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n           }\r\n-          else {\r\n-            console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-          }\r\n-        }\r\n-      };\r\n-      setxObjElem(tabArray);\r\n+        };\r\n+        return tabArray;\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n \r\n-     \r\n-      return tabArray;\r\n-    },\r\n-    catch: (error) => {\r\n-      console.log(error);\r\n-    }\r\n-  });\r\n-};\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n \r\n-const rowRenderArt = (row) => (\r\n-  <ArtItem key={row.email} row={row} />\r\n+  )\r\n \r\n-)\r\n \r\n \r\n \r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n \r\n-const showData = () => {\r\n-  let data = repairManArr;\r\n \r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\", tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n \r\n-  if (isPending) {\r\n-    console.log(\"RepairManlatlng is pending-->\");\r\n-    return <></>\r\n-  }\r\n-  else {\r\n-    console.log(\"STEP map  is musterering\", tabArray);\r\n-    let xdata = [];\r\n-    let xrow = 0;\r\n-    tabArray.forEach((item, index) => {\r\n-\r\n-      if (item['picture'] !== null) {\r\n-        if (xrow < 12) {\r\n-          xdata[xrow] = item;\r\n-          console.log(\"filterin\", item);\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n         }\r\n-        xrow++;\r\n-      }\r\n-    })\r\n-    data = xdata;\r\n-  }\r\n-  if (data === false)\r\n-    return (\r\n-      <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-        Chargement...\r\n-      </p>\r\n-    );\r\n-  if (data.length === 0)\r\n-    return (\r\n-      <h3\r\n-        style={{\r\n-          textAlign: \"center\",\r\n-          width: \"100%\",\r\n-          fontSize: \"22px\",\r\n-          fontWeight: \"600\",\r\n-          margin: \"40px 0\",\r\n-        }}\r\n-      >\r\n-        Aucune donnée\r\n-      </h3>\r\n-    );\r\n-  return (data.map(rowRenderArt));\r\n-};\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n \r\n-/*\r\n- \r\n-<NewMap positionx = {positionxtestdata}   >\r\n-        </NewMap>\r\n-      <Row></Row>\r\n- \r\n-*/\r\n \r\n \r\n \r\n \r\n \r\n \r\n-return (\r\n-  <Container style={{ marginTop: 50 }}>\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n \r\n \r\n-    <Row\r\n+      <Row\r\n \r\n-      style={{\r\n-        marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-        fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-      }}>\r\n-      Découvrez nos artisans en France\r\n-    </Row>\r\n-    <Row>\r\n-      {showData()}\r\n-    </Row>\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n \r\n \r\n-  </Container>\r\n+    </Container>\r\n \r\n-);\r\n+  );\r\n }\r\n"
                },
                {
                    "date": 1708126641785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    setPendingShowCase(true);\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var repairmenwithShowcase = getAllRepairManWithShowCase();\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n+    setIsPending(true);\r\n+\r\n+  }, []);\r\n+\r\n+  const getAllRepairManWithShowCase = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        setShowCases(arrayObj);\r\n+        return (arrayObj);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+\r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        return tabArray;\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\", tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+\r\n+\r\n+      <Row\r\n+\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708126741950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,18 +43,20 @@\n \r\n   useEffect(() => {\r\n     setPendingShowCase(true);\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n+   \r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var repairmenwithShowcase = getAllRepairManWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase \", repairmenwithShowcase);\r\n+    /*\r\n     // filter them by current universe\r\n     var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n     // keep only repairman\r\n     // get all user  whose have Repairman Role\r\n     var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n     setIsPending(true);\r\n-\r\n+*/\r\n   }, []);\r\n \r\n   const getAllRepairManWithShowCase = () => {\r\n     connector({\r\n@@ -269,275 +271,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    setPendingShowCase(true);\r\n-    console.log(\"STEP USE EFFECT 1 initShowCaseAllUniverse \");\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var repairmenwithShowcase = getAllRepairManWithShowCase();\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-\r\n-  }, []);\r\n-\r\n-  const getAllRepairManWithShowCase = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        setShowCases(arrayObj);\r\n-        return (arrayObj);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-\r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        return tabArray;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-\r\n-\r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\", tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-\r\n-\r\n-      <Row\r\n-\r\n-        style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708126957823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \r\n   const getAllRepairManWithShowCase = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1708127636371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,11 @@\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+  const [taskUsersShowCase, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  \r\n   const [repairManArr, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n@@ -39,16 +42,17 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n+  var usersWithShowcase;\r\n \r\n   useEffect(() => {\r\n-    setPendingShowCase(true);\r\n+\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n    \r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    var repairmenwithShowcase = getAllRepairManWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase \", repairmenwithShowcase);\r\n+    usersWithShowcase = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase \", usersWithShowcase);\r\n     /*\r\n     // filter them by current universe\r\n     var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n     // keep only repairman\r\n@@ -57,18 +61,37 @@\n     setIsPending(true);\r\n */\r\n   }, []);\r\n \r\n-  const getAllRepairManWithShowCase = () => {\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+   \r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+   \r\n+    console.log(\"STEP 1 repairmenwithShowcase \", usersWithShowcase);\r\n+    /*\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n+    setIsPending(true);\r\n+*/\r\n+  }, [taskUsersShowCase]);\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n+       \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        setShowCases(arrayObj);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n         return (arrayObj);\r\n \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708127688207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n       success: (response) => {\r\n        \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :initShowCaseAllUniverses (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         return (arrayObj);\r\n \r\n       },\r\n"
                },
                {
                    "date": 1708127855221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,16 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  var usersWithShowcase;\r\n+  var usersWithShowcase  = getUserWithShowCase();\r\n \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n    \r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    usersWithShowcase = getUserWithShowCase();\r\n+    \r\n     console.log(\"STEP 1 repairmenwithShowcase \", usersWithShowcase);\r\n     /*\r\n     // filter them by current universe\r\n     var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n"
                },
                {
                    "date": 1708127901498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  var usersWithShowcase  = getUserWithShowCase();\r\n+  \r\n \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n@@ -99,9 +99,13 @@\n       }\r\n     });\r\n   }\r\n \r\n+  var usersWithShowcase  = getUserWithShowCase(); \r\n \r\n+\r\n+\r\n+  \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n"
                },
                {
                    "date": 1708128660014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n \r\n-  const [taskUsersShowCase, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+\r\n   \r\n   const [repairManArr, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n@@ -42,17 +42,17 @@\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n-  \r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n    \r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    \r\n-    console.log(\"STEP 1 repairmenwithShowcase \", usersWithShowcase);\r\n+    result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n     /*\r\n     // filter them by current universe\r\n     var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n     // keep only repairman\r\n@@ -67,21 +67,23 @@\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n    \r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n    \r\n-    console.log(\"STEP 1 repairmenwithShowcase \", usersWithShowcase);\r\n+    console.log(\"STEP 1 repairmenwithShowcase taskUsersShowCaseIsPending value ->\", taskUsersShowCaseIsPending);\r\n     /*\r\n     // filter them by current universe\r\n     var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n     // keep only repairman\r\n     // get all user  whose have Repairman Role\r\n     var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n     setIsPending(true);\r\n */\r\n-  }, [taskUsersShowCase]);\r\n+  }, [taskUsersShowCaseIsPending]);\r\n \r\n   const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n+\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n@@ -98,14 +100,16 @@\n         console.log(error);\r\n       }\r\n     });\r\n   }\r\n+  \r\n \r\n-  var usersWithShowcase  = getUserWithShowCase(); \r\n \r\n \r\n \r\n-  \r\n+\r\n+\r\n+\r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n"
                },
                {
                    "date": 1708128682469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n    \r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    result = getUserWithShowCase();\r\n+    var  result = getUserWithShowCase();\r\n     console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n     /*\r\n     // filter them by current universe\r\n     var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n"
                },
                {
                    "date": 1708128857020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,10 +91,11 @@\n        \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n-        return (arrayObj);\r\n+        return (result);\r\n \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708128926182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,8 +92,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 2 :filter UniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         return (result);\r\n \r\n       },\r\n"
                },
                {
                    "date": 1708129047971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 2 :filter UniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         return (result);\r\n \r\n       },\r\n"
                },
                {
                    "date": 1708129191913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,308 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+\r\n+  \r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+   \r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var  result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+    /*\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n+    setIsPending(true);\r\n+*/\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+   \r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+   \r\n+    console.log(\"STEP 1 repairmenwithShowcase taskUsersShowCaseIsPending value ->\", taskUsersShowCaseIsPending);\r\n+    /*\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n+    setIsPending(true);\r\n+*/\r\n+  }, [taskUsersShowCaseIsPending]);\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+       \r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        \r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  // Push in an array the returns value to prepare display\r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        return tabArray;\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+\r\n+    if (isPending) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\", tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+\r\n+\r\n+      <Row\r\n+\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708129864310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n \r\n   const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady]  = useState(false);\r\n \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n@@ -95,8 +96,10 @@\n         \r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+        data = result;\r\n         return (result);\r\n \r\n       },\r\n       catch: (error) => {\r\n@@ -110,9 +113,9 @@\n \r\n \r\n \r\n \r\n-  // Push in an array the returns value to prepare display\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n@@ -150,93 +153,13 @@\n   });\r\n \r\n \r\n \r\n+  const showRepairman = () => {\r\n+    \r\n+    if (!displayUniverseUsersIsReady)\r\n+         data =  RepairManlatlng;    \r\n \r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        return tabArray;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-\r\n-\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n@@ -284,183 +207,27 @@\n \r\n \r\n \r\n \r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n \r\n \r\n-      <Row\r\n \r\n-        style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n \r\n \r\n-    </Container>\r\n \r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n-export default function MapArtisansUnivers() {\r\n \r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n \r\n \r\n-  \r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n \r\n \r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n \r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n \r\n-  useEffect(() => {\r\n \r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-   \r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var  result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-    /*\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-*/\r\n-  }, []);\r\n \r\n-  useEffect(() => {\r\n \r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-   \r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-   \r\n-    console.log(\"STEP 1 repairmenwithShowcase taskUsersShowCaseIsPending value ->\", taskUsersShowCaseIsPending);\r\n-    /*\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-*/\r\n-  }, [taskUsersShowCaseIsPending]);\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-       \r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-\r\n-\r\n-\r\n-\r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n@@ -541,9 +308,8 @@\n \r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n \r\n-\r\n     if (isPending) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n@@ -604,9 +370,9 @@\n         }}>\r\n         Découvrez nos artisans en France\r\n       </Row>\r\n       <Row>\r\n-        {showData()}\r\n+        {showRepairman()}\r\n       </Row>\r\n \r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1708130143571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,14 +153,13 @@\n   });\r\n \r\n \r\n \r\n-  const showRepairman = () => {\r\n-    \r\n-    if (!displayUniverseUsersIsReady)\r\n-         data =  RepairManlatlng;    \r\n+  \r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n \r\n-    if (isPending) {\r\n+    if (!displayUniverseUsersIsReady) {\r\n       console.log(\"RepairManlatlng is pending-->\");\r\n       return <></>\r\n     }\r\n     else {\r\n@@ -204,30 +203,8 @@\n \r\n \r\n \r\n \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n@@ -305,60 +282,14 @@\n \r\n \r\n \r\n \r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n \r\n-    if (isPending) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\", tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n \r\n \r\n \r\n \r\n-\r\n-\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n \r\n@@ -370,9 +301,9 @@\n         }}>\r\n         Découvrez nos artisans en France\r\n       </Row>\r\n       <Row>\r\n-        {showRepairman()}\r\n+        {showData()}\r\n       </Row>\r\n \r\n \r\n     </Container>\r\n"
                },
                {
                    "date": 1708130303961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         setDisplayUniverseUsersIsReady(true);\r\n-        data = result;\r\n+        \r\n         return (result);\r\n \r\n       },\r\n       catch: (error) => {\r\n@@ -148,8 +148,9 @@\n       }\r\n     });\r\n \r\n     console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n     return xOneRows;\r\n   });\r\n \r\n \r\n@@ -266,8 +267,9 @@\n               console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n             }\r\n           }\r\n         };\r\n+        setxObjElem(tabArray);\r\n         return tabArray;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708130364197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,9 @@\n         console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         \r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         setDisplayUniverseUsersIsReady(true);\r\n         \r\n         return (result);\r\n"
                },
                {
                    "date": 1708130434590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,10 +97,10 @@\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n         \r\n+        \r\n         return (result);\r\n \r\n       },\r\n       catch: (error) => {\r\n@@ -269,8 +269,9 @@\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n         return tabArray;\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708130658087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,9 @@\n \r\n \r\n \r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n@@ -155,58 +156,11 @@\n   });\r\n \r\n \r\n \r\n-  \r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n \r\n-    if (!displayUniverseUsersIsReady) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\", tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n \r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n \r\n-\r\n-\r\n-\r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n@@ -278,8 +232,54 @@\n       }\r\n     });\r\n   };\r\n \r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\", tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} />\r\n \r\n   )\r\n@@ -295,9 +295,9 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n-\r\n+<Row><NewMap></NewMap></Row>\r\n       <Row\r\n \r\n         style={{\r\n           marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n"
                },
                {
                    "date": 1708130972333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,316 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { now } from \"moment\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers() {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+\r\n+\r\n+  \r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+\r\n+\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady]  = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+   \r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var  result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+    /*\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n+    setIsPending(true);\r\n+*/\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+   \r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+   \r\n+    console.log(\"STEP 1 repairmenwithShowcase taskUsersShowCaseIsPending value ->\", taskUsersShowCaseIsPending);\r\n+    /*\r\n+    // filter them by current universe\r\n+    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n+    // keep only repairman\r\n+    // get all user  whose have Repairman Role\r\n+    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n+    setIsPending(true);\r\n+*/\r\n+  }, [taskUsersShowCaseIsPending]);\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+       \r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        \r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        \r\n+        \r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+\r\n+        });\r\n+      }\r\n+    });\r\n+\r\n+    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+        return tabArray;\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      console.log(\"RepairManlatlng is pending-->\");\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      console.log(\"STEP map  is musterering\", tabArray);\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            console.log(\"filterin\", item);\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row} />\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+\r\n+<Row><NewMap position ={tabArray}   displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap></Row>\r\n+      <Row\r\n+\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+\r\n+\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708131019481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n-        return tabArray;\r\n+       \r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n@@ -313,320 +313,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers() {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-\r\n-  \r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady]  = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-   \r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var  result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-    /*\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-*/\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-   \r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-   \r\n-    console.log(\"STEP 1 repairmenwithShowcase taskUsersShowCaseIsPending value ->\", taskUsersShowCaseIsPending);\r\n-    /*\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-*/\r\n-  }, [taskUsersShowCaseIsPending]);\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-       \r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        \r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        \r\n-        \r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-        return tabArray;\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\", tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-\r\n-<Row><NewMap></NewMap></Row>\r\n-      <Row\r\n-\r\n-        style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708132566458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,8 +223,10 @@\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n+       \r\n+        console.log(\"STEP MAP \",tabArray );\r\n         setDisplayUniverseUsersIsReady(true);\r\n        \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708132632934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n        \r\n-        console.log(\"STEP MAP \",tabArray );\r\n+        console.log(\"STEP MAP \", tabArray );\r\n         setDisplayUniverseUsersIsReady(true);\r\n        \r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1708337743907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,17 +16,20 @@\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n-export default function MapArtisansUnivers() {\r\n+export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n+  \r\n+  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n+  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n+  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n \r\n-\r\n   \r\n   const [repairManArr, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n"
                },
                {
                    "date": 1708337819300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n-  \r\n+\r\n   const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n   const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n   const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n \r\n@@ -284,9 +284,18 @@\n       );\r\n     return (data.map(rowRenderArt));\r\n   };\r\n   const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} />\r\n+    <ArtItem key={row.email} row={row} \r\n+    isDisplayListeProduits={isDisplayListeProduits}\r\n+    setDisplayListeProduits={setDisplayListeProduits}\r\n+    setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+    isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+    setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+    isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n+    \r\n+    \r\n+    />\r\n \r\n   )\r\n \r\n \r\n"
                },
                {
                    "date": 1708339127954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,17 +19,18 @@\n \r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n+  \r\n+  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n+  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n+  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n+\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n \r\n-  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n-  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n-  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n-\r\n   \r\n   const [repairManArr, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n"
                },
                {
                    "date": 1708339541473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,10 @@\n \r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n-  \r\n-  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n-  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n-  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n \r\n+\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n"
                },
                {
                    "date": 1708339558967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,16 +283,12 @@\n     return (data.map(rowRenderArt));\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} \r\n-    isDisplayListeProduits={isDisplayListeProduits}\r\n-    setDisplayListeProduits={setDisplayListeProduits}\r\n-    setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-    isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-    setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-    isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n+\r\n     \r\n     \r\n+    \r\n     />\r\n \r\n   )\r\n \r\n"
                },
                {
                    "date": 1708339940950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,11 +284,8 @@\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtItem key={row.email} row={row} \r\n \r\n-    \r\n-    \r\n-    \r\n     />\r\n \r\n   )\r\n \r\n"
                },
                {
                    "date": 1708343718866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,25 +63,10 @@\n     setIsPending(true);\r\n */\r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n+ \r\n \r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-   \r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-   \r\n-    console.log(\"STEP 1 repairmenwithShowcase taskUsersShowCaseIsPending value ->\", taskUsersShowCaseIsPending);\r\n-    /*\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-*/\r\n-  }, [taskUsersShowCaseIsPending]);\r\n-\r\n   const getUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n \r\n"
                },
                {
                    "date": 1708421011586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,248 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    //console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    // TU console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        // TU console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        // TU console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+    if (!displayUniverseUsersIsReady) {\r\n+\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row}\r\n+    />\r\n+\r\n+  )\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+\r\n+      <Row><NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap></Row>\r\n+      <Row\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708514079475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        // TU console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n         // TU console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n@@ -245,310 +245,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { now } from \"moment\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { getAllUniverses } from \"../../store/functions/universeActions.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-\r\n-  \r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-\r\n-\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady]  = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-   \r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var  result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-    /*\r\n-    // filter them by current universe\r\n-    var menfromthisUniverse = repairmanFilterByUniverse(universId, repairmenwithShowcase);\r\n-    // keep only repairman\r\n-    // get all user  whose have Repairman Role\r\n-    var repairMen = filterRepairMenOnly(menfromthisUniverse);\r\n-    setIsPending(true);\r\n-*/\r\n-  }, []);\r\n-\r\n- \r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-       \r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        \r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        \r\n-        \r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-\r\n-        });\r\n-      }\r\n-    });\r\n-\r\n-    console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 4 GOOD WARZING userIsInThisUniverse\", result);\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-              console.log(\"WARZING CHECK user Is not InThisUniverse\", result);\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-       \r\n-        console.log(\"STEP MAP \", tabArray );\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-       \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      console.log(\"RepairManlatlng is pending-->\");\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      console.log(\"STEP map  is musterering\", tabArray);\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            console.log(\"filterin\", item);\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row} \r\n-\r\n-    />\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-\r\n-<Row><NewMap position ={tabArray}   displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap></Row>\r\n-      <Row\r\n-\r\n-        style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-\r\n-\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708514144066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        // TU console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1708514195324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,10 +142,10 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2 USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2 CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1708703416914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import  RepairManlatlng from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n"
                },
                {
                    "date": 1708703531552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-import  RepairManlatlng from '../../components/front/repairManPositions.js'\r\n+import  {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n"
                },
                {
                    "date": 1708703975382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-import  {RepairManlatlng} from '../../components/front/repairManPositions.js'\r\n+import  RepairManlatlng from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n"
                },
                {
                    "date": 1708704112327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n-import  RepairManlatlng from '../../components/front/repairManPositions.js'\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n"
                },
                {
                    "date": 1708704803591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,15 +87,13 @@\n         Object.entries(showcases).forEach(entry => {\r\n           const [key, value] = entry;\r\n           let xOneCol = [];\r\n           let showcase = value;\r\n-          console.log(\"STEP 2 fil ... 969 value of showcase\", showcases);\r\n           xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n           xOneCol[\"api_user\"] = oneUser['@id'];\r\n           xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n           xOneCol[\"univers_name\"] = showcase['name'];\r\n           xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          console.log(\"STEP 2 fil ... 969 compare\", xOneCol[\"univers_id\"], \"-\", universId, \"-\", xOneCol[\"univers_id\"] == universId, \"-\");\r\n           if (xOneCol[\"univers_id\"] == universId) {\r\n             xOneRows[xi] = xOneCol;\r\n             xi++;\r\n           }\r\n"
                },
                {
                    "date": 1709569010765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n       //console.log(key,value);\r\n       let oneUser = value;\r\n       console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n-      console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n       if (showcases != null) {\r\n         Object.entries(showcases).forEach(entry => {\r\n           const [key, value] = entry;\r\n           let xOneCol = [];\r\n"
                },
                {
                    "date": 1709569031091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       //console.log(key,value);\r\n       let oneUser = value;\r\n-      console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n       //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n       if (showcases != null) {\r\n         Object.entries(showcases).forEach(entry => {\r\n"
                },
                {
                    "date": 1710068764197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.USERS_AREPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1710070661728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_AREPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1710071452557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,246 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_AREPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    //console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    // TU console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+    if (!displayUniverseUsersIsReady) {\r\n+\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row}\r\n+    />\r\n+\r\n+  )\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+\r\n+      <Row><NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap></Row>\r\n+      <Row\r\n+        style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+      </Row>\r\n+      <Row>\r\n+        {showData()}\r\n+      </Row>\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710071972110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_AREPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES_MAP}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n@@ -243,250 +243,4 @@\n     </Container>\r\n \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    //console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    // TU console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-\r\n-        console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-\r\n-    if (!displayUniverseUsersIsReady) {\r\n-\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row}\r\n-    />\r\n-\r\n-  )\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-\r\n-      <Row><NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap></Row>\r\n-      <Row\r\n-        style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n-        {showData()}\r\n-      </Row>\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710072120171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES_MAP}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1710133312166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1710134803218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       success: (response) => {\r\n \r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n"
                },
                {
                    "date": 1710169746282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -239,8 +239,35 @@\n       </Row>\r\n       <Row>\r\n         {showData()}\r\n       </Row>\r\n+\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"lists-prstation-items\">{showData()}</div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+              {showData()}\r\n+            </Slider>\r\n+          )}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <GoogleMap\r\n+            apiKey={vars.mapsApiKey}\r\n+            center={state.map.center}\r\n+            zoom={state.map.zoom}\r\n+            hoverDistance={K_SIZE / 2}\r\n+            onChildClick={_onChildClick}\r\n+            onGoogleApiLoaded={({ map, maps }) => {\r\n+              //console.log(\"map is loaded.\");\r\n+            }}\r\n+          >\r\n+            {places}\r\n+          </GoogleMap>\r\n+        </Col>\r\n+      </Row>\r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710170062709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -239,35 +239,9 @@\n       </Row>\r\n       <Row>\r\n         {showData()}\r\n       </Row>\r\n-\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-            <div className=\"lists-prstation-items\">{showData()}</div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n-              {showData()}\r\n-            </Slider>\r\n-          )}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <GoogleMap\r\n-            apiKey={vars.mapsApiKey}\r\n-            center={state.map.center}\r\n-            zoom={state.map.zoom}\r\n-            hoverDistance={K_SIZE / 2}\r\n-            onChildClick={_onChildClick}\r\n-            onGoogleApiLoaded={({ map, maps }) => {\r\n-              //console.log(\"map is loaded.\");\r\n-            }}\r\n-          >\r\n-            {places}\r\n-          </GoogleMap>\r\n-        </Col>\r\n-      </Row>\r\n+      \r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710170209894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,19 +228,22 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n-      <Row><NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap></Row>\r\n-      <Row\r\n-        style={{\r\n+      <Row>\r\n+        <Col>\r\n+        <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+        </Col>\r\n+      <Col>\r\n+              style={{\r\n           marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n           fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n         }}>\r\n         Découvrez nos artisans en France\r\n-      </Row>\r\n-      <Row>\r\n+        </Col>\r\n+     <Col>\r\n         {showData()}\r\n-      </Row>\r\n+      </Col>\r\n       \r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1710170222063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -243,8 +243,9 @@\n      <Col>\r\n         {showData()}\r\n       </Col>\r\n       \r\n+      </Row>\r\n     </Container>\r\n \r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710170236454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,251 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    //console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          if (xOneCol[\"univers_id\"] == universId) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    // TU console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+\r\n+    if (!displayUniverseUsersIsReady) {\r\n+\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+          }\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtItem key={row.email} row={row}\r\n+    />\r\n+\r\n+  )\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+\r\n+      <Row>\r\n+        <Col>\r\n+        <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+        </Col>\r\n+      <Col\r\n+              style={{\r\n+          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+        Découvrez nos artisans en France\r\n+        </Col>\r\n+     <Col>\r\n+        {showData()}\r\n+      </Col>\r\n+      \r\n+      </Row>\r\n+    </Container>\r\n+\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710170331364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,274 +228,22 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n-      <Row>\r\n-        <Col>\r\n-        <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n-        </Col>\r\n-      <Col\r\n-              style={{\r\n+<span  style={{\r\n           marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n           fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n         }}>\r\n         Découvrez nos artisans en France\r\n-        </Col>\r\n-     <Col>\r\n-        {showData()}\r\n-      </Col>\r\n-      \r\n-      </Row>\r\n-    </Container>\r\n-\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    //console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    // TU console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-\r\n-        console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-\r\n-    if (!displayUniverseUsersIsReady) {\r\n-\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-          }\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row}\r\n-    />\r\n-\r\n-  )\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-\r\n+        </span>\r\n+ \r\n       <Row>\r\n         <Col>\r\n         <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n         </Col>\r\n       <Col>\r\n-              style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-        Découvrez nos artisans en France\r\n-        </Col>\r\n-     <Col>\r\n         {showData()}\r\n       </Col>\r\n-      \r\n       </Row>\r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1710170380382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,14 +236,15 @@\n         Découvrez nos artisans en France\r\n         </span>\r\n  \r\n       <Row>\r\n-        <Col>\r\n-        <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n-        </Col>\r\n+    \r\n       <Col>\r\n         {showData()}\r\n       </Col>\r\n+      <Col>\r\n+        <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+        </Col>\r\n       </Row>\r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1710170738404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,23 +228,23 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n-<span  style={{\r\n-          marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n+      <span style={{\r\n+        marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+        fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+      }}>\r\n         Découvrez nos artisans en France\r\n-        </span>\r\n- \r\n+      </span>\r\n+\r\n       <Row>\r\n-    \r\n-      <Col>\r\n-        {showData()}\r\n-      </Col>\r\n-      <Col>\r\n-        <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+\r\n+        <Col>\r\n+          {showData()}\r\n         </Col>\r\n+        <Col>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+        </Col>\r\n       </Row>\r\n     </Container>\r\n \r\n   );\r\n"
                },
                {
                    "date": 1710170811714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n       </span>\r\n \r\n       <Row>\r\n \r\n-        <Col>\r\n+        <Col className=\"lg-7\">\r\n           {showData()}\r\n         </Col>\r\n         <Col>\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n"
                },
                {
                    "date": 1710171067096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n       </span>\r\n \r\n       <Row>\r\n \r\n-        <Col className=\"lg-7\">\r\n+        <Col className=\"col-lg-7\">\r\n           {showData()}\r\n         </Col>\r\n         <Col>\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n"
                },
                {
                    "date": 1710171837439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,11 +234,11 @@\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n       </span>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+   \r\n \r\n-      <Row>\r\n-\r\n         <Col className=\"col-lg-7\">\r\n           {showData()}\r\n         </Col>\r\n         <Col>\r\n"
                },
                {
                    "date": 1710172116541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,17 +235,47 @@\n       }}>\r\n         Découvrez nos artisans en France\r\n       </span>\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n-   \r\n \r\n+\r\n         <Col className=\"col-lg-7\">\r\n           {showData()}\r\n         </Col>\r\n         <Col>\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n         </Col>\r\n       </Row>\r\n-    </Container>\r\n+  \r\n \r\n+\r\n+<Row className=\"bloc-lists-prstation-items\">\r\n+<Col lg={5} className=\"content-lists-prstation-items\">\r\n+  {isDesktopOrLaptop && (\r\n+    <div className=\"lists-prstation-items\">{showData()}</div>\r\n+  )}\r\n+  {isTabletOrMobile && (\r\n+    <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+      {showData()}\r\n+    </Slider>\r\n+  )}\r\n+</Col>\r\n+<Col lg={7} className=\"bloc-map-list\">\r\n+<NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+{/*\r\n+  <GoogleMap\r\n+    apiKey={vars.mapsApiKey}\r\n+    center={state.map.center}\r\n+    zoom={state.map.zoom}\r\n+    hoverDistance={K_SIZE / 2}\r\n+    onChildClick={_onChildClick}\r\n+    onGoogleApiLoaded={({ map, maps }) => {\r\n+      //console.log(\"map is loaded.\");\r\n+    }}\r\n+  >\r\n+    {places}\r\n+  </GoogleMap> */}\r\n+</Col>\r\n+</Row>\r\n+</Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710172229782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,12 +253,12 @@\n   {isDesktopOrLaptop && (\r\n     <div className=\"lists-prstation-items\">{showData()}</div>\r\n   )}\r\n   {isTabletOrMobile && (\r\n-    <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+{/* <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n       {showData()}\r\n     </Slider>\r\n-  )}\r\n+  */}  )}\r\n </Col>\r\n <Col lg={7} className=\"bloc-map-list\">\r\n <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n {/*\r\n"
                },
                {
                    "date": 1710172296550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,18 +234,9 @@\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n       </span>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-\r\n-\r\n-        <Col className=\"col-lg-7\">\r\n-          {showData()}\r\n-        </Col>\r\n-        <Col>\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n-        </Col>\r\n-      </Row>\r\n+     \r\n   \r\n \r\n \r\n <Row className=\"bloc-lists-prstation-items\">\r\n"
                },
                {
                    "date": 1710172821559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,11 +178,9 @@\n   };\r\n \r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n-\r\n     if (!displayUniverseUsersIsReady) {\r\n-\r\n       return <></>\r\n     }\r\n     else {\r\n       let xdata = [];\r\n"
                },
                {
                    "date": 1710174334933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtItem from \"../../components/front/artItem.js\";\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n@@ -218,9 +219,9 @@\n       );\r\n     return (data.map(rowRenderArt));\r\n   };\r\n   const rowRenderArt = (row) => (\r\n-    <ArtItem key={row.email} row={row}\r\n+    <ArtPrestationFiche key={row.email} row={row}\r\n     />\r\n \r\n   )\r\n \r\n"
                },
                {
                    "date": 1710174684303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n       );\r\n     return (data.map(rowRenderArt));\r\n   };\r\n   const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche key={row.email} row={row}\r\n+    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n     />\r\n \r\n   )\r\n \r\n"
                },
                {
                    "date": 1710255327227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n       <span style={{\r\n-        marginBottom: '2%', marginTop: '2%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+        marginBottom: '15%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n       </span>\r\n"
                },
                {
                    "date": 1710255351273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n       <span style={{\r\n-        marginBottom: '15%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+        marginBottom: '15%', marginTop: '15%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n       </span>\r\n"
                },
                {
                    "date": 1710255380798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,14 +227,14 @@\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n-      <span style={{\r\n+      <Row style={{\r\n         marginBottom: '15%', marginTop: '15%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n-      </span>\r\n+      </Row>\r\n      \r\n   \r\n \r\n \r\n"
                },
                {
                    "date": 1710255410127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n \r\n       <Row style={{\r\n-        marginBottom: '15%', marginTop: '15%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+         marginBottom: '5%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n       </Row>\r\n"
                },
                {
                    "date": 1710255446520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,14 +226,15 @@\n   )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-\r\n-      <Row style={{\r\n+<Row>\r\n+      <Col> style={{\r\n          marginBottom: '5%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n         fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n       }}>\r\n         Découvrez nos artisans en France\r\n+      </Col>\r\n       </Row>\r\n      \r\n   \r\n \r\n"
                },
                {
                    "date": 1710255465800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,34 +226,34 @@\n   )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n-<Row>\r\n-      <Col> style={{\r\n-         marginBottom: '5%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-        fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-      }}>\r\n-        Découvrez nos artisans en France\r\n-      </Col>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '5%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n       </Row>\r\n-     \r\n-  \r\n \r\n \r\n-<Row className=\"bloc-lists-prstation-items\">\r\n-<Col lg={5} className=\"content-lists-prstation-items\">\r\n-  {isDesktopOrLaptop && (\r\n-    <div className=\"lists-prstation-items\">{showData()}</div>\r\n-  )}\r\n-  {isTabletOrMobile && (\r\n-{/* <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+\r\n+\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"lists-prstation-items\">{showData()}</div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {/* <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n       {showData()}\r\n     </Slider>\r\n-  */}  )}\r\n-</Col>\r\n-<Col lg={7} className=\"bloc-map-list\">\r\n-<NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n-{/*\r\n+  */})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+          {/*\r\n   <GoogleMap\r\n     apiKey={vars.mapsApiKey}\r\n     center={state.map.center}\r\n     zoom={state.map.zoom}\r\n@@ -264,9 +264,9 @@\n     }}\r\n   >\r\n     {places}\r\n   </GoogleMap> */}\r\n-</Col>\r\n-</Row>\r\n-</Container>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710255516480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n-          marginBottom: '5%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          marginBottom: '7%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n           fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n         }}>\r\n           Découvrez nos artisans en France\r\n         </Col>\r\n"
                },
                {
                    "date": 1710255528411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n-          marginBottom: '7%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n           fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n         }}>\r\n           Découvrez nos artisans en France\r\n         </Col>\r\n"
                },
                {
                    "date": 1710591958163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,10 +141,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n@@ -156,19 +155,17 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n+            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               tabArray.push(result);\r\n             }\r\n             else {\r\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n-\r\n         console.log(\"STEP MAP \", tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n \r\n       },\r\n@@ -188,11 +185,11 @@\n       let xrow = 0;\r\n       tabArray.forEach((item, index) => {\r\n \r\n         if (item['picture'] !== null) {\r\n-          if (xrow < 12) {\r\n+          //if (xrow < 12) {\r\n             xdata[xrow] = item;\r\n-          }\r\n+          //}\r\n           xrow++;\r\n         }\r\n       })\r\n       data = xdata;\r\n"
                },
                {
                    "date": 1710592394368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    // TU console.log(\"STEP 2  xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setxObjElem();\r\n     return xOneRows;\r\n   });\r\n \r\n"
                },
                {
                    "date": 1710592797331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n       let oneUser = value;\r\n       //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n       //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      let isAlreadyIn = false;\r\n       if (showcases != null) {\r\n         Object.entries(showcases).forEach(entry => {\r\n           const [key, value] = entry;\r\n           let xOneCol = [];\r\n@@ -93,9 +94,11 @@\n           xOneCol[\"api_user\"] = oneUser['@id'];\r\n           xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n           xOneCol[\"univers_name\"] = showcase['name'];\r\n           xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          if (xOneCol[\"univers_id\"] == universId) {\r\n+          let isAlreadyIn = xOneRows.includes( xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn)  {\r\n             xOneRows[xi] = xOneCol;\r\n             xi++;\r\n           }\r\n         });\r\n"
                },
                {
                    "date": 1710592909800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    //console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n"
                },
                {
                    "date": 1710593028321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    //console.log(\"STEP 2 TU filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      let isAlreadyIn = false;\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes( xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn)  {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+          //}\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (data.map(rowRenderArt));\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n+    />\r\n+\r\n+  )\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+\r\n+\r\n+\r\n+\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"lists-prstation-items\">{showData()}</div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {/* <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n+      {showData()}\r\n+    </Slider>\r\n+  */})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n+          {/*\r\n+  <GoogleMap\r\n+    apiKey={vars.mapsApiKey}\r\n+    center={state.map.center}\r\n+    zoom={state.map.zoom}\r\n+    hoverDistance={K_SIZE / 2}\r\n+    onChildClick={_onChildClick}\r\n+    onGoogleApiLoaded={({ map, maps }) => {\r\n+      //console.log(\"map is loaded.\");\r\n+    }}\r\n+  >\r\n+    {places}\r\n+  </GoogleMap> */}\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710598128696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,9 +167,9 @@\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n-        console.log(\"STEP MAP \", tabArray);\r\n+        // TU :console.log(\"STEP MAP \", tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n \r\n       },\r\n       catch: (error) => {\r\n@@ -216,9 +216,15 @@\n         >\r\n           Aucune donnée\r\n         </h3>\r\n       );\r\n-    return (data.map(rowRenderArt));\r\n+    return (\r\n+      \r\n+      <Scrollbar style={{ width: 250, height: 250 }}>\r\n+  <p>Hello world!</p>\r\n+  {data.map(rowRenderArt)};\r\n+</Scrollbar>\r\n+     \r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n     />\r\n@@ -269,276 +275,4 @@\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    console.log(\"STEP 2 filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      let isAlreadyIn = false;\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes( xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn)  {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-          //}\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (data.map(rowRenderArt));\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n-    />\r\n-\r\n-  )\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-\r\n-\r\n-\r\n-\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-            <div className=\"lists-prstation-items\">{showData()}</div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {/* <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n-      {showData()}\r\n-    </Slider>\r\n-  */})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n-          {/*\r\n-  <GoogleMap\r\n-    apiKey={vars.mapsApiKey}\r\n-    center={state.map.center}\r\n-    zoom={state.map.zoom}\r\n-    hoverDistance={K_SIZE / 2}\r\n-    onChildClick={_onChildClick}\r\n-    onGoogleApiLoaded={({ map, maps }) => {\r\n-      //console.log(\"map is loaded.\");\r\n-    }}\r\n-  >\r\n-    {places}\r\n-  </GoogleMap> */}\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710598169654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n     return (\r\n       \r\n       <Scrollbar style={{ width: 250, height: 250 }}>\r\n   <p>Hello world!</p>\r\n-  {data.map(rowRenderArt)};\r\n+  data.map(rowRenderArt);\r\n </Scrollbar>\r\n      \r\n   };\r\n   const rowRenderArt = (row) => (\r\n"
                },
                {
                    "date": 1710598198068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n       <Scrollbar style={{ width: 250, height: 250 }}>\r\n   <p>Hello world!</p>\r\n   data.map(rowRenderArt);\r\n </Scrollbar>\r\n-     \r\n+    )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n     />\r\n"
                },
                {
                    "date": 1710598260227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n+import { Scrollbar } from 'react-scrollbars-custom';\r\n \r\n-\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1710598362524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,12 +218,10 @@\n         </h3>\r\n       );\r\n     return (\r\n       \r\n-      <Scrollbar style={{ width: 250, height: 250 }}>\r\n-  <p>Hello world!</p>\r\n-  data.map(rowRenderArt);\r\n-</Scrollbar>\r\n+\r\n+  data.map(rowRenderArt)\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n"
                },
                {
                    "date": 1710598432546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-import { Scrollbar } from 'react-scrollbars-custom';\r\n \r\n+\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1710598705487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,12 +248,9 @@\n           {isDesktopOrLaptop && (\r\n             <div className=\"lists-prstation-items\">{showData()}</div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n-            {/* <Slider ref={(slider) => (refSlider = slider)} {...settings}>\r\n-      {showData()}\r\n-    </Slider>\r\n-  */})}\r\n+            {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n           {/*\r\n"
                },
                {
                    "date": 1710598818327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,9 +245,11 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n-            <div className=\"lists-prstation-items\">{showData()}</div>\r\n+            <div className=\"content-lists-prstation-items col-lg-5\">\r\n+            <div className=\"lists-prstation-items\">{showData()}</div\r\n+            ></div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n"
                },
                {
                    "date": 1710598843587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,9 +245,9 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n-            <div className=\"content-lists-prstation-items col-lg-5\">\r\n+            <div className=\"content-lists-prstation-items\">\r\n             <div className=\"lists-prstation-items\">{showData()}</div\r\n             ></div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n"
                },
                {
                    "date": 1710599014564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,10 +240,27 @@\n         </Col>\r\n       </Row>\r\n \r\n \r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n \r\n+<Col lg={12} className=\"bloc-map-list\">\r\n+  <GoogleMap\r\n+    apiKey={vars.mapsApiKey}\r\n+    center={state.map.center}\r\n+    zoom={state.map.zoom}\r\n+    hoverDistance={K_SIZE / 2}\r\n+    onChildClick={_onChildClick}\r\n+    onGoogleApiLoaded={({ map, maps }) => {\r\n+      //console.log(\"map is loaded.\");\r\n+    }}\r\n+  >\r\n+    {tabArray}\r\n+  </GoogleMap>\r\n \r\n+</Col>\r\n+</Row>\r\n+\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"content-lists-prstation-items\">\r\n"
                },
                {
                    "date": 1710599169432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -243,21 +243,21 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n \r\n <Col lg={12} className=\"bloc-map-list\">\r\n-  <GoogleMap\r\n+<NewMap position={tabArray}\r\n+    displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n     apiKey={vars.mapsApiKey}\r\n-    center={state.map.center}\r\n-    zoom={state.map.zoom}\r\n-    hoverDistance={K_SIZE / 2}\r\n-    onChildClick={_onChildClick}\r\n-    onGoogleApiLoaded={({ map, maps }) => {\r\n+    //center={state.map.center}\r\n+   // zoom={state.map.zoom}\r\n+    //hoverDistance={K_SIZE / 2}\r\n+   // onChildClick={_onChildClick}\r\n+   //</Col> onGoogleApiLoaded={({ map, maps }) => {\r\n       //console.log(\"map is loaded.\");\r\n-    }}\r\n+    \r\n   >\r\n     {tabArray}\r\n-  </GoogleMap>\r\n-\r\n+ </NewMap>\r\n </Col>\r\n </Row>\r\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n@@ -270,22 +270,12 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>\r\n-          {/*\r\n-  <GoogleMap\r\n-    apiKey={vars.mapsApiKey}\r\n-    center={state.map.center}\r\n-    zoom={state.map.zoom}\r\n-    hoverDistance={K_SIZE / 2}\r\n-    onChildClick={_onChildClick}\r\n-    onGoogleApiLoaded={({ map, maps }) => {\r\n-      //console.log(\"map is loaded.\");\r\n-    }}\r\n-  >\r\n-    {places}\r\n-  </GoogleMap> */}\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n+\r\n+          </NewMap>\r\n+    \r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1710599191977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n import ArtItem from \"../../components/front/artItem.js\";\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n+import * as vars from \"../../vars\";\r\n \r\n-\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1710599567511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,11 +94,11 @@\n           xOneCol[\"api_user\"] = oneUser['@id'];\r\n           xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n           xOneCol[\"univers_name\"] = showcase['name'];\r\n           xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes( xOneCol[\"user_id\"]);\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n \r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn)  {\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n             xOneRows[xi] = xOneCol;\r\n             xi++;\r\n           }\r\n         });\r\n@@ -189,9 +189,9 @@\n       tabArray.forEach((item, index) => {\r\n \r\n         if (item['picture'] !== null) {\r\n           //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n+          xdata[xrow] = item;\r\n           //}\r\n           xrow++;\r\n         }\r\n       })\r\n@@ -217,18 +217,35 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n     return (\r\n-      \r\n \r\n-  data.map(rowRenderArt)\r\n+\r\n+      data.map(rowRenderArt)\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n     />\r\n \r\n   )\r\n+  const places = tabArray.length\r\n+  ?  tabArray.map((row) => {\r\n+    return (\r\n+      <PrestationFicheMap\r\n+        key={row.id}\r\n+        lat={row.user.latitude}\r\n+        lng={row.user.longitude}\r\n+        text={\r\n+          row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+        }\r\n+        id={row.id}\r\n+        // use your hover state (from store, react-controllables etc...)\r\n+        activeBenefit={activeBenefit}\r\n+      />\r\n+    );\r\n+  })\r\n+  : \"\";\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -242,40 +259,40 @@\n \r\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n \r\n-<Col lg={12} className=\"bloc-map-list\">\r\n-<NewMap position={tabArray}\r\n-    displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-    apiKey={vars.mapsApiKey}\r\n-    //center={state.map.center}\r\n-   // zoom={state.map.zoom}\r\n-    //hoverDistance={K_SIZE / 2}\r\n-   // onChildClick={_onChildClick}\r\n-   //</Col> onGoogleApiLoaded={({ map, maps }) => {\r\n-      //console.log(\"map is loaded.\");\r\n-    \r\n-  >\r\n-    {tabArray}\r\n- </NewMap>\r\n-</Col>\r\n-</Row>\r\n+        <Col lg={12} className=\"bloc-map-list\">\r\n+          <NewMap position={tabArray}\r\n+            displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+            apiKey={vars.mapsApiKey}\r\n+          //center={state.map.center}\r\n+          // zoom={state.map.zoom}\r\n+          //hoverDistance={K_SIZE / 2}\r\n+          // onChildClick={_onChildClick}\r\n+          //</Col> onGoogleApiLoaded={({ map, maps }) => {\r\n+          //console.log(\"map is loaded.\");\r\n \r\n+          >\r\n+            {tabArray}\r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"content-lists-prstation-items\">\r\n-            <div className=\"lists-prstation-items\">{showData()}</div\r\n-            ></div>\r\n+              <div className=\"lists-prstation-items\">{showData()}</div\r\n+              ></div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n \r\n           </NewMap>\r\n-    \r\n+\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1710599593544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -257,27 +257,10 @@\n         </Col>\r\n       </Row>\r\n \r\n \r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n+   \r\n \r\n-        <Col lg={12} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray}\r\n-            displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-            apiKey={vars.mapsApiKey}\r\n-          //center={state.map.center}\r\n-          // zoom={state.map.zoom}\r\n-          //hoverDistance={K_SIZE / 2}\r\n-          // onChildClick={_onChildClick}\r\n-          //</Col> onGoogleApiLoaded={({ map, maps }) => {\r\n-          //console.log(\"map is loaded.\");\r\n-\r\n-          >\r\n-            {tabArray}\r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"content-lists-prstation-items\">\r\n"
                },
                {
                    "date": 1710599663998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,24 +228,24 @@\n     />\r\n \r\n   )\r\n   const places = tabArray.length\r\n-  ?  tabArray.map((row) => {\r\n-    return (\r\n-      <PrestationFicheMap\r\n-        key={row.id}\r\n-        lat={row.user.latitude}\r\n-        lng={row.user.longitude}\r\n-        text={\r\n-          row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-        }\r\n-        id={row.id}\r\n+    ? tabArray.map((row) => {\r\n+      return (\r\n+        <PrestationFicheMap\r\n+          key={row.id}\r\n+          lat={row.user.latitude}\r\n+          lng={row.user.longitude}\r\n+          text={\r\n+            row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n+          }\r\n+          id={row.id}\r\n         // use your hover state (from store, react-controllables etc...)\r\n-        activeBenefit={activeBenefit}\r\n-      />\r\n-    );\r\n-  })\r\n-  : \"\";\r\n+        // todo activeBenefit={activeBenefit}\r\n+        />\r\n+      );\r\n+    })\r\n+    : \"\";\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -257,16 +257,18 @@\n         </Col>\r\n       </Row>\r\n \r\n \r\n-   \r\n \r\n+\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\">{showData()}</div\r\n-              ></div>\r\n+              <div className=\"lists-prstation-items\">\r\n+                {showData()}\r\n+                </div>\r\n+                </div>\r\n           )}\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n"
                },
                {
                    "date": 1710599910122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,9 +230,9 @@\n   )\r\n   const places = tabArray.length\r\n     ? tabArray.map((row) => {\r\n       return (\r\n-        <PrestationFicheMap\r\n+        <ArtisanFicheMap\r\n           key={row.id}\r\n           lat={row.user.latitude}\r\n           lng={row.user.longitude}\r\n           text={\r\n"
                },
                {
                    "date": 1710600172946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n import * as vars from \"../../vars\";\r\n-\r\n+import ArtisanFicheMap from \"./artisanFicheMap\";\r\n+import { K_SIZE } from \"./markerStyle\";\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1710600625122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n import * as vars from \"../../vars\";\r\n-import ArtisanFicheMap from \"./artisanFicheMap\";\r\n+import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n import { K_SIZE } from \"./markerStyle\";\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n"
                },
                {
                    "date": 1710600646387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n import * as vars from \"../../vars\";\r\n import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n-import { K_SIZE } from \"./markerStyle\";\r\n+import { K_SIZE } from \"../../components/front/markerStyle\";\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1710600797491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,26 +228,10 @@\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n     />\r\n \r\n   )\r\n-  const places = tabArray.length\r\n-    ? tabArray.map((row) => {\r\n-      return (\r\n-        <ArtisanFicheMap\r\n-          key={row.id}\r\n-          lat={row.user.latitude}\r\n-          lng={row.user.longitude}\r\n-          text={\r\n-            row.typeService === \"forfait\" ? `${row.minPrice} €` : \"Sur devis\"\r\n-          }\r\n-          id={row.id}\r\n-        // use your hover state (from store, react-controllables etc...)\r\n-        // todo activeBenefit={activeBenefit}\r\n-        />\r\n-      );\r\n-    })\r\n-    : \"\";\r\n \r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1710776899730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,8 +247,22 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n+            \r\n+\r\n+            <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+            <p id = \"para\"  style={{width :'100%', height:'100%', color:'rgb(68, 68, 68)',  overflow:'scroll', fontSize: 8, \r\n+            fontFamily: 'Poppins', fontWeight: '500',\r\n+            boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+            fontSize: 12 }}> \r\n+           \r\n+            </p> </div>\r\n+       \r\n+\r\n+\r\n+\r\n+            \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n                 {showData()}\r\n                 </div>\r\n"
                },
                {
                    "date": 1710776907339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -249,19 +249,12 @@\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             \r\n \r\n-            <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-            <p id = \"para\"  style={{width :'100%', height:'100%', color:'rgb(68, 68, 68)',  overflow:'scroll', fontSize: 8, \r\n-            fontFamily: 'Poppins', fontWeight: '500',\r\n-            boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-            fontSize: 12 }}> \r\n-           \r\n-            </p> </div>\r\n-       \r\n \r\n \r\n \r\n+\r\n             \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n                 {showData()}\r\n"
                },
                {
                    "date": 1710777036678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -249,12 +249,21 @@\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             \r\n \r\n+            <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+            <p id=\"para\" style={{\r\n+                width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                fontFamily: 'Poppins', fontWeight: '500',\r\n+                boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                fontSize: 12\r\n+            }}>\r\n+                {xOneRow[\"description\"]}\r\n+            </p>\r\n+        </div>\r\n \r\n \r\n \r\n-\r\n             \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n                 {showData()}\r\n"
                },
                {
                    "date": 1710777057731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,9 +248,9 @@\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             \r\n-\r\n+<>\r\n             <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n             <p id=\"para\" style={{\r\n                 width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                 fontFamily: 'Poppins', fontWeight: '500',\r\n@@ -259,11 +259,11 @@\n             }}>\r\n                 {xOneRow[\"description\"]}\r\n             </p>\r\n         </div>\r\n+</>\r\n \r\n \r\n-\r\n             \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n                 {showData()}\r\n"
                },
                {
                    "date": 1710777175668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,10 +247,9 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n-            \r\n-<>\r\n+<div>           \r\n             <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n             <p id=\"para\" style={{\r\n                 width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                 fontFamily: 'Poppins', fontWeight: '500',\r\n@@ -259,9 +258,8 @@\n             }}>\r\n                 {xOneRow[\"description\"]}\r\n             </p>\r\n         </div>\r\n-</>\r\n \r\n \r\n             \r\n             <div className=\"content-lists-prstation-items\">\r\n@@ -269,8 +267,9 @@\n                 {showData()}\r\n                 </div>\r\n                 </div>\r\n           )}\r\n+          </div>\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n@@ -279,7 +278,8 @@\n           </NewMap>\r\n \r\n         </Col>\r\n       </Row>\r\n+    \r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710777233805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,8 +247,9 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n+<Col>\r\n <div>           \r\n             <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n             <p id=\"para\" style={{\r\n                 width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n@@ -257,9 +258,8 @@\n                 fontSize: 12\r\n             }}>\r\n                 {xOneRow[\"description\"]}\r\n             </p>\r\n-        </div>\r\n \r\n \r\n             \r\n             <div className=\"content-lists-prstation-items\">\r\n@@ -267,9 +267,9 @@\n                 {showData()}\r\n                 </div>\r\n                 </div>\r\n           )}\r\n-          </div>\r\n+     \r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n"
                },
                {
                    "date": 1710777248330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n                 {showData()}\r\n                 </div>\r\n                 </div>\r\n           )}\r\n-     \r\n+     </div>\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n"
                },
                {
                    "date": 1710777323900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,10 +247,10 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n-<Col>\r\n-<div>           \r\n+            \r\n+\r\n             <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n             <p id=\"para\" style={{\r\n                 width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                 fontFamily: 'Poppins', fontWeight: '500',\r\n@@ -258,18 +258,19 @@\n                 fontSize: 12\r\n             }}>\r\n                 {xOneRow[\"description\"]}\r\n             </p>\r\n+       \r\n \r\n \r\n+\r\n             \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n                 {showData()}\r\n                 </div>\r\n                 </div>\r\n           )}\r\n-     </div>\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n@@ -278,8 +279,7 @@\n           </NewMap>\r\n \r\n         </Col>\r\n       </Row>\r\n-    \r\n     </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1710777333357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -249,9 +249,8 @@\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n             \r\n \r\n-            <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n             <p id=\"para\" style={{\r\n                 width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                 fontFamily: 'Poppins', fontWeight: '500',\r\n                 boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n"
                },
                {
                    "date": 1710777452616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,21 @@\n       );\r\n     return (\r\n \r\n \r\n-      data.map(rowRenderArt)\r\n+      <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+      <p id=\"para\" style={{\r\n+          width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+          fontFamily: 'Poppins', fontWeight: '500',\r\n+          boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+          fontSize: 12\r\n+      }}>\r\n+         blalal\r\n+         data.map(rowRenderArt)\r\n+      </p>\r\n+  </div>\r\n+\r\n+     \r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n@@ -247,28 +259,15 @@\n \r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n-            \r\n \r\n-            <p id=\"para\" style={{\r\n-                width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                fontFamily: 'Poppins', fontWeight: '500',\r\n-                boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                fontSize: 12\r\n-            }}>\r\n-                {xOneRow[\"description\"]}\r\n-            </p>\r\n-       \r\n-\r\n-\r\n-\r\n-            \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n                 {showData()}\r\n-                </div>\r\n-                </div>\r\n+              </div>\r\n+            </div>\r\n+\r\n           )}\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n"
                },
                {
                    "date": 1710804517354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,23 +218,22 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n     return (\r\n-\r\n-\r\n       <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-      <p id=\"para\" style={{\r\n+        <p id=\"para\" style={{\r\n           width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n           fontFamily: 'Poppins', fontWeight: '500',\r\n           boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n           fontSize: 12\r\n-      }}>\r\n-         blalal\r\n-         data.map(rowRenderArt)\r\n-      </p>\r\n-  </div>\r\n+        }}>\r\n+          blalal\r\n+          data.map(rowRenderArt)\r\n+        </p>\r\n+        )\r\n+      </div>\r\n \r\n-     \r\n+\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n"
                },
                {
                    "date": 1710804652636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,18 +218,19 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n     return (\r\n-      <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-        <p id=\"para\" style={{\r\n-          width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-          fontFamily: 'Poppins', fontWeight: '500',\r\n-          boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-          fontSize: 12\r\n-        }}>\r\n-          blalal\r\n-          data.map(rowRenderArt)\r\n-        </p>\r\n+     \r\n+        \r\n+          data.map(rowRenderArt);\r\n+          <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+          <p id=\"para\" style={{\r\n+            width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+            fontFamily: 'Poppins', fontWeight: '500',\r\n+            boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+            fontSize: 12\r\n+          }}>\r\n+          </p>\r\n         )\r\n       </div>\r\n \r\n \r\n"
                },
                {
                    "date": 1710804668924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n       );\r\n     return (\r\n      \r\n         \r\n-          data.map(rowRenderArt);\r\n+          data.map(rowRenderArt), \r\n           <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n           <p id=\"para\" style={{\r\n             width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n             fontFamily: 'Poppins', fontWeight: '500',\r\n"
                },
                {
                    "date": 1710804715291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n             boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n             fontSize: 12\r\n           }}>\r\n           </p>\r\n-        )\r\n+        \r\n       </div>\r\n \r\n \r\n     )\r\n"
                },
                {
                    "date": 1710804760382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,274 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+import * as vars from \"../../vars\";\r\n+import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n+import { K_SIZE } from \"../../components/front/markerStyle\";\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    //console.log(\"STEP 2 TU filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      let isAlreadyIn = false;\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        // TU :console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          //if (xrow < 12) {\r\n+          xdata[xrow] = item;\r\n+          //}\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+     \r\n+        \r\n+          data.map(rowRenderArt), \r\n+          \r\n+\r\n+\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n+    />\r\n+\r\n+  )\r\n+\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+\r\n+\r\n+\r\n+\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\">\r\n+                {showData()}\r\n+              </div>\r\n+            </div>\r\n+\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n+\r\n+          </NewMap>\r\n+\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710804772864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n       );\r\n     return (\r\n      \r\n         \r\n-          data.map(rowRenderArt), \r\n+          data.map(rowRenderArt)\r\n           \r\n \r\n \r\n     )\r\n@@ -271,287 +271,4 @@\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-import * as vars from \"../../vars\";\r\n-import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n-import { K_SIZE } from \"../../components/front/markerStyle\";\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    //console.log(\"STEP 2 TU filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      let isAlreadyIn = false;\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        // TU :console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          //if (xrow < 12) {\r\n-          xdata[xrow] = item;\r\n-          //}\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-     \r\n-        \r\n-          data.map(rowRenderArt), \r\n-          <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-          <p id=\"para\" style={{\r\n-            width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-            fontFamily: 'Poppins', fontWeight: '500',\r\n-            boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-            fontSize: 12\r\n-          }}>\r\n-          </p>\r\n-        \r\n-      </div>\r\n-\r\n-\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n-    />\r\n-\r\n-  )\r\n-\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-\r\n-\r\n-\r\n-\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\">\r\n-                {showData()}\r\n-              </div>\r\n-            </div>\r\n-\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n-\r\n-          </NewMap>\r\n-\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710804810996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,21 @@\n           {isDesktopOrLaptop && (\r\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n-                {showData()}\r\n+                \r\n+              <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+          <p id=\"para\" style={{\r\n+            width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+            fontFamily: 'Poppins', fontWeight: '500',\r\n+            boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+            fontSize: 12\r\n+          }}>\r\n+          </p>\r\n+          {showData()}\r\n+      </div>\r\n+                \r\n+                \r\n               </div>\r\n             </div>\r\n \r\n           )}\r\n"
                },
                {
                    "date": 1710804850187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,14 +218,14 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n     return (\r\n-     \r\n-        \r\n-          data.map(rowRenderArt)\r\n-          \r\n \r\n \r\n+      data.map(rowRenderArt)\r\n+\r\n+\r\n+\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n@@ -253,21 +253,22 @@\n           {isDesktopOrLaptop && (\r\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n-                \r\n-              <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-          <p id=\"para\" style={{\r\n-            width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-            fontFamily: 'Poppins', fontWeight: '500',\r\n-            boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-            fontSize: 12\r\n-          }}>\r\n-          </p>\r\n-          {showData()}\r\n-      </div>\r\n-                \r\n-                \r\n+\r\n+                <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p id=\"para\" style={{\r\n+                    width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                 \r\n+                  {showData()}\r\n+                  </p>\r\n+                </div>\r\n+\r\n+\r\n               </div>\r\n             </div>\r\n \r\n           )}\r\n"
                },
                {
                    "date": 1710804911729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n-                <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                <div style={{ textAlign: \"left\",  height: '100%', color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p id=\"para\" style={{\r\n                     width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n                     boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n"
                },
                {
                    "date": 1710804950810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,9 +256,9 @@\n               <div className=\"lists-prstation-items\">\r\n \r\n                 <div style={{ textAlign: \"left\",  height: '100%', color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p id=\"para\" style={{\r\n-                    width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    width: '100%', height: '50%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n                     boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n                     fontSize: 12\r\n                   }}>\r\n"
                },
                {
                    "date": 1710805007438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,18 +254,18 @@\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n-                <div style={{ textAlign: \"left\",  height: '100%', color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p id=\"para\" style={{\r\n-                    width: '100%', height: '50%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n                     boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n                     fontSize: 12\r\n                   }}>\r\n-                 \r\n-                  {showData()}\r\n+                    {showData()}\r\n                   </p>\r\n+                  \r\n                 </div>\r\n \r\n \r\n               </div>\r\n"
                },
                {
                    "date": 1710805074589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -255,9 +255,10 @@\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n                 <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p id=\"para\" style={{\r\n+                  <p style={{\r\n+                    paddingRight:'10%',paddingLeft:'10%',\r\n                     width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n                     boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n                     fontSize: 12\r\n"
                },
                {
                    "date": 1710805118377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n-                <div style={{ textAlign: \"left\", width: 465, height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                <div style={{ textAlign: \"left\", width: \"50%\", height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n                     paddingRight:'10%',paddingLeft:'10%',\r\n                     width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n"
                },
                {
                    "date": 1710805131066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n-                <div style={{ textAlign: \"left\", width: \"50%\", height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n                     paddingRight:'10%',paddingLeft:'10%',\r\n                     width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n"
                },
                {
                    "date": 1710805149645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 150, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: \"100%\", color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n                     paddingRight:'10%',paddingLeft:'10%',\r\n                     width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n"
                },
                {
                    "date": 1710805174818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\">\r\n \r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: \"100%\", color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n                     paddingRight:'10%',paddingLeft:'10%',\r\n                     width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n"
                },
                {
                    "date": 1710805255946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtItem from \"../../components/front/artItem.js\";\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+import * as vars from \"../../vars\";\r\n+import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n+import { K_SIZE } from \"../../components/front/markerStyle\";\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    //console.log(\"STEP 2 TU filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      //console.log(key,value);\r\n+      let oneUser = value;\r\n+      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n+      let showcases = oneUser['showcases'];\r\n+      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n+      let isAlreadyIn = false;\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      /*\r\n+      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n+                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n+\r\n+      if (showCasesArray[i].api_user == api_user) {\r\n+        if (showCasesArray[i].univers_id == universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        // TU :console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          //if (xrow < 12) {\r\n+          xdata[xrow] = item;\r\n+          //}\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+\r\n+\r\n+      data.map(rowRenderArt)\r\n+\r\n+\r\n+\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n+    />\r\n+\r\n+  )\r\n+\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+\r\n+\r\n+\r\n+\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\">\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight:'10%',paddingLeft:'10%',\r\n+                    width: '90%', height: '100vh', \r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                  \r\n+                </div>\r\n+\r\n+\r\n+              </div>\r\n+            </div>\r\n+\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n+\r\n+          </NewMap>\r\n+\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710805341864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,13 +252,15 @@\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n \r\n             <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\"\r\n+              style={{paddingRight:'5%',paddingLeft:'5%'}}\r\n+                         >\r\n \r\n                 <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n-                    paddingRight:'10%',paddingLeft:'10%',\r\n+                    paddingRight:'5%',paddingLeft:'5%',\r\n                     width: '90%', height: '100vh', \r\n                     color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n                     boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n@@ -286,292 +288,4 @@\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-import * as vars from \"../../vars\";\r\n-import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n-import { K_SIZE } from \"../../components/front/markerStyle\";\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    //console.log(\"STEP 2 TU filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      //console.log(key,value);\r\n-      let oneUser = value;\r\n-      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n-      let showcases = oneUser['showcases'];\r\n-      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      let isAlreadyIn = false;\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        // TU :console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          //if (xrow < 12) {\r\n-          xdata[xrow] = item;\r\n-          //}\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-\r\n-\r\n-      data.map(rowRenderArt)\r\n-\r\n-\r\n-\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n-    />\r\n-\r\n-  )\r\n-\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-\r\n-\r\n-\r\n-\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\">\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight:'10%',paddingLeft:'10%',\r\n-                    width: '100%', height: '100%', color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                  \r\n-                </div>\r\n-\r\n-\r\n-              </div>\r\n-            </div>\r\n-\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n-\r\n-          </NewMap>\r\n-\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710805373821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,9 @@\n           {isDesktopOrLaptop && (\r\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\"\r\n-              style={{paddingRight:'5%',paddingLeft:'5%'}}\r\n+              style={{paddingTop:'5%',paddingRight:'5%',paddingLeft:'5%'}}\r\n                          >\r\n \r\n                 <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n"
                },
                {
                    "date": 1710805404404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,9 @@\n           {isDesktopOrLaptop && (\r\n \r\n             <div className=\"content-lists-prstation-items\">\r\n               <div className=\"lists-prstation-items\"\r\n-              style={{paddingTop:'5%',paddingRight:'5%',paddingLeft:'5%'}}\r\n+              style={{paddingTop:'5%'}}\r\n                          >\r\n \r\n                 <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n"
                },
                {
                    "date": 1710805454533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,11 +252,9 @@\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n \r\n             <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\"\r\n-              style={{paddingTop:'5%'}}\r\n-                         >\r\n+              <div className=\"lists-prstation-items\" >\r\n \r\n                 <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n                     paddingRight:'5%',paddingLeft:'5%',\r\n"
                },
                {
                    "date": 1710805678143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,9 +159,9 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            // TU :console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               tabArray.push(result);\r\n             }\r\n             else {\r\n"
                },
                {
                    "date": 1710805726031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -145,9 +145,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+       console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1710806069796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n       city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",bonusreparation: \"bonusreparation\",\r\n       address: \"address\", roles: \"roles\",\r\n     }\r\n \r\n     connector({\r\n"
                },
                {
                    "date": 1710806151012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n       city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",bonusreparation: \"bonusreparation\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n       address: \"address\", roles: \"roles\",\r\n     }\r\n \r\n     connector({\r\n"
                },
                {
                    "date": 1710806516113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,11 +217,12 @@\n         >\r\n           Aucune donnée\r\n         </h3>\r\n       );\r\n+      \r\n+console.log(\"TU Step rowRenderArt \",rowRenderArt);\r\n     return (\r\n \r\n-\r\n       data.map(rowRenderArt)\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1710806575215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n       \r\n-console.log(\"TU Step rowRenderArt \",rowRenderArt);\r\n+console.log(\"TU Step rowRenderArt \",data);\r\n     return (\r\n \r\n       data.map(rowRenderArt)\r\n \r\n"
                },
                {
                    "date": 1710808606022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,15 +218,11 @@\n           Aucune donnée\r\n         </h3>\r\n       );\r\n       \r\n-console.log(\"TU Step rowRenderArt \",data);\r\n+\r\n     return (\r\n-\r\n       data.map(rowRenderArt)\r\n-\r\n-\r\n-\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n"
                },
                {
                    "date": 1710922355500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,15 +6,13 @@\n import \"nouislider/distribute/nouislider.css\";\r\n import endPoints from \"../../config/endPoints\";\r\n import connector from \"../../connector\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtItem from \"../../components/front/artItem.js\";\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-import * as vars from \"../../vars\";\r\n-import ArtisanFicheMap from \"../../components/front/artisanFicheMap\";\r\n-import { K_SIZE } from \"../../components/front/markerStyle\";\r\n+\r\n+\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n@@ -27,11 +25,9 @@\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n@@ -45,27 +41,24 @@\n     console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n \r\n   }, []);\r\n \r\n-\r\n   const getUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n-\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         return (result);\r\n-\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n@@ -74,19 +67,14 @@\n \r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    //console.log(\"STEP 2 TU filterShowCaseByUnivers and User (showCasesArray NEVER Null)\", universId, showCasesArray);\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n-      //console.log(key,value);\r\n       let oneUser = value;\r\n-      //console.log(\"STEP 2 fil ...oneUser\", oneUser);\r\n       let showcases = oneUser['showcases'];\r\n-      //console.log(\"STEP 2 fil ... showcases\", showcases);\r\n-      let isAlreadyIn = false;\r\n       if (showcases != null) {\r\n         Object.entries(showcases).forEach(entry => {\r\n           const [key, value] = entry;\r\n           let xOneCol = [];\r\n@@ -104,9 +92,8 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    console.log(\"STEP 2  TU xOneRows  ( Doit etre preceder de STEP 969 contient les utilisateurs REPAIRMAN avec l'univers et les showcases\", xOneRows);\r\n     setxObjElem();\r\n     return xOneRows;\r\n   });\r\n \r\n@@ -116,12 +103,8 @@\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n     let zFound = false;\r\n     console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      /*\r\n-      TU console.log('STEP 4 n comparaison', showCasesArray[i]['api_user'], '-' ,api_user\r\n-                           ,':',showCasesArray[i]['univers_id'], '-', universId );*/\r\n-\r\n       if (showCasesArray[i].api_user == api_user) {\r\n         if (showCasesArray[i].univers_id == universId) {\r\n           zFound = true;\r\n           break;\r\n@@ -138,16 +121,15 @@\n       city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n       description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n       address: \"address\", roles: \"roles\",\r\n     }\r\n-\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n@@ -168,11 +150,9 @@\n             }\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n-        // TU :console.log(\"STEP MAP \", tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n-\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n@@ -217,21 +197,16 @@\n         >\r\n           Aucune donnée\r\n         </h3>\r\n       );\r\n-      \r\n-\r\n     return (\r\n       data.map(rowRenderArt)\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche key={row.email} row={row} id={row.id}\r\n-    />\r\n+    <ArtPrestationFiche key={row.email} row={row} id={row.id} />\r\n \r\n   )\r\n-\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -240,12 +215,8 @@\n         }}>\r\n           Découvrez nos artisans en France\r\n         </Col>\r\n       </Row>\r\n-\r\n-\r\n-\r\n-\r\n       <Row className=\"bloc-lists-prstation-items\">\r\n         <Col lg={5} className=\"content-lists-prstation-items\">\r\n           {isDesktopOrLaptop && (\r\n \r\n@@ -253,33 +224,27 @@\n               <div className=\"lists-prstation-items\" >\r\n \r\n                 <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n                   <p style={{\r\n-                    paddingRight:'5%',paddingLeft:'5%',\r\n-                    width: '90%', height: '100vh', \r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n                     color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n                     fontFamily: 'Poppins', fontWeight: '500',\r\n                     boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n                     fontSize: 12\r\n                   }}>\r\n                     {showData()}\r\n                   </p>\r\n-                  \r\n                 </div>\r\n-\r\n-\r\n               </div>\r\n             </div>\r\n-\r\n           )}\r\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n-\r\n           </NewMap>\r\n-\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1710953263477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,10 +146,15 @@\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               tabArray.push(result);\r\n             }\r\n             else {\r\n+           \r\n             }\r\n           }\r\n+          else\r\n+          {\r\n+            console.log( \"user is not a repairman\");\r\n+          }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n       },\r\n"
                },
                {
                    "date": 1710953358395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n             }\r\n           }\r\n           else\r\n           {\r\n-            console.log( \"user is not a repairman\");\r\n+            console.log( \"user is not a repairman for this universe\", obj);\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n"
                },
                {
                    "date": 1710953988319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               tabArray.push(result);\r\n             }\r\n             else {\r\n@@ -151,9 +151,9 @@\n             }\r\n           }\r\n           else\r\n           {\r\n-            console.log( \"user is not a repairman for this universe\", obj);\r\n+            console.log( \"STEP 2.3  user is not a repairman for this universe\", obj);\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n"
                },
                {
                    "date": 1710954157044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,8 +143,9 @@\n               }\r\n             });\r\n             console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log( \"STEP 2.29  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n             else {\r\n            \r\n"
                },
                {
                    "date": 1710954183536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,18 +143,18 @@\n               }\r\n             });\r\n             console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log( \"STEP 2.29  user is A REPAIRMAN for this universe\", obj);\r\n+              console.log( \"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n             else {\r\n            \r\n             }\r\n           }\r\n           else\r\n           {\r\n-            console.log( \"STEP 2.3  user is not a repairman for this universe\", obj);\r\n+            console.log( \"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n"
                },
                {
                    "date": 1710956024658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,15 +98,15 @@\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n     console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n     let zFound = false;\r\n     console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user == api_user) {\r\n-        if (showCasesArray[i].univers_id == universId) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n           zFound = true;\r\n           break;\r\n         }\r\n       }\r\n"
                },
                {
                    "date": 1710956262201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n+    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \",showCasesArray)\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       let oneUser = value;\r\n       let showcases = oneUser['showcases'];\r\n"
                },
                {
                    "date": 1711035132161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,15 +143,15 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+           // if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               console.log( \"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n-            }\r\n-            else {\r\n+            //}\r\n+            //else {\r\n            \r\n-            }\r\n+           // }\r\n           }\r\n           else\r\n           {\r\n             console.log( \"STEP 2.32  user is not a repairman for this universe\", obj);\r\n"
                },
                {
                    "date": 1711097218816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,34 @@\n     console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n \r\n   }, []);\r\n \r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  \r\n+  ANONYMOUS_UNIVERSES_DETAIL\r\n   const getUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1711097268539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         //filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n+        return (true);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n       }\r\n"
                },
                {
                    "date": 1711097383458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n+    getAnonymousUniversesDetail();\r\n     console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n \r\n   }, []);\r\n \r\n@@ -66,9 +67,9 @@\n     });\r\n   }\r\n \r\n   \r\n-  ANONYMOUS_UNIVERSES_DETAIL\r\n+\r\n   const getUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1711098381766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1711099857849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n-    getAnonymousUniversesDetail();\r\n+    //getAnonymousUniversesDetail();\r\n     console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n \r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1711113915360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,12 +170,12 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-           // if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               console.log( \"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n-            //}\r\n+            }\r\n             //else {\r\n            \r\n            // }\r\n           }\r\n"
                },
                {
                    "date": 1711294661077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,8 +237,9 @@\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id} />\r\n+  \r\n \r\n   )\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1711301310680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,10 +237,10 @@\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n     <ArtPrestationFiche key={row.email} row={row} id={row.id} />\r\n-  \r\n \r\n+\r\n   )\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1711313385836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n             fontWeight: \"600\",\r\n             margin: \"40px 0\",\r\n           }}\r\n         >\r\n-          Aucune donnée\r\n+          Aucune donnée1\r\n         </h3>\r\n       );\r\n     return (\r\n       data.map(rowRenderArt)\r\n"
                },
                {
                    "date": 1712221338311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n   const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n   const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n@@ -90,9 +90,25 @@\n         console.log(error);\r\n       }\r\n     });\r\n   }\r\n-\r\n+  const _onChildClick = (key, childProps) => {\r\n+    let i = null;\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+  };\r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     let xOneRows = [];\r\n@@ -236,12 +252,17 @@\n       data.map(rowRenderArt)\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche key={row.email} row={row} id={row.id} />\r\n+    <ArtPrestationFiche \r\n+    \r\n+    activeBenefit={activeBenefit}\r\n+    setActiveBenefit={setActiveBenefit}\r\n+    key={row.email} row={row} id={row.id} />\r\n \r\n \r\n   )\r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1712221435500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,11 @@\n       }\r\n     });\r\n   }\r\n   const _onChildClick = (key, childProps) => {\r\n+    \r\n     let i = null;\r\n+    /*\r\n     const benefit = benefits.length\r\n       ? benefits.find((val, index) => {\r\n         if (val.id === childProps.id) {\r\n           i = index;\r\n@@ -106,8 +108,9 @@\n       if (isTabletOrMobile) {\r\n         refSlider.slickGoTo(i);\r\n       }\r\n     }\r\n+    */\r\n   };\r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n"
                },
                {
                    "date": 1712221939035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,8 +263,11 @@\n     key={row.email} row={row} id={row.id} />\r\n \r\n \r\n   )\r\n+  const childClick = (row) => (\r\n+    alert('data from map');\r\n+  )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -300,9 +303,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712221949859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n \r\n \r\n   )\r\n   const childClick = (row) => (\r\n-    alert('data from map');\r\n+    alert('data from map')\r\n   )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1712222026291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    //getAnonymousUniversesDetail();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  \r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  const _onChildClick = (key, childProps) => {\r\n+    \r\n+    let i = null;\r\n+    /*\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+    */\r\n+  };\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \",showCasesArray)\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let oneUser = value;\r\n+      let showcases = oneUser['showcases'];\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log( \"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+           \r\n+           // }\r\n+          }\r\n+          else\r\n+          {\r\n+            console.log( \"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      tabArray.forEach((item, index) => {\r\n+\r\n+        if (item['picture'] !== null) {\r\n+          //if (xrow < 12) {\r\n+          xdata[xrow] = item;\r\n+          //}\r\n+          xrow++;\r\n+        }\r\n+      })\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée1\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+      data.map(rowRenderArt)\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche \r\n+    \r\n+    activeBenefit={activeBenefit}\r\n+    setActiveBenefit={setActiveBenefit}\r\n+    key={row.email} row={row} id={row.id} />\r\n+\r\n+\r\n+  )\r\n+  const childClick = (row) => (\r\n+    alert('data from map')\r\n+  )\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick=childClick\r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712222145892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n         console.log(error);\r\n       }\r\n     });\r\n   }\r\n-  const _onChildClick = (key, childProps) => {\r\n+  const childClick = (key, childProps) => {\r\n     \r\n     let i = null;\r\n     /*\r\n     const benefit = benefits.length\r\n@@ -262,12 +262,9 @@\n     setActiveBenefit={setActiveBenefit}\r\n     key={row.email} row={row} id={row.id} />\r\n \r\n \r\n-  )\r\n-  const childClick = (row) => (\r\n-    alert('data from map')\r\n-  )\r\n+ \r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -303,321 +300,8 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick=childClick\r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    //getAnonymousUniversesDetail();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-  \r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  const _onChildClick = (key, childProps) => {\r\n-    \r\n-    let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n-  };\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \",showCasesArray)\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let oneUser = value;\r\n-      let showcases = oneUser['showcases'];\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user === api_user) {\r\n-        if (showCasesArray[i].univers_id === universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log( \"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n-              tabArray.push(result);\r\n-            }\r\n-            //else {\r\n-           \r\n-           // }\r\n-          }\r\n-          else\r\n-          {\r\n-            console.log( \"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n-\r\n-        if (item['picture'] !== null) {\r\n-          //if (xrow < 12) {\r\n-          xdata[xrow] = item;\r\n-          //}\r\n-          xrow++;\r\n-        }\r\n-      })\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche \r\n-    \r\n-    activeBenefit={activeBenefit}\r\n-    setActiveBenefit={setActiveBenefit}\r\n-    key={row.email} row={row} id={row.id} />\r\n-\r\n-\r\n-  )\r\n-  const childClick = (row) => (\r\n-    alert('data from map')\r\n-  )\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1712222164657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712222209864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,9 @@\n   }\r\n   const childClick = (key, childProps) => {\r\n     \r\n     let i = null;\r\n+    alert(\"Child is clicker\");\r\n     /*\r\n     const benefit = benefits.length\r\n       ? benefits.find((val, index) => {\r\n         if (val.id === childProps.id) {\r\n@@ -300,9 +301,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} _onChildClick={childClick}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712222288592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,12 +90,11 @@\n         console.log(error);\r\n       }\r\n     });\r\n   }\r\n-  const childClick = (key, childProps) => {\r\n+  const _onChildClick = (key, childProps) => {\r\n     \r\n     let i = null;\r\n-    alert(\"Child is clicker\");\r\n     /*\r\n     const benefit = benefits.length\r\n       ? benefits.find((val, index) => {\r\n         if (val.id === childProps.id) {\r\n@@ -263,9 +262,12 @@\n     setActiveBenefit={setActiveBenefit}\r\n     key={row.email} row={row} id={row.id} />\r\n \r\n \r\n- \r\n+  )\r\n+  const childClick = (row) => (\r\n+    alert('data from map');\r\n+  )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -301,9 +303,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} _onChildClick={childClick}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712222323305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n \r\n \r\n   )\r\n   const childClick = (row) => (\r\n-    alert('data from map');\r\n+    alert('data from map')\r\n   )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1712222355580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={childClick}\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick=childClick\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712222397470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick=childClick\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={{childClick}}\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712226104020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,12 +263,25 @@\n     key={row.email} row={row} id={row.id} />\r\n \r\n \r\n   )\r\n-  const childClick = (row) => (\r\n-    alert('data from map')\r\n-  )\r\n \r\n+  const handleParentEvent = (data) => {\r\n+    alert(\"data\",data);\r\n+    // Traiter les données du composant enfant\r\n+   /* setServiceClicked(data);\r\n+    if (currentBenefit === data['benefit_to_display']) {\r\n+      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n+      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n+    }\r\n+    else {\r\n+      setCurrentBenefit(data['benefit_to_display']);\r\n+      getServices(true, 0);\r\n+      getBenefit(data['benefit_to_display']);\r\n+    }\r\n+    setXServiceIsSelected(true);*/\r\n+  }\r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -303,9 +316,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, _onChildClick={{childClick}}\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, handleParentEvent={handleParentEvent}\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712226225359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}>, handleParentEvent={handleParentEvent}\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}> handleParentEvent={handleParentEvent}\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712226249433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady}> handleParentEvent={handleParentEvent}\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={handleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712226359611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,10 +66,10 @@\n       }\r\n     });\r\n   }\r\n \r\n-  \r\n \r\n+\r\n   const getUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n@@ -91,9 +91,9 @@\n       }\r\n     });\r\n   }\r\n   const _onChildClick = (key, childProps) => {\r\n-    \r\n+\r\n     let i = null;\r\n     /*\r\n     const benefit = benefits.length\r\n       ? benefits.find((val, index) => {\r\n@@ -115,9 +115,9 @@\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n-    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \",showCasesArray)\r\n+    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       let oneUser = value;\r\n       let showcases = oneUser['showcases'];\r\n@@ -190,18 +190,17 @@\n               }\r\n             });\r\n             console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log( \"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n             //else {\r\n-           \r\n-           // }\r\n+\r\n+            // }\r\n           }\r\n-          else\r\n-          {\r\n-            console.log( \"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          else {\r\n+            console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n@@ -219,17 +218,19 @@\n     }\r\n     else {\r\n       let xdata = [];\r\n       let xrow = 0;\r\n-      tabArray.forEach((item, index) => {\r\n+      if (tabArray.length() > 0) {\r\n+        tabArray.forEach((item, index) => {\r\n \r\n-        if (item['picture'] !== null) {\r\n-          //if (xrow < 12) {\r\n-          xdata[xrow] = item;\r\n-          //}\r\n-          xrow++;\r\n-        }\r\n-      })\r\n+          if (item['picture'] !== null) {\r\n+            //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            //}\r\n+            xrow++;\r\n+          }\r\n+        })\r\n+      }\r\n       data = xdata;\r\n     }\r\n     if (data === false)\r\n       return (\r\n@@ -255,31 +256,31 @@\n       data.map(rowRenderArt)\r\n     )\r\n   };\r\n   const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche \r\n-    \r\n-    activeBenefit={activeBenefit}\r\n-    setActiveBenefit={setActiveBenefit}\r\n-    key={row.email} row={row} id={row.id} />\r\n+    <ArtPrestationFiche\r\n \r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.email} row={row} id={row.id} />\r\n \r\n+\r\n   )\r\n \r\n   const handleParentEvent = (data) => {\r\n-    alert(\"data\",data);\r\n+    alert(\"data\", data);\r\n     // Traiter les données du composant enfant\r\n-   /* setServiceClicked(data);\r\n-    if (currentBenefit === data['benefit_to_display']) {\r\n-      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n-      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n-    }\r\n-    else {\r\n-      setCurrentBenefit(data['benefit_to_display']);\r\n-      getServices(true, 0);\r\n-      getBenefit(data['benefit_to_display']);\r\n-    }\r\n-    setXServiceIsSelected(true);*/\r\n+    /* setServiceClicked(data);\r\n+     if (currentBenefit === data['benefit_to_display']) {\r\n+       console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n+       console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n+     }\r\n+     else {\r\n+       setCurrentBenefit(data['benefit_to_display']);\r\n+       getServices(true, 0);\r\n+       getBenefit(data['benefit_to_display']);\r\n+     }\r\n+     setXServiceIsSelected(true);*/\r\n   }\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1712226397594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n     }\r\n     else {\r\n       let xdata = [];\r\n       let xrow = 0;\r\n-      if (tabArray.length() > 0) {\r\n+      if (tabArray) {\r\n         tabArray.forEach((item, index) => {\r\n \r\n           if (item['picture'] !== null) {\r\n             //if (xrow < 12) {\r\n"
                },
                {
                    "date": 1712226541919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={handleParentEvent}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={handleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712226857090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,10 +265,13 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (data) => {\r\n-    alert(\"data\", data);\r\n+  const handleParentEvent = (data, byDef = defaultValue);\r\n+\r\n+  event.stopPropagation();) => {\r\n+    alert(\"data\", data, byDef);\r\n+    \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n      if (currentBenefit === data['benefit_to_display']) {\r\n        console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n"
                },
                {
                    "date": 1712226876351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,8 @@\n   )\r\n \r\n   const handleParentEvent = (data, byDef = defaultValue);\r\n \r\n-  event.stopPropagation();) => {\r\n     alert(\"data\", data, byDef);\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n"
                },
                {
                    "date": 1712226887810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,10 +265,10 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (data, byDef = defaultValue);\r\n-\r\n+  const handleParentEvent = (data, byDef = defaultValue)\r\n+{\r\n     alert(\"data\", data, byDef);\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n"
                },
                {
                    "date": 1712226913335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,10 +265,9 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (data, byDef = defaultValue)\r\n-{\r\n+  const handleParentEvent = (data, byDef = defaultValue)=>(\r\n     alert(\"data\", data, byDef);\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n@@ -281,9 +280,9 @@\n        getServices(true, 0);\r\n        getBenefit(data['benefit_to_display']);\r\n      }\r\n      setXServiceIsSelected(true);*/\r\n-  }\r\n+  )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712226972477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,10 +265,10 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (data, byDef = defaultValue)=>(\r\n-    alert(\"data\", data, byDef);\r\n+  const handleParentEvent = (data )=>(\r\n+    alert(\"data\", data )\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n      if (currentBenefit === data['benefit_to_display']) {\r\n"
                },
                {
                    "date": 1712227010354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,8 +266,9 @@\n \r\n   )\r\n \r\n   const handleParentEvent = (data )=>(\r\n+    event. stopPropagation()\r\n     alert(\"data\", data )\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n"
                },
                {
                    "date": 1712227019484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,9 +266,9 @@\n \r\n   )\r\n \r\n   const handleParentEvent = (data )=>(\r\n-    event. stopPropagation()\r\n+    event.stopPropagation()\r\n     alert(\"data\", data )\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n"
                },
                {
                    "date": 1712227029190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n   )\r\n \r\n   const handleParentEvent = (data )=>(\r\n     event.stopPropagation()\r\n-    alert(\"data\", data )\r\n+    alert(\"data\", data );\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n      if (currentBenefit === data['benefit_to_display']) {\r\n"
                },
                {
                    "date": 1712227349791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,10 +266,10 @@\n \r\n   )\r\n \r\n   const handleParentEvent = (data )=>(\r\n-    event.stopPropagation()\r\n-    alert(\"data\", data );\r\n+  \r\n+    alert(\"data\", data )\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n      if (currentBenefit === data['benefit_to_display']) {\r\n"
                },
                {
                    "date": 1712227641229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,11 +265,21 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (data )=>(\r\n-  \r\n-    alert(\"data\", data )\r\n+  const handleParentEvent = (idFromMap )=>(\r\n+\r\n+    if (currentIdFromMap === idFromMap)\r\n+    {\r\n+// nothing to do?\r\n+console.log(\"MAU 1.01 a refactorer\", idFromMap);\r\n+    }\r\n+    else {\r\n+      setCurrentIdFromMap(idFromMap);\r\n+        \r\n+    alert(\"STEP MAU TU 1.01\", idFromMap )\r\n+    }\r\n+\r\n     \r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n      if (currentBenefit === data['benefit_to_display']) {\r\n"
                },
                {
                    "date": 1712227950156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,10 @@\n   const toogleCloseFilter = () => setClick(false);\r\n   const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n   const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n+\r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n@@ -265,22 +267,36 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (idFromMap )=>(\r\n+  const xhandleParentEvent = (data, completeData) => {\r\n+    // Traiter les données du composant enfant\r\n+    setServiceClicked(data);\r\n+    if (currentBenefit === data['benefit_to_display']) {\r\n+      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n+      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n+    }\r\n+    else {\r\n+      setCurrentBenefit(data['benefit_to_display']);\r\n+      getServices(true, 0);\r\n+      getBenefit(data['benefit_to_display']);\r\n+    }\r\n+    setXServiceIsSelected(true);\r\n+  }\r\n \r\n-    if (currentIdFromMap === idFromMap)\r\n-    {\r\n-// nothing to do?\r\n-console.log(\"MAU 1.01 a refactorer\", idFromMap);\r\n+  const handleParentEvent = (idFromMap) => {\r\n+\r\n+    if (currentIdFromMap === idFromMap) {\r\n+      // nothing to do?\r\n+      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n     else {\r\n       setCurrentIdFromMap(idFromMap);\r\n-        \r\n-    alert(\"STEP MAU TU 1.01\", idFromMap )\r\n+\r\n+      alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n-    \r\n+\r\n     // Traiter les données du composant enfant\r\n     /* setServiceClicked(data);\r\n      if (currentBenefit === data['benefit_to_display']) {\r\n        console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n"
                },
                {
                    "date": 1712227968302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,23 +294,10 @@\n \r\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n+  }\r\n \r\n-    // Traiter les données du composant enfant\r\n-    /* setServiceClicked(data);\r\n-     if (currentBenefit === data['benefit_to_display']) {\r\n-       console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n-       console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n-     }\r\n-     else {\r\n-       setCurrentBenefit(data['benefit_to_display']);\r\n-       getServices(true, 0);\r\n-       getBenefit(data['benefit_to_display']);\r\n-     }\r\n-     setXServiceIsSelected(true);*/\r\n-  )\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1712227982761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,23 +267,8 @@\n \r\n \r\n   )\r\n \r\n-  const xhandleParentEvent = (data, completeData) => {\r\n-    // Traiter les données du composant enfant\r\n-    setServiceClicked(data);\r\n-    if (currentBenefit === data['benefit_to_display']) {\r\n-      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n-      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n-    }\r\n-    else {\r\n-      setCurrentBenefit(data['benefit_to_display']);\r\n-      getServices(true, 0);\r\n-      getBenefit(data['benefit_to_display']);\r\n-    }\r\n-    setXServiceIsSelected(true);\r\n-  }\r\n-\r\n   const handleParentEvent = (idFromMap) => {\r\n \r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n"
                },
                {
                    "date": 1712228032831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n \r\n \r\n   )\r\n \r\n-  const handleParentEvent = (idFromMap) => {\r\n+  function handleParentEvent = (idFromMap) => {\r\n \r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1712228042824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n \r\n \r\n   )\r\n \r\n-  function handleParentEvent = (idFromMap) => {\r\n+  function handleParentEvent (idFromMap) {\r\n \r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1712228216801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,10 +267,11 @@\n \r\n \r\n   )\r\n \r\n-  function handleParentEvent (idFromMap) {\r\n \r\n+  function xhandleParentEvent (idFromMap) {\r\n+\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n"
                },
                {
                    "date": 1712228226711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={handleParentEvent()}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712228291407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,21 +268,34 @@\n \r\n   )\r\n \r\n \r\n-  function xhandleParentEvent (idFromMap) {\r\n \r\n+  const xhandleParentEvent = (idFromMap) => {\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n     else {\r\n       setCurrentIdFromMap(idFromMap);\r\n-\r\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n   }\r\n+  const handleParentEvent = (data, completeData) => {\r\n+    // Traiter les données du composant enfant\r\n+    setServiceClicked(data);\r\n+    if (currentBenefit === data['benefit_to_display']) {\r\n+      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n+      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n+    }\r\n+    else {\r\n+      setCurrentBenefit(data['benefit_to_display']);\r\n+      getServices(true, 0);\r\n+      getBenefit(data['benefit_to_display']);\r\n+    }\r\n+    setXServiceIsSelected(true);\r\n+  }\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712228304257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,24 +279,10 @@\n       setCurrentIdFromMap(idFromMap);\r\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n-  }\r\n-  const handleParentEvent = (data, completeData) => {\r\n-    // Traiter les données du composant enfant\r\n-    setServiceClicked(data);\r\n-    if (currentBenefit === data['benefit_to_display']) {\r\n-      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n-      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n-    }\r\n-    else {\r\n-      setCurrentBenefit(data['benefit_to_display']);\r\n-      getServices(true, 0);\r\n-      getBenefit(data['benefit_to_display']);\r\n-    }\r\n-    setXServiceIsSelected(true);\r\n-  }\r\n \r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1712228661903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent = (idFromMap) => {\r\n+  const xhandleParentEvent = (idFromMap) => (\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n@@ -279,10 +279,10 @@\n       setCurrentIdFromMap(idFromMap);\r\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n+ )\r\n \r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1712228705996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent = (idFromMap) => (\r\n+  const xhandleParentEvent = (idFromMap) => {\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n@@ -279,9 +279,9 @@\n       setCurrentIdFromMap(idFromMap);\r\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n- )\r\n+  }\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712228748423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={xhandleParentEvent()}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712228765361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} handleParentEvent={xhandleParentEvent}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712228908651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n       setCurrentIdFromMap(idFromMap);\r\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n-  }\r\n+  };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712228945326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent}>\r\n+          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712229267623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent = (idFromMap) => {\r\n+  function xhandleParentEvent = (idFromMap) => {\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n"
                },
                {
                    "date": 1712229280847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent = (idFromMap) => {\r\n+  function xhandleParentEvent  (idFromMap)  {\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n"
                },
                {
                    "date": 1712229597689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,12 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap position={tabArray} displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady} \r\n+          xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712229660127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,9 +320,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady} \r\n-          xhandleParentEvent={xhandleParentEvent}>\r\n+          xhandleParentEvent={{xhandleParentEvent}}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712229723586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,9 +320,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady} \r\n-          xhandleParentEvent={{xhandleParentEvent}}>\r\n+          xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712234502474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,19 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n+function xhandleParentEvent  (idFromMap)  {\r\n+  if (currentIdFromMap === idFromMap) {\r\n+    // nothing to do?\r\n+    console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+  }\r\n+  else {\r\n+    setCurrentIdFromMap(idFromMap);\r\n+    alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+  }\r\n \r\n+};\r\n \r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n@@ -269,20 +279,10 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent  (idFromMap)  {\r\n-    if (currentIdFromMap === idFromMap) {\r\n-      // nothing to do?\r\n-      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    }\r\n-    else {\r\n-      setCurrentIdFromMap(idFromMap);\r\n-      alert(\"STEP MAU TU 1.01\", idFromMap)\r\n-    }\r\n+  \r\n \r\n-  };\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1712234512657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,22 +9,21 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-function xhandleParentEvent  (idFromMap)  {\r\n-  if (currentIdFromMap === idFromMap) {\r\n-    // nothing to do?\r\n-    console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-  }\r\n-  else {\r\n-    setCurrentIdFromMap(idFromMap);\r\n-    alert(\"STEP MAU TU 1.01\", idFromMap)\r\n-  }\r\n \r\n-};\r\n-\r\n export default function MapArtisansUnivers(props) {\r\n+  function xhandleParentEvent  (idFromMap)  {\r\n+    if (currentIdFromMap === idFromMap) {\r\n+      // nothing to do?\r\n+      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    }\r\n+    else {\r\n+      setCurrentIdFromMap(idFromMap);\r\n+      alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+    }\r\n \r\n+  };\r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n"
                },
                {
                    "date": 1712234809101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady} \r\n-          xhandleParentEvent={xhandleParentEvent}>\r\n+          xhandleParentEvent={handleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712590789344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,51 @@\n   )\r\n \r\n \r\n \r\n-  \r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        if (response.data?.benefits) {\r\n+          let subCategories = [];\r\n+          response.data.benefits.map((benefit) => {\r\n+            if (benefit?.service?.categories) {\r\n+              subCategories = [...subCategories, ...benefit.service.categories];\r\n+            }\r\n+          });\r\n+          const cpCategories = parentCategories(subCategories);\r\n+          setCategories(cpCategories);\r\n+          if (cpCategories.length > 0) {\r\n+            let cpUniversRepairman = [];\r\n+            cpCategories.map((cat) => {\r\n+              if (cat?.universe) {\r\n+                cpUniversRepairman.push({\r\n+                  id: cat.universe.id,\r\n+                  name: cat.universe.name,\r\n+                  slug: cat.universe.slug,\r\n+                  position: cat.universe.position,\r\n+                });\r\n+              }\r\n+            });\r\n+            setUniversRepairman(\r\n+              sortObjects(\r\n+                getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+                \"position\",\r\n+                \"asc\"\r\n+              )\r\n+            );\r\n+          }\r\n+        }\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+        NotificationManager.error(getMsgError(error), \"\");\r\n+      },\r\n+    });\r\n+  };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -319,9 +361,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady} \r\n-          xhandleParentEvent={handleParentEvent}>\r\n+          xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712590993899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,51 +278,9 @@\n   )\r\n \r\n \r\n \r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        if (response.data?.benefits) {\r\n-          let subCategories = [];\r\n-          response.data.benefits.map((benefit) => {\r\n-            if (benefit?.service?.categories) {\r\n-              subCategories = [...subCategories, ...benefit.service.categories];\r\n-            }\r\n-          });\r\n-          const cpCategories = parentCategories(subCategories);\r\n-          setCategories(cpCategories);\r\n-          if (cpCategories.length > 0) {\r\n-            let cpUniversRepairman = [];\r\n-            cpCategories.map((cat) => {\r\n-              if (cat?.universe) {\r\n-                cpUniversRepairman.push({\r\n-                  id: cat.universe.id,\r\n-                  name: cat.universe.name,\r\n-                  slug: cat.universe.slug,\r\n-                  position: cat.universe.position,\r\n-                });\r\n-              }\r\n-            });\r\n-            setUniversRepairman(\r\n-              sortObjects(\r\n-                getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-                \"position\",\r\n-                \"asc\"\r\n-              )\r\n-            );\r\n-          }\r\n-        }\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setIsPending(false);\r\n-        NotificationManager.error(getMsgError(error), \"\");\r\n-      },\r\n-    });\r\n-  };\r\n+  \r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712591015442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-  function xhandleParentEvent  (idFromMap)  {\r\n+function xhandleParentEvent  (idFromMap)  {\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n@@ -22,8 +20,11 @@\n       alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n   };\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n"
                },
                {
                    "date": 1712591043354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,19 +9,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-function xhandleParentEvent  (idFromMap)  {\r\n-    if (currentIdFromMap === idFromMap) {\r\n-      // nothing to do?\r\n-      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    }\r\n-    else {\r\n-      setCurrentIdFromMap(idFromMap);\r\n-      alert(\"STEP MAU TU 1.01\", idFromMap)\r\n-    }\r\n \r\n-  };\r\n \r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n@@ -279,10 +269,20 @@\n   )\r\n \r\n \r\n \r\n-  \r\n+  function xhandleParentEvent  (idFromMap)  {\r\n+    if (currentIdFromMap === idFromMap) {\r\n+      // nothing to do?\r\n+      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    }\r\n+    else {\r\n+      setCurrentIdFromMap(idFromMap);\r\n+      alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+    }\r\n \r\n+  };\r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -319,10 +319,9 @@\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady} \r\n-          xhandleParentEvent={xhandleParentEvent}>\r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712591220847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,9 @@\n       console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n     else {\r\n       setCurrentIdFromMap(idFromMap);\r\n-      alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+     // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n     }\r\n \r\n   };\r\n \r\n"
                },
                {
                    "date": 1712659156218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,330 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    //getAnonymousUniversesDetail();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (true);\r\n+      },\r\n+      catch: (error) => {\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  const _onChildClick = (key, childProps) => {\r\n+\r\n+    let i = null;\r\n+    /*\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+    */\r\n+  };\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let oneUser = value;\r\n+      let showcases = oneUser['showcases'];\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+\r\n+            // }\r\n+          }\r\n+          else {\r\n+            console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      if (tabArray) {\r\n+        tabArray.forEach((item, index) => {\r\n+\r\n+          if (item['picture'] !== null) {\r\n+            //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            //}\r\n+            xrow++;\r\n+          }\r\n+        })\r\n+      }\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée1\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+      data.map(rowRenderArt)\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche\r\n+\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.email} row={row} id={row.id} />\r\n+\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+  function xhandleParentEvent  (idFromMap)  {\r\n+    if (currentIdFromMap === idFromMap) {\r\n+      // nothing to do?\r\n+      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    }\r\n+    else {\r\n+      setCurrentIdFromMap(idFromMap);\r\n+     // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+    }\r\n+\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712662418798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers(props) {\r\n-\r\n+  console.log = function(){};\r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n@@ -327,333 +327,4 @@\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    //getAnonymousUniversesDetail();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  const _onChildClick = (key, childProps) => {\r\n-\r\n-    let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n-  };\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let oneUser = value;\r\n-      let showcases = oneUser['showcases'];\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user === api_user) {\r\n-        if (showCasesArray[i].univers_id === universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n-              tabArray.push(result);\r\n-            }\r\n-            //else {\r\n-\r\n-            // }\r\n-          }\r\n-          else {\r\n-            console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      if (tabArray) {\r\n-        tabArray.forEach((item, index) => {\r\n-\r\n-          if (item['picture'] !== null) {\r\n-            //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            //}\r\n-            xrow++;\r\n-          }\r\n-        })\r\n-      }\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche\r\n-\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.email} row={row} id={row.id} />\r\n-\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-  function xhandleParentEvent  (idFromMap)  {\r\n-    if (currentIdFromMap === idFromMap) {\r\n-      // nothing to do?\r\n-      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    }\r\n-    else {\r\n-      setCurrentIdFromMap(idFromMap);\r\n-     // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n-    }\r\n-\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712662568254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import NewMap from \"../../components/front/newMap.js\";\r\n \r\n \r\n export default function MapArtisansUnivers(props) {\r\n-  console.log = function(){};\r\n+\r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n   const [isPending, setIsPending] = useState(0);\r\n"
                },
                {
                    "date": 1712665487624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,12 +148,12 @@\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n     let zFound = false;\r\n-    console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       if (showCasesArray[i].api_user === api_user) {\r\n         if (showCasesArray[i].univers_id === universId) {\r\n           zFound = true;\r\n"
                },
                {
                    "date": 1712665558070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n"
                },
                {
                    "date": 1712665613840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,9 +193,9 @@\n               }\r\n             });\r\n             //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n             //else {\r\n \r\n"
                },
                {
                    "date": 1712665663358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n \r\n             // }\r\n           }\r\n           else {\r\n-            console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n         };\r\n         setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n"
                },
                {
                    "date": 1712665825487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n@@ -273,9 +273,9 @@\n \r\n   function xhandleParentEvent  (idFromMap)  {\r\n     if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n-      console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n     else {\r\n       setCurrentIdFromMap(idFromMap);\r\n      // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n"
                },
                {
                    "date": 1712665978773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,330 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    //getAnonymousUniversesDetail();\r\n+    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (true);\r\n+      },\r\n+      catch: (error) => {\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  const _onChildClick = (key, childProps) => {\r\n+\r\n+    let i = null;\r\n+    /*\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+    */\r\n+  };\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let oneUser = value;\r\n+      let showcases = oneUser['showcases'];\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+\r\n+            // }\r\n+          }\r\n+          else {\r\n+            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      if (tabArray) {\r\n+        tabArray.forEach((item, index) => {\r\n+\r\n+          if (item['picture'] !== null) {\r\n+            //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            //}\r\n+            xrow++;\r\n+          }\r\n+        })\r\n+      }\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée1\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+      data.map(rowRenderArt)\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche\r\n+\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.email} row={row} id={row.id} />\r\n+\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+  function xhandleParentEvent  (idFromMap)  {\r\n+    if (currentIdFromMap === idFromMap) {\r\n+      // nothing to do?\r\n+      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    }\r\n+    else {\r\n+      setCurrentIdFromMap(idFromMap);\r\n+     // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+    }\r\n+\r\n+  };\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1712665996601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+    //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n \r\n   }, []);\r\n \r\n \r\n@@ -327,334 +327,4 @@\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    //getAnonymousUniversesDetail();\r\n-    console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  const _onChildClick = (key, childProps) => {\r\n-\r\n-    let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n-  };\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let oneUser = value;\r\n-      let showcases = oneUser['showcases'];\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user === api_user) {\r\n-        if (showCasesArray[i].univers_id === universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n-              tabArray.push(result);\r\n-            }\r\n-            //else {\r\n-\r\n-            // }\r\n-          }\r\n-          else {\r\n-            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      if (tabArray) {\r\n-        tabArray.forEach((item, index) => {\r\n-\r\n-          if (item['picture'] !== null) {\r\n-            //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            //}\r\n-            xrow++;\r\n-          }\r\n-        })\r\n-      }\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche\r\n-\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.email} row={row} id={row.id} />\r\n-\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-  function xhandleParentEvent  (idFromMap)  {\r\n-    if (currentIdFromMap === idFromMap) {\r\n-      // nothing to do?\r\n-      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    }\r\n-    else {\r\n-      setCurrentIdFromMap(idFromMap);\r\n-     // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n-    }\r\n-\r\n-  };\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1712666009270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     let xOneRows = [];\r\n     let xi = 0;\r\n-    console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n+    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n     Object.entries(showCasesArray).forEach(entry => {\r\n       const [key, value] = entry;\r\n       let oneUser = value;\r\n       let showcases = oneUser['showcases'];\r\n"
                },
                {
                    "date": 1712750273216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,9 +320,9 @@\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent()}>\r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712750422829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,17 +270,17 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent  (idFromMap)  {\r\n-    if (currentIdFromMap === idFromMap) {\r\n+  function xhandleParentEvent()  {\r\n+  //  if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     }\r\n-    else {\r\n+  //  else {\r\n       setCurrentIdFromMap(idFromMap);\r\n      // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n-    }\r\n+   // }\r\n \r\n   };\r\n \r\n   return (\r\n@@ -320,9 +320,10 @@\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady} xhandleParentEvent={xhandleParentEvent}>\r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712750442779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,9 +274,9 @@\n   function xhandleParentEvent()  {\r\n   //  if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    }\r\n+  //  }\r\n   //  else {\r\n       setCurrentIdFromMap(idFromMap);\r\n      // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n    // }\r\n"
                },
                {
                    "date": 1712750451112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,9 @@\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n   //  }\r\n   //  else {\r\n-      setCurrentIdFromMap(idFromMap);\r\n+      //setCurrentIdFromMap(idFromMap);\r\n      // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n    // }\r\n \r\n   };\r\n"
                },
                {
                    "date": 1712750504393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent()  {\r\n+  const xhandleParentEvent= () => (\r\n   //  if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n   //  }\r\n@@ -280,9 +280,9 @@\n       //setCurrentIdFromMap(idFromMap);\r\n      // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n    // }\r\n \r\n-  };\r\n+  )\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712750525372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,9 @@\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n   //  }\r\n   //  else {\r\n       //setCurrentIdFromMap(idFromMap);\r\n-     // alert(\"STEP MAU TU 1.01\", idFromMap)\r\n+     alert(\"STEP MAU TU 1.01\")\r\n    // }\r\n \r\n   )\r\n \r\n"
                },
                {
                    "date": 1712750556859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,9 +321,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={xhandleParentEvent}>\r\n+          xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1712750624591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,16 +270,16 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= () => (\r\n+  const xhandleParentEvent= (idFromMap) => (\r\n   //  if (currentIdFromMap === idFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n   //  }\r\n   //  else {\r\n       //setCurrentIdFromMap(idFromMap);\r\n-     alert(\"STEP MAU TU 1.01\")\r\n+     alert(\"STEP MAU TU 1.01\",idFromMap)\r\n    // }\r\n \r\n   )\r\n \r\n"
                },
                {
                    "date": 1712750734916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,16 +271,17 @@\n \r\n \r\n \r\n   const xhandleParentEvent= (idFromMap) => (\r\n-  //  if (currentIdFromMap === idFromMap) {\r\n+\r\n+    if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-  //  }\r\n-  //  else {\r\n-      //setCurrentIdFromMap(idFromMap);\r\n-     alert(\"STEP MAU TU 1.01\",idFromMap)\r\n-   // }\r\n+    }\r\n+    else {\r\n+       setCurrentIdFromMap(idFromMap);\r\n+       alert(\"STEP MAU TU 1.01\",idFromMap);\r\n+   }\r\n \r\n   )\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1712751234415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= (idFromMap) => (\r\n+  const xhandleParentEvent= (idFromMap) => {\r\n \r\n     if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n@@ -281,9 +281,9 @@\n        setCurrentIdFromMap(idFromMap);\r\n        alert(\"STEP MAU TU 1.01\",idFromMap);\r\n    }\r\n \r\n-  )\r\n+  }\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712751296580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= (idFromMap) => {\r\n+  const xhandleParentEvent= (idFromMap) => (\r\n \r\n     if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n@@ -281,9 +281,9 @@\n        setCurrentIdFromMap(idFromMap);\r\n        alert(\"STEP MAU TU 1.01\",idFromMap);\r\n    }\r\n \r\n-  }\r\n+  );\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1712751324872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,16 +272,16 @@\n \r\n \r\n   const xhandleParentEvent= (idFromMap) => (\r\n \r\n-    if (currentIdFromMap) {\r\n+    //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    }\r\n-    else {\r\n-       setCurrentIdFromMap(idFromMap);\r\n+    //}\r\n+    //else {\r\n+    //   setCurrentIdFromMap(idFromMap);\r\n        alert(\"STEP MAU TU 1.01\",idFromMap);\r\n-   }\r\n+   //}\r\n \r\n   );\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1712751336949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,9 @@\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     //}\r\n     //else {\r\n     //   setCurrentIdFromMap(idFromMap);\r\n-       alert(\"STEP MAU TU 1.01\",idFromMap);\r\n+       alert(\"STEP MAU TU 1.01\")\r\n    //}\r\n \r\n   );\r\n \r\n"
                },
                {
                    "date": 1712751361616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,9 @@\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     //}\r\n     //else {\r\n     //   setCurrentIdFromMap(idFromMap);\r\n-       alert(\"STEP MAU TU 1.01\")\r\n+       //alert(\"STEP MAU TU 1.01\")\r\n    //}\r\n \r\n   );\r\n \r\n"
                },
                {
                    "date": 1712751382860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,8 +279,9 @@\n     //}\r\n     //else {\r\n     //   setCurrentIdFromMap(idFromMap);\r\n        //alert(\"STEP MAU TU 1.01\")\r\n+       console.log(idFromMap)\r\n    //}\r\n \r\n   );\r\n \r\n"
                },
                {
                    "date": 1712751414327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n     //}\r\n     //else {\r\n     //   setCurrentIdFromMap(idFromMap);\r\n        //alert(\"STEP MAU TU 1.01\")\r\n-       console.log(idFromMap)\r\n+       console.log('idFromMap')\r\n    //}\r\n \r\n   );\r\n \r\n"
                },
                {
                    "date": 1713951906482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,9 +323,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={xhandleParentEvent()}>\r\n+          xhandleParentEvent={xhandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713951954756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= (idFromMap) => (\r\n+  const xhandleParentEvent= (idFromMap) =>{ \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n@@ -282,9 +282,9 @@\n        //alert(\"STEP MAU TU 1.01\")\r\n        console.log('idFromMap')\r\n    //}\r\n \r\n-  );\r\n+  };\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713951974745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= (idFromMap) =>{ \r\n+  function xhandleParentEvent= (idFromMap) =>{ \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1713951984299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent= (idFromMap) =>{ \r\n+  function xhandleParentEvent (idFromMap) =>{ \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1713951989927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent (idFromMap) =>{ \r\n+  function xhandleParentEvent(idFromMap) { \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1713952073992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleParentEvent(idFromMap) { \r\n+  function xhandleIdrepairmanEvent(idFromMap) { \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n@@ -323,9 +323,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={xhandleParentEvent}>\r\n+          xhandleParentEvent={xhandleIdrepairmanEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713952291069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  function xhandleIdrepairmanEvent(idFromMap) { \r\n+  const xhandleIdrepairmanEvent(idFromMap) { \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1713952320322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleIdrepairmanEvent(idFromMap) { \r\n+  const xhandleIdrepairmanEvent= (idFromMap)=> { \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n"
                },
                {
                    "date": 1713952369640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleIdrepairmanEvent= (idFromMap)=> { \r\n+  const xhandleIdrepairmanEvent= (idFromMap)=>( \r\n \r\n     //if (currentIdFromMap) {\r\n       // nothing to do?\r\n       //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n@@ -282,9 +282,9 @@\n        //alert(\"STEP MAU TU 1.01\")\r\n        console.log('idFromMap')\r\n    //}\r\n \r\n-  };\r\n+  );\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713952390838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,9 +323,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={xhandleIdrepairmanEvent}>\r\n+          xhandleParentEvent={xhandleIdrepairmanEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713952939340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,22 +270,16 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleIdrepairmanEvent= (idFromMap)=>( \r\n+  const handleParentEvent = (data, completeData) => {\r\n+    // Traiter les données du composant enfant\r\n+    \r\n \r\n-    //if (currentIdFromMap) {\r\n-      // nothing to do?\r\n-      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    //}\r\n-    //else {\r\n-    //   setCurrentIdFromMap(idFromMap);\r\n-       //alert(\"STEP MAU TU 1.01\")\r\n-       console.log('idFromMap')\r\n-   //}\r\n+    //var element_to_scroll_to = document.getElementById('votre_commande');\r\n+    //if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n+  }\r\n \r\n-  );\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -323,9 +317,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={xhandleIdrepairmanEvent()}>\r\n+          xhandleParentEvent={handleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713953344852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const handleParentEvent = (data, completeData) => {\r\n+  const handleParentEvent = (result) => {\r\n     // Traiter les données du composant enfant\r\n     \r\n \r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n"
                },
                {
                    "date": 1713954136255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n \r\n   const handleParentEvent = (result) => {\r\n     // Traiter les données du composant enfant\r\n     \r\n-\r\n+alert (\"mpau\");\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n   }\r\n \r\n"
                },
                {
                    "date": 1713954224913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,12 +273,12 @@\n \r\n   const handleParentEvent = (result) => {\r\n     // Traiter les données du composant enfant\r\n     \r\n-alert (\"mpau\");\r\n+alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n-  }\r\n+  } return (<></>)\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713954281366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,9 +276,10 @@\n     \r\n alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n-  } return (<></>)\r\n+  } \r\n+  return (<></>)};\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713954353788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,14 +273,14 @@\n \r\n   const handleParentEvent = (result) => {\r\n     // Traiter les données du composant enfant\r\n     \r\n-alert (\"mpau\")\r\n+    alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n   } \r\n-  return (<></>)};\r\n \r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1713954448603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={handleParentEvent}>\r\n+          handleParentEvent={handleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713954488750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          handleParentEvent={handleParentEvent}>\r\n+          handleParentEvent={handleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713954579241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,15 +270,15 @@\n   )\r\n \r\n \r\n \r\n-  const handleParentEvent = (result) => {\r\n+  const handleParentEvent = (result) => (\r\n     // Traiter les données du composant enfant\r\n     \r\n     alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n-    //if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n-  } \r\n+    //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n+  )\r\n \r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1713954650165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,9 +270,9 @@\n   )\r\n \r\n \r\n \r\n-  const handleParentEvent = (result) => (\r\n+  const mpauHandleParentEvent = (result) => (\r\n     // Traiter les données du composant enfant\r\n     \r\n     alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n@@ -318,9 +318,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          handleParentEvent={handleParentEvent()}>\r\n+          handleParentEvent={mpauHandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713955589306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          handleParentEvent={mpauHandleParentEvent()}>\r\n+          handleParentEvent={mpauHandleParentEvent}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713955873014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,9 +273,9 @@\n \r\n   const mpauHandleParentEvent = (result) => (\r\n     // Traiter les données du composant enfant\r\n     \r\n-    alert (\"mpau\")\r\n+    //alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n   )\r\n \r\n"
                },
                {
                    "date": 1713955917365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          handleParentEvent={mpauHandleParentEvent}>\r\n+          handleParentEvent={mpauHandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713956015266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,9 +272,9 @@\n \r\n \r\n   const mpauHandleParentEvent = (result) => (\r\n     // Traiter les données du composant enfant\r\n-    \r\n+    console.log(\"MAU\", result);\r\n     //alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n   )\r\n"
                },
                {
                    "date": 1713956024345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,9 +272,9 @@\n \r\n \r\n   const mpauHandleParentEvent = (result) => (\r\n     // Traiter les données du composant enfant\r\n-    console.log(\"MAU\", result);\r\n+    console.log(\"MAU\", result)\r\n     //alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n   )\r\n"
                },
                {
                    "date": 1713956243123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,328 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    //getAnonymousUniversesDetail();\r\n+    //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (true);\r\n+      },\r\n+      catch: (error) => {\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  const _onChildClick = (key, childProps) => {\r\n+\r\n+    let i = null;\r\n+    /*\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+    */\r\n+  };\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let oneUser = value;\r\n+      let showcases = oneUser['showcases'];\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+\r\n+            // }\r\n+          }\r\n+          else {\r\n+            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      if (tabArray) {\r\n+        tabArray.forEach((item, index) => {\r\n+\r\n+          if (item['picture'] !== null) {\r\n+            //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            //}\r\n+            xrow++;\r\n+          }\r\n+        })\r\n+      }\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée1\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+      data.map(rowRenderArt)\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche\r\n+\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.email} row={row} id={row.id} />\r\n+\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+  const mpauHandleParentEvent = (result) => (\r\n+    // Traiter les données du composant enfant\r\n+    \r\n+    //alert (\"mpau\")\r\n+    //var element_to_scroll_to = document.getElementById('votre_commande');\r\n+    //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n+  )\r\n+\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          handleParentEvent={mpauHandleParentEvent}>\r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713956379436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -270,15 +270,16 @@\n   )\r\n \r\n \r\n \r\n-  const mpauHandleParentEvent = (result) => (\r\n+  function mpauHandleParentEvent (result) {\r\n     // Traiter les données du composant enfant\r\n     \r\n     //alert (\"mpau\")\r\n     //var element_to_scroll_to = document.getElementById('votre_commande');\r\n     //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n-  )\r\n+    let a = 0\r\n+  }\r\n \r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n@@ -325,332 +326,4 @@\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    //getAnonymousUniversesDetail();\r\n-    //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  const _onChildClick = (key, childProps) => {\r\n-\r\n-    let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n-  };\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let oneUser = value;\r\n-      let showcases = oneUser['showcases'];\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user === api_user) {\r\n-        if (showCasesArray[i].univers_id === universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n-              tabArray.push(result);\r\n-            }\r\n-            //else {\r\n-\r\n-            // }\r\n-          }\r\n-          else {\r\n-            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      if (tabArray) {\r\n-        tabArray.forEach((item, index) => {\r\n-\r\n-          if (item['picture'] !== null) {\r\n-            //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            //}\r\n-            xrow++;\r\n-          }\r\n-        })\r\n-      }\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche\r\n-\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.email} row={row} id={row.id} />\r\n-\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-  const mpauHandleParentEvent = (result) => (\r\n-    // Traiter les données du composant enfant\r\n-    console.log(\"MAU\", result)\r\n-    //alert (\"mpau\")\r\n-    //var element_to_scroll_to = document.getElementById('votre_commande');\r\n-    //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n-  )\r\n-\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          handleParentEvent={mpauHandleParentEvent()}>\r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1713956505336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          handleParentEvent={mpauHandleParentEvent}>\r\n+          >\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713957857121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n-          position={tabArray} \r\n+          positions={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n           >\r\n           </NewMap>\r\n         </Col>\r\n"
                },
                {
                    "date": 1713957867537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,9 +317,9 @@\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n-          positions={tabArray} \r\n+          position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n           >\r\n           </NewMap>\r\n         </Col>\r\n"
                },
                {
                    "date": 1713958126853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,130 @@\n     //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n     let a = 0\r\n   }\r\n \r\n+/**\r\n+* @param {String} HTML representing a single element.\r\n+* @param {Boolean} flag representing whether or not to trim input whitespace, defaults to true.\r\n+* @return {Element | HTMLCollection | null}\r\n+*/\r\n+function fromHTML(html, trim = true) {\r\n+  // Process the HTML string.\r\n+  html = trim ? html.trim() : html;\r\n+  if (!html) return null;\r\n \r\n+  // Then set up a new template element.\r\n+  const template = document.createElement('template');\r\n+  template.innerHTML = html;\r\n+  const result = template.content.children;\r\n+\r\n+  // Then return either an HTMLElement or HTMLCollection,\r\n+  // based on whether the input HTML had one or more roots.\r\n+  if (result.length === 1) return result[0];\r\n+  return result;\r\n+}\r\n+\r\n+function newMap(positions, displayUniverseUsersIsReady, props) {\r\n+\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    function onChildClick(htmlElement) {\r\n+      // Then set up a new template element.\r\n+      const div = fromHTML(htmlElement);\r\n+      const result = div.localId.lastChild.data;\r\n+      console.log(\"NM 1:01 Onclick\", \"https://dev.to/muratcanyuksel/comment-passer-des-donnees-entre-les-composants-react-16bi\");\r\n+      handleClick(result);\r\n+\r\n+    }\r\n+    function handleClick(result) {\r\n+      console.log(\"NM 5.21 props \", props);\r\n+      console.log(\"NM 5.22 TYPEOF\", typeof (props?.position));\r\n+      console.log(\"NM 5.25 handle click \", result);\r\n+    }\r\n+    function addInfoWindow(marker, message) {\r\n+      var infoWindow = new window.google.maps.InfoWindow({\r\n+        content: message\r\n+      });\r\n+      window.google.maps.event.addListener(marker, 'click', function () {\r\n+        infoWindow.open(map, marker);\r\n+        onChildClick(infoWindow.getContent());\r\n+      });\r\n+      marker.addListener('mouseover', function () {\r\n+        // open your popup window\r\n+        infoWindow.open(map, marker);\r\n+      });\r\n+\r\n+      marker.addListener('mouseout', function () {\r\n+        // close your popup window\r\n+        infoWindow.close();\r\n+      });\r\n+    }\r\n+    const repairIcon = {\r\n+      url: imgVector,\r\n+      scaledSize: new window.google.maps.Size(40, 40),\r\n+    };\r\n+\r\n+    // Initialize the map\r\n+    const mapOptions = {\r\n+      center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+      zoom: 5.8, // Set the initial zoom level\r\n+\r\n+    };\r\n+\r\n+\r\n+    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+\r\n+    //console.log(\"STEP NM TU 0.2 watch map positions\", positions, typeof (positions));\r\n+\r\n+    if (positions.position) {\r\n+      let xi = 0;\r\n+      var ent;\r\n+      let RepairManlatlng = [];\r\n+      Object.entries(positions.position).forEach(entry => {\r\n+        const [key, value] = entry;\r\n+        let position = value;\r\n+        ent = Object.entries(value);\r\n+        if (position['lat'] && position['lng']) {\r\n+          RepairManlatlng.push(position);\r\n+        }\r\n+\r\n+      });\r\n+      //console.log(\"Step NM TU 0.3 watch map positions \", RepairManlatlng);\r\n+      //setIsDisplayed(true);\r\n+      const markers = RepairManlatlng.map((position, i) => {\r\n+\r\n+        const marker = new window.google.maps.Marker({\r\n+          position,\r\n+          map,\r\n+          icon: repairIcon,\r\n+        });\r\n+\r\n+        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code'] + \"<span hidden id='localId' >\" + position['id'] + \"</span>\"\r\n+        addInfoWindow(marker, renderx);\r\n+        //console.log(\"STEP TU Markers filling \", xi);\r\n+        xi++;\r\n+        return marker;\r\n+      });\r\n+      var options = {\r\n+        maxZoom: 10,\r\n+\r\n+        styles: [{\r\n+          width: 53,\r\n+          height: 53,\r\n+          textColor: '#0002',\r\n+        }]\r\n+\r\n+      };\r\n+      new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n+\r\n+    }\r\n+\r\n+  }, [positions, displayUniverseUsersIsReady]);\r\n+\r\n+  return <div id='map' style={{ width: '90%', height: '100vh' }}></div>;\r\n+}\r\n+\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -316,13 +437,10 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          >\r\n-          </NewMap>\r\n+         { NewMap(tabArray,displayUniverseUsersIsReady) }\r\n+        \r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1713958196712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,9 @@\n \r\n function newMap(positions, displayUniverseUsersIsReady, props) {\r\n \r\n \r\n-  useEffect(() => {\r\n+ \r\n \r\n     function onChildClick(htmlElement) {\r\n       // Then set up a new template element.\r\n       const div = fromHTML(htmlElement);\r\n@@ -396,9 +396,9 @@\n       new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n \r\n     }\r\n \r\n-  }, [positions, displayUniverseUsersIsReady]);\r\n+ \r\n \r\n   return <div id='map' style={{ width: '90%', height: '100vh' }}></div>;\r\n }\r\n \r\n"
                },
                {
                    "date": 1713958241787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,12 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n+import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n+import { array } from \"prop-types\";\r\n \r\n-\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1713958357547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,10 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n-import { array } from \"prop-types\";\r\n \r\n+\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n@@ -272,139 +270,22 @@\n   )\r\n \r\n \r\n \r\n-  function mpauHandleParentEvent (result) {\r\n-    // Traiter les données du composant enfant\r\n-    \r\n-    //alert (\"mpau\")\r\n-    //var element_to_scroll_to = document.getElementById('votre_commande');\r\n-    //if (element_to_scroll_to) element_o_scroll_to.scrollIntoView();\r\n-    let a = 0\r\n-  }\r\n+  const xhandleParentEvent= (idFromMap) => (\r\n \r\n-/**\r\n-* @param {String} HTML representing a single element.\r\n-* @param {Boolean} flag representing whether or not to trim input whitespace, defaults to true.\r\n-* @return {Element | HTMLCollection | null}\r\n-*/\r\n-function fromHTML(html, trim = true) {\r\n-  // Process the HTML string.\r\n-  html = trim ? html.trim() : html;\r\n-  if (!html) return null;\r\n+    //if (currentIdFromMap) {\r\n+      // nothing to do?\r\n+      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    //}\r\n+    //else {\r\n+    //   setCurrentIdFromMap(idFromMap);\r\n+       //alert(\"STEP MAU TU 1.01\")\r\n+       console.log('idFromMap')\r\n+   //}\r\n \r\n-  // Then set up a new template element.\r\n-  const template = document.createElement('template');\r\n-  template.innerHTML = html;\r\n-  const result = template.content.children;\r\n+  );\r\n \r\n-  // Then return either an HTMLElement or HTMLCollection,\r\n-  // based on whether the input HTML had one or more roots.\r\n-  if (result.length === 1) return result[0];\r\n-  return result;\r\n-}\r\n-\r\n-function newMap(positions, displayUniverseUsersIsReady, props) {\r\n-\r\n-\r\n- \r\n-\r\n-    function onChildClick(htmlElement) {\r\n-      // Then set up a new template element.\r\n-      const div = fromHTML(htmlElement);\r\n-      const result = div.localId.lastChild.data;\r\n-      console.log(\"NM 1:01 Onclick\", \"https://dev.to/muratcanyuksel/comment-passer-des-donnees-entre-les-composants-react-16bi\");\r\n-      handleClick(result);\r\n-\r\n-    }\r\n-    function handleClick(result) {\r\n-      console.log(\"NM 5.21 props \", props);\r\n-      console.log(\"NM 5.22 TYPEOF\", typeof (props?.position));\r\n-      console.log(\"NM 5.25 handle click \", result);\r\n-    }\r\n-    function addInfoWindow(marker, message) {\r\n-      var infoWindow = new window.google.maps.InfoWindow({\r\n-        content: message\r\n-      });\r\n-      window.google.maps.event.addListener(marker, 'click', function () {\r\n-        infoWindow.open(map, marker);\r\n-        onChildClick(infoWindow.getContent());\r\n-      });\r\n-      marker.addListener('mouseover', function () {\r\n-        // open your popup window\r\n-        infoWindow.open(map, marker);\r\n-      });\r\n-\r\n-      marker.addListener('mouseout', function () {\r\n-        // close your popup window\r\n-        infoWindow.close();\r\n-      });\r\n-    }\r\n-    const repairIcon = {\r\n-      url: imgVector,\r\n-      scaledSize: new window.google.maps.Size(40, 40),\r\n-    };\r\n-\r\n-    // Initialize the map\r\n-    const mapOptions = {\r\n-      center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-      zoom: 5.8, // Set the initial zoom level\r\n-\r\n-    };\r\n-\r\n-\r\n-    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n-\r\n-    //console.log(\"STEP NM TU 0.2 watch map positions\", positions, typeof (positions));\r\n-\r\n-    if (positions.position) {\r\n-      let xi = 0;\r\n-      var ent;\r\n-      let RepairManlatlng = [];\r\n-      Object.entries(positions.position).forEach(entry => {\r\n-        const [key, value] = entry;\r\n-        let position = value;\r\n-        ent = Object.entries(value);\r\n-        if (position['lat'] && position['lng']) {\r\n-          RepairManlatlng.push(position);\r\n-        }\r\n-\r\n-      });\r\n-      //console.log(\"Step NM TU 0.3 watch map positions \", RepairManlatlng);\r\n-      //setIsDisplayed(true);\r\n-      const markers = RepairManlatlng.map((position, i) => {\r\n-\r\n-        const marker = new window.google.maps.Marker({\r\n-          position,\r\n-          map,\r\n-          icon: repairIcon,\r\n-        });\r\n-\r\n-        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code'] + \"<span hidden id='localId' >\" + position['id'] + \"</span>\"\r\n-        addInfoWindow(marker, renderx);\r\n-        //console.log(\"STEP TU Markers filling \", xi);\r\n-        xi++;\r\n-        return marker;\r\n-      });\r\n-      var options = {\r\n-        maxZoom: 10,\r\n-\r\n-        styles: [{\r\n-          width: 53,\r\n-          height: 53,\r\n-          textColor: '#0002',\r\n-        }]\r\n-\r\n-      };\r\n-      new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n-\r\n-    }\r\n-\r\n- \r\n-\r\n-  return <div id='map' style={{ width: '90%', height: '100vh' }}></div>;\r\n-}\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -439,10 +320,13 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-         { NewMap(tabArray,displayUniverseUsersIsReady) }\r\n-        \r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          xhandleParentEvent={xhandleParentEvent()}>\r\n+          </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1713958511059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,28 @@\n   const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n   const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n \r\n+  /**\r\n+* @param {String} HTML representing a single element.\r\n+* @param {Boolean} flag representing whether or not to trim input whitespace, defaults to true.\r\n+* @return {Element | HTMLCollection | null}\r\n+*/\r\n+  function fromHTML(html, trim = true) {\r\n+    // Process the HTML string.\r\n+    html = trim ? html.trim() : html;\r\n+    if (!html) return null;\r\n+\r\n+    // Then set up a new template element.\r\n+    const template = document.createElement('template');\r\n+    template.innerHTML = html;\r\n+    const result = template.content.children;\r\n+\r\n+    // Then return either an HTMLElement or HTMLCollection,\r\n+    // based on whether the input HTML had one or more roots.\r\n+    if (result.length === 1) return result[0];\r\n+    return result;\r\n+  }\r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n@@ -270,19 +290,19 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= (idFromMap) => (\r\n+  const xhandleParentEvent = (idFromMap) => (\r\n \r\n     //if (currentIdFromMap) {\r\n-      // nothing to do?\r\n-      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    // nothing to do?\r\n+    //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     //}\r\n     //else {\r\n     //   setCurrentIdFromMap(idFromMap);\r\n-       //alert(\"STEP MAU TU 1.01\")\r\n-       console.log('idFromMap')\r\n-   //}\r\n+    //alert(\"STEP MAU TU 1.01\")\r\n+    console.log('idFromMap')\r\n+    //}\r\n \r\n   );\r\n \r\n   return (\r\n@@ -320,12 +340,12 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xhandleParentEvent={xhandleParentEvent()}>\r\n+          <NewMap\r\n+            position={tabArray}\r\n+            displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+            xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713958570404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,13 @@\n     // based on whether the input HTML had one or more roots.\r\n     if (result.length === 1) return result[0];\r\n     return result;\r\n   }\r\n+\r\n+  function mauNewMap(positions, displayUniverseUsersIsReady, props) {\r\n+  \r\n+  }\r\n+  \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n"
                },
                {
                    "date": 1713958646993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,51 @@\n   function mauNewMap(positions, displayUniverseUsersIsReady, props) {\r\n   \r\n   }\r\n   \r\n+  function onChildClick(htmlElement) {\r\n+    // Then set up a new template element.\r\n+    const div = fromHTML(htmlElement);\r\n+    const result = div.localId.lastChild.data;\r\n+    console.log(\"NM 1:01 Onclick\", \"https://dev.to/muratcanyuksel/comment-passer-des-donnees-entre-les-composants-react-16bi\");\r\n+    handleClick(result);\r\n+\r\n+  }\r\n+  function handleClick(result) {\r\n+    console.log(\"NM 5.21 props \", props);\r\n+    console.log(\"NM 5.22 TYPEOF\", typeof (props?.position));\r\n+    console.log(\"NM 5.25 handle click \", result);\r\n+  }\r\n+  function addInfoWindow(marker, message) {\r\n+    var infoWindow = new window.google.maps.InfoWindow({\r\n+      content: message\r\n+    });\r\n+    window.google.maps.event.addListener(marker, 'click', function () {\r\n+      infoWindow.open(map, marker);\r\n+      onChildClick(infoWindow.getContent());\r\n+    });\r\n+    marker.addListener('mouseover', function () {\r\n+      // open your popup window\r\n+      infoWindow.open(map, marker);\r\n+    });\r\n+\r\n+    marker.addListener('mouseout', function () {\r\n+      // close your popup window\r\n+      infoWindow.close();\r\n+    });\r\n+  }\r\n+  const repairIcon = {\r\n+    url: imgVector,\r\n+    scaledSize: new window.google.maps.Size(40, 40),\r\n+  };\r\n+\r\n+  // Initialize the map\r\n+  const mapOptions = {\r\n+    center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n+    zoom: 5.8, // Set the initial zoom level\r\n+\r\n+  };\r\n+  \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n"
                },
                {
                    "date": 1713958687358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,11 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n+import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n+import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n-\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n"
                },
                {
                    "date": 1713958777904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,8 +102,58 @@\n     center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n     zoom: 5.8, // Set the initial zoom level\r\n \r\n   };\r\n+\r\n+\r\n+  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+\r\n+  //console.log(\"STEP NM TU 0.2 watch map positions\", positions, typeof (positions));\r\n+\r\n+  if (positions.position) {\r\n+    let xi = 0;\r\n+    var ent;\r\n+    let RepairManlatlng = [];\r\n+    Object.entries(positions.position).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let position = value;\r\n+      ent = Object.entries(value);\r\n+      if (position['lat'] && position['lng']) {\r\n+        RepairManlatlng.push(position);\r\n+      }\r\n+\r\n+    });\r\n+    //console.log(\"Step NM TU 0.3 watch map positions \", RepairManlatlng);\r\n+    //setIsDisplayed(true);\r\n+    const markers = RepairManlatlng.map((position, i) => {\r\n+\r\n+      const marker = new window.google.maps.Marker({\r\n+        position,\r\n+        map,\r\n+        icon: repairIcon,\r\n+      });\r\n+\r\n+      let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code'] + \"<span hidden id='localId' >\" + position['id'] + \"</span>\"\r\n+      addInfoWindow(marker, renderx);\r\n+      //console.log(\"STEP TU Markers filling \", xi);\r\n+      xi++;\r\n+      return marker;\r\n+    });\r\n+    var options = {\r\n+      maxZoom: 10,\r\n+\r\n+      styles: [{\r\n+        width: 53,\r\n+        height: 53,\r\n+        textColor: '#0002',\r\n+      }]\r\n+\r\n+    };\r\n+    new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n+\r\n+  }\r\n+\r\n+\r\n   \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1713959012381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useEffect, useState } from \"react\";\r\n+tabArrayimport React, { useEffect, useState } from \"react\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n@@ -108,60 +108,62 @@\n   const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n \r\n   //console.log(\"STEP NM TU 0.2 watch map positions\", positions, typeof (positions));\r\n \r\n-  if (positions.position) {\r\n-    let xi = 0;\r\n-    var ent;\r\n-    let RepairManlatlng = [];\r\n-    Object.entries(positions.position).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let position = value;\r\n-      ent = Object.entries(value);\r\n-      if (position['lat'] && position['lng']) {\r\n-        RepairManlatlng.push(position);\r\n-      }\r\n+  \r\n \r\n-    });\r\n-    //console.log(\"Step NM TU 0.3 watch map positions \", RepairManlatlng);\r\n-    //setIsDisplayed(true);\r\n-    const markers = RepairManlatlng.map((position, i) => {\r\n \r\n-      const marker = new window.google.maps.Marker({\r\n-        position,\r\n-        map,\r\n-        icon: repairIcon,\r\n-      });\r\n-\r\n-      let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code'] + \"<span hidden id='localId' >\" + position['id'] + \"</span>\"\r\n-      addInfoWindow(marker, renderx);\r\n-      //console.log(\"STEP TU Markers filling \", xi);\r\n-      xi++;\r\n-      return marker;\r\n-    });\r\n-    var options = {\r\n-      maxZoom: 10,\r\n-\r\n-      styles: [{\r\n-        width: 53,\r\n-        height: 53,\r\n-        textColor: '#0002',\r\n-      }]\r\n-\r\n-    };\r\n-    new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n-\r\n-  }\r\n-\r\n-\r\n   \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n     //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+    positions =tabArray;\r\n+    if (positions.position) {\r\n+      let xi = 0;\r\n+      var ent;\r\n+      let RepairManlatlng = [];\r\n+      Object.entries(positions.position).forEach(entry => {\r\n+        const [key, value] = entry;\r\n+        let position = value;\r\n+        ent = Object.entries(value);\r\n+        if (position['lat'] && position['lng']) {\r\n+          RepairManlatlng.push(position);\r\n+        }\r\n+  \r\n+      });\r\n+      //console.log(\"Step NM TU 0.3 watch map positions \", RepairManlatlng);\r\n+      //setIsDisplayed(true);\r\n+      const markers = RepairManlatlng.map((position, i) => {\r\n+  \r\n+        const marker = new window.google.maps.Marker({\r\n+          position,\r\n+          map,\r\n+          icon: repairIcon,\r\n+        });\r\n+  \r\n+        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code'] + \"<span hidden id='localId' >\" + position['id'] + \"</span>\"\r\n+        addInfoWindow(marker, renderx);\r\n+        //console.log(\"STEP TU Markers filling \", xi);\r\n+        xi++;\r\n+        return marker;\r\n+      });\r\n+      var options = {\r\n+        maxZoom: 10,\r\n+  \r\n+        styles: [{\r\n+          width: 53,\r\n+          height: 53,\r\n+          textColor: '#0002',\r\n+        }]\r\n+  \r\n+      };\r\n+      new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n+  \r\n+    }\r\n \r\n   }, []);\r\n \r\n \r\n"
                },
                {
                    "date": 1713959030481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-tabArrayimport React, { useEffect, useState } from \"react\";\r\n+import React, { useEffect, useState } from \"react\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n"
                },
                {
                    "date": 1713959067711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,9 +120,9 @@\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n     //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n     positions =tabArray;\r\n-    if (positions.position) {\r\n+    if (positions?.position) {\r\n       let xi = 0;\r\n       var ent;\r\n       let RepairManlatlng = [];\r\n       Object.entries(positions.position).forEach(entry => {\r\n"
                },
                {
                    "date": 1713959078667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n     //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-    positions =tabArray;\r\n+    const positions =tabArray;\r\n     if (positions?.position) {\r\n       let xi = 0;\r\n       var ent;\r\n       let RepairManlatlng = [];\r\n"
                },
                {
                    "date": 1713959160270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -441,13 +441,10 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap\r\n-            position={tabArray}\r\n-            displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-            xhandleParentEvent={xhandleParentEvent()}>\r\n-          </NewMap>\r\n+       \r\n+          <div id='map' style={{ width: '90%', height: '100vh' }}></div>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1713959213997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,18 +104,18 @@\n \r\n   };\r\n \r\n \r\n-  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+ \r\n \r\n   //console.log(\"STEP NM TU 0.2 watch map positions\", positions, typeof (positions));\r\n \r\n   \r\n \r\n \r\n   \r\n   useEffect(() => {\r\n-\r\n+    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n"
                },
                {
                    "date": 1713959236684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n \r\n \r\n   \r\n   useEffect(() => {\r\n-    const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n@@ -390,9 +390,9 @@\n \r\n   )\r\n \r\n \r\n-\r\n+  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n   const xhandleParentEvent = (idFromMap) => (\r\n \r\n     //if (currentIdFromMap) {\r\n     // nothing to do?\r\n"
                },
                {
                    "date": 1713959255712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -390,9 +390,9 @@\n \r\n   )\r\n \r\n \r\n-  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n+ \r\n   const xhandleParentEvent = (idFromMap) => (\r\n \r\n     //if (currentIdFromMap) {\r\n     // nothing to do?\r\n@@ -404,8 +404,9 @@\n     console.log('idFromMap')\r\n     //}\r\n \r\n   );\r\n+  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713959285228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,10 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n-import imgVector from \"../../assets/images/icons/mapVector.svg\";\r\n-import { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n \r\n+\r\n export default function MapArtisansUnivers(props) {\r\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n@@ -35,135 +34,15 @@\n   const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n   const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n   const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n \r\n-  /**\r\n-* @param {String} HTML representing a single element.\r\n-* @param {Boolean} flag representing whether or not to trim input whitespace, defaults to true.\r\n-* @return {Element | HTMLCollection | null}\r\n-*/\r\n-  function fromHTML(html, trim = true) {\r\n-    // Process the HTML string.\r\n-    html = trim ? html.trim() : html;\r\n-    if (!html) return null;\r\n-\r\n-    // Then set up a new template element.\r\n-    const template = document.createElement('template');\r\n-    template.innerHTML = html;\r\n-    const result = template.content.children;\r\n-\r\n-    // Then return either an HTMLElement or HTMLCollection,\r\n-    // based on whether the input HTML had one or more roots.\r\n-    if (result.length === 1) return result[0];\r\n-    return result;\r\n-  }\r\n-\r\n-  function mauNewMap(positions, displayUniverseUsersIsReady, props) {\r\n-  \r\n-  }\r\n-  \r\n-  function onChildClick(htmlElement) {\r\n-    // Then set up a new template element.\r\n-    const div = fromHTML(htmlElement);\r\n-    const result = div.localId.lastChild.data;\r\n-    console.log(\"NM 1:01 Onclick\", \"https://dev.to/muratcanyuksel/comment-passer-des-donnees-entre-les-composants-react-16bi\");\r\n-    handleClick(result);\r\n-\r\n-  }\r\n-  function handleClick(result) {\r\n-    console.log(\"NM 5.21 props \", props);\r\n-    console.log(\"NM 5.22 TYPEOF\", typeof (props?.position));\r\n-    console.log(\"NM 5.25 handle click \", result);\r\n-  }\r\n-  function addInfoWindow(marker, message) {\r\n-    var infoWindow = new window.google.maps.InfoWindow({\r\n-      content: message\r\n-    });\r\n-    window.google.maps.event.addListener(marker, 'click', function () {\r\n-      infoWindow.open(map, marker);\r\n-      onChildClick(infoWindow.getContent());\r\n-    });\r\n-    marker.addListener('mouseover', function () {\r\n-      // open your popup window\r\n-      infoWindow.open(map, marker);\r\n-    });\r\n-\r\n-    marker.addListener('mouseout', function () {\r\n-      // close your popup window\r\n-      infoWindow.close();\r\n-    });\r\n-  }\r\n-  const repairIcon = {\r\n-    url: imgVector,\r\n-    scaledSize: new window.google.maps.Size(40, 40),\r\n-  };\r\n-\r\n-  // Initialize the map\r\n-  const mapOptions = {\r\n-    center: { lat: 48.9940649, lng: 2.5229373 }, // Set the initial center of the map\r\n-    zoom: 5.8, // Set the initial zoom level\r\n-\r\n-  };\r\n-\r\n-\r\n- \r\n-\r\n-  //console.log(\"STEP NM TU 0.2 watch map positions\", positions, typeof (positions));\r\n-\r\n-  \r\n-\r\n-\r\n-  \r\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     var result = getUserWithShowCase();\r\n     //getAnonymousUniversesDetail();\r\n     //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-    const positions =tabArray;\r\n-    if (positions?.position) {\r\n-      let xi = 0;\r\n-      var ent;\r\n-      let RepairManlatlng = [];\r\n-      Object.entries(positions.position).forEach(entry => {\r\n-        const [key, value] = entry;\r\n-        let position = value;\r\n-        ent = Object.entries(value);\r\n-        if (position['lat'] && position['lng']) {\r\n-          RepairManlatlng.push(position);\r\n-        }\r\n-  \r\n-      });\r\n-      //console.log(\"Step NM TU 0.3 watch map positions \", RepairManlatlng);\r\n-      //setIsDisplayed(true);\r\n-      const markers = RepairManlatlng.map((position, i) => {\r\n-  \r\n-        const marker = new window.google.maps.Marker({\r\n-          position,\r\n-          map,\r\n-          icon: repairIcon,\r\n-        });\r\n-  \r\n-        let renderx = \"<b>\" + position['label'] + \"</b><br/>\" + position['postalcode'] + \"</b><br/>\" + position['city_code'] + \"<span hidden id='localId' >\" + position['id'] + \"</span>\"\r\n-        addInfoWindow(marker, renderx);\r\n-        //console.log(\"STEP TU Markers filling \", xi);\r\n-        xi++;\r\n-        return marker;\r\n-      });\r\n-      var options = {\r\n-        maxZoom: 10,\r\n-  \r\n-        styles: [{\r\n-          width: 53,\r\n-          height: 53,\r\n-          textColor: '#0002',\r\n-        }]\r\n-  \r\n-      };\r\n-      new MarkerClusterer({ map, markers, algorithmOptions: { maxZoom: 10 } });\r\n-  \r\n-    }\r\n \r\n   }, []);\r\n \r\n \r\n@@ -390,23 +269,22 @@\n \r\n   )\r\n \r\n \r\n- \r\n-  const xhandleParentEvent = (idFromMap) => (\r\n \r\n+  const xhandleParentEvent= (idFromMap) => (\r\n+\r\n     //if (currentIdFromMap) {\r\n-    // nothing to do?\r\n-    //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+      // nothing to do?\r\n+      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n     //}\r\n     //else {\r\n     //   setCurrentIdFromMap(idFromMap);\r\n-    //alert(\"STEP MAU TU 1.01\")\r\n-    console.log('idFromMap')\r\n-    //}\r\n+       //alert(\"STEP MAU TU 1.01\")\r\n+       console.log('idFromMap')\r\n+   //}\r\n \r\n   );\r\n-  const map = new window.google.maps.Map(document.getElementById('map'), mapOptions);\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n@@ -442,10 +320,13 @@\n           {isTabletOrMobile && (\r\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n-       \r\n-          <div id='map' style={{ width: '90%', height: '100vh' }}></div>\r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          xhandleParentEvent={xhandleParentEvent()}>\r\n+          </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n"
                },
                {
                    "date": 1713961350464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n \r\n   const isOlder = true;\r\n   const { slugIdUniverse, slugIdService } = useParams();\r\n   const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+\r\n   const [isPending, setIsPending] = useState(0);\r\n   const [tabArray, setxObjElem] = useState([]);\r\n   const [repairManArr, setFilteredObject] = useState([]);\r\n   const [showCasesArray, setShowCases] = useState([]);\r\n@@ -323,8 +324,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          setCurrentIdFromMap ={setCurrentIdFromMap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713961406884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap ={setCurrentIdFromMap}\r\n+          setCurrentIdFromMap ={setCurrentIdFromMap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713961497775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap ={setCurrentIdFromMap()}\r\n+          xsetCurrentIdFromMap ={setCurrentIdFromMap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713961509000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xsetCurrentIdFromMap ={setCurrentIdFromMap()}\r\n+          setCurrentIdFromMap ={setCurrentIdFromMap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713961594676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap ={setCurrentIdFromMap()}\r\n+    \r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713961695777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-    \r\n+          setImap = {setImap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713961834012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,339 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    var result = getUserWithShowCase();\r\n+    //getAnonymousUniversesDetail();\r\n+    //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (true);\r\n+      },\r\n+      catch: (error) => {\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  const _onChildClick = (key, childProps) => {\r\n+\r\n+    let i = null;\r\n+    /*\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+    */\r\n+  };\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let oneUser = value;\r\n+      let showcases = oneUser['showcases'];\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+\r\n+            // }\r\n+          }\r\n+          else {\r\n+            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      if (tabArray) {\r\n+        tabArray.forEach((item, index) => {\r\n+\r\n+          if (item['picture'] !== null) {\r\n+            //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            //}\r\n+            xrow++;\r\n+          }\r\n+        })\r\n+      }\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée1\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+      data.map(rowRenderArt)\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche\r\n+\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.email} row={row} id={row.id} />\r\n+\r\n+\r\n+  )\r\n+\r\n+\r\n+\r\n+  const xhandleParentEvent= (idFromMap) => (\r\n+\r\n+    //if (currentIdFromMap) {\r\n+      // nothing to do?\r\n+      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n+    //}\r\n+    //else {\r\n+    //   setCurrentIdFromMap(idFromMap);\r\n+       //alert(\"STEP MAU TU 1.01\")\r\n+       console.log('idFromMap')\r\n+   //}\r\n+\r\n+  );\r\n+  function setImap(){\r\n+\r\n+    return\r\n+  }\r\n+\r\n+  return (\r\n+    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap \r\n+          position={tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          setImap = {setImap}\r\n+          xhandleParentEvent={xhandleParentEvent()}>\r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1713961867325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,347 +328,12 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setImap}\r\n+          setImap = {setImap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    //getAnonymousUniversesDetail();\r\n-    //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  const _onChildClick = (key, childProps) => {\r\n-\r\n-    let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n-  };\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let oneUser = value;\r\n-      let showcases = oneUser['showcases'];\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user === api_user) {\r\n-        if (showCasesArray[i].univers_id === universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n-              tabArray.push(result);\r\n-            }\r\n-            //else {\r\n-\r\n-            // }\r\n-          }\r\n-          else {\r\n-            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      if (tabArray) {\r\n-        tabArray.forEach((item, index) => {\r\n-\r\n-          if (item['picture'] !== null) {\r\n-            //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            //}\r\n-            xrow++;\r\n-          }\r\n-        })\r\n-      }\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche\r\n-\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.email} row={row} id={row.id} />\r\n-\r\n-\r\n-  )\r\n-\r\n-\r\n-\r\n-  const xhandleParentEvent= (idFromMap) => (\r\n-\r\n-    //if (currentIdFromMap) {\r\n-      // nothing to do?\r\n-      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    //}\r\n-    //else {\r\n-    //   setCurrentIdFromMap(idFromMap);\r\n-       //alert(\"STEP MAU TU 1.01\")\r\n-       console.log('idFromMap')\r\n-   //}\r\n-\r\n-  );\r\n-\r\n-  return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position={tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setImap}\r\n-          xhandleParentEvent={xhandleParentEvent()}>\r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1713962044215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setImap()}\r\n+          setImap = {this.setImap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713962069924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {this.setImap()}\r\n+          setImap = {props.setImap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713962083458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {props.setImap()}\r\n+          setImap = {props.setImap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713962109829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {props.setImap}\r\n+          setImap = {setImap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713962255895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,11 +284,11 @@\n        console.log('idFromMap')\r\n    //}\r\n \r\n   );\r\n-  function setImap(){\r\n-\r\n-    return\r\n+  const  setImap= (idFromMap)=>{\r\n+    let xi = 10;\r\n+    return ;\r\n   }\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1713962419382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,8 +163,14 @@\n       }\r\n     }\r\n     return zFound;\r\n   }\r\n+\r\n+  const  setImap = (idFromMap) => {\r\n+    let xi = 10;\r\n+    return true ;\r\n+  }\r\n+\r\n   const filterRepairMenOnly = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n@@ -284,12 +290,8 @@\n        console.log('idFromMap')\r\n    //}\r\n \r\n   );\r\n-  const  setImap= (idFromMap)=>{\r\n-    let xi = 10;\r\n-    return ;\r\n-  }\r\n \r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713962455234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,9 +330,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position={tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setImap()}\r\n+          setImap = {setImap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713962582705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,13 +164,15 @@\n     }\r\n     return zFound;\r\n   }\r\n \r\n-  const  setImap = (idFromMap) => {\r\n-    let xi = 10;\r\n-    return true ;\r\n+ \r\n+\r\n+  const handleClick = (idFromMap) => {\r\n+    const data = \"Données importantes NAV LIST\";\r\n+    //props.handleParentEvent(row, completeData);\r\n+    // render <button onClick={handleClick}>Cliquez-moi</button>\r\n   }\r\n-\r\n   const filterRepairMenOnly = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n@@ -328,9 +330,9 @@\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n-          position={tabArray} \r\n+          position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n           setImap = {setImap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n"
                },
                {
                    "date": 1713962596208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   }\r\n \r\n  \r\n \r\n-  const handleClick = (idFromMap) => {\r\n+  const setImpap = (idFromMap) => {\r\n     const data = \"Données importantes NAV LIST\";\r\n     //props.handleParentEvent(row, completeData);\r\n     // render <button onClick={handleClick}>Cliquez-moi</button>\r\n   }\r\n"
                },
                {
                    "date": 1713962603068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n   }\r\n \r\n  \r\n \r\n-  const setImpap = (idFromMap) => {\r\n+  const setImap = (idFromMap) => {\r\n     const data = \"Données importantes NAV LIST\";\r\n     //props.handleParentEvent(row, completeData);\r\n     // render <button onClick={handleClick}>Cliquez-moi</button>\r\n   }\r\n"
                },
                {
                    "date": 1713963023315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setImap}\r\n+          setImap = {setImap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713963148676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setImap()}\r\n+          setImap = {setCurrentIdFromMap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713963196085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setImap = {setCurrentIdFromMap}\r\n+          setCurrentIdFromMap = {setCurrentIdFromMap}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713963366664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap = {setCurrentIdFromMap}\r\n+          setCurrentIdFromMap = {setCurrentIdFromMap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713963392902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap = {setCurrentIdFromMap()}\r\n+          xsetCurrentIdFromMap = {setCurrentIdFromMap()}\r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713963650437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,11 +330,12 @@\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n+          setCurrentIdFromMap = {setCurrentIdFromMap()}\r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          xsetCurrentIdFromMap = {setCurrentIdFromMap()}\r\n+          \r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713963913764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,9 +330,9 @@\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n-          setCurrentIdFromMap = {setCurrentIdFromMap()}\r\n+          setCurrentIdFromMap = {setCurrentIdFromMap}\r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n           \r\n           xhandleParentEvent={xhandleParentEvent()}>\r\n"
                },
                {
                    "date": 1713964090570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,13 +330,12 @@\n             {})}\r\n         </Col>\r\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n-          setCurrentIdFromMap = {setCurrentIdFromMap}\r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          \r\n-          xhandleParentEvent={xhandleParentEvent()}>\r\n+          setCurrentIdFromMap = {setCurrentIdFromMap()}>\r\n+       \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n"
                },
                {
                    "date": 1713964199987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap = {setCurrentIdFromMap()}>\r\n+          setCurrentIdFromMap = {setCurrentIdFromMap}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713964256985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,22 +279,9 @@\n   )\r\n \r\n \r\n \r\n-  const xhandleParentEvent= (idFromMap) => (\r\n \r\n-    //if (currentIdFromMap) {\r\n-      // nothing to do?\r\n-      //console.log(\"STEP MAU 1.01 a refactorer\", idFromMap);\r\n-    //}\r\n-    //else {\r\n-    //   setCurrentIdFromMap(idFromMap);\r\n-       //alert(\"STEP MAU TU 1.01\")\r\n-       console.log('idFromMap')\r\n-   //}\r\n-\r\n-  );\r\n-\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -332,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          setCurrentIdFromMap = {setCurrentIdFromMap}>\r\n+          fsetCurrentIdFromMap = {setCurrentIdFromMap}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713964322745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {setCurrentIdFromMap}>\r\n+          fsetCurrentIdFromMap = {{setCurrentIdFromMap}}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713964342098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {{setCurrentIdFromMap}}>\r\n+          fsetCurrentIdFromMap = {{setCurrentIdFromMap()}}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713964362977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {{setCurrentIdFromMap()}}>\r\n+          fsetCurrentIdFromMap = {setCurrentIdFromMap()}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713964672665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,11 +277,11 @@\n \r\n \r\n   )\r\n \r\n+  const fshowcard = (id) => {\r\n \r\n-\r\n-\r\n+  }\r\n   return (\r\n     <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {setCurrentIdFromMap()}>\r\n+          fsetCurrentIdFromMap = {fshowcard()}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713965494803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {fshowcard()}>\r\n+          fsetCurrentIdFromMap = {setCurrentIdFromMap}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713965534916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {setCurrentIdFromMap}>\r\n+          fsetCurrentIdFromMap = {setCurrentIdFromMap()}>\r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713966548348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <Col lg={7} className=\"bloc-map-list\">\r\n           <NewMap \r\n           position = {tabArray} \r\n           displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          fsetCurrentIdFromMap = {setCurrentIdFromMap()}>\r\n+          \r\n        \r\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n"
                },
                {
                    "date": 1713966685374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,50 +281,7 @@\n   const fshowcard = (id) => {\r\n \r\n   }\r\n   return (\r\n-    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position = {tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          \r\n-       \r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n+    <></>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1713966764546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,8 +280,51 @@\n \r\n   const fshowcard = (id) => {\r\n \r\n   }\r\n-  return (\r\n-    <></>\r\n+  return (<></>);\r\n+  return(    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap \r\n+          position = {tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          >\r\n+       \r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1713966818768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,12 +276,9 @@\n       key={row.email} row={row} id={row.id} />\r\n \r\n \r\n   )\r\n-\r\n-  const fshowcard = (id) => {\r\n-\r\n-  }\r\n+ \r\n   return (<></>);\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1713966966796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,9 @@\n \r\n \r\n   )\r\n  \r\n-  return (<></>);\r\n+  return (  <NewMap tabArray={tabArray}></NewMap>);\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n           marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n"
                },
                {
                    "date": 1713967120920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,10 +276,11 @@\n       key={row.email} row={row} id={row.id} />\r\n \r\n \r\n   )\r\n- \r\n-  return (  <NewMap tabArray={tabArray}></NewMap>);\r\n+  \r\n+         \r\n+  return (  <NewMap  position = {tabArray}  displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>);\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n           marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n"
                },
                {
                    "date": 1713967148235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,13 @@\n \r\n   )\r\n   \r\n          \r\n-  return (  <NewMap  position = {tabArray}  displayUniverseUsersIsReady={displayUniverseUsersIsReady}></NewMap>);\r\n+  return (  <NewMap  \r\n+      position = {tabArray}  \r\n+      displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n+        \r\n+      </NewMap>);\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n           marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n"
                },
                {
                    "date": 1713967251092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,11 +279,12 @@\n   )\r\n   \r\n          \r\n   return (  <NewMap  \r\n+    tabArray ={tabArray}\r\n       position = {tabArray}  \r\n       displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n-        \r\n+\r\n       </NewMap>);\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n"
                },
                {
                    "date": 1713967260983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,9 @@\n   )\r\n   \r\n          \r\n   return (  <NewMap  \r\n-    tabArray ={tabArray}\r\n+    tabArray = {tabArray}\r\n       position = {tabArray}  \r\n       displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n \r\n       </NewMap>);\r\n"
                },
                {
                    "date": 1713967732507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,9 +281,9 @@\n          \r\n   return (  <NewMap  \r\n     tabArray = {tabArray}\r\n       position = {tabArray}  \r\n-      displayUniverseUsersIsReady={displayUniverseUsersIsReady}>\r\n+      displayUniverseUsersIsReady={true}>\r\n \r\n       </NewMap>);\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n"
                },
                {
                    "date": 1713971068847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n-\r\n+/*\r\n   const showData = () => {\r\n     let data = RepairManlatlng;\r\n     if (!displayUniverseUsersIsReady) {\r\n       return <></>\r\n@@ -276,9 +276,9 @@\n       key={row.email} row={row} id={row.id} />\r\n \r\n \r\n   )\r\n-  \r\n+  */\r\n          \r\n   return (  <NewMap  \r\n     tabArray = {tabArray}\r\n       position = {tabArray}  \r\n"
                },
                {
                    "date": 1713971092588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,8 +284,9 @@\n       position = {tabArray}  \r\n       displayUniverseUsersIsReady={true}>\r\n \r\n       </NewMap>);\r\n+      /*\r\n   return(    <Container style={{ marginTop: 50 }}>\r\n       <Row>\r\n         <Col style={{\r\n           marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n@@ -328,6 +329,6 @@\n           </NewMap>\r\n         </Col>\r\n       </Row>\r\n     </Container>\r\n-  );\r\n+  );*/\r\n }\r\n"
                },
                {
                    "date": 1714386507280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n         return (result);\r\n       },\r\n"
                },
                {
                    "date": 1714399111236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n"
                },
                {
                    "date": 1714405643629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n         var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n         filterRepairMenOnly(result);\r\n         setTaskUserWithShowCaseIsPending(false);\r\n"
                },
                {
                    "date": 1714406480030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=70`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1714406488687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=70`,\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1714406511163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=2&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1714406574135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=2&itemsPerPage=1000`,\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1714425383309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,356 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { Row, Col } from \"react-bootstrap\";\r\n+import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n+import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n+import { useParams, useHistory } from \"react-router-dom\";\r\n+import NewMap from \"../../components/front/newMap.js\";\r\n+\r\n+\r\n+export default function MapArtisansUnivers(props) {\r\n+\r\n+  const isOlder = true;\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n+\r\n+  const [isPending, setIsPending] = useState(0);\r\n+  const [tabArray, setxObjElem] = useState([]);\r\n+  const [repairManArr, setFilteredObject] = useState([]);\r\n+  const [showCasesArray, setShowCases] = useState([]);\r\n+  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n+  const perPageDesMob = isMobile ? 10 : 20;\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [repairMans, setRepairMans] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n+  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n+  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n+  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //retrieve user who have services (showcase contains the universe and the service)\r\n+    getUserWithShowCase();\r\n+    var result = getMyocUniverseRepairmen(universId);\r\n+    //getAnonymousUniversesDetail();\r\n+    console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+  \r\n+  const getMyocUniverseRepairmen = (universId) => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?universeid=`+universId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(\"STEP MYOC 1.1\",error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+  const getAnonymousUniversesDetail = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        //filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (true);\r\n+      },\r\n+      catch: (error) => {\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+\r\n+\r\n+\r\n+  const getUserWithShowCase = () => {\r\n+    if (taskUsersShowCaseIsPending) return false;\r\n+    setTaskUserWithShowCaseIsPending(true);\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const universId = slugIdUniverse.split(\"-\").pop();\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n+        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n+        filterRepairMenOnly(result);\r\n+        setTaskUserWithShowCaseIsPending(false);\r\n+        return (result);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  }\r\n+  const _onChildClick = (key, childProps) => {\r\n+\r\n+    let i = null;\r\n+    /*\r\n+    const benefit = benefits.length\r\n+      ? benefits.find((val, index) => {\r\n+        if (val.id === childProps.id) {\r\n+          i = index;\r\n+          return true;\r\n+        }\r\n+      })\r\n+      : { id: null };\r\n+    if (benefit.id) {\r\n+      setActiveBenefit(benefit);\r\n+      if (isTabletOrMobile) {\r\n+        refSlider.slickGoTo(i);\r\n+      }\r\n+    }\r\n+    */\r\n+  };\r\n+  // Push in an array the returns with repair man from the universe value to prepare display\r\n+  // \r\n+  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n+    let xOneRows = [];\r\n+    let xi = 0;\r\n+    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n+    Object.entries(showCasesArray).forEach(entry => {\r\n+      const [key, value] = entry;\r\n+      let oneUser = value;\r\n+      let showcases = oneUser['showcases'];\r\n+      if (showcases != null) {\r\n+        Object.entries(showcases).forEach(entry => {\r\n+          const [key, value] = entry;\r\n+          let xOneCol = [];\r\n+          let showcase = value;\r\n+          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n+          xOneCol[\"api_user\"] = oneUser['@id'];\r\n+          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n+          xOneCol[\"univers_name\"] = showcase['name'];\r\n+          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n+          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n+\r\n+          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n+            xOneRows[xi] = xOneCol;\r\n+            xi++;\r\n+          }\r\n+        });\r\n+      }\r\n+    });\r\n+    setxObjElem();\r\n+    return xOneRows;\r\n+  });\r\n+\r\n+  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n+    const universId = slugIdUniverse.split(\"-\").pop();\r\n+    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    let zFound = false;\r\n+    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n+    for (let i = 0; i < showCasesArray.length; i++) {\r\n+      if (showCasesArray[i].api_user === api_user) {\r\n+        if (showCasesArray[i].univers_id === universId) {\r\n+          zFound = true;\r\n+          break;\r\n+        }\r\n+      }\r\n+    }\r\n+    return zFound;\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const setImap = (idFromMap) => {\r\n+    const data = \"Données importantes NAV LIST\";\r\n+    //props.handleParentEvent(row, completeData);\r\n+    // render <button onClick={handleClick}>Cliquez-moi</button>\r\n+  }\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+\r\n+            // }\r\n+          }\r\n+          else {\r\n+            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+/*\r\n+  const showData = () => {\r\n+    let data = RepairManlatlng;\r\n+    if (!displayUniverseUsersIsReady) {\r\n+      return <></>\r\n+    }\r\n+    else {\r\n+      let xdata = [];\r\n+      let xrow = 0;\r\n+      if (tabArray) {\r\n+        tabArray.forEach((item, index) => {\r\n+\r\n+          if (item['picture'] !== null) {\r\n+            //if (xrow < 12) {\r\n+            xdata[xrow] = item;\r\n+            //}\r\n+            xrow++;\r\n+          }\r\n+        })\r\n+      }\r\n+      data = xdata;\r\n+    }\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée1\r\n+        </h3>\r\n+      );\r\n+    return (\r\n+      data.map(rowRenderArt)\r\n+    )\r\n+  };\r\n+  const rowRenderArt = (row) => (\r\n+    <ArtPrestationFiche\r\n+\r\n+      activeBenefit={activeBenefit}\r\n+      setActiveBenefit={setActiveBenefit}\r\n+      key={row.email} row={row} id={row.id} />\r\n+\r\n+\r\n+  )\r\n+  */\r\n+         \r\n+  return (  <NewMap  \r\n+    tabArray = {tabArray}\r\n+      position = {tabArray}  \r\n+      displayUniverseUsersIsReady={true}>\r\n+\r\n+      </NewMap>);\r\n+      /*\r\n+  return(    <Container style={{ marginTop: 50 }}>\r\n+      <Row>\r\n+        <Col style={{\r\n+          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+        }}>\r\n+          Découvrez nos artisans en France\r\n+        </Col>\r\n+      </Row>\r\n+      <Row className=\"bloc-lists-prstation-items\">\r\n+        <Col lg={5} className=\"content-lists-prstation-items\">\r\n+          {isDesktopOrLaptop && (\r\n+\r\n+            <div className=\"content-lists-prstation-items\">\r\n+              <div className=\"lists-prstation-items\" >\r\n+\r\n+                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+                  <p style={{\r\n+                    paddingRight: '5%', paddingLeft: '5%',\r\n+                    width: '90%', height: '100vh',\r\n+                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                    fontFamily: 'Poppins', fontWeight: '500',\r\n+                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                    fontSize: 12\r\n+                  }}>\r\n+                    {showData()}\r\n+                  </p>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          )}\r\n+          {isTabletOrMobile && (\r\n+            {})}\r\n+        </Col>\r\n+        <Col lg={7} className=\"bloc-map-list\">\r\n+          <NewMap \r\n+          position = {tabArray} \r\n+          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+          >\r\n+       \r\n+          </NewMap>\r\n+        </Col>\r\n+      </Row>\r\n+    </Container>\r\n+  );*/\r\n+}\r\n"
                },
                {
                    "date": 1714425612712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n         //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        return (result);\r\n+        return (arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(\"STEP MYOC 1.1\",error);\r\n       }\r\n@@ -353,338 +353,4 @@\n       </Row>\r\n     </Container>\r\n   );*/\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n-import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n-import { useParams, useHistory } from \"react-router-dom\";\r\n-import NewMap from \"../../components/front/newMap.js\";\r\n-\r\n-\r\n-export default function MapArtisansUnivers(props) {\r\n-\r\n-  const isOlder = true;\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [isPendingShowcase, setPendingShowCase] = useState(false);\r\n-\r\n-  const [isPending, setIsPending] = useState(0);\r\n-  const [tabArray, setxObjElem] = useState([]);\r\n-  const [repairManArr, setFilteredObject] = useState([]);\r\n-  const [showCasesArray, setShowCases] = useState([]);\r\n-  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n-  const perPageDesMob = isMobile ? 10 : 20;\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-  const [taskUsersShowCaseIsPending, setTaskUserWithShowCaseIsPending] = useState(false);\r\n-  const [displayUniverseUsersIsReady, setDisplayUniverseUsersIsReady] = useState(false);\r\n-  const [activeBenefit, setActiveBenefit] = useState({ id: null });\r\n-  const [currentIdFromMap, setCurrentIdFromMap] = useState({ id: null });\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //retrieve user who have services (showcase contains the universe and the service)\r\n-    var result = getUserWithShowCase();\r\n-    //getAnonymousUniversesDetail();\r\n-    //console.log(\"STEP 1 repairmenwithShowcase  \", result);\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-  const getAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-\r\n-\r\n-\r\n-  const getUserWithShowCase = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&page=1&itemsPerPage=1000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 1 :Success getUserWithShowCase  (univerID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, arrayObj);\r\n-        var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (result);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n-  const _onChildClick = (key, childProps) => {\r\n-\r\n-    let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n-  };\r\n-  // Push in an array the returns with repair man from the universe value to prepare display\r\n-  // \r\n-  const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n-    let xOneRows = [];\r\n-    let xi = 0;\r\n-    //console.log(\"STEP TU x08  repairmanFilterByUniverse showCasesArray \", showCasesArray)\r\n-    Object.entries(showCasesArray).forEach(entry => {\r\n-      const [key, value] = entry;\r\n-      let oneUser = value;\r\n-      let showcases = oneUser['showcases'];\r\n-      if (showcases != null) {\r\n-        Object.entries(showcases).forEach(entry => {\r\n-          const [key, value] = entry;\r\n-          let xOneCol = [];\r\n-          let showcase = value;\r\n-          xOneCol[\"user_id\"] = oneUser['@id'].split(\"/\").pop();\r\n-          xOneCol[\"api_user\"] = oneUser['@id'];\r\n-          xOneCol[\"user_lastName\"] = oneUser['lastName'];\r\n-          xOneCol[\"univers_name\"] = showcase['name'];\r\n-          xOneCol[\"univers_id\"] = showcase['@id'].split(\"/\").pop();\r\n-          let isAlreadyIn = xOneRows.includes(xOneCol[\"user_id\"]);\r\n-\r\n-          if (xOneCol[\"univers_id\"] == universId && !isAlreadyIn) {\r\n-            xOneRows[xi] = xOneCol;\r\n-            xi++;\r\n-          }\r\n-        });\r\n-      }\r\n-    });\r\n-    setxObjElem();\r\n-    return xOneRows;\r\n-  });\r\n-\r\n-  const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n-    const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n-    let zFound = false;\r\n-    //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n-    for (let i = 0; i < showCasesArray.length; i++) {\r\n-      if (showCasesArray[i].api_user === api_user) {\r\n-        if (showCasesArray[i].univers_id === universId) {\r\n-          zFound = true;\r\n-          break;\r\n-        }\r\n-      }\r\n-    }\r\n-    return zFound;\r\n-  }\r\n-\r\n- \r\n-\r\n-  const setImap = (idFromMap) => {\r\n-    const data = \"Données importantes NAV LIST\";\r\n-    //props.handleParentEvent(row, completeData);\r\n-    // render <button onClick={handleClick}>Cliquez-moi</button>\r\n-  }\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  TU: CHECK WARNING Contents of showCasesArray\", arrayObj);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n-              tabArray.push(result);\r\n-            }\r\n-            //else {\r\n-\r\n-            // }\r\n-          }\r\n-          else {\r\n-            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-/*\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      if (tabArray) {\r\n-        tabArray.forEach((item, index) => {\r\n-\r\n-          if (item['picture'] !== null) {\r\n-            //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            //}\r\n-            xrow++;\r\n-          }\r\n-        })\r\n-      }\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n-    )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche\r\n-\r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.email} row={row} id={row.id} />\r\n-\r\n-\r\n-  )\r\n-  */\r\n-         \r\n-  return (  <NewMap  \r\n-    tabArray = {tabArray}\r\n-      position = {tabArray}  \r\n-      displayUniverseUsersIsReady={true}>\r\n-\r\n-      </NewMap>);\r\n-      /*\r\n-  return(    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position = {tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          >\r\n-       \r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );*/\r\n-}\r\n"
                },
                {
                    "date": 1714427849219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,30 +47,66 @@\n \r\n   }, []);\r\n \r\n \r\n-  \r\n+\r\n   const getMyocUniverseRepairmen = (universId) => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n+ \r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?universeid=`+universId,\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?universeid=` + universId,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        return (arrayObj);\r\n+\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+              tabArray.push(result);\r\n+            }\r\n+            //else {\r\n+\r\n+            // }\r\n+          }\r\n+          else {\r\n+            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n+          }\r\n+\r\n+          var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+          return (arrayObj);\r\n+        }\r\n       },\r\n       catch: (error) => {\r\n-        console.log(\"STEP MYOC 1.1\",error);\r\n-      }\r\n-    });\r\n+          console.log(\"STEP MYOC 1.1\", error);\r\n+        }\r\n+      });\r\n   }\r\n \r\n-  const getAnonymousUniversesDetail = () => {\r\n+  const xgetAnonymousUniversesDetail = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n@@ -186,10 +222,10 @@\n     }\r\n     return zFound;\r\n   }\r\n \r\n- \r\n \r\n+\r\n   const setImap = (idFromMap) => {\r\n     const data = \"Données importantes NAV LIST\";\r\n     //props.handleParentEvent(row, completeData);\r\n     // render <button onClick={handleClick}>Cliquez-moi</button>\r\n@@ -243,114 +279,114 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n-/*\r\n-  const showData = () => {\r\n-    let data = RepairManlatlng;\r\n-    if (!displayUniverseUsersIsReady) {\r\n-      return <></>\r\n-    }\r\n-    else {\r\n-      let xdata = [];\r\n-      let xrow = 0;\r\n-      if (tabArray) {\r\n-        tabArray.forEach((item, index) => {\r\n-\r\n-          if (item['picture'] !== null) {\r\n-            //if (xrow < 12) {\r\n-            xdata[xrow] = item;\r\n-            //}\r\n-            xrow++;\r\n-          }\r\n-        })\r\n+  /*\r\n+    const showData = () => {\r\n+      let data = RepairManlatlng;\r\n+      if (!displayUniverseUsersIsReady) {\r\n+        return <></>\r\n       }\r\n-      data = xdata;\r\n-    }\r\n-    if (data === false)\r\n+      else {\r\n+        let xdata = [];\r\n+        let xrow = 0;\r\n+        if (tabArray) {\r\n+          tabArray.forEach((item, index) => {\r\n+  \r\n+            if (item['picture'] !== null) {\r\n+              //if (xrow < 12) {\r\n+              xdata[xrow] = item;\r\n+              //}\r\n+              xrow++;\r\n+            }\r\n+          })\r\n+        }\r\n+        data = xdata;\r\n+      }\r\n+      if (data === false)\r\n+        return (\r\n+          <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+            Chargement...\r\n+          </p>\r\n+        );\r\n+      if (data.length === 0)\r\n+        return (\r\n+          <h3\r\n+            style={{\r\n+              textAlign: \"center\",\r\n+              width: \"100%\",\r\n+              fontSize: \"22px\",\r\n+              fontWeight: \"600\",\r\n+              margin: \"40px 0\",\r\n+            }}\r\n+          >\r\n+            Aucune donnée1\r\n+          </h3>\r\n+        );\r\n       return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée1\r\n-        </h3>\r\n-      );\r\n-    return (\r\n-      data.map(rowRenderArt)\r\n+        data.map(rowRenderArt)\r\n+      )\r\n+    };\r\n+    const rowRenderArt = (row) => (\r\n+      <ArtPrestationFiche\r\n+  \r\n+        activeBenefit={activeBenefit}\r\n+        setActiveBenefit={setActiveBenefit}\r\n+        key={row.email} row={row} id={row.id} />\r\n+  \r\n+  \r\n     )\r\n-  };\r\n-  const rowRenderArt = (row) => (\r\n-    <ArtPrestationFiche\r\n+    */\r\n \r\n-      activeBenefit={activeBenefit}\r\n-      setActiveBenefit={setActiveBenefit}\r\n-      key={row.email} row={row} id={row.id} />\r\n+  return (<NewMap\r\n+    tabArray={tabArray}\r\n+    position={tabArray}\r\n+    displayUniverseUsersIsReady={true}>\r\n \r\n+  </NewMap>);\r\n+  /*\r\n+return(    <Container style={{ marginTop: 50 }}>\r\n+  <Row>\r\n+    <Col style={{\r\n+      marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n+      fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n+    }}>\r\n+      Découvrez nos artisans en France\r\n+    </Col>\r\n+  </Row>\r\n+  <Row className=\"bloc-lists-prstation-items\">\r\n+    <Col lg={5} className=\"content-lists-prstation-items\">\r\n+      {isDesktopOrLaptop && (\r\n \r\n-  )\r\n-  */\r\n-         \r\n-  return (  <NewMap  \r\n-    tabArray = {tabArray}\r\n-      position = {tabArray}  \r\n-      displayUniverseUsersIsReady={true}>\r\n+        <div className=\"content-lists-prstation-items\">\r\n+          <div className=\"lists-prstation-items\" >\r\n \r\n-      </NewMap>);\r\n-      /*\r\n-  return(    <Container style={{ marginTop: 50 }}>\r\n-      <Row>\r\n-        <Col style={{\r\n-          marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-          fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-        }}>\r\n-          Découvrez nos artisans en France\r\n-        </Col>\r\n-      </Row>\r\n-      <Row className=\"bloc-lists-prstation-items\">\r\n-        <Col lg={5} className=\"content-lists-prstation-items\">\r\n-          {isDesktopOrLaptop && (\r\n-\r\n-            <div className=\"content-lists-prstation-items\">\r\n-              <div className=\"lists-prstation-items\" >\r\n-\r\n-                <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-                  <p style={{\r\n-                    paddingRight: '5%', paddingLeft: '5%',\r\n-                    width: '90%', height: '100vh',\r\n-                    color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                    fontFamily: 'Poppins', fontWeight: '500',\r\n-                    boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                    fontSize: 12\r\n-                  }}>\r\n-                    {showData()}\r\n-                  </p>\r\n-                </div>\r\n-              </div>\r\n+            <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n+              <p style={{\r\n+                paddingRight: '5%', paddingLeft: '5%',\r\n+                width: '90%', height: '100vh',\r\n+                color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n+                fontFamily: 'Poppins', fontWeight: '500',\r\n+                boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n+                fontSize: 12\r\n+              }}>\r\n+                {showData()}\r\n+              </p>\r\n             </div>\r\n-          )}\r\n-          {isTabletOrMobile && (\r\n-            {})}\r\n-        </Col>\r\n-        <Col lg={7} className=\"bloc-map-list\">\r\n-          <NewMap \r\n-          position = {tabArray} \r\n-          displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-          >\r\n-       \r\n-          </NewMap>\r\n-        </Col>\r\n-      </Row>\r\n-    </Container>\r\n-  );*/\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+      {isTabletOrMobile && (\r\n+        {})}\r\n+    </Col>\r\n+    <Col lg={7} className=\"bloc-map-list\">\r\n+      <NewMap \r\n+      position = {tabArray} \r\n+      displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n+      >\r\n+   \r\n+      </NewMap>\r\n+    </Col>\r\n+  </Row>\r\n+</Container>\r\n+);*/\r\n }\r\n"
                },
                {
                    "date": 1714428138125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,21 +82,22 @@\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n             //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+            //if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n-            }\r\n+            //}\r\n             //else {\r\n \r\n             // }\r\n           }\r\n           else {\r\n             //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n+          console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n \r\n-          var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+          //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n           return (arrayObj);\r\n         }\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1714428487884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    setxObjElem();\r\n+    setxObjElem(tabArray);\r\n     return xOneRows;\r\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n"
                },
                {
                    "date": 1714428511908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    setxObjElem(tabArray);\r\n+    //setxObjElem(tabArray);\r\n     return xOneRows;\r\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n"
                },
                {
                    "date": 1714428824689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,9 +272,9 @@\n           else {\r\n             //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n         };\r\n-        setxObjElem(tabArray);\r\n+       // setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1714428913187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    getUserWithShowCase();\r\n+    //getUserWithShowCase();\r\n     var result = getMyocUniverseRepairmen(universId);\r\n     //getAnonymousUniversesDetail();\r\n     console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n"
                },
                {
                    "date": 1714429034273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,12 +39,11 @@\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    //getUserWithShowCase();\r\n-    var result = getMyocUniverseRepairmen(universId);\r\n-    //getAnonymousUniversesDetail();\r\n-    console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n+    getUserWithShowCase();\r\n+    //var result = getMyocUniverseRepairmen(universId);\r\n+    //console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n   }, []);\r\n \r\n \r\n"
                },
                {
                    "date": 1714429186486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    //setxObjElem(tabArray);\r\n+    setxObjElem(xOneRows);\r\n     return xOneRows;\r\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n"
                },
                {
                    "date": 1714429215939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    setxObjElem(xOneRows);\r\n+    //setxObjElem(xOneRows);\r\n     return xOneRows;\r\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n"
                },
                {
                    "date": 1714429519744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    getUserWithShowCase();\r\n-    //var result = getMyocUniverseRepairmen(universId);\r\n+    //getUserWithShowCase();\r\n+    var result = getMyocUniverseRepairmen(universId);\r\n     //console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n   }, []);\r\n \r\n@@ -201,9 +201,9 @@\n           }\r\n         });\r\n       }\r\n     });\r\n-    //setxObjElem(xOneRows);\r\n+      //setxObjElem(xOneRows);\r\n     return xOneRows;\r\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n"
                },
                {
                    "date": 1714429760637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,13 +92,14 @@\n           }\r\n           else {\r\n             //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n-          console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n+         \r\n+        }\r\n+        console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n \r\n-          //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-          return (arrayObj);\r\n-        }\r\n+        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n+        return (arrayObj);\r\n       },\r\n       catch: (error) => {\r\n           console.log(\"STEP MYOC 1.1\", error);\r\n         }\r\n"
                },
                {
                    "date": 1714430226762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-    //getUserWithShowCase();\r\n-    var result = getMyocUniverseRepairmen(universId);\r\n+     getUserWithShowCase();\r\n+    // new version- getMyocUniverseRepairmen(universId);\r\n     //console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1714430282889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,10 @@\n   useEffect(() => {\r\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n-     getUserWithShowCase();\r\n-    // new version- getMyocUniverseRepairmen(universId);\r\n+    // getUserWithShowCase();\r\n+    getMyocUniverseRepairmen(universId);\r\n     //console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1714430402390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,16 +80,11 @@\n               if (hasKey) {\r\n                 result[userFieldMap[key]] = value;\r\n               }\r\n             });\r\n-            //console.log(\"STEP 2.3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-            //if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n+           \r\n               tabArray.push(result);\r\n-            //}\r\n-            //else {\r\n-\r\n-            // }\r\n+             \r\n           }\r\n           else {\r\n             //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n@@ -97,9 +92,9 @@\n         }\r\n         console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n \r\n         //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        return (arrayObj);\r\n+        //return (arrayObj);\r\n       },\r\n       catch: (error) => {\r\n           console.log(\"STEP MYOC 1.1\", error);\r\n         }\r\n"
                },
                {
                    "date": 1714430520484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,31 +100,9 @@\n         }\r\n       });\r\n   }\r\n \r\n-  const xgetAnonymousUniversesDetail = () => {\r\n-    if (taskUsersShowCaseIsPending) return false;\r\n-    setTaskUserWithShowCaseIsPending(true);\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.UNIVERSES_DETAIL}?order[enterprise]=asc&page=1&itemsPerPage=10000`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const universId = slugIdUniverse.split(\"-\").pop();\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 0 :Success getAnonymousUniversesDetail\", universId, arrayObj);\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //console.log(\"STEP 1.1 :filter UnniverID would be the good one) RETRIEVE USER/UNIVERs WITH SHOWCASE\", universId, result);\r\n-        //filterRepairMenOnly(result);\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        return (true);\r\n-      },\r\n-      catch: (error) => {\r\n-        setTaskUserWithShowCaseIsPending(false);\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  }\r\n+  \r\n \r\n \r\n \r\n   const getUserWithShowCase = () => {\r\n@@ -151,24 +129,9 @@\n   }\r\n   const _onChildClick = (key, childProps) => {\r\n \r\n     let i = null;\r\n-    /*\r\n-    const benefit = benefits.length\r\n-      ? benefits.find((val, index) => {\r\n-        if (val.id === childProps.id) {\r\n-          i = index;\r\n-          return true;\r\n-        }\r\n-      })\r\n-      : { id: null };\r\n-    if (benefit.id) {\r\n-      setActiveBenefit(benefit);\r\n-      if (isTabletOrMobile) {\r\n-        refSlider.slickGoTo(i);\r\n-      }\r\n-    }\r\n-    */\r\n+     \r\n   };\r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n"
                },
                {
                    "date": 1714431466280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n   }, []);\r\n \r\n \r\n \r\n-  const getMyocUniverseRepairmen = (universId) => {\r\n+  const getMyocUniverseRepairmen = (universeId) => {\r\n  \r\n     let userFieldMap = {\r\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n@@ -60,9 +60,9 @@\n     }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?universeid=` + universId,\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?${universeId ? \"/\" + universeId : \"\"  }`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1714431705798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       address: \"address\", roles: \"roles\",\r\n     }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n-      method: \"get\",\r\n+      method: \"POST\",\r\n       url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?${universeId ? \"/\" + universeId : \"\"  }`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1714431892738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       address: \"address\", roles: \"roles\",\r\n     }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n-      method: \"POST\",\r\n+      method: \"post\",\r\n       url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?${universeId ? \"/\" + universeId : \"\"  }`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n"
                },
                {
                    "date": 1714434759531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"post\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?${universeId ? \"/\" + universeId : \"\"  }`,\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE_REPAIRMEN}?universId=${universeId}`,\r\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n"
                },
                {
                    "date": 1714784354655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n+        //console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n \r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n@@ -89,9 +89,9 @@\n             //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n          \r\n         }\r\n-        console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n+        //console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n \r\n         //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n         //return (arrayObj);\r\n       },\r\n"
                },
                {
                    "date": 1714996720410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,8 +298,9 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n+    isDiscoverArtRoute={true} >\r\n     displayUniverseUsersIsReady={true}>\r\n \r\n   </NewMap>);\r\n   /*\r\n"
                },
                {
                    "date": 1714996738853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,9 +298,9 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n-    isDiscoverArtRoute={true} >\r\n+    isDiscoverArtRoute={true}\r\n     displayUniverseUsersIsReady={true}>\r\n \r\n   </NewMap>);\r\n   /*\r\n"
                },
                {
                    "date": 1714996801550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,10 +298,11 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n+ \r\n+    displayUniverseUsersIsReady={true}>\r\n     isDiscoverArtRoute={true}\r\n-    displayUniverseUsersIsReady={true}>\r\n \r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1714996818889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n  \r\n-    displayUniverseUsersIsReady={true}>\r\n+    displayUniverseUsersIsReady={true}\r\n     isDiscoverArtRoute={true}\r\n \r\n   </NewMap>);\r\n   /*\r\n"
                },
                {
                    "date": 1714996856119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,12 +298,10 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n- \r\n-    displayUniverseUsersIsReady={true}\r\n-    isDiscoverArtRoute={true}\r\n-\r\n+    displayUniverseUsersIsReady={true}>\r\n+isDiscoverArtRoute={false}\r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n   <Row>\r\n"
                },
                {
                    "date": 1714996867357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n     displayUniverseUsersIsReady={true}>\r\n-isDiscoverArtRoute={false}\r\n+isDiscoverArtRoute={true}\r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n   <Row>\r\n"
                },
                {
                    "date": 1714996878243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,9 +298,9 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n-    displayUniverseUsersIsReady={true}>\r\n+    displayUniverseUsersIsReady={true}\r\n isDiscoverArtRoute={true}\r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1714998039041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n     displayUniverseUsersIsReady={true}\r\n-isDiscoverArtRoute={true}\r\n+ >\r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n   <Row>\r\n"
                },
                {
                    "date": 1715347936755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     // getUserWithShowCase();\r\n-    getMyocUniverseRepairmen(universId);\r\n+   // getMyocUniverseRepairmen(universId);\r\n     //console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1715347969954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n     //retrieve user who have services (showcase contains the universe and the service)\r\n     // getUserWithShowCase();\r\n-   // getMyocUniverseRepairmen(universId);\r\n+    getMyocUniverseRepairmen(universId);\r\n     //console.log(\"STEP 1  getMyocUniverseRepairmen  \", result);\r\n \r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1715348118806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,9 +298,9 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n-    displayUniverseUsersIsReady={true}\r\n+    displayUniverseUsersIsReady={props.isDisplayListeProduit.}\r\n  >\r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1715774799609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import React, { useEffect, useState } from \"react\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { Row, Col } from \"react-bootstrap\";\r\n-import { ROLES, PREFIX_BACKEND } from \"./../../vars.js\";\r\n+import { ROLES, PREFIX_BACKEND } from \"../../vars.js\";\r\n import \"nouislider/distribute/nouislider.css\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n+import endPoints from \"../../config/endPoints.js\";\r\n+import connector from \"../../connector.js\";\r\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n@@ -298,9 +298,9 @@\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n-    displayUniverseUsersIsReady={props.isDisplayListeProduit.}\r\n+    displayUniverseUsersIsReady={props.isDisplayListeProduit}\r\n  >\r\n   </NewMap>);\r\n   /*\r\n return(    <Container style={{ marginTop: 50 }}>\r\n"
                },
                {
                    "date": 1715774899574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,11 +222,8 @@\n             if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n               //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n-            //else {\r\n-\r\n-            // }\r\n           }\r\n           else {\r\n             //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n           }\r\n@@ -238,114 +235,14 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n-  /*\r\n-    const showData = () => {\r\n-      let data = RepairManlatlng;\r\n-      if (!displayUniverseUsersIsReady) {\r\n-        return <></>\r\n-      }\r\n-      else {\r\n-        let xdata = [];\r\n-        let xrow = 0;\r\n-        if (tabArray) {\r\n-          tabArray.forEach((item, index) => {\r\n-  \r\n-            if (item['picture'] !== null) {\r\n-              //if (xrow < 12) {\r\n-              xdata[xrow] = item;\r\n-              //}\r\n-              xrow++;\r\n-            }\r\n-          })\r\n-        }\r\n-        data = xdata;\r\n-      }\r\n-      if (data === false)\r\n-        return (\r\n-          <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-            Chargement...\r\n-          </p>\r\n-        );\r\n-      if (data.length === 0)\r\n-        return (\r\n-          <h3\r\n-            style={{\r\n-              textAlign: \"center\",\r\n-              width: \"100%\",\r\n-              fontSize: \"22px\",\r\n-              fontWeight: \"600\",\r\n-              margin: \"40px 0\",\r\n-            }}\r\n-          >\r\n-            Aucune donnée1\r\n-          </h3>\r\n-        );\r\n-      return (\r\n-        data.map(rowRenderArt)\r\n-      )\r\n-    };\r\n-    const rowRenderArt = (row) => (\r\n-      <ArtPrestationFiche\r\n-  \r\n-        activeBenefit={activeBenefit}\r\n-        setActiveBenefit={setActiveBenefit}\r\n-        key={row.email} row={row} id={row.id} />\r\n-  \r\n-  \r\n-    )\r\n-    */\r\n+ \r\n \r\n   return (<NewMap\r\n     tabArray={tabArray}\r\n     position={tabArray}\r\n     displayUniverseUsersIsReady={props.isDisplayListeProduit}\r\n  >\r\n   </NewMap>);\r\n-  /*\r\n-return(    <Container style={{ marginTop: 50 }}>\r\n-  <Row>\r\n-    <Col style={{\r\n-      marginBottom: '3%', marginTop: '0%', width: '100%', height: '100%', color: '#465A61', fontSize: 40,\r\n-      fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word'\r\n-    }}>\r\n-      Découvrez nos artisans en France\r\n-    </Col>\r\n-  </Row>\r\n-  <Row className=\"bloc-lists-prstation-items\">\r\n-    <Col lg={5} className=\"content-lists-prstation-items\">\r\n-      {isDesktopOrLaptop && (\r\n-\r\n-        <div className=\"content-lists-prstation-items\">\r\n-          <div className=\"lists-prstation-items\" >\r\n-\r\n-            <div style={{ textAlign: \"left\", width: \"100%\", height: 400, color: '#444444', fontSize: 10, fontFamily: 'Poppins', fontWeight: '500' }}>\r\n-              <p style={{\r\n-                paddingRight: '5%', paddingLeft: '5%',\r\n-                width: '90%', height: '100vh',\r\n-                color: 'rgb(68, 68, 68)', overflow: 'scroll', fontSize: 8,\r\n-                fontFamily: 'Poppins', fontWeight: '500',\r\n-                boxShadow: \"2px 5px 5px rgb(68, 68, 68)\",\r\n-                fontSize: 12\r\n-              }}>\r\n-                {showData()}\r\n-              </p>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-      {isTabletOrMobile && (\r\n-        {})}\r\n-    </Col>\r\n-    <Col lg={7} className=\"bloc-map-list\">\r\n-      <NewMap \r\n-      position = {tabArray} \r\n-      displayUniverseUsersIsReady={displayUniverseUsersIsReady}\r\n-      >\r\n-   \r\n-      </NewMap>\r\n-    </Col>\r\n-  </Row>\r\n-</Container>\r\n-);*/\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1715774911512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,11 +223,9 @@\n               //console.log(\"STEP 2.31  user is A REPAIRMAN for this universe\", obj);\r\n               tabArray.push(result);\r\n             }\r\n           }\r\n-          else {\r\n-            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n+           \r\n         };\r\n        // setxObjElem(tabArray);\r\n         setDisplayUniverseUsersIsReady(true);\r\n       },\r\n"
                },
                {
                    "date": 1715774924831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,13 +126,9 @@\n         console.log(error);\r\n       }\r\n     });\r\n   }\r\n-  const _onChildClick = (key, childProps) => {\r\n-\r\n-    let i = null;\r\n-     \r\n-  };\r\n+ \r\n   // Push in an array the returns with repair man from the universe value to prepare display\r\n   // \r\n   const repairmanFilterByUniverse = ((universId, showCasesArray) => {\r\n     let xOneRows = [];\r\n"
                },
                {
                    "date": 1715774942446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,28 +84,21 @@\n            \r\n               tabArray.push(result);\r\n              \r\n           }\r\n-          else {\r\n-            //console.log(\"STEP 2.32  user is not a repairman for this universe\", obj);\r\n-          }\r\n+        \r\n          \r\n         }\r\n-        //console.log(\"STEP MYOC 1.3 :Success getMyocUniverseRepairmen \",tabArray);\r\n-\r\n-        //var result = repairmanFilterByUniverse(universId, arrayObj);\r\n-        //return (arrayObj);\r\n+ \r\n       },\r\n       catch: (error) => {\r\n           console.log(\"STEP MYOC 1.1\", error);\r\n         }\r\n       });\r\n   }\r\n \r\n-  \r\n \r\n \r\n-\r\n   const getUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1716462090185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n"
                },
                {
                    "date": 1716462480721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n"
                },
                {
                    "date": 1716803665795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,10 +155,10 @@\n   });\r\n \r\n   const userIsInThisUniverse = (api_user, showCasesArray) => {\r\n     const universId = slugIdUniverse.split(\"-\").pop();\r\n-    //console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n-    //console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n+    console.log(\"STEP 4 1 LOOK IF SHOWCASE EMPTY: ERROR\", showCasesArray);\r\n+    console.log(\"STEP 4 2 CHECK PARAM userId UniversId\", api_user, universId);\r\n     let zFound = false;\r\n     //console.log(\"STEP 4 3 userIsInThisUniverse : len\", showCasesArray.length);\r\n     for (let i = 0; i < showCasesArray.length; i++) {\r\n       if (showCasesArray[i].api_user === api_user) {\r\n"
                },
                {
                    "date": 1717138310411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import { RepairManlatlng } from '../../components/front/repairManPositions.js'\r\n import ArtPrestationFiche from \"../../components/front/artPrestationFiche.js\";\r\n import { useParams, useHistory } from \"react-router-dom\";\r\n import NewMap from \"../../components/front/newMap.js\";\r\n+import { element } from \"prop-types\";\r\n \r\n \r\n export default function MapArtisansUnivers(props) {\r\n \r\n@@ -197,8 +198,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          console.log('MAU',element); \r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1717138375104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          console.log('MAU',element); \r\n+          console.log('Step MAU 01',element); \r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1717139048014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const universId = slugIdUniverse.split(\"-\").pop();\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        //console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n+        console.log(\"STEP MYOC 1.1 :Success getMyocUniverseRepairmen \", universId, arrayObj);\r\n \r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n@@ -198,9 +198,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          console.log('Step MAU 01',element); \r\n+          \r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1717140587010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n       city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n       description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n-      address: \"address\", roles: \"roles\",\r\n+      address: \"address\", roles: \"roles\", boutiqueFermee: \"boutiqueFermee\",isRegistrationCompleted: \"isRegistrationCompleted\"\r\n     }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"post\",\r\n@@ -72,9 +72,11 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n+          const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n               let hasKey = userFieldMap.hasOwnProperty(key);\r\n"
                },
                {
                    "date": 1717140993420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,11 +72,11 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '0';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  isboutiqueFermee && isRegistrationCompleted);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n               let hasKey = userFieldMap.hasOwnProperty(key);\r\n"
                },
                {
                    "date": 1717141064473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '0';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] != '0';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141082580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] != '0';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '0';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141222453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '0';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141237511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] == '1';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141267750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] == '1';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141284762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '0';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141498063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '0';\r\n+          const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n"
                },
                {
                    "date": 1717141626670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n           var result = [];\r\n           let obj = arrayObj[i];\r\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n-          const isRegistrationCompleted = obj['isRegistrationCompleted'] === 1;\r\n+          const isRegistrationCompleted = obj['isRegistrationCompleted'];\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n"
                },
                {
                    "date": 1717143265125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n   }\r\n \r\n \r\n \r\n-  const getUserWithShowCase = () => {\r\n+  const xgetUserWithShowCase = () => {\r\n     if (taskUsersShowCaseIsPending) return false;\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n"
                },
                {
                    "date": 1717160862989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'];\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n+          \r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n               let hasKey = userFieldMap.hasOwnProperty(key);\r\n"
                },
                {
                    "date": 1717162865258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n           const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n           const isboutiqueFermee = obj[\"boutiqueFermee\"] === '1';\r\n           const isRegistrationCompleted = obj['isRegistrationCompleted'];\r\n           let toKeep = (found == ROLES.ROLE_REPAIRMAN &&  !isboutiqueFermee && isRegistrationCompleted);\r\n-          \r\n+              \r\n           if (toKeep) {\r\n             Object.entries(obj).forEach(entry => {\r\n               const [key, value] = entry;\r\n               let hasKey = userFieldMap.hasOwnProperty(key);\r\n"
                },
                {
                    "date": 1717490720390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n       email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n       city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\", bonusreparation: \"bonusreparation\",reparacteur: \"reparacteur\",\r\n       address: \"address\", roles: \"roles\", boutiqueFermee: \"boutiqueFermee\",isRegistrationCompleted: \"isRegistrationCompleted\"\r\n     }\r\n     setTaskUserWithShowCaseIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1718095002346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n   const perPageDesMob = isMobile ? 10 : 20;\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [repairMans, setRepairMans] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({ query: \"(min-width: 994px)\", });\r\n   const [click, setClick] = useState(false);\r\n   const toggleFilter = () => setClick(!click);\r\n   const toogleCloseFilter = () => setClick(false);\r\n"
                }
            ],
            "date": 1706706518196,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport {\r\n  BackStyle,\r\n  BlocFilterStyle,\r\n  ContentPageStyle,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\nimport Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\nimport Base from \"../../theme/front/base\";\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport { RangePrice } from \"../../assets/styles/componentStyles\";\r\nimport ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\nimport endPoints from \"../../config/endPoints\";\r\nimport connector from \"../../connector\";\r\nimport InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\nimport { clearErrors } from \"../../helper/form\";\r\nimport SelectCat from \"../../components/categories/selectCat\";\r\nimport { sortObjects } from \"../../helper/functions\";\r\n\r\nexport default function MapArtisansUnivers() {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const [click, setClick] = useState(false);\r\n  const toggleFilter = () => setClick(!click);\r\n  const toogleCloseFilter = () => setClick(false);\r\n\r\n  useEffect(() => {\r\n    if (click) {\r\n      document.body.classList.add(\"menu-is-show\");\r\n    } else {\r\n      document.body.classList.remove(\"menu-is-show\");\r\n    }\r\n  }, [click]);\r\n\r\n  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  const { slugIdUniverse, slugIdService } = useParams();\r\n  console.log(slugIdUniverse);\r\n  const [service, setService] = useState(false);\r\n  const [benefits, setBenefits] = useState([]);\r\n  const [activeUniverse, setActiveUniverse] = useState(false);\r\n  const universe = useSelector((state) => state.universe);\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n  const [filter, setFilter] = useState({\r\n    deliveryModeTypes: {\r\n      label: \"Mode de délivrance\",\r\n      name: \"deliveryModeTypes\",\r\n      placeholder: \"Tous\",\r\n      options: [],\r\n      value: [],\r\n      hideOptions: true,\r\n    },\r\n    codePostal: {\r\n      name: \"codePostal\",\r\n      type: \"text\",\r\n      label: \"Où\",\r\n      placeholder: \"Saisir un code postal\",\r\n      value:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultCodePostal\r\n          : \"\",\r\n      latitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLatitude\r\n          : null,\r\n      longitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLongitude\r\n          : null,\r\n      error: false,\r\n      required: true,\r\n      infoBulle: false,\r\n    },\r\n    price: {\r\n      value: [-1, -1],\r\n    },\r\n    sortBy: {\r\n      label: \"Trier par: \",\r\n      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n      options: [\r\n        { value: \"distance_asc\", label: \"Distance\" },\r\n        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n        { value: \"price_asc\", label: \"Prix croissant\" },\r\n        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n      ],\r\n      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n    },\r\n  });\r\n  const dataCrumbs = [\r\n    { name: \"Accueil\", path: \"/\" },\r\n    {\r\n      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n      path: `/univers/${slugIdUniverse}`,\r\n    },\r\n    { name: service ? service.name : \"\", path: \"/\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (universe.allUniverses) {\r\n      const id = slugIdUniverse.split(\"-\").pop();\r\n      if (id) {\r\n        const universeData = universe.allUniverses.find(\r\n          (u) => parseInt(u.id) === parseInt(id)\r\n        );\r\n        if (universeData) {\r\n          setActiveUniverse(universeData);\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [universe]);\r\n\r\n  useEffect(() => {\r\n    getDeliveryModeTypes();\r\n    getService();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isPendingLatLng && service) {\r\n      getBenefits(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n\r\n  const getDeliveryModeTypes = () => {\r\n    connector({\r\n      method: \"get\",\r\n      url: endPoints.DELIVERY_MODE_TYPES,\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"hydra:member\"] || [];\r\n        const cpFilter = { ...filter };\r\n        let options = [];\r\n        for (let i = 0; i < arrayObj.length; i++) {\r\n          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n        }\r\n        cpFilter.deliveryModeTypes.options = options;\r\n        setFilter(cpFilter);\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  };\r\n\r\n  const getService = () => {\r\n    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n    if (idService) {\r\n      let condition = ``;\r\n      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n      }\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n        success: (response) => {\r\n          setService(response.data || {});\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const getBenefits = (refresh = false) => {\r\n    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n    if (idService) {\r\n      if (!placeIsSelected) {\r\n        msgErrors({\r\n          codePostal: true,\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (isTabletOrMobile) {\r\n        setClick(false);\r\n      }\r\n\r\n      if (!isPending) {\r\n        setIsPending(true);\r\n        setFilter(clearErrors(filter));\r\n\r\n        const sortBy = filter.sortBy.value.split(\"_\");\r\n\r\n        let condition = ``;\r\n        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n        }\r\n        if (sortBy[0] === \"distance\") {\r\n          condition += `&order[distance]=asc`;\r\n        } else if (sortBy[0] === \"price\") {\r\n          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n        }else if (sortBy[0] === \"rating\") {\r\n          condition += `&order[rating]=${sortBy[1]}`;\r\n        }\r\n        if (filter.deliveryModeTypes.value.length) {\r\n          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n            const row = filter.deliveryModeTypes.value[i];\r\n            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n          }\r\n        }\r\n        if (\r\n          filter.price.value[0] > -1 &&\r\n          filter.price.value[1] > -1 &&\r\n          (filter.price.value[0] !== service.minPrice ||\r\n            filter.price.value[1] !== service.maxPrice)\r\n        ) {\r\n          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n        }\r\n\r\n        const cpParamsUrlService = `${condition}`;\r\n\r\n        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n        if (refresh || paramsUrlService) {\r\n          setParamsUrlService(cpParamsUrlService);\r\n          connector({\r\n            method: \"get\",\r\n            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n            success: (response) => {\r\n              let results = response.data[\"hydra:member\"] || [];\r\n              //todo list est voir le min et max\r\n              if (service) {\r\n                const cpService = { ...service };\r\n                let prices = [];\r\n                for (var i = 0; i < results.length; i++) {\r\n                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n                    const obj = results[i].deliveryModes[j];\r\n                    if (obj.price && parseFloat(obj.price) > 0) {\r\n                      prices.push(parseFloat(obj.price));\r\n                    }\r\n                  }\r\n                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n                }\r\n                if (prices.length) {\r\n                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n                  setService(cpService);\r\n                }else{\r\n                  cpService.minPrice = 0;\r\n                  cpService.maxPrice = 0;\r\n                  setService(cpService);\r\n                }\r\n              }\r\n              if (sortBy[0] === \"price\") {\r\n                results = sortObjects(results,'minPrice',sortBy[1]);\r\n              }else if(sortBy[0] === \"rating\"){\r\n                results = sortObjects(results,'rating',sortBy[1]);\r\n              }\r\n              setBenefits(results);\r\n              setIsPending(false);\r\n            },\r\n            catch: (error) => {\r\n              console.log(error);\r\n              setIsPending(false);\r\n            },\r\n          });\r\n        } else {\r\n          setIsPending(false);\r\n        }\r\n      }\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const to = (value, index) => {\r\n    value = Math.round(value);\r\n    const cpFilter = { ...filter };\r\n    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n      cpFilter.price.value[index] = value;\r\n      setFilter(cpFilter);\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const from = (value) => {\r\n    return Number(value);\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpFilter = { ...filter };\r\n    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n    if (e.codePostal !== undefined) {\r\n      cpFilter.codePostal.error = e.codePostal;\r\n      cpFilter.codePostal.infoBulle = e.codePostal;\r\n    }\r\n    setFilter(cpFilter);\r\n  };\r\n\r\n  return (\r\n\r\n        <Container>\r\n          <BlocFilterStyle open={click}>\r\n            {isTabletOrMobile && (\r\n              <button\r\n                className=\"menu-burger is-opened\"\r\n                onClick={toogleCloseFilter}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            )}\r\n            <div className=\"item-filter\">\r\n              <RangePrice>\r\n                <label>Prix</label>\r\n                {service &&\r\n                service.minPrice &&\r\n                service.maxPrice &&\r\n                service.minPrice != service.maxPrice ? (\r\n                  <Nouislider\r\n                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n                    start={[service.minPrice, service.maxPrice]}\r\n                    connect={true}\r\n                    behaviour=\"tap\"\r\n                    step={1}\r\n                    tooltips={true}\r\n                    format={{ to, from }}\r\n                  />\r\n                ) : (\r\n                  \"Sur devis\"\r\n                )}\r\n              </RangePrice>\r\n            </div>\r\n            <div className=\"item-filter\">\r\n              <SelectCat\r\n                {...filter.deliveryModeTypes}\r\n                onChangeCallback={(response) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.deliveryModeTypes.value = response;\r\n                  setFilter(cpFilter);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item-filter\">\r\n              <InputAutoComplete\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n                placeIsSelected={placeIsSelected}\r\n                setPlaceIsSelected={setPlaceIsSelected}\r\n                isPendingLatLng={isPendingLatLng}\r\n                setIsPendingLatLng={setIsPendingLatLng}\r\n              />\r\n            </div>\r\n            <div className=\"btn-filter-banner\">\r\n              <button\r\n                className=\"btn-search-filter\"\r\n                onClick={(e) => {\r\n                  getBenefits(false);\r\n                }}\r\n              >\r\n                {isDesktopOrLaptop && (\r\n                  <>\r\n                    <SearchIcon />\r\n                  </>\r\n                )}\r\n                {isTabletOrMobile && <>Recherche</>}\r\n              </button>\r\n            </div>\r\n          </BlocFilterStyle>\r\n          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n            <BackIcon />\r\n            <span>Retour à l'univers</span>\r\n          </BackStyle>\r\n          {isTabletOrMobile && (\r\n            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n              <SearchIcon /> Rechercher une prestation\r\n            </div>\r\n          )}\r\n          <ListePrestationFiche\r\n            service={service}\r\n            benefits={benefits}\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n            isPending={isPending}\r\n          />\r\n        </Container>\r\n \r\n  );\r\n}\r\n"
        }
    ]
}