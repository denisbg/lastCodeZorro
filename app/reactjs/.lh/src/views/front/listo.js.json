{
    "sourceFile": "src/views/front/listo.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1708356612412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708356627216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,10 @@\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n export default function Listo(id\r\n ) {\r\n-  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n-  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n-  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n \r\n+\r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n"
                },
                {
                    "date": 1708356729210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,138 +24,11 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function Listo(id\r\n-) {\r\n+export default function Listo( universId)\r\n+{\r\n \r\n+  return <>OK MAN</>\r\n \r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n-  const [universeDescription, setuniverseDescription] = useState('');\r\n-  var universeId = slugIdUniverse.split(\"-\").pop();\r\n-  const getUniverse = () => {\r\n \r\n-    const universeId = slugIdUniverse.split(\"-\").pop();\r\n-    if (universeId) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-\r\n-          if (response.data?.name) {\r\n-            setuniverseTitle(response.data.name);\r\n-            setuniverseDescription(response.data.description);\r\n-            //\r\n-            //if (response.data.name === 'Cordonnerie') {\r\n-            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n-            //}\r\n-            //console.log('details Univers', response.data);\r\n-          }\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-  \r\n-  useEffect(() => {\r\n-    getUniverse();\r\n-  }, []);\r\n-\r\n-  const handleProductListClick = () => {\r\n-    setDisplayListeProduits(!isDisplayListeProduits);\r\n-    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n-  };\r\n-\r\n-  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n-    <div style={{\r\n-      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n-      gap: 24, display: 'inline-flex'\r\n-    }}>\r\n-      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        {universeTitle}\r\n-      </div>\r\n-      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        {universeDescription}</div>\r\n-    </div>\r\n-    <div>\r\n-      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n-        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n-      </div>\r\n-    </div>\r\n-\r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n-    </Row>\r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n-    </Row>\r\n-\r\n-    <Row>\r\n-      <Col>\r\n-        <Commentcamarche></Commentcamarche>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row style={{ marginbottom: 50 }}>\r\n-      <Col>\r\n-        <MapArtisansUnivers>\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n-        </MapArtisansUnivers>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row>\r\n-      <Col>\r\n-        <AnatomieUniverse\r\n-          title={universeTitle}\r\n-          image={anatomieCord}\r\n-        ></AnatomieUniverse>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row>\r\n-      <Col>\r\n-        <div>\r\n-          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n-            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n-          </div>\r\n-        </div>\r\n-      </Col>\r\n-    </Row>\r\n-    <PrestationsFavorites></PrestationsFavorites>\r\n-    <Row >\r\n-      <Col >\r\n-        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n-                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n-      </Col>\r\n-    </Row>\r\n-\r\n-  </Container>\r\n-\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708356812149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n }\r\n export default function Listo( universId)\r\n {\r\n \r\n-  return <>OK MAN</>\r\n+  return <>OK MAN {universId}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708356829542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,8 @@\n }\r\n export default function Listo( universId)\r\n {\r\n \r\n-  return <>OK MAN {universId}</>\r\n+  return <>OK MAN {{universId}}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708356891288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,12 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function Listo( universId)\r\n+export default function Listo( id)\r\n {\r\n+  console.log(\"listo\",id )\r\n \r\n-  return <>OK MAN {{universId}}</>\r\n+  return <>OK MAN </>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708356935878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n export default function Listo( id)\r\n {\r\n-  console.log(\"listo\",id )\r\n+  console.log(\"listo\", id )\r\n \r\n   return <>OK MAN </>\r\n \r\n \r\n"
                },
                {
                    "date": 1708357086386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,8 @@\n export default function Listo( id)\r\n {\r\n   console.log(\"listo\", id )\r\n \r\n-  return <>OK MAN </>\r\n+  return <>OK MAN {id}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357111832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,8 @@\n export default function Listo( id)\r\n {\r\n   console.log(\"listo\", id )\r\n \r\n-  return <>OK MAN {id}</>\r\n+  return <>OK MAN {{id}}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357163351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,14 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function Listo( id)\r\n+export default function Listo( id )\r\n {\r\n-  console.log(\"listo\", id )\r\n+  \r\n+  const idd =\"odoododo\";\r\n+  console.log(\"listo\", idd )\r\n \r\n-  return <>OK MAN {{id}}</>\r\n+  return <>OK MAN {{idd}}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357199189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n }\r\n export default function Listo( id )\r\n {\r\n   \r\n-  const idd =\"odoododo\";\r\n+  var idd =\"odoododo\";\r\n   console.log(\"listo\", idd )\r\n \r\n   return <>OK MAN {{idd}}</>\r\n \r\n"
                },
                {
                    "date": 1708357229059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,8 @@\n   \r\n   var idd =\"odoododo\";\r\n   console.log(\"listo\", idd )\r\n \r\n-  return <>OK MAN {{idd}}</>\r\n+  return <>OK MAN {idd}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357248990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n }\r\n export default function Listo( id )\r\n {\r\n   \r\n-  var idd =\"odoododo\";\r\n+  var idd =id;\r\n   console.log(\"listo\", idd )\r\n \r\n   return <>OK MAN {idd}</>\r\n \r\n"
                },
                {
                    "date": 1708357407052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,13 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function Listo( id )\r\n+export default function Listo( )\r\n {\r\n   \r\n-  var idd =id;\r\n-  console.log(\"listo\", idd )\r\n+  const { slugIdUniverse } = useParams();\r\n+  console.log(\"listo\",slugIdUniverse )\r\n \r\n   return <>OK MAN {idd}</>\r\n \r\n \r\n"
                },
                {
                    "date": 1708357424291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,8 @@\n   \r\n   const { slugIdUniverse } = useParams();\r\n   console.log(\"listo\",slugIdUniverse )\r\n \r\n-  return <>OK MAN {idd}</>\r\n+  return <>OK MAN {slugIdUniverse}</>\r\n \r\n \r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357498571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n }\r\n export default function Listo( )\r\n {\r\n   \r\n-  const { slugIdUniverse } = useParams();\r\n-  console.log(\"listo\",slugIdUniverse )\r\n+  const { slugIdUniverse , repairManId} = useParams();\r\n+  console.log(\"listo\",slugIdUniverse ,repairManId)\r\n \r\n   return <>OK MAN {slugIdUniverse}</>\r\n \r\n \r\n"
                },
                {
                    "date": 1708357534912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,8 @@\n   \r\n   const { slugIdUniverse , repairManId} = useParams();\r\n   console.log(\"listo\",slugIdUniverse ,repairManId)\r\n \r\n-  return <>OK MAN {slugIdUniverse}</>\r\n+  return <>OK MAN {slugIdUniverse} {repairManId}}</>\r\n \r\n \r\n\\ No newline at end of file\n-}\n+} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357540313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,8 @@\n   \r\n   const { slugIdUniverse , repairManId} = useParams();\r\n   console.log(\"listo\",slugIdUniverse ,repairManId)\r\n \r\n-  return <>OK MAN {slugIdUniverse} {repairManId}}</>\r\n+  return <>OK MAN {slugIdUniverse} {repairManId}</>\r\n \r\n \r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1708357644435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,11 @@\n }\r\n export default function Listo( )\r\n {\r\n   \r\n-  const { slugIdUniverse , repairManId} = useParams();\r\n-  console.log(\"listo\",slugIdUniverse ,repairManId)\r\n+  const { slugIdUniverse , repairmanId} = useParams();\r\n+  console.log(\"listo\",slugIdUniverse ,repairmanId)\r\n \r\n-  return <>OK MAN {slugIdUniverse} {repairManId}</>\r\n+  return <>OK MAN {slugIdUniverse} {repairmanId}</>\r\n \r\n \r\n } \n\\ No newline at end of file\n"
                },
                {
                    "date": 1708366000606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,401 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default functionListo() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  console.log(slugIdUniverse);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708366012204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n-export default functionListo() {\r\n+export default function Listo() {\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n@@ -398,41 +398,4 @@\n         </Container>\r\n  \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import ListProduits from \"../../components/front/listProduits.js\";\r\n-import getImgUniverse  from  \"./universeImageManager.js\"\r\n-import { useDispatch, useSelector } from \"react-redux\";\r\n-import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n-import connector from \"../../connector.js\";\r\n-import endPoints from \"../../config/endPoints.js\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import cordZ3img1 from '../../assets/images/z3-3.png';\r\n-import cordZ3img2 from '../../assets/images/z3-2.png';\r\n-import cordZ3img3 from '../../assets/images/z3-1.png';\r\n-import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n-\r\n-import { useParams } from \"react-router-dom\";\r\n-import MapArtisansUnivers from \"./mapArtisansUnivers.js\";\r\n-import { Col, Container, Row } from \"react-bootstrap\";\r\n-import Commentcamarche from \"./ficheUniversParts/commentcamarche.js\";\r\n-import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan.js\";\r\n-import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse.js\";\r\n-import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites.js\";\r\n-import anatomieCord from '../../assets/images/zanatCord.png';\r\n-import ButtonDef from \"../../components/ui-elements/buttonDef.js\";\r\n-\r\n-\r\n-function strUcFirst(a) {\r\n-  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n-}\r\n-export default function Listo( )\r\n-{\r\n-  \r\n-  const { slugIdUniverse , repairmanId} = useParams();\r\n-  console.log(\"listo\",slugIdUniverse ,repairmanId)\r\n-\r\n-  return <>OK MAN {slugIdUniverse} {repairmanId}</>\r\n-\r\n-\r\n-} \n\\ No newline at end of file\n"
                },
                {
                    "date": 1708420076995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,403 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n+\r\n+export default function Listo() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdRepairman } = useParams();\r\n+  console.log(\"STEP 1 \", slugIdUniverse, slugIdRepairman);\r\n+  const [service, setService] = useState(false);\r\n+  const [repairMan , setRepairman ] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    // getService();\r\n+    getRepairman();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      //getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708420180923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n   }, [universe]);\r\n \r\n   useEffect(() => {\r\n     getDeliveryModeTypes();\r\n-    // getService();\r\n+    getService();\r\n     getRepairman();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n@@ -400,405 +400,4 @@\n         </Container>\r\n  \r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n-\r\n-export default function Listo() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n-\r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708420227968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,403 +1,37 @@\n import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n+import ListProduits from \"../../components/front/listProduits.js\";\r\n+import getImgUniverse  from  \"./universeImageManager.js\"\r\n+import { useDispatch, useSelector } from \"react-redux\";\r\n+import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n+import connector from \"../../connector.js\";\r\n+import endPoints from \"../../config/endPoints.js\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n+import cordZ3img1 from '../../assets/images/z3-3.png';\r\n+import cordZ3img2 from '../../assets/images/z3-2.png';\r\n+import cordZ3img3 from '../../assets/images/z3-1.png';\r\n+import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n+\r\n import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n+import MapArtisansUnivers from \"./mapArtisansUnivers.js\";\r\n+import { Col, Container, Row } from \"react-bootstrap\";\r\n+import Commentcamarche from \"./ficheUniversParts/commentcamarche.js\";\r\n+import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan.js\";\r\n+import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse.js\";\r\n+import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites.js\";\r\n+import anatomieCord from '../../assets/images/zanatCord.png';\r\n+import ButtonDef from \"../../components/ui-elements/buttonDef.js\";\r\n \r\n-export default function Listo() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n \r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n+function strUcFirst(a) {\r\n+  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n+}\r\n+export default function Listo( )\r\n+{\r\n+  \r\n+  const { slugIdUniverse , repairManId} = useParams();\r\n+  console.log(\"listo\",slugIdUniverse ,repairManId)\r\n \r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n+  return <>OK MAN {slugIdUniverse, slugIdRepairman}</>\r\n \r\n-  const { slugIdUniverse, slugIdRepairman } = useParams();\r\n-  console.log(\"STEP 1 \", slugIdUniverse, slugIdRepairman);\r\n-  const [service, setService] = useState(false);\r\n-  const [repairMan , setRepairman ] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    getRepairman();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      //getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n-\r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n-\r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n- \r\n-  );\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708420250982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n }\r\n export default function Listo( )\r\n {\r\n   \r\n-  const { slugIdUniverse , repairManId} = useParams();\r\n-  console.log(\"listo\",slugIdUniverse ,repairManId)\r\n+  const { slugIdUniverse , slugIdRepairman} = useParams();\r\n+  console.log(\"listo\",slugIdUniverse ,slugIdRepairman)\r\n \r\n   return <>OK MAN {slugIdUniverse, slugIdRepairman}</>\r\n \r\n \r\n"
                },
                {
                    "date": 1708420401072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,14 +24,406 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function Listo( )\r\n-{\r\n-  \r\n-  const { slugIdUniverse , slugIdRepairman} = useParams();\r\n-  console.log(\"listo\",slugIdUniverse ,slugIdRepairman)\r\n \r\n-  return <>OK MAN {slugIdUniverse, slugIdRepairman}</>\r\n+import React, { useEffect, useState } from \"react\";\r\n+import { useSelector } from \"react-redux\";\r\n+import { Container } from \"react-bootstrap\";\r\n\\ No newline at end of file\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import {\r\n+  BackStyle,\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import Base from \"../../theme/front/base\";\r\n+import Nouislider from \"nouislider-react\";\r\n+import \"nouislider/distribute/nouislider.css\";\r\n+import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import connector from \"../../connector\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import { sortObjects } from \"../../helper/functions\";\r\n \r\n+export default function listo() {\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [click, setClick] = useState(false);\r\n+  const toggleFilter = () => setClick(!click);\r\n+  const toogleCloseFilter = () => setClick(false);\r\n \r\n-}\n+  useEffect(() => {\r\n+    if (click) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [click]);\r\n+\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  console.log(slugIdUniverse);\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const [filter, setFilter] = useState({\r\n+    deliveryModeTypes: {\r\n+      label: \"Mode de délivrance\",\r\n+      name: \"deliveryModeTypes\",\r\n+      placeholder: \"Tous\",\r\n+      options: [],\r\n+      value: [],\r\n+      hideOptions: true,\r\n+    },\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+    price: {\r\n+      value: [-1, -1],\r\n+    },\r\n+    sortBy: {\r\n+      label: \"Trier par: \",\r\n+      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n+      options: [\r\n+        { value: \"distance_asc\", label: \"Distance\" },\r\n+        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n+        { value: \"price_asc\", label: \"Prix croissant\" },\r\n+        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n+      ],\r\n+      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n+    },\r\n+  });\r\n+  const dataCrumbs = [\r\n+    { name: \"Accueil\", path: \"/\" },\r\n+    {\r\n+      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n+      path: `/univers/${slugIdUniverse}`,\r\n+    },\r\n+    { name: service ? service.name : \"\", path: \"/\" },\r\n+  ];\r\n+\r\n+  useEffect(() => {\r\n+    if (universe.allUniverses) {\r\n+      const id = slugIdUniverse.split(\"-\").pop();\r\n+      if (id) {\r\n+        const universeData = universe.allUniverses.find(\r\n+          (u) => parseInt(u.id) === parseInt(id)\r\n+        );\r\n+        if (universeData) {\r\n+          setActiveUniverse(universeData);\r\n+        }\r\n+      }\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    getDeliveryModeTypes();\r\n+    getService();\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (!isPendingLatLng && service) {\r\n+      getBenefits(true);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n+\r\n+  const getDeliveryModeTypes = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: endPoints.DELIVERY_MODE_TYPES,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const cpFilter = { ...filter };\r\n+        let options = [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n+        }\r\n+        cpFilter.deliveryModeTypes.options = options;\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getService = () => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      let condition = ``;\r\n+      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+      }\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        success: (response) => {\r\n+          setService(response.data || {});\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBenefits = (refresh = false) => {\r\n+    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n+    if (idService) {\r\n+      if (!placeIsSelected) {\r\n+        msgErrors({\r\n+          codePostal: true,\r\n+        });\r\n+        return;\r\n+      }\r\n+\r\n+      if (isTabletOrMobile) {\r\n+        setClick(false);\r\n+      }\r\n+\r\n+      if (!isPending) {\r\n+        setIsPending(true);\r\n+        setFilter(clearErrors(filter));\r\n+\r\n+        const sortBy = filter.sortBy.value.split(\"_\");\r\n+\r\n+        let condition = ``;\r\n+        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n+          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n+        }\r\n+        if (sortBy[0] === \"distance\") {\r\n+          condition += `&order[distance]=asc`;\r\n+        } else if (sortBy[0] === \"price\") {\r\n+          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n+        }else if (sortBy[0] === \"rating\") {\r\n+          condition += `&order[rating]=${sortBy[1]}`;\r\n+        }\r\n+        if (filter.deliveryModeTypes.value.length) {\r\n+          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n+            const row = filter.deliveryModeTypes.value[i];\r\n+            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n+          }\r\n+        }\r\n+        if (\r\n+          filter.price.value[0] > -1 &&\r\n+          filter.price.value[1] > -1 &&\r\n+          (filter.price.value[0] !== service.minPrice ||\r\n+            filter.price.value[1] !== service.maxPrice)\r\n+        ) {\r\n+          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `${condition}`;\r\n+\r\n+        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if (refresh || paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              let results = response.data[\"hydra:member\"] || [];\r\n+              //todo list est voir le min et max\r\n+              if (service) {\r\n+                const cpService = { ...service };\r\n+                let prices = [];\r\n+                for (var i = 0; i < results.length; i++) {\r\n+                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n+                    const obj = results[i].deliveryModes[j];\r\n+                    if (obj.price && parseFloat(obj.price) > 0) {\r\n+                      prices.push(parseFloat(obj.price));\r\n+                    }\r\n+                  }\r\n+                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n+                }\r\n+                if (prices.length) {\r\n+                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n+                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n+                  setService(cpService);\r\n+                }else{\r\n+                  cpService.minPrice = 0;\r\n+                  cpService.maxPrice = 0;\r\n+                  setService(cpService);\r\n+                }\r\n+              }\r\n+              if (sortBy[0] === \"price\") {\r\n+                results = sortObjects(results,'minPrice',sortBy[1]);\r\n+              }else if(sortBy[0] === \"rating\"){\r\n+                results = sortObjects(results,'rating',sortBy[1]);\r\n+              }\r\n+              setBenefits(results);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      }\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const to = (value, index) => {\r\n+    value = Math.round(value);\r\n+    const cpFilter = { ...filter };\r\n+    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n+      cpFilter.price.value[index] = value;\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    return value;\r\n+  };\r\n+\r\n+  const from = (value) => {\r\n+    return Number(value);\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilter.codePostal.error = e.codePostal;\r\n+      cpFilter.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilter(cpFilter);\r\n+  };\r\n+\r\n+  return (\r\n+\r\n+        <Container>\r\n+          <BlocFilterStyle open={click}>\r\n+            {isTabletOrMobile && (\r\n+              <button\r\n+                className=\"menu-burger is-opened\"\r\n+                onClick={toogleCloseFilter}\r\n+              >\r\n+                <span></span>\r\n+                <span></span>\r\n+                <span></span>\r\n+              </button>\r\n+            )}\r\n+            <div className=\"item-filter\">\r\n+              <RangePrice>\r\n+                <label>Prix</label>\r\n+                {service &&\r\n+                service.minPrice &&\r\n+                service.maxPrice &&\r\n+                service.minPrice != service.maxPrice ? (\r\n+                  <Nouislider\r\n+                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n+                    start={[service.minPrice, service.maxPrice]}\r\n+                    connect={true}\r\n+                    behaviour=\"tap\"\r\n+                    step={1}\r\n+                    tooltips={true}\r\n+                    format={{ to, from }}\r\n+                  />\r\n+                ) : (\r\n+                  \"Sur devis\"\r\n+                )}\r\n+              </RangePrice>\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <SelectCat\r\n+                {...filter.deliveryModeTypes}\r\n+                onChangeCallback={(response) => {\r\n+                  const cpFilter = { ...filter };\r\n+                  cpFilter.deliveryModeTypes.value = response;\r\n+                  setFilter(cpFilter);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+            <div className=\"item-filter\">\r\n+              <InputAutoComplete\r\n+                filter={filter}\r\n+                setFilter={setFilter}\r\n+                placeIsSelected={placeIsSelected}\r\n+                setPlaceIsSelected={setPlaceIsSelected}\r\n+                isPendingLatLng={isPendingLatLng}\r\n+                setIsPendingLatLng={setIsPendingLatLng}\r\n+              />\r\n+            </div>\r\n+            <div className=\"btn-filter-banner\">\r\n+              <button\r\n+                className=\"btn-search-filter\"\r\n+                onClick={(e) => {\r\n+                  getBenefits(false);\r\n+                }}\r\n+              >\r\n+                {isDesktopOrLaptop && (\r\n+                  <>\r\n+                    <SearchIcon />\r\n+                  </>\r\n+                )}\r\n+                {isTabletOrMobile && <>Recherche</>}\r\n+              </button>\r\n+            </div>\r\n+          </BlocFilterStyle>\r\n+          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n+          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n+            <BackIcon />\r\n+            <span>Retour à l'univers</span>\r\n+          </BackStyle>\r\n+          {isTabletOrMobile && (\r\n+            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n+              <SearchIcon /> Rechercher une prestation\r\n+            </div>\r\n+          )}\r\n+          <ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n+        </Container>\r\n+ \r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708420408626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import { sortObjects } from \"../../helper/functions\";\r\n \r\n-export default function listo() {\r\n+export default function Listo() {\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n@@ -425,5 +425,5 @@\n           />\r\n         </Container>\r\n  \r\n   );\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1708420427371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,5 @@\n import React, { useEffect, useState } from \"react\";\r\n-import ListProduits from \"../../components/front/listProduits.js\";\r\n-import getImgUniverse  from  \"./universeImageManager.js\"\r\n-import { useDispatch, useSelector } from \"react-redux\";\r\n-import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n-import connector from \"../../connector.js\";\r\n-import endPoints from \"../../config/endPoints.js\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import cordZ3img1 from '../../assets/images/z3-3.png';\r\n-import cordZ3img2 from '../../assets/images/z3-2.png';\r\n-import cordZ3img3 from '../../assets/images/z3-1.png';\r\n-import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n-\r\n-import { useParams } from \"react-router-dom\";\r\n-import MapArtisansUnivers from \"./mapArtisansUnivers.js\";\r\n-import { Col, Container, Row } from \"react-bootstrap\";\r\n-import Commentcamarche from \"./ficheUniversParts/commentcamarche.js\";\r\n-import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan.js\";\r\n-import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse.js\";\r\n-import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites.js\";\r\n-import anatomieCord from '../../assets/images/zanatCord.png';\r\n-import ButtonDef from \"../../components/ui-elements/buttonDef.js\";\r\n-\r\n-\r\n-function strUcFirst(a) {\r\n-  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n-}\r\n-\r\n-import React, { useEffect, useState } from \"react\";\r\n import { useSelector } from \"react-redux\";\r\n import { Container } from \"react-bootstrap\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n import { useParams } from \"react-router-dom\";\r\n"
                },
                {
                    "date": 1708420561245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,8 +309,105 @@\n \r\n   return (\r\n \r\n         <Container>\r\n+          <div style={{width: '100%', height: '100%', paddingRight: 156, background: 'white', boxShadow: '0px 0px 12px rgba(154, 202, 60, 0.09)', justifyContent: 'flex-start', alignItems: 'center', gap: 32, display: 'inline-flex'}}>\r\n+    <img style={{width: 504, height: 344.75}} src=\"https://via.placeholder.com/504x345\" />\r\n+    <div style={{paddingTop: 30, paddingBottom: 30, background: 'white', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n+        <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'flex'}}>\r\n+            <div style={{color: '#A2C614', fontSize: 20, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word'}}>Cordonnerie</div>\r\n+        </div>\r\n+        <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 40, display: 'inline-flex'}}>\r\n+            <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 4, display: 'inline-flex'}}>\r\n+                <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 12, display: 'flex'}}>\r\n+                    <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'flex'}}>\r\n+                        <div style={{color: '#444444', fontSize: 36, fontFamily: 'Poppins', fontWeight: '600', wordWrap: 'break-word'}}>Les petits pieds </div>\r\n+                        <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n+                            <div style={{width: 56, height: 30.73, justifyContent: 'center', alignItems: 'center', display: 'flex'}}>\r\n+                                <img style={{width: 56, height: 30.73}} src=\"https://via.placeholder.com/56x31\" />\r\n+                            </div>\r\n+                            <div style={{width: 50, height: 31.23, justifyContent: 'center', alignItems: 'center', display: 'flex'}}>\r\n+                                <img style={{width: 50, height: 31.23}} src=\"https://via.placeholder.com/50x31\" />\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                    <div style={{width: 465, height: 97, color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word'}}>Plongez dans l'univers chaleureux et artisanal de \"Les Petits Pieds\", une cordonnerie dévouée à chérir chaque paire de chaussures avec le plus grand soin et l'expertise la plus délicate. </div>\r\n+                </div>\r\n+                <div style={{justifyContent: 'flex-start', alignItems: 'center', gap: 8, display: 'inline-flex'}}>\r\n+                    <div style={{color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>4,8</div>\r\n+                    <img style={{width: 113.59, height: 21}} src=\"https://via.placeholder.com/114x21\" />\r\n+                </div>\r\n+            </div>\r\n+            <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 24, display: 'inline-flex'}}>\r\n+                <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n+                    <div style={{width: 24, height: 24, position: 'relative'}}>\r\n+                        <div style={{width: 8, height: 8, left: 8, top: 6, position: 'absolute', background: '#9ACA3C'}}></div>\r\n+                        <div style={{width: 16, height: 20, left: 4, top: 2, position: 'absolute', background: '#9ACA3C'}}></div>\r\n+                    </div>\r\n+                    <div style={{color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>16 rue de Saussure, 7018 Paris</div>\r\n+                </div>\r\n+                <div style={{width: 208, position: 'relative'}}>\r\n+                    <div style={{width: 24, height: 24, left: 0, top: 0, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n+                        <div style={{width: 22, height: 22, position: 'relative'}}>\r\n+                            <div style={{width: 22, height: 22, left: 0, top: 0, position: 'absolute', background: '#9ACA3C'}}></div>\r\n+                            <div style={{width: 9.06, height: 20.71, left: 6.47, top: 0.65, position: 'absolute', background: '#9ACA3C'}}></div>\r\n+                            <div style={{width: 20.71, height: 14.07, left: 0.65, top: 3.97, position: 'absolute', background: '#9ACA3C'}}></div>\r\n+                        </div>\r\n+                    </div>\r\n+                    <div style={{width: 24, height: 24, left: 184, top: 0, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n+                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n+                    </div>\r\n+                    <div style={{width: 24, height: 24, left: 146, top: 0, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n+                        <div style={{width: 24, height: 24, position: 'relative'}}>\r\n+                            <div style={{width: 24, height: 24, left: 0, top: 0, position: 'absolute'}}></div>\r\n+                            <div style={{width: 22, height: 18, left: 2, top: 4, position: 'absolute', background: '#9ACA3C'}}></div>\r\n+                        </div>\r\n+                    </div>\r\n+                    <div style={{width: 22, height: 22, left: 74, top: 1, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n+                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n+                    </div>\r\n+                    <div style={{width: 22, height: 22, left: 38, top: 1, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n+                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n+                    </div>\r\n+                    <div style={{width: 22, height: 22, left: 110, top: 1, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n+                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n+                    </div>\r\n+                </div>\r\n+                <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n+                    <div style={{width: 24, height: 24, position: 'relative'}}>\r\n+                        <div style={{width: 18, height: 18, left: 3, top: 3, position: 'absolute', border: '2.12px #9ACA3C solid'}}></div>\r\n+                        <div style={{width: 4.50, height: 6.75, left: 12, top: 6, position: 'absolute', border: '2.12px #9ACA3C solid'}}></div>\r\n+                    </div>\r\n+                    <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 12, display: 'inline-flex'}}>\r\n+                        <div style={{color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word'}}>Horaires</div>\r\n+                        <div style={{width: 283, height: 137, position: 'relative'}}>\r\n+                            <div style={{width: 181, height: 21, left: 0, top: 0, position: 'absolute'}}>\r\n+                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Lundi</div>\r\n+                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Fermé</div>\r\n+                            </div>\r\n+                            <div style={{width: 283, height: 21, left: 0, top: 29, position: 'absolute'}}>\r\n+                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Mardi - jeudi</div>\r\n+                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>9h-13h30 / 14h-17h30</div>\r\n+                            </div>\r\n+                            <div style={{width: 196, height: 21, left: 0, top: 58, position: 'absolute'}}>\r\n+                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Vendredi</div>\r\n+                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>10h - 18h</div>\r\n+                            </div>\r\n+                            <div style={{width: 189, height: 21, left: 0, top: 87, position: 'absolute'}}>\r\n+                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Samedi</div>\r\n+                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>10h-19h</div>\r\n+                            </div>\r\n+                            <div style={{width: 183, height: 21, left: 0, top: 116, position: 'absolute'}}>\r\n+                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Dimanche</div>\r\n+                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>9h-12h</div>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </div>\r\n+            </div>\r\n+        </div>\r\n+    </div>\r\n+</div>\r\n           <BlocFilterStyle open={click}>\r\n             {isTabletOrMobile && (\r\n               <button\r\n                 className=\"menu-burger is-opened\"\r\n"
                },
                {
                    "date": 1708421241349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,105 +309,8 @@\n \r\n   return (\r\n \r\n         <Container>\r\n-          <div style={{width: '100%', height: '100%', paddingRight: 156, background: 'white', boxShadow: '0px 0px 12px rgba(154, 202, 60, 0.09)', justifyContent: 'flex-start', alignItems: 'center', gap: 32, display: 'inline-flex'}}>\r\n-    <img style={{width: 504, height: 344.75}} src=\"https://via.placeholder.com/504x345\" />\r\n-    <div style={{paddingTop: 30, paddingBottom: 30, background: 'white', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n-        <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'flex'}}>\r\n-            <div style={{color: '#A2C614', fontSize: 20, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word'}}>Cordonnerie</div>\r\n-        </div>\r\n-        <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 40, display: 'inline-flex'}}>\r\n-            <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 4, display: 'inline-flex'}}>\r\n-                <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 12, display: 'flex'}}>\r\n-                    <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'flex'}}>\r\n-                        <div style={{color: '#444444', fontSize: 36, fontFamily: 'Poppins', fontWeight: '600', wordWrap: 'break-word'}}>Les petits pieds </div>\r\n-                        <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n-                            <div style={{width: 56, height: 30.73, justifyContent: 'center', alignItems: 'center', display: 'flex'}}>\r\n-                                <img style={{width: 56, height: 30.73}} src=\"https://via.placeholder.com/56x31\" />\r\n-                            </div>\r\n-                            <div style={{width: 50, height: 31.23, justifyContent: 'center', alignItems: 'center', display: 'flex'}}>\r\n-                                <img style={{width: 50, height: 31.23}} src=\"https://via.placeholder.com/50x31\" />\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                    <div style={{width: 465, height: 97, color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word'}}>Plongez dans l'univers chaleureux et artisanal de \"Les Petits Pieds\", une cordonnerie dévouée à chérir chaque paire de chaussures avec le plus grand soin et l'expertise la plus délicate. </div>\r\n-                </div>\r\n-                <div style={{justifyContent: 'flex-start', alignItems: 'center', gap: 8, display: 'inline-flex'}}>\r\n-                    <div style={{color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>4,8</div>\r\n-                    <img style={{width: 113.59, height: 21}} src=\"https://via.placeholder.com/114x21\" />\r\n-                </div>\r\n-            </div>\r\n-            <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 24, display: 'inline-flex'}}>\r\n-                <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n-                    <div style={{width: 24, height: 24, position: 'relative'}}>\r\n-                        <div style={{width: 8, height: 8, left: 8, top: 6, position: 'absolute', background: '#9ACA3C'}}></div>\r\n-                        <div style={{width: 16, height: 20, left: 4, top: 2, position: 'absolute', background: '#9ACA3C'}}></div>\r\n-                    </div>\r\n-                    <div style={{color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>16 rue de Saussure, 7018 Paris</div>\r\n-                </div>\r\n-                <div style={{width: 208, position: 'relative'}}>\r\n-                    <div style={{width: 24, height: 24, left: 0, top: 0, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n-                        <div style={{width: 22, height: 22, position: 'relative'}}>\r\n-                            <div style={{width: 22, height: 22, left: 0, top: 0, position: 'absolute', background: '#9ACA3C'}}></div>\r\n-                            <div style={{width: 9.06, height: 20.71, left: 6.47, top: 0.65, position: 'absolute', background: '#9ACA3C'}}></div>\r\n-                            <div style={{width: 20.71, height: 14.07, left: 0.65, top: 3.97, position: 'absolute', background: '#9ACA3C'}}></div>\r\n-                        </div>\r\n-                    </div>\r\n-                    <div style={{width: 24, height: 24, left: 184, top: 0, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n-                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n-                    </div>\r\n-                    <div style={{width: 24, height: 24, left: 146, top: 0, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n-                        <div style={{width: 24, height: 24, position: 'relative'}}>\r\n-                            <div style={{width: 24, height: 24, left: 0, top: 0, position: 'absolute'}}></div>\r\n-                            <div style={{width: 22, height: 18, left: 2, top: 4, position: 'absolute', background: '#9ACA3C'}}></div>\r\n-                        </div>\r\n-                    </div>\r\n-                    <div style={{width: 22, height: 22, left: 74, top: 1, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n-                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n-                    </div>\r\n-                    <div style={{width: 22, height: 22, left: 38, top: 1, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n-                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n-                    </div>\r\n-                    <div style={{width: 22, height: 22, left: 110, top: 1, position: 'absolute', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'}}>\r\n-                        <div style={{width: 22, height: 22, background: '#9ACA3C'}}></div>\r\n-                    </div>\r\n-                </div>\r\n-                <div style={{justifyContent: 'flex-start', alignItems: 'flex-start', gap: 8, display: 'inline-flex'}}>\r\n-                    <div style={{width: 24, height: 24, position: 'relative'}}>\r\n-                        <div style={{width: 18, height: 18, left: 3, top: 3, position: 'absolute', border: '2.12px #9ACA3C solid'}}></div>\r\n-                        <div style={{width: 4.50, height: 6.75, left: 12, top: 6, position: 'absolute', border: '2.12px #9ACA3C solid'}}></div>\r\n-                    </div>\r\n-                    <div style={{flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 12, display: 'inline-flex'}}>\r\n-                        <div style={{color: '#444444', fontSize: 16, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word'}}>Horaires</div>\r\n-                        <div style={{width: 283, height: 137, position: 'relative'}}>\r\n-                            <div style={{width: 181, height: 21, left: 0, top: 0, position: 'absolute'}}>\r\n-                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Lundi</div>\r\n-                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Fermé</div>\r\n-                            </div>\r\n-                            <div style={{width: 283, height: 21, left: 0, top: 29, position: 'absolute'}}>\r\n-                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Mardi - jeudi</div>\r\n-                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>9h-13h30 / 14h-17h30</div>\r\n-                            </div>\r\n-                            <div style={{width: 196, height: 21, left: 0, top: 58, position: 'absolute'}}>\r\n-                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Vendredi</div>\r\n-                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>10h - 18h</div>\r\n-                            </div>\r\n-                            <div style={{width: 189, height: 21, left: 0, top: 87, position: 'absolute'}}>\r\n-                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Samedi</div>\r\n-                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>10h-19h</div>\r\n-                            </div>\r\n-                            <div style={{width: 183, height: 21, left: 0, top: 116, position: 'absolute'}}>\r\n-                                <div style={{left: 0, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>Dimanche</div>\r\n-                                <div style={{left: 136, top: 0, position: 'absolute', color: '#444444', fontSize: 14, fontFamily: 'Poppins', fontWeight: '400', wordWrap: 'break-word'}}>9h-12h</div>\r\n-                            </div>\r\n-                        </div>\r\n-                    </div>\r\n-                </div>\r\n-            </div>\r\n-        </div>\r\n-    </div>\r\n-</div>\r\n           <BlocFilterStyle open={click}>\r\n             {isTabletOrMobile && (\r\n               <button\r\n                 className=\"menu-burger is-opened\"\r\n"
                },
                {
                    "date": 1708421322593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,27 +321,9 @@\n                 <span></span>\r\n               </button>\r\n             )}\r\n             <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n+            \r\n             </div>\r\n             <div className=\"item-filter\">\r\n               <SelectCat\r\n                 {...filter.deliveryModeTypes}\r\n"
                },
                {
                    "date": 1708421713495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,383 +1,227 @@\n-import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n+import React, { useState } from \"react\";\r\n+import { Row } from \"react-bootstrap\";\r\n+import ReactPaginate from \"react-paginate\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { ListProductStyle } from \"../../assets/styles/frontGlobalStyle\";\r\n+import Select from \"../ui-elements/select\";\r\n+import ProduitItem from \"./produitItem\";\r\n+import ArtListProduits from \"../../components/front/artListProduits\";\r\n+import Loader from \"../loader\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n \r\n-export default function Listo() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+export default function ArtListProduits({ data = [], ...props }) {\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n-\r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n-\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  console.log(slugIdUniverse);\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n+  const optionsPages = isDesktopOrLaptop\r\n+    ? [\r\n+        { value: 20, label: \"20\" },\r\n+        { value: 40, label: \"40\" },\r\n+        { value: 80, label: \"80\" },\r\n+      ]\r\n+    : [{ value: 8, label: \"8\" }];\r\n+  const { slugIdUniverse } = useParams();\r\n+  const [state, setState] = useState({\r\n+    pageNbr: {\r\n+      label: \"Nombre de résultats par page : \",\r\n+      options: optionsPages,\r\n+      value: props.perPage ? parseInt(props.perPage) : 20,\r\n+      position: \"auto\",\r\n     },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n   });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n+  const rowRenderservices = (row) => (\r\n+    <ProduitItem key={row.id} row={row} slugIdUniverse={slugIdUniverse} />\r\n+  );\r\n+  const showData = () => {\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n+    return data.map(rowRenderservices);\r\n   };\r\n \r\n-  const getService = () => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n-        success: (response) => {\r\n-          setService(response.data || {});\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n+  return (\r\n+    <ListProductStyle>\r\n+      {isDesktopOrLaptop && (\r\n+        <h1 className=\"title-bloc-products\">\r\n+          {props.totalItemsLength} service(s)\r\n+        </h1>\r\n+      )}\r\n+      <Row style={props.isLoading ? { padding: \"50px 0\" } : null}>\r\n+        {props.isLoading ? <Loader /> : showData()}\r\n+      </Row>\r\n+      {!props.isLoading && props.pagination && props.totalItemsLength > 0 ? (\r\n+        <div className=\"paginations-bloc\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"results-of-page\">\r\n+              <Select\r\n+                {...state.pageNbr}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.pageNbr.value = e.value;\r\n+                  setState(cpState);\r\n+                  props.setPerPage(e.value);\r\n+                }}\r\n+              />\r\n+            </div>\r\n+          )}\r\n \r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = \"/univers/cordonnerie-30/entretien-nettoyage-218\".split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n+          <ReactPaginate\r\n+            previousLabel={\"<\"}\r\n+            nextLabel={\">\"}\r\n+            breakLabel={\"...\"}\r\n+            pageCount={Math.ceil(props.totalItemsLength / props.perPage)}\r\n+            marginPagesDisplayed={2}\r\n+            pageRangeDisplayed={3}\r\n+            onPageChange={(data) => {\r\n+              props.setPageIndex(data.selected);\r\n+            }}\r\n+            containerClassName={\"pagination\"}\r\n+            subContainerClassName={\"page-item\"}\r\n+            activeLinkClassName={\"active disabled\"}\r\n+            pageLinkClassName={\"page-link\"}\r\n+            pageClassName={\"page-item\"}\r\n+            breakClassName={\"page-item\"}\r\n+            breakLinkClassName={\"page-link\"}\r\n+            activeClassName={\"active disabled\"}\r\n+            previousLinkClassName={\"page-link\"}\r\n+            nextLinkClassName={\"page-link\"}\r\n+            previousClassName={\"page-item\"}\r\n+            nextClassName={\"page-item\"}\r\n+            forcePage={props.pageIndex ? props.pageIndex : 0}\r\n+          />\r\n+        </div>\r\n+      ) : null}\r\n+    </ListProductStyle>\r\n+  );\r\n+}\r\n+import React, { useState } from \"react\";\r\n+import { Row } from \"react-bootstrap\";\r\n+import ReactPaginate from \"react-paginate\";\r\n+import { useParams } from \"react-router-dom\";\r\n+import { ListProductStyle } from \"../../assets/styles/frontGlobalStyle\";\r\n+import Select from \"../ui-elements/select\";\r\n+import ProduitItem from \"./produitItem\";\r\n+import Loader from \"../loader\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n \r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n+export default function ArtListProduits({ data = [], ...props }) {\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const optionsPages = isDesktopOrLaptop\r\n+    ? [\r\n+        { value: 20, label: \"20\" },\r\n+        { value: 40, label: \"40\" },\r\n+        { value: 80, label: \"80\" },\r\n+      ]\r\n+    : [{ value: 8, label: \"8\" }];\r\n+  const { slugIdUniverse } = useParams();\r\n+  const [state, setState] = useState({\r\n+    pageNbr: {\r\n+      label: \"Nombre de résultats par page : \",\r\n+      options: optionsPages,\r\n+      value: props.perPage ? parseInt(props.perPage) : 20,\r\n+      position: \"auto\",\r\n+    },\r\n+  });\r\n+  const rowRenderservices = (row) => (\r\n+    <ProduitItem key={row.id} row={row} slugIdUniverse={slugIdUniverse} />\r\n+  );\r\n+  const showData = () => {\r\n+    if (data === false)\r\n+      return (\r\n+        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n+          Chargement...\r\n+        </p>\r\n+      );\r\n+    if (data.length === 0)\r\n+      return (\r\n+        <h3\r\n+          style={{\r\n+            textAlign: \"center\",\r\n+            width: \"100%\",\r\n+            fontSize: \"22px\",\r\n+            fontWeight: \"600\",\r\n+            margin: \"40px 0\",\r\n+          }}\r\n+        >\r\n+          Aucune donnée\r\n+        </h3>\r\n+      );\r\n \r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n-\r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n-\r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n+    return data.map(rowRenderservices);\r\n   };\r\n \r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n   return (\r\n-\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-            \r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n+    <ListProductStyle>\r\n+      {isDesktopOrLaptop && (\r\n+        <h1 className=\"title-bloc-products\">\r\n+          {props.totalItemsLength} service(s)\r\n+        </h1>\r\n+      )}\r\n+      <Row style={props.isLoading ? { padding: \"50px 0\" } : null}>\r\n+        {props.isLoading ? <Loader /> : showData()}\r\n+      </Row>\r\n+      {!props.isLoading && props.pagination && props.totalItemsLength > 0 ? (\r\n+        <div className=\"paginations-bloc\">\r\n+          {isDesktopOrLaptop && (\r\n+            <div className=\"results-of-page\">\r\n+              <Select\r\n+                {...state.pageNbr}\r\n+                onChange={(e) => {\r\n+                  const cpState = { ...state };\r\n+                  cpState.pageNbr.value = e.value;\r\n+                  setState(cpState);\r\n+                  props.setPerPage(e.value);\r\n                 }}\r\n               />\r\n             </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n           )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n+\r\n+          <ReactPaginate\r\n+            previousLabel={\"<\"}\r\n+            nextLabel={\">\"}\r\n+            breakLabel={\"...\"}\r\n+            pageCount={Math.ceil(props.totalItemsLength / props.perPage)}\r\n+            marginPagesDisplayed={2}\r\n+            pageRangeDisplayed={3}\r\n+            onPageChange={(data) => {\r\n+              props.setPageIndex(data.selected);\r\n+            }}\r\n+            containerClassName={\"pagination\"}\r\n+            subContainerClassName={\"page-item\"}\r\n+            activeLinkClassName={\"active disabled\"}\r\n+            pageLinkClassName={\"page-link\"}\r\n+            pageClassName={\"page-item\"}\r\n+            breakClassName={\"page-item\"}\r\n+            breakLinkClassName={\"page-link\"}\r\n+            activeClassName={\"active disabled\"}\r\n+            previousLinkClassName={\"page-link\"}\r\n+            nextLinkClassName={\"page-link\"}\r\n+            previousClassName={\"page-item\"}\r\n+            nextClassName={\"page-item\"}\r\n+            forcePage={props.pageIndex ? props.pageIndex : 0}\r\n           />\r\n-        </Container>\r\n- \r\n+        </div>\r\n+      ) : null}\r\n+    </ListProductStyle>\r\n   );\r\n }\r\n"
                }
            ],
            "date": 1708356612412,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport ListProduits from \"../../components/front/listProduits.js\";\r\nimport getImgUniverse  from  \"./universeImageManager.js\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport imgbonusreparation from '../../assets/images/bonusreparation.png';\r\nimport connector from \"../../connector.js\";\r\nimport endPoints from \"../../config/endPoints.js\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport cordZ3img1 from '../../assets/images/z3-3.png';\r\nimport cordZ3img2 from '../../assets/images/z3-2.png';\r\nimport cordZ3img3 from '../../assets/images/z3-1.png';\r\nimport cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport MapArtisansUnivers from \"./mapArtisansUnivers.js\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Commentcamarche from \"./ficheUniversParts/commentcamarche.js\";\r\nimport DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan.js\";\r\nimport AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse.js\";\r\nimport PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites.js\";\r\nimport anatomieCord from '../../assets/images/zanatCord.png';\r\nimport ButtonDef from \"../../components/ui-elements/buttonDef.js\";\r\n\r\n\r\nfunction strUcFirst(a) {\r\n  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n}\r\nexport default function Listo(id\r\n) {\r\n  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n\r\n  const [service, setService] = useState(false);\r\n  const [benefits, setBenefits] = useState([]);\r\n  const [activeUniverse, setActiveUniverse] = useState(false);\r\n  const universe = useSelector((state) => state.universe);\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const { slugIdUniverse, slugIdService } = useParams();\r\n  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n  const [universeDescription, setuniverseDescription] = useState('');\r\n  var universeId = slugIdUniverse.split(\"-\").pop();\r\n  const getUniverse = () => {\r\n\r\n    const universeId = slugIdUniverse.split(\"-\").pop();\r\n    if (universeId) {\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n        success: (response) => {\r\n          const arrayObj = response.data || { categories: [] };\r\n\r\n          if (response.data?.name) {\r\n            setuniverseTitle(response.data.name);\r\n            setuniverseDescription(response.data.description);\r\n            //\r\n            //if (response.data.name === 'Cordonnerie') {\r\n            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n            //}\r\n            //console.log('details Univers', response.data);\r\n          }\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getUniverse();\r\n  }, []);\r\n\r\n  const handleProductListClick = () => {\r\n    setDisplayListeProduits(!isDisplayListeProduits);\r\n    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n  };\r\n\r\n  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n    <div style={{\r\n      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n      gap: 24, display: 'inline-flex'\r\n    }}>\r\n      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n        {universeTitle}\r\n      </div>\r\n      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n        {universeDescription}</div>\r\n    </div>\r\n    <div>\r\n      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n      </div>\r\n    </div>\r\n\r\n    <Row >\r\n      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n    </Row>\r\n    <Row >\r\n      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col>\r\n        <Commentcamarche></Commentcamarche>\r\n      </Col>\r\n    </Row>\r\n    <Row style={{ marginbottom: 50 }}>\r\n      <Col>\r\n        <MapArtisansUnivers>\r\n                  isDisplayListeProduits={isDisplayListeProduits}\r\n                  setDisplayListeProduits={setDisplayListeProduits}\r\n                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n        </MapArtisansUnivers>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <AnatomieUniverse\r\n          title={universeTitle}\r\n          image={anatomieCord}\r\n        ></AnatomieUniverse>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <div>\r\n          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n    <PrestationsFavorites></PrestationsFavorites>\r\n    <Row >\r\n      <Col >\r\n        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n      </Col>\r\n    </Row>\r\n\r\n  </Container>\r\n\r\n}\r\n"
        }
    ]
}