{
    "sourceFile": "src/views/front/ficheReparateurServices.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1708353257215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708353429645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,8 +159,9 @@\n     });\r\n   };\r\n \r\n   const getService = () => {\r\n+    return;\r\n     const idService = slugIdService.split(\"-\").pop();\r\n     if (idService) {\r\n       let condition = ``;\r\n       if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n"
                },
                {
                    "date": 1708353781644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,403 +1,163 @@\n import React, { useEffect, useState } from \"react\";\r\n-import { useSelector } from \"react-redux\";\r\n-import { Container } from \"react-bootstrap\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+import getImgUniverse  from  \"./universeImageManager.js\"\r\n+import { useDispatch, useSelector } from \"react-redux\";\r\n+import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n+import connector from \"../../connector\";\r\n+import endPoints from \"../../config/endPoints\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n+import cordZ3img1 from '../../assets/images/z3-3.png';\r\n+import cordZ3img2 from '../../assets/images/z3-2.png';\r\n+import cordZ3img3 from '../../assets/images/z3-1.png';\r\n+import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n+\r\n import { useParams } from \"react-router-dom\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import {\r\n-  BackStyle,\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import Base from \"../../theme/front/base\";\r\n-import Nouislider from \"nouislider-react\";\r\n-import \"nouislider/distribute/nouislider.css\";\r\n-import { RangePrice } from \"../../assets/styles/componentStyles\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import connector from \"../../connector\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import { sortObjects } from \"../../helper/functions\";\r\n+import MapArtisansUnivers from \"./mapArtisansUnivers\";\r\n+import { Col, Container, Row } from \"react-bootstrap\";\r\n+import Commentcamarche from \"./ficheUniversParts/commentcamarche\";\r\n+import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan\";\r\n+import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse\";\r\n+import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites\";\r\n+import anatomieCord from '../../assets/images/zanatCord.png';\r\n+import ButtonDef from \"../../components/ui-elements/buttonDef\";\r\n \r\n-export default function FicheReparateurServices() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [click, setClick] = useState(false);\r\n-  const toggleFilter = () => setClick(!click);\r\n-  const toogleCloseFilter = () => setClick(false);\r\n \r\n-  useEffect(() => {\r\n-    if (click) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [click]);\r\n+function strUcFirst(a) {\r\n+  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n+}\r\n+export default function FicheUnivers(props\r\n+) {\r\n+  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n+  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n+  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n \r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n   const [service, setService] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const [activeUniverse, setActiveUniverse] = useState(false);\r\n   const universe = useSelector((state) => state.universe);\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const [filter, setFilter] = useState({\r\n-    deliveryModeTypes: {\r\n-      label: \"Mode de délivrance\",\r\n-      name: \"deliveryModeTypes\",\r\n-      placeholder: \"Tous\",\r\n-      options: [],\r\n-      value: [],\r\n-      hideOptions: true,\r\n-    },\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-    price: {\r\n-      value: [-1, -1],\r\n-    },\r\n-    sortBy: {\r\n-      label: \"Trier par: \",\r\n-      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n-      options: [\r\n-        { value: \"distance_asc\", label: \"Distance\" },\r\n-        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n-        { value: \"price_asc\", label: \"Prix croissant\" },\r\n-        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n-      ],\r\n-      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n-    },\r\n-  });\r\n-  const dataCrumbs = [\r\n-    { name: \"Accueil\", path: \"/\" },\r\n-    {\r\n-      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n-      path: `/univers/${slugIdUniverse}`,\r\n-    },\r\n-    { name: service ? service.name : \"\", path: \"/\" },\r\n-  ];\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n+  const [universeDescription, setuniverseDescription] = useState('');\r\n+  var universeId = slugIdUniverse.split(\"-\").pop();\r\n+  const getUniverse = () => {\r\n \r\n-  useEffect(() => {\r\n-    if (universe.allUniverses) {\r\n-      const id = slugIdUniverse.split(\"-\").pop();\r\n-      if (id) {\r\n-        const universeData = universe.allUniverses.find(\r\n-          (u) => parseInt(u.id) === parseInt(id)\r\n-        );\r\n-        if (universeData) {\r\n-          setActiveUniverse(universeData);\r\n-        }\r\n-      }\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    getDeliveryModeTypes();\r\n-    getService();\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (!isPendingLatLng && service) {\r\n-      getBenefits(true);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n-\r\n-  const getDeliveryModeTypes = () => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: endPoints.DELIVERY_MODE_TYPES,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        const cpFilter = { ...filter };\r\n-        let options = [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n-        }\r\n-        cpFilter.deliveryModeTypes.options = options;\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getService = () => {\r\n-    return;\r\n-    const idService = slugIdService.split(\"-\").pop();\r\n-    if (idService) {\r\n-      let condition = ``;\r\n-      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-      }\r\n+    const universeId = slugIdUniverse.split(\"-\").pop();\r\n+    if (universeId) {\r\n       connector({\r\n         method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n         success: (response) => {\r\n-          setService(response.data || {});\r\n+          const arrayObj = response.data || { categories: [] };\r\n+\r\n+          if (response.data?.name) {\r\n+            setuniverseTitle(response.data.name);\r\n+            setuniverseDescription(response.data.description);\r\n+            //\r\n+            //if (response.data.name === 'Cordonnerie') {\r\n+            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n+            //}\r\n+            //console.log('details Univers', response.data);\r\n+          }\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n         },\r\n       });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n+  \r\n+  useEffect(() => {\r\n+    getUniverse();\r\n+  }, []);\r\n \r\n-  const getBenefits = (refresh = false) => {\r\n-    const idService = slugIdService.split(\"-\").pop();\r\n-    if (idService) {\r\n-      if (!placeIsSelected) {\r\n-        msgErrors({\r\n-          codePostal: true,\r\n-        });\r\n-        return;\r\n-      }\r\n+  const handleProductListClick = () => {\r\n+    setDisplayListeProduits(!isDisplayListeProduits);\r\n+    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n+  };\r\n \r\n-      if (isTabletOrMobile) {\r\n-        setClick(false);\r\n-      }\r\n+  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n+    <div style={{\r\n+      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n+      gap: 24, display: 'inline-flex'\r\n+    }}>\r\n+      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        {universeTitle}\r\n+      </div>\r\n+      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        {universeDescription}</div>\r\n+    </div>\r\n+    <div>\r\n+      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n+        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n+      </div>\r\n+    </div>\r\n \r\n-      if (!isPending) {\r\n-        setIsPending(true);\r\n-        setFilter(clearErrors(filter));\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n+    </Row>\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n+    </Row>\r\n \r\n-        const sortBy = filter.sortBy.value.split(\"_\");\r\n+    <Row>\r\n+      <Col>\r\n+        <Commentcamarche></Commentcamarche>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row style={{ marginbottom: 50 }}>\r\n+      <Col>\r\n+        <MapArtisansUnivers>\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n+        </MapArtisansUnivers>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row>\r\n+      <Col>\r\n+        <AnatomieUniverse\r\n+          title={universeTitle}\r\n+          image={anatomieCord}\r\n+        ></AnatomieUniverse>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row>\r\n+      <Col>\r\n+        <div>\r\n+          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n+            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n+          </div>\r\n+        </div>\r\n+      </Col>\r\n+    </Row>\r\n+    <PrestationsFavorites></PrestationsFavorites>\r\n+    <Row >\r\n+      <Col >\r\n+        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n+                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n+      </Col>\r\n+    </Row>\r\n \r\n-        let condition = ``;\r\n-        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n-          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n-        }\r\n-        if (sortBy[0] === \"distance\") {\r\n-          condition += `&order[distance]=asc`;\r\n-        } else if (sortBy[0] === \"price\") {\r\n-          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n-        }else if (sortBy[0] === \"rating\") {\r\n-          condition += `&order[rating]=${sortBy[1]}`;\r\n-        }\r\n-        if (filter.deliveryModeTypes.value.length) {\r\n-          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n-            const row = filter.deliveryModeTypes.value[i];\r\n-            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n-          }\r\n-        }\r\n-        if (\r\n-          filter.price.value[0] > -1 &&\r\n-          filter.price.value[1] > -1 &&\r\n-          (filter.price.value[0] !== service.minPrice ||\r\n-            filter.price.value[1] !== service.maxPrice)\r\n-        ) {\r\n-          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n-        }\r\n+  </Container>\r\n \r\n-        const cpParamsUrlService = `${condition}`;\r\n-\r\n-        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        if (refresh || paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              let results = response.data[\"hydra:member\"] || [];\r\n-              //todo list est voir le min et max\r\n-              if (service) {\r\n-                const cpService = { ...service };\r\n-                let prices = [];\r\n-                for (var i = 0; i < results.length; i++) {\r\n-                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n-                    const obj = results[i].deliveryModes[j];\r\n-                    if (obj.price && parseFloat(obj.price) > 0) {\r\n-                      prices.push(parseFloat(obj.price));\r\n-                    }\r\n-                  }\r\n-                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n-                }\r\n-                if (prices.length) {\r\n-                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n-                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n-                  setService(cpService);\r\n-                }else{\r\n-                  cpService.minPrice = 0;\r\n-                  cpService.maxPrice = 0;\r\n-                  setService(cpService);\r\n-                }\r\n-              }\r\n-              if (sortBy[0] === \"price\") {\r\n-                results = sortObjects(results,'minPrice',sortBy[1]);\r\n-              }else if(sortBy[0] === \"rating\"){\r\n-                results = sortObjects(results,'rating',sortBy[1]);\r\n-              }\r\n-              setBenefits(results);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      }\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const to = (value, index) => {\r\n-    value = Math.round(value);\r\n-    const cpFilter = { ...filter };\r\n-    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n-      cpFilter.price.value[index] = value;\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    return value;\r\n-  };\r\n-\r\n-  const from = (value) => {\r\n-    return Number(value);\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilter.codePostal.error = e.codePostal;\r\n-      cpFilter.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilter(cpFilter);\r\n-  };\r\n-\r\n-  return (\r\n-    <Base className=\"fiche-service-page\">\r\n-      <ContentPageStyle>\r\n-        <Container>\r\n-          <BlocFilterStyle open={click}>\r\n-            {isTabletOrMobile && (\r\n-              <button\r\n-                className=\"menu-burger is-opened\"\r\n-                onClick={toogleCloseFilter}\r\n-              >\r\n-                <span></span>\r\n-                <span></span>\r\n-                <span></span>\r\n-              </button>\r\n-            )}\r\n-            <div className=\"item-filter\">\r\n-              <RangePrice>\r\n-                <label>Prix</label>\r\n-                {service &&\r\n-                service.minPrice &&\r\n-                service.maxPrice &&\r\n-                service.minPrice != service.maxPrice ? (\r\n-                  <Nouislider\r\n-                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n-                    start={[service.minPrice, service.maxPrice]}\r\n-                    connect={true}\r\n-                    behaviour=\"tap\"\r\n-                    step={1}\r\n-                    tooltips={true}\r\n-                    format={{ to, from }}\r\n-                  />\r\n-                ) : (\r\n-                  \"Sur devis\"\r\n-                )}\r\n-              </RangePrice>\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <SelectCat\r\n-                {...filter.deliveryModeTypes}\r\n-                onChangeCallback={(response) => {\r\n-                  const cpFilter = { ...filter };\r\n-                  cpFilter.deliveryModeTypes.value = response;\r\n-                  setFilter(cpFilter);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-            <div className=\"item-filter\">\r\n-              <InputAutoComplete\r\n-                filter={filter}\r\n-                setFilter={setFilter}\r\n-                placeIsSelected={placeIsSelected}\r\n-                setPlaceIsSelected={setPlaceIsSelected}\r\n-                isPendingLatLng={isPendingLatLng}\r\n-                setIsPendingLatLng={setIsPendingLatLng}\r\n-              />\r\n-            </div>\r\n-            <div className=\"btn-filter-banner\">\r\n-              <button\r\n-                className=\"btn-search-filter\"\r\n-                onClick={(e) => {\r\n-                  getBenefits(false);\r\n-                }}\r\n-              >\r\n-                {isDesktopOrLaptop && (\r\n-                  <>\r\n-                    <SearchIcon />\r\n-                  </>\r\n-                )}\r\n-                {isTabletOrMobile && <>Recherche</>}\r\n-              </button>\r\n-            </div>\r\n-          </BlocFilterStyle>\r\n-          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n-          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n-            <BackIcon />\r\n-            <span>Retour à l'univers</span>\r\n-          </BackStyle>\r\n-          {isTabletOrMobile && (\r\n-            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n-              <SearchIcon /> Rechercher une prestation\r\n-            </div>\r\n-          )}\r\n-          <ListePrestationFiche\r\n-            service={service}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n-        </Container>\r\n-      </ContentPageStyle>\r\n-    </Base>\r\n-  );\r\n }\r\n"
                },
                {
                    "date": 1708354519805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,163 +0,0 @@\n-import React, { useEffect, useState } from \"react\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n-import getImgUniverse  from  \"./universeImageManager.js\"\r\n-import { useDispatch, useSelector } from \"react-redux\";\r\n-import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n-import connector from \"../../connector\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import cordZ3img1 from '../../assets/images/z3-3.png';\r\n-import cordZ3img2 from '../../assets/images/z3-2.png';\r\n-import cordZ3img3 from '../../assets/images/z3-1.png';\r\n-import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n-\r\n-import { useParams } from \"react-router-dom\";\r\n-import MapArtisansUnivers from \"./mapArtisansUnivers\";\r\n-import { Col, Container, Row } from \"react-bootstrap\";\r\n-import Commentcamarche from \"./ficheUniversParts/commentcamarche\";\r\n-import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan\";\r\n-import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse\";\r\n-import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites\";\r\n-import anatomieCord from '../../assets/images/zanatCord.png';\r\n-import ButtonDef from \"../../components/ui-elements/buttonDef\";\r\n-\r\n-\r\n-function strUcFirst(a) {\r\n-  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n-}\r\n-export default function FicheUnivers(props\r\n-) {\r\n-  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n-  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n-  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n-\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n-  const [universeDescription, setuniverseDescription] = useState('');\r\n-  var universeId = slugIdUniverse.split(\"-\").pop();\r\n-  const getUniverse = () => {\r\n-\r\n-    const universeId = slugIdUniverse.split(\"-\").pop();\r\n-    if (universeId) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-\r\n-          if (response.data?.name) {\r\n-            setuniverseTitle(response.data.name);\r\n-            setuniverseDescription(response.data.description);\r\n-            //\r\n-            //if (response.data.name === 'Cordonnerie') {\r\n-            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n-            //}\r\n-            //console.log('details Univers', response.data);\r\n-          }\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-        },\r\n-      });\r\n-    }\r\n-  };\r\n-  \r\n-  useEffect(() => {\r\n-    getUniverse();\r\n-  }, []);\r\n-\r\n-  const handleProductListClick = () => {\r\n-    setDisplayListeProduits(!isDisplayListeProduits);\r\n-    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n-  };\r\n-\r\n-  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n-    <div style={{\r\n-      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n-      gap: 24, display: 'inline-flex'\r\n-    }}>\r\n-      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        {universeTitle}\r\n-      </div>\r\n-      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        {universeDescription}</div>\r\n-    </div>\r\n-    <div>\r\n-      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n-        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n-      </div>\r\n-    </div>\r\n-\r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n-    </Row>\r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n-    </Row>\r\n-\r\n-    <Row>\r\n-      <Col>\r\n-        <Commentcamarche></Commentcamarche>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row style={{ marginbottom: 50 }}>\r\n-      <Col>\r\n-        <MapArtisansUnivers>\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n-        </MapArtisansUnivers>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row>\r\n-      <Col>\r\n-        <AnatomieUniverse\r\n-          title={universeTitle}\r\n-          image={anatomieCord}\r\n-        ></AnatomieUniverse>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row>\r\n-      <Col>\r\n-        <div>\r\n-          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n-            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n-          </div>\r\n-        </div>\r\n-      </Col>\r\n-    </Row>\r\n-    <PrestationsFavorites></PrestationsFavorites>\r\n-    <Row >\r\n-      <Col >\r\n-        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n-                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n-      </Col>\r\n-    </Row>\r\n-\r\n-  </Container>\r\n-\r\n-}\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708354670885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,163 @@\n-\n+import React, { useEffect, useState } from \"react\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+import getImgUniverse  from  \"./universeImageManager.js\"\r\n+import { useDispatch, useSelector } from \"react-redux\";\r\n+import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n+import connector from \"../../connector\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import cordZ3img1 from '../../assets/images/z3-3.png';\r\n+import cordZ3img2 from '../../assets/images/z3-2.png';\r\n+import cordZ3img3 from '../../assets/images/z3-1.png';\r\n+import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n+\r\n+import { useParams } from \"react-router-dom\";\r\n+import MapArtisansUnivers from \"./mapArtisansUnivers\";\r\n+import { Col, Container, Row } from \"react-bootstrap\";\r\n+import Commentcamarche from \"./ficheUniversParts/commentcamarche\";\r\n+import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan\";\r\n+import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse\";\r\n+import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites\";\r\n+import anatomieCord from '../../assets/images/zanatCord.png';\r\n+import ButtonDef from \"../../components/ui-elements/buttonDef\";\r\n+\r\n+\r\n+function strUcFirst(a) {\r\n+  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n+}\r\n+export default function FicheUnivers(props\r\n+) {\r\n+  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n+  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n+  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n+\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n+  const [universeDescription, setuniverseDescription] = useState('');\r\n+  var universeId = slugIdUniverse.split(\"-\").pop();\r\n+  const getUniverse = () => {\r\n+\r\n+    const universeId = slugIdUniverse.split(\"-\").pop();\r\n+    if (universeId) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+\r\n+          if (response.data?.name) {\r\n+            setuniverseTitle(response.data.name);\r\n+            setuniverseDescription(response.data.description);\r\n+            //\r\n+            //if (response.data.name === 'Cordonnerie') {\r\n+            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n+            //}\r\n+            //console.log('details Univers', response.data);\r\n+          }\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    }\r\n+  };\r\n+  \r\n+  useEffect(() => {\r\n+    getUniverse();\r\n+  }, []);\r\n+\r\n+  const handleProductListClick = () => {\r\n+    setDisplayListeProduits(!isDisplayListeProduits);\r\n+    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n+  };\r\n+\r\n+  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n+    <div style={{\r\n+      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n+      gap: 24, display: 'inline-flex'\r\n+    }}>\r\n+      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        {universeTitle}\r\n+      </div>\r\n+      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        {universeDescription}</div>\r\n+    </div>\r\n+    <div>\r\n+      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n+        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n+    </Row>\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n+    </Row>\r\n+\r\n+    <Row>\r\n+      <Col>\r\n+        <Commentcamarche></Commentcamarche>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row style={{ marginbottom: 50 }}>\r\n+      <Col>\r\n+        <MapArtisansUnivers>\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n+        </MapArtisansUnivers>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row>\r\n+      <Col>\r\n+        <AnatomieUniverse\r\n+          title={universeTitle}\r\n+          image={anatomieCord}\r\n+        ></AnatomieUniverse>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row>\r\n+      <Col>\r\n+        <div>\r\n+          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n+            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n+          </div>\r\n+        </div>\r\n+      </Col>\r\n+    </Row>\r\n+    <PrestationsFavorites></PrestationsFavorites>\r\n+    <Row >\r\n+      <Col >\r\n+        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n+                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n+      </Col>\r\n+    </Row>\r\n+\r\n+  </Container>\r\n+\r\n+}\r\n"
                },
                {
                    "date": 1708355410033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function FicheUnivers(props\r\n+export default function FicheReparateurServices(props\r\n ) {\r\n   const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n   const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n   const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n"
                }
            ],
            "date": 1708353257215,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport {\r\n  BackStyle,\r\n  BlocFilterStyle,\r\n  ContentPageStyle,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { BackIcon, SearchIcon } from \"../../assets/styles/icons\";\r\nimport Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\nimport Base from \"../../theme/front/base\";\r\nimport Nouislider from \"nouislider-react\";\r\nimport \"nouislider/distribute/nouislider.css\";\r\nimport { RangePrice } from \"../../assets/styles/componentStyles\";\r\nimport ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\nimport endPoints from \"../../config/endPoints\";\r\nimport connector from \"../../connector\";\r\nimport InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\nimport { clearErrors } from \"../../helper/form\";\r\nimport SelectCat from \"../../components/categories/selectCat\";\r\nimport { sortObjects } from \"../../helper/functions\";\r\n\r\nexport default function FicheReparateurServices() {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const [click, setClick] = useState(false);\r\n  const toggleFilter = () => setClick(!click);\r\n  const toogleCloseFilter = () => setClick(false);\r\n\r\n  useEffect(() => {\r\n    if (click) {\r\n      document.body.classList.add(\"menu-is-show\");\r\n    } else {\r\n      document.body.classList.remove(\"menu-is-show\");\r\n    }\r\n  }, [click]);\r\n\r\n  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  const { slugIdUniverse, slugIdService } = useParams();\r\n  const [service, setService] = useState(false);\r\n  const [benefits, setBenefits] = useState([]);\r\n  const [activeUniverse, setActiveUniverse] = useState(false);\r\n  const universe = useSelector((state) => state.universe);\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n  const [filter, setFilter] = useState({\r\n    deliveryModeTypes: {\r\n      label: \"Mode de délivrance\",\r\n      name: \"deliveryModeTypes\",\r\n      placeholder: \"Tous\",\r\n      options: [],\r\n      value: [],\r\n      hideOptions: true,\r\n    },\r\n    codePostal: {\r\n      name: \"codePostal\",\r\n      type: \"text\",\r\n      label: \"Où\",\r\n      placeholder: \"Saisir un code postal\",\r\n      value:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultCodePostal\r\n          : \"\",\r\n      latitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLatitude\r\n          : null,\r\n      longitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLongitude\r\n          : null,\r\n      error: false,\r\n      required: true,\r\n      infoBulle: false,\r\n    },\r\n    price: {\r\n      value: [-1, -1],\r\n    },\r\n    sortBy: {\r\n      label: \"Trier par: \",\r\n      placeholder: `${isTabletOrMobile ? \"trier par :\" : \"\"}`,\r\n      options: [\r\n        { value: \"distance_asc\", label: \"Distance\" },\r\n        { value: \"rating_desc\", label: \"Meilleures notes\" },\r\n        { value: \"price_asc\", label: \"Prix croissant\" },\r\n        { value: \"price_desc\", label: \"Prix décroissant\" },\r\n      ],\r\n      value: `${isTabletOrMobile ? null : \"distance_asc\"}`,\r\n    },\r\n  });\r\n  const dataCrumbs = [\r\n    { name: \"Accueil\", path: \"/\" },\r\n    {\r\n      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n      path: `/univers/${slugIdUniverse}`,\r\n    },\r\n    { name: service ? service.name : \"\", path: \"/\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (universe.allUniverses) {\r\n      const id = slugIdUniverse.split(\"-\").pop();\r\n      if (id) {\r\n        const universeData = universe.allUniverses.find(\r\n          (u) => parseInt(u.id) === parseInt(id)\r\n        );\r\n        if (universeData) {\r\n          setActiveUniverse(universeData);\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [universe]);\r\n\r\n  useEffect(() => {\r\n    getDeliveryModeTypes();\r\n    getService();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isPendingLatLng && service) {\r\n      getBenefits(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [slugIdService, filter.sortBy.value, isPendingLatLng, service.id]);\r\n\r\n  const getDeliveryModeTypes = () => {\r\n    connector({\r\n      method: \"get\",\r\n      url: endPoints.DELIVERY_MODE_TYPES,\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"hydra:member\"] || [];\r\n        const cpFilter = { ...filter };\r\n        let options = [];\r\n        for (let i = 0; i < arrayObj.length; i++) {\r\n          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n        }\r\n        cpFilter.deliveryModeTypes.options = options;\r\n        setFilter(cpFilter);\r\n      },\r\n      catch: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  };\r\n\r\n  const getService = () => {\r\n    const idService = slugIdService.split(\"-\").pop();\r\n    if (idService) {\r\n      let condition = ``;\r\n      if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n        condition += `?latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n      }\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_SERVICE}${idService}${condition}`,\r\n        success: (response) => {\r\n          setService(response.data || {});\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n        },\r\n      });\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const getBenefits = (refresh = false) => {\r\n    const idService = slugIdService.split(\"-\").pop();\r\n    if (idService) {\r\n      if (!placeIsSelected) {\r\n        msgErrors({\r\n          codePostal: true,\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (isTabletOrMobile) {\r\n        setClick(false);\r\n      }\r\n\r\n      if (!isPending) {\r\n        setIsPending(true);\r\n        setFilter(clearErrors(filter));\r\n\r\n        const sortBy = filter.sortBy.value.split(\"_\");\r\n\r\n        let condition = ``;\r\n        if (filter.codePostal.latitude && filter.codePostal.longitude) {\r\n          condition += `&latitude=${filter.codePostal.latitude}&longitude=${filter.codePostal.longitude}`;\r\n        }\r\n        if (sortBy[0] === \"distance\") {\r\n          condition += `&order[distance]=asc`;\r\n        } else if (sortBy[0] === \"price\") {\r\n          condition += `&order[deliveryModes.price]=${sortBy[1]}`;\r\n        }else if (sortBy[0] === \"rating\") {\r\n          condition += `&order[rating]=${sortBy[1]}`;\r\n        }\r\n        if (filter.deliveryModeTypes.value.length) {\r\n          for (let i = 0; i < filter.deliveryModeTypes.value.length; i++) {\r\n            const row = filter.deliveryModeTypes.value[i];\r\n            condition += `&deliveryModes.deliveryModeType.id[]=${row.value}`;\r\n          }\r\n        }\r\n        if (\r\n          filter.price.value[0] > -1 &&\r\n          filter.price.value[1] > -1 &&\r\n          (filter.price.value[0] !== service.minPrice ||\r\n            filter.price.value[1] !== service.maxPrice)\r\n        ) {\r\n          condition += `&deliveryModes.price[between]=${filter.price.value[0]}..${filter.price.value[1]}`;\r\n        }\r\n\r\n        const cpParamsUrlService = `${condition}`;\r\n\r\n        //if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n        if (refresh || paramsUrlService) {\r\n          setParamsUrlService(cpParamsUrlService);\r\n          connector({\r\n            method: \"get\",\r\n            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?service.id=${idService}${cpParamsUrlService}`,\r\n            success: (response) => {\r\n              let results = response.data[\"hydra:member\"] || [];\r\n              //todo list est voir le min et max\r\n              if (service) {\r\n                const cpService = { ...service };\r\n                let prices = [];\r\n                for (var i = 0; i < results.length; i++) {\r\n                  for (var j = 0; j < results[i].deliveryModes.length; j++) {\r\n                    const obj = results[i].deliveryModes[j];\r\n                    if (obj.price && parseFloat(obj.price) > 0) {\r\n                      prices.push(parseFloat(obj.price));\r\n                    }\r\n                  }\r\n                  results[i] = {...results[i], rating :  results[i].user.googleRating || 0};\r\n                }\r\n                if (prices.length) {\r\n                  cpService.minPrice = Math.floor(Math.min(...prices));\r\n                  cpService.maxPrice = Math.ceil(Math.max(...prices));\r\n                  setService(cpService);\r\n                }else{\r\n                  cpService.minPrice = 0;\r\n                  cpService.maxPrice = 0;\r\n                  setService(cpService);\r\n                }\r\n              }\r\n              if (sortBy[0] === \"price\") {\r\n                results = sortObjects(results,'minPrice',sortBy[1]);\r\n              }else if(sortBy[0] === \"rating\"){\r\n                results = sortObjects(results,'rating',sortBy[1]);\r\n              }\r\n              setBenefits(results);\r\n              setIsPending(false);\r\n            },\r\n            catch: (error) => {\r\n              console.log(error);\r\n              setIsPending(false);\r\n            },\r\n          });\r\n        } else {\r\n          setIsPending(false);\r\n        }\r\n      }\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const to = (value, index) => {\r\n    value = Math.round(value);\r\n    const cpFilter = { ...filter };\r\n    if (index !== undefined && cpFilter.price.value[index] !== value) {\r\n      cpFilter.price.value[index] = value;\r\n      setFilter(cpFilter);\r\n    }\r\n    return value;\r\n  };\r\n\r\n  const from = (value) => {\r\n    return Number(value);\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpFilter = { ...filter };\r\n    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n    if (e.codePostal !== undefined) {\r\n      cpFilter.codePostal.error = e.codePostal;\r\n      cpFilter.codePostal.infoBulle = e.codePostal;\r\n    }\r\n    setFilter(cpFilter);\r\n  };\r\n\r\n  return (\r\n    <Base className=\"fiche-service-page\">\r\n      <ContentPageStyle>\r\n        <Container>\r\n          <BlocFilterStyle open={click}>\r\n            {isTabletOrMobile && (\r\n              <button\r\n                className=\"menu-burger is-opened\"\r\n                onClick={toogleCloseFilter}\r\n              >\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </button>\r\n            )}\r\n            <div className=\"item-filter\">\r\n              <RangePrice>\r\n                <label>Prix</label>\r\n                {service &&\r\n                service.minPrice &&\r\n                service.maxPrice &&\r\n                service.minPrice != service.maxPrice ? (\r\n                  <Nouislider\r\n                    range={{ min: service.minPrice, max: service.maxPrice }}\r\n                    start={[service.minPrice, service.maxPrice]}\r\n                    connect={true}\r\n                    behaviour=\"tap\"\r\n                    step={1}\r\n                    tooltips={true}\r\n                    format={{ to, from }}\r\n                  />\r\n                ) : (\r\n                  \"Sur devis\"\r\n                )}\r\n              </RangePrice>\r\n            </div>\r\n            <div className=\"item-filter\">\r\n              <SelectCat\r\n                {...filter.deliveryModeTypes}\r\n                onChangeCallback={(response) => {\r\n                  const cpFilter = { ...filter };\r\n                  cpFilter.deliveryModeTypes.value = response;\r\n                  setFilter(cpFilter);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item-filter\">\r\n              <InputAutoComplete\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n                placeIsSelected={placeIsSelected}\r\n                setPlaceIsSelected={setPlaceIsSelected}\r\n                isPendingLatLng={isPendingLatLng}\r\n                setIsPendingLatLng={setIsPendingLatLng}\r\n              />\r\n            </div>\r\n            <div className=\"btn-filter-banner\">\r\n              <button\r\n                className=\"btn-search-filter\"\r\n                onClick={(e) => {\r\n                  getBenefits(false);\r\n                }}\r\n              >\r\n                {isDesktopOrLaptop && (\r\n                  <>\r\n                    <SearchIcon />\r\n                  </>\r\n                )}\r\n                {isTabletOrMobile && <>Recherche</>}\r\n              </button>\r\n            </div>\r\n          </BlocFilterStyle>\r\n          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n          <BackStyle to={`/univers/${slugIdUniverse}`}>\r\n            <BackIcon />\r\n            <span>Retour à l'univers</span>\r\n          </BackStyle>\r\n          {isTabletOrMobile && (\r\n            <div className=\"btn-toggle-filter\" onClick={toggleFilter}>\r\n              <SearchIcon /> Rechercher une prestation\r\n            </div>\r\n          )}\r\n          <ListePrestationFiche\r\n            service={service}\r\n            benefits={benefits}\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n            isPending={isPending}\r\n          />\r\n        </Container>\r\n      </ContentPageStyle>\r\n    </Base>\r\n  );\r\n}\r\n"
        }
    ]
}