{
    "sourceFile": "src/views/front/fichePrestation.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1712836511199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1712836530786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -407,9 +407,9 @@\n                   </div>\r\n                 ) : null}\r\n \r\n                 {benefit?.user?.achievements.length ? (\r\n-                  <div className=\"bloc-realisation\" style={{paddingTop:20}}>\r\n+                  <div className=\"bloc-realisation\" style={{marginTop:20}}>\r\n                     <h2 className=\"titre-bloc-prestation\">Réalisations :</h2>\r\n                     <GalerieSlide\r\n                       children={dataGallery}\r\n                       onClick={openLightbox}\r\n"
                },
                {
                    "date": 1712836582043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -407,9 +407,9 @@\n                   </div>\r\n                 ) : null}\r\n \r\n                 {benefit?.user?.achievements.length ? (\r\n-                  <div className=\"bloc-realisation\" style={{marginTop:20}}>\r\n+                  <div className=\"bloc-realisation\">\r\n                     <h2 className=\"titre-bloc-prestation\">Réalisations :</h2>\r\n                     <GalerieSlide\r\n                       children={dataGallery}\r\n                       onClick={openLightbox}\r\n"
                },
                {
                    "date": 1715345126196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n                           <p>{benefit.precisionQuote}</p>\r\n                         </div>\r\n                       )}\r\n                       <ButtonDef\r\n-                        textButton=\"Faire un devis\"\r\n+                        textButton=\"Demander un devis\"\r\n                         onClick={() => checkClient()}\r\n                       />\r\n                     </>\r\n                   )}\r\n"
                },
                {
                    "date": 1715678916947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,9 @@\n                           <p>{benefit.precisionQuote}</p>\r\n                         </div>\r\n                       )}\r\n                       <ButtonDef\r\n-                        textButton=\"Demander un devis\"\r\n+                        textButton=\" Demander un devis \"\r\n                         onClick={() => checkClient()}\r\n                       />\r\n                     </>\r\n                   )}\r\n"
                },
                {
                    "date": 1716462089712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n import Select from \"../../components/ui-elements/select\";\r\n import RatingBox from \"../../components/ui-elements/ratingBox\";\r\n \r\n export default function FichePrestation() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n \r\n"
                },
                {
                    "date": 1716462480161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n import Select from \"../../components/ui-elements/select\";\r\n import RatingBox from \"../../components/ui-elements/ratingBox\";\r\n \r\n export default function FichePrestation() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n \r\n"
                },
                {
                    "date": 1718095001480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n import Select from \"../../components/ui-elements/select\";\r\n import RatingBox from \"../../components/ui-elements/ratingBox\";\r\n \r\n export default function FichePrestation() {\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n \r\n"
                }
            ],
            "date": 1712836511199,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\nimport {\r\n  BackStyle,\r\n  ContentPageStyle,\r\n  PropositionStyle,\r\n  ContentFichePrestation,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport {\r\n  AdresseIcon,\r\n  BackIcon,\r\n  FacebookColorIcon,\r\n  InstagramColorIcon,\r\n  LinkedinColorIcon,\r\n  TwitterColorIcon,\r\n  WebIcon,\r\n  YoutubeColorIcon,\r\n} from \"../../assets/styles/icons\";\r\nimport { ButtonDef } from \"../../components/ui\";\r\nimport Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\nimport RadioButton from \"../../components/ui-elements/radioButton\";\r\nimport Base from \"../../theme/front/base\";\r\nimport GalerieSlide from \"../../components/galerieSlide\";\r\nimport endPoints from \"../../config/endPoints\";\r\nimport connector from \"../../connector\";\r\nimport Loader from \"../../components/loader\";\r\nimport {\r\n  getMsgError,\r\n  getPathImage,\r\n  getUniqueListBy,\r\n  parentCategories,\r\n  sortObjects,\r\n} from \"../../helper/functions\";\r\nimport * as vars from \"../../vars\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport Select from \"../../components/ui-elements/select\";\r\nimport RatingBox from \"../../components/ui-elements/ratingBox\";\r\n\r\nexport default function FichePrestation() {\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n\r\n  const auth = useSelector((store) => store.auth);\r\n  const [checkAuto, setCheckAuto] = useState(false);\r\n  const history = useHistory();\r\n  const { slugIdUniverse, slugIdService, slugIdBenefit } = useParams();\r\n  const [benefit, setBenefit] = useState(false);\r\n  const [activeUniverse, setActiveUniverse] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [universRepairman, setUniversRepairman] = useState([]);\r\n  const universe = useSelector((state) => state.universe);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (universe.allUniverses) {\r\n      const id = slugIdUniverse.split(\"-\").pop();\r\n      if (id) {\r\n        const universeData = universe.allUniverses.find(\r\n          (u) => parseInt(u.id) === parseInt(id)\r\n        );\r\n        if (universeData) {\r\n          setActiveUniverse(universeData);\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [universe]);\r\n\r\n  useEffect(() => {\r\n    getBenefit();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getBenefit = () => {\r\n    const id = slugIdBenefit.split(\"-\").pop();\r\n    if (id) {\r\n      setIsPending(true);\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_BENEFIT}/${id}/details?${\r\n          defaultLatitude && defaultLongitude\r\n            ? `latitude=${defaultLatitude}&longitude=${defaultLongitude}`\r\n            : \"\"\r\n        }`,\r\n        success: (response) => {\r\n          const obj = response.data || {};\r\n          setBenefit(response.data || {});\r\n          if (obj?.user?.achievements && obj.user.achievements.length) {\r\n            let dataGallery = [];\r\n            for (let i = 0; i < obj.user.achievements.length; i++) {\r\n              dataGallery.push({\r\n                source: getPathImage(obj.user.achievements[i]),\r\n              });\r\n            }\r\n            setDataGallery(dataGallery);\r\n          }\r\n          if (obj?.deliveryModes && obj.deliveryModes.length) {\r\n            let cpState = { ...state };\r\n            let options = [];\r\n            for (let i = 0; i < obj.deliveryModes.length; i++) {\r\n              const row = obj.deliveryModes[i];\r\n              options.push({\r\n                value: row.id,\r\n                checked: false,\r\n                label: row?.deliveryModeType?.name,\r\n                row: obj.typeService === \"forfait\" ? row : false,\r\n                id: `delivrance_checkbox_${row.id}`,\r\n              });\r\n            }\r\n            cpState.deliveryModes.options = options;\r\n            cpState.deliveryModes.typeService = obj.typeService;\r\n            if(options.length == 1){\r\n              cpState.deliveryModes.value = options[0].value;\r\n            }\r\n            setState(cpState);\r\n          }\r\n          if (obj?.user?.id) {\r\n            getUserRepairmanBenefits(obj.user.id);\r\n          } else {\r\n            setIsPending(false);\r\n          }\r\n        },\r\n        catch: (error) => {\r\n          setIsPending(false);\r\n          NotificationManager.error(getMsgError(error), \"\");\r\n        },\r\n      });\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const getUserRepairmanBenefits = (id) => {\r\n    connector({\r\n      method: \"get\",\r\n      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n      success: (response) => {\r\n        if (response.data?.benefits) {\r\n          let subCategories = [];\r\n          response.data.benefits.map((benefit) => {\r\n            if (benefit?.service?.categories) {\r\n              subCategories = [...subCategories, ...benefit.service.categories];\r\n            }\r\n          });\r\n          const cpCategories = parentCategories(subCategories);\r\n          setCategories(cpCategories);\r\n          if (cpCategories.length > 0) {\r\n            let cpUniversRepairman = [];\r\n            cpCategories.map((cat) => {\r\n              if (cat?.universe) {\r\n                cpUniversRepairman.push({\r\n                  id: cat.universe.id,\r\n                  name: cat.universe.name,\r\n                  slug: cat.universe.slug,\r\n                  position: cat.universe.position,\r\n                });\r\n              }\r\n            });\r\n            setUniversRepairman(\r\n              sortObjects(\r\n                getUniqueListBy(cpUniversRepairman, \"id\"),\r\n                \"position\",\r\n                \"asc\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n        setIsPending(false);\r\n      },\r\n      catch: (error) => {\r\n        setIsPending(false);\r\n        NotificationManager.error(getMsgError(error), \"\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const dataCrumbs = [\r\n    { name: \"Accueil\", path: \"/\" },\r\n    {\r\n      name: `${activeUniverse ? activeUniverse.name : \"Univers\"}`,\r\n      path: `/univers/${slugIdUniverse}`,\r\n    },\r\n    {\r\n      name: benefit?.service?.name ? benefit.service.name : \"Service\",\r\n      path: `/univers/${slugIdUniverse}/${slugIdService}`,\r\n    },\r\n    {\r\n      name: benefit?.user?.enterprise ? benefit.user.enterprise : \"Société\",\r\n      path: \"#\",\r\n    },\r\n  ];\r\n\r\n  const [dataGallery, setDataGallery] = useState([]);\r\n\r\n  const [state, setState] = useState({\r\n    deliveryModes: {\r\n      label: \"Modes de délivrance\",\r\n      placeholder: \"Modes de délivrance\",\r\n      id: \"delivrance_radio\",\r\n      options: [],\r\n      value: \"\",\r\n      name: \"deliveryModes\",\r\n      typeService: null,\r\n    },\r\n  });\r\n\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [stateImage, setStateImage] = useState(false);\r\n\r\n  const openLightbox = (photo, index) => {\r\n    setCurrentImage(index);\r\n    setStateImage(true);\r\n  };\r\n\r\n  const closeLightbox = () => {\r\n    setStateImage(false);\r\n  };\r\n\r\n  const checkClient = () => {\r\n    if(!state.deliveryModes.value){\r\n      NotificationManager.error(\"Veuillez choisir un mode de délivrance.\", \"\");\r\n      return;\r\n    }\r\n\r\n    if (auth?.user && auth?.roles) {\r\n      if (auth.roles.includes(vars.ROLES.ROLE_CLIENT)) {\r\n        history.push(\r\n          `/univers/${slugIdUniverse}/${slugIdService}/${slugIdBenefit}/demande/${state.deliveryModes.value}`\r\n        );\r\n      } else if (auth.roles.includes(vars.ROLES.ROLE_REPAIRMAN)) {\r\n        NotificationManager.error(\r\n          \"Veuillez créer un compte client, vous ne pouvez pas passer une commande en tant que réparateur\",\r\n          \"\"\r\n        );\r\n      } else if (auth.roles.includes(vars.ROLES.ROLE_ADMIN)) {\r\n        NotificationManager.error(\r\n          \"Veuillez créer un compte client, vous ne pouvez pas passer une commande en tant que admin\",\r\n          \"\"\r\n        );\r\n      }\r\n    } else {\r\n      setCheckAuto(true);\r\n      document.dispatchEvent(\r\n        new CustomEvent(\"eventHeader\", { detail: \"openModalClient\" })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth?.user && checkAuto) {\r\n      checkClient();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [auth.user]);\r\n\r\n  if (isPending || !benefit) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Base className=\"fiche-prestation-page\">\r\n      <ContentPageStyle>\r\n        <Container>\r\n          {isDesktopOrLaptop && <Breadcrumb crumbs={dataCrumbs} />}\r\n\r\n          <BackStyle to={`/univers/${slugIdUniverse}/${slugIdService}`}>\r\n            <BackIcon />\r\n            <span>Retour au service</span>\r\n          </BackStyle>\r\n          <Row>\r\n            <Col lg={4} className=\"proposition-bloc\">\r\n              {isTabletOrMobile && (\r\n                <ContentFichePrestation>\r\n                  <div className=\"logo-societe\">\r\n                    <img\r\n                      src={getPathImage(benefit?.user?.picture)}\r\n                      alt={benefit?.user?.enterprise}\r\n                    />\r\n                  </div>\r\n                  <div className=\"info-societe\">\r\n                    <div className=\"detail-info-societe\">\r\n                      <p className=\"name-societe\">\r\n                        {benefit?.user?.enterprise}\r\n                      </p>\r\n                      <p className=\"fonction-societe\">\r\n                        {`${benefit?.user?.postalCode} ${benefit?.user?.city}`}\r\n                      </p>\r\n                      {benefit?.user?.googleRating && (\r\n                        <RatingBox\r\n                          value={benefit.user.googleRating}\r\n                          showValue={true}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </ContentFichePrestation>\r\n              )}\r\n              <PropositionStyle>\r\n                <div className=\"content-proposition\">\r\n                  <div className=\"bloc-titre-fiche mb-3\">\r\n                    <p className=\"titre-proposition\">Nom du service</p>\r\n                    <h1 className=\"titre-fiche-prestation\">\r\n                      {benefit?.service?.name}\r\n                    </h1>\r\n                  </div>\r\n                  <p className=\"titre-proposition\">\r\n                    Proposition(s) du réparateur :\r\n                  </p>\r\n                  {isTabletOrMobile ? (\r\n                    <Select\r\n                      {...state.deliveryModes}\r\n                      onChange={(val) => {\r\n                        const cpState = { ...state };\r\n                        cpState.deliveryModes.value = val.value;\r\n                        setState(cpState);\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <RadioButton\r\n                      {...state.deliveryModes}\r\n                      onChange={(val) => {\r\n                        const cpState = { ...state };\r\n                        cpState.deliveryModes.value = val.value;\r\n                        setState(cpState);\r\n                      }}\r\n                    />\r\n                  )}\r\n\r\n                  {benefit.typeService === \"forfait\" && (\r\n                    <ButtonDef\r\n                      textButton=\"Commander\"\r\n                      onClick={() => checkClient()}\r\n                    />\r\n                  )}\r\n\r\n                  {benefit.typeService === \"devis\" && (\r\n                    <>\r\n                      <div className=\"bloc-price-devis\">\r\n                        <span className=\"titre-price\">Prix du devis</span>\r\n                        <span className=\"price-devis\">\r\n                          {benefit.priceQuote\r\n                            ? `${benefit.priceQuote?.toFixed(2)} € TTC`\r\n                            : \"GRATUIT\"}\r\n                        </span>\r\n                      </div>\r\n                      {benefit.precisionQuote && (\r\n                        <div className=\"bloc-precision\">\r\n                          <p className=\"titre-precision\">\r\n                            Précision de prise en charge du devis:\r\n                          </p>\r\n                          <p>{benefit.precisionQuote}</p>\r\n                        </div>\r\n                      )}\r\n                      <ButtonDef\r\n                        textButton=\"Faire un devis\"\r\n                        onClick={() => checkClient()}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </PropositionStyle>\r\n            </Col>\r\n            <Col lg={8}>\r\n              <ContentFichePrestation>\r\n                {isDesktopOrLaptop && (\r\n                  <>\r\n                    <div className=\"info-societe\">\r\n                      <div className=\"detail-info-societe\">\r\n                        <p className=\"name-societe\">\r\n                          {benefit?.user?.enterprise}\r\n                        </p>\r\n                        <p className=\"fonction-societe\">\r\n                          {benefit?.user?.postalCode} {benefit?.user?.city}\r\n                        </p>\r\n                        {benefit?.user?.googleRating && (\r\n                          <RatingBox\r\n                            note=\"Note Google :\"\r\n                            value={benefit.user.googleRating}\r\n                            showValue={true}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"logo-societe\">\r\n                        <img\r\n                          src={getPathImage(benefit?.user?.picture)}\r\n                          alt={benefit?.user?.enterprise}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                {benefit?.user?.description ? (\r\n                  <div className=\"description-societe\">\r\n                    {benefit?.user?.description}\r\n                  </div>\r\n                ) : null}\r\n\r\n                {benefit?.user?.achievements.length ? (\r\n                  <div className=\"bloc-realisation\" style={{paddingTop:20}}>\r\n                    <h2 className=\"titre-bloc-prestation\">Réalisations :</h2>\r\n                    <GalerieSlide\r\n                      children={dataGallery}\r\n                      onClick={openLightbox}\r\n                    />\r\n                    <ModalGateway>\r\n                      {stateImage ? (\r\n                        <Modal onClose={closeLightbox}>\r\n                          <Carousel\r\n                            currentIndex={currentImage}\r\n                            views={dataGallery}\r\n                          />\r\n                        </Modal>\r\n                      ) : null}\r\n                    </ModalGateway>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <div className=\"cats-prestation\">\r\n                  <span>Univers :</span>\r\n                  <div className=\"item-cats-prestation\">\r\n                    {universRepairman.length > 0\r\n                      ? universRepairman.map((row) => (\r\n                          <p key={row.id}>\r\n                            <span>{row.name}</span>\r\n                          </p>\r\n                        ))\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n                <div className=\"bloc-more\">\r\n                  <h2 className=\"titre-bloc-prestation\">En savoir plus :</h2>\r\n                  <div className=\"info-societe-web\">\r\n                    <p>\r\n                      <AdresseIcon /> {benefit?.user?.address}{\" \"}\r\n                      {benefit?.user?.additionalAddress}{\" \"}\r\n                      {benefit?.user?.postalCode} {benefit?.user?.city}\r\n                    </p>\r\n                    {benefit?.user?.website ? (\r\n                      <p>\r\n                        <Link\r\n                          to={{ pathname: benefit?.user?.website }}\r\n                          target=\"_blank\"\r\n                        >\r\n                          <WebIcon /> {benefit?.user?.website}\r\n                        </Link>\r\n                      </p>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  <div className=\"socials-societe\">\r\n                    {benefit?.user?.facebook ? (\r\n                      <Link\r\n                        to={{ pathname: benefit.user.facebook }}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <FacebookColorIcon />\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {benefit?.user?.instagram ? (\r\n                      <Link\r\n                        to={{ pathname: benefit.user.instagram }}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <InstagramColorIcon />\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {benefit?.user?.twitter ? (\r\n                      <Link\r\n                        to={{ pathname: benefit.user.twitter }}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <TwitterColorIcon />\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {benefit?.user?.linkedIn ? (\r\n                      <Link\r\n                        to={{ pathname: benefit.user.linkedIn }}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <LinkedinColorIcon />\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {benefit?.user?.youTube ? (\r\n                      <Link\r\n                        to={{ pathname: benefit.user.youTube }}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <YoutubeColorIcon />\r\n                      </Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </ContentFichePrestation>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ContentPageStyle>\r\n    </Base>\r\n  );\r\n}\r\n"
        }
    ]
}