{
    "sourceFile": "src/views/front/universervice.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 35,
            "patches": [
                {
                    "date": 1710443928529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1710444012076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n \r\n-export default function Universe() {\r\n+export default function Universervice() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n"
                },
                {
                    "date": 1710444506286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,10 @@\n import FicheUnivers from \"./ficheUnivers\";\r\n \r\n export default function Universervice() {\r\n   const isDisplayFilter = true;\r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n  \r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n"
                },
                {
                    "date": 1710444695357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -612,19 +612,10 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <><FicheUnivers\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUnivers></>)}\r\n-              {isDisplayListeProduits && (\r\n+    \r\n+           \r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -634,9 +625,8 @@\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n                 </ListProduits>\r\n-              )}\r\n            \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1710444938793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,9 @@\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n \r\n export default function Universervice() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n+\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n  \r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n@@ -411,16 +410,16 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n-          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n-            <>\r\n+       \r\n+          \r\n               <BannerPage\r\n                 universe={universe}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n-              /></>\r\n-          )}\r\n+              />\r\n+   \r\n            <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n             <Container >\r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1712604079798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -635,9 +635,9 @@\n         </>\r\n       ) : (\r\n         <FoundPage\r\n           noBase\r\n-          title=\"Univers en cours de développement\"\r\n+          title=\"Univers en cours de ddéveloppement\"\r\n           image={imgMaintenence}\r\n         />\r\n       )}\r\n     </Base>\r\n"
                },
                {
                    "date": 1712609386980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,645 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerPage from \"../../components/front/bannerPage\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+import ArtListProduits from \"../../components/front/artListProduits\";\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+\r\n+export default function Universervice() {\r\n+\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+ \r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [universe, setUniverse] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          //setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = false, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"] );\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(response.data);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+        <>\r\n+       \r\n+          \r\n+              <BannerPage\r\n+                universe={universe}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+   \r\n+           <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n+            <Container >\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+    \r\n+           \r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+           \r\n+             \r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de ddéveloppement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )}\r\n+    </Base>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1714988392579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,43 +27,37 @@\n import connector from \"../../connector\";\r\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n+import { consoleActivated, pathImage } from \"../../vars\";\r\n \r\n-export default function Universervice() {\r\n \r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+export default function Universeservice() {\r\n+  const isDisplayFilter = true;\r\n+\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n- \r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n+  const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n   const [toggleFilter, setToggleFilter] = useState(false);\r\n   const history = useHistory();\r\n   const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n   const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n   const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n+  const [defaultCategory, setDefaultCategory] = useState( parseInt(localStorage.getItem(\"defaultCategory\"))  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)  );\r\n   const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n+  const [defaultLatitude] = useState(    parseFloat(localStorage.getItem(\"latitude\"))  );\r\n+  const [defaultLongitude] = useState(    parseFloat(localStorage.getItem(\"longitude\"))  );\r\n   const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n   const { slugIdUniverse } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   const [universe, setUniverse] = useState(false);\r\n+  const [precUniverseid, setPrecUniverseid] = useState(0);\r\n+  \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n@@ -218,661 +212,22 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          //setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = false, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"] );\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(response.data);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-        <>\r\n-       \r\n-          \r\n-              <BannerPage\r\n-                universe={universe}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n+    //console.log(\"UNI:1:01 slugIdUniverse.split \",slugIdUniverse,id);\r\n+    //console.log(\"UNI:1:011 \", `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`);\r\n    \r\n-           <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n-            <Container >\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n+    if ( (precUniverseid !== id) &&  id) {\r\n     \r\n-           \r\n-                <ListProduits\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduits>\r\n-           \r\n-             \r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de ddéveloppement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )}\r\n-    </Base>\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerPage from \"../../components/front/bannerPage\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n-import ArtListProduits from \"../../components/front/artListProduits\";\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-\r\n-export default function Universervice() {\r\n-\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n- \r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n+      //console.log(\"UNI:1:012 if  id\", id);\r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n+          //console.log(\"UNI:1:015 response success \",response);\r\n           const arrayObj = response.data || { categories: [] };\r\n+          //console.log(\"UNI:1:02 response success \",arrayObj);\r\n           setUniverse(arrayObj);\r\n-\r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n \r\n           cpFilter.category.value = null;\r\n@@ -906,19 +261,21 @@\n               }\r\n             }\r\n             cpFilter.category.options.push({ label: o.name, value: o.id });\r\n           }\r\n+          setPrecUniverseid(id);\r\n           setFilter(cpFilter);\r\n         },\r\n         catch: (error) => {\r\n-          console.log(error);\r\n+          console.log(\"ERROR ANONYMOUS_UNIVERSE :\",error);\r\n           if (error.response?.data?.code !== undefined) {\r\n             if (error.response.data.code === 401) {\r\n               NotificationManager.error(\"Univers introuvable.\", \"\");\r\n             } else if (error.response.data.message !== undefined) {\r\n               NotificationManager.error(error.response.data.message, \"\");\r\n             }\r\n           }\r\n+        \r\n           setUniverse(null);\r\n         },\r\n       });\r\n     } else {\r\n@@ -1055,16 +412,16 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n-       \r\n-          \r\n+          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n+            <>\r\n               <BannerPage\r\n                 universe={universe}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n-              />\r\n-   \r\n+              /></>\r\n+          )}\r\n            <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n             <Container >\r\n \r\n               {isDesktopOrLaptop && (\r\n@@ -1256,10 +613,19 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-    \r\n-           \r\n+              {isDisplayFicheUnivers && (\r\n+                <><FicheUnivers\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n+\r\n+                > </FicheUnivers></>)}\r\n+              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -1269,8 +635,9 @@\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n                 </ListProduits>\r\n+              )}\r\n            \r\n              \r\n \r\n \r\n@@ -1280,9 +647,9 @@\n         </>\r\n       ) : (\r\n         <FoundPage\r\n           noBase\r\n-          title=\"Univers en cours de ddéveloppement\"\r\n+          title=\"Univers en cours de edéveloppement\"\r\n           image={imgMaintenence}\r\n         />\r\n       )}\r\n     </Base>\r\n"
                },
                {
                    "date": 1714988419340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,10 @@\n \r\n export default function Universeservice() {\r\n   const isDisplayFilter = true;\r\n \r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(yes);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n   const [toggleFilter, setToggleFilter] = useState(false);\r\n"
                },
                {
                    "date": 1714988619778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,18 +613,9 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <><FicheUnivers\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUnivers></>)}\r\n+            \r\n               {isDisplayListeProduits && (\r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n"
                },
                {
                    "date": 1714988639683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,21 +614,9 @@\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n             \r\n-              {isDisplayListeProduits && (\r\n-                <ListProduits\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduits>\r\n-              )}\r\n+          \r\n            \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714988659737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,10 +614,21 @@\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n             \r\n-          \r\n-           \r\n+              \r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+                         \r\n              \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1714988723062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -412,16 +412,9 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n-          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n-            <>\r\n-              <BannerPage\r\n-                universe={universe}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              /></>\r\n-          )}\r\n+        \r\n            <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n             <Container >\r\n \r\n               {isDesktopOrLaptop && (\r\n@@ -615,21 +608,9 @@\n                 </BlocFilterStyle>\r\n               )}\r\n             \r\n               \r\n-                <ListProduits\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduits>\r\n-                         \r\n-             \r\n+      \r\n \r\n \r\n \r\n             </Container>\r\n"
                },
                {
                    "date": 1714989187041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -436,9 +436,9 @@\n                   <SearchIcon /> Rechercher une prestation\r\n                 </div>\r\n               )}\r\n \r\n-              {isDisplayListeProduits && (\r\n+              {true && (\r\n                 <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                   {isTabletOrMobile && (\r\n                     <button\r\n                       className=\"menu-burger is-opened\"\r\n"
                },
                {
                    "date": 1714989460324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,13 +30,13 @@\n import FicheUnivers from \"./ficheUnivers\";\r\n import { consoleActivated, pathImage } from \"../../vars\";\r\n \r\n \r\n-export default function Universeservice() {\r\n+export default function Universe() {\r\n   const isDisplayFilter = true;\r\n \r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(yes);\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n   const [toggleFilter, setToggleFilter] = useState(false);\r\n@@ -412,9 +412,16 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n-        \r\n+          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n+            <>\r\n+              <BannerPage\r\n+                universe={universe}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              /></>\r\n+          )}\r\n            <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n             <Container >\r\n \r\n               {isDesktopOrLaptop && (\r\n@@ -436,9 +443,9 @@\n                   <SearchIcon /> Rechercher une prestation\r\n                 </div>\r\n               )}\r\n \r\n-              {true && (\r\n+              {isDisplayListeProduits && (\r\n                 <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                   {isTabletOrMobile && (\r\n                     <button\r\n                       className=\"menu-burger is-opened\"\r\n@@ -606,14 +613,36 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-            \r\n-              \r\n-      \r\n+              {isDisplayFicheUnivers && (\r\n+                <><FicheUnivers\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n+                > </FicheUnivers></>)}\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+              )}\r\n+           \r\n+             \r\n \r\n \r\n+\r\n             </Container>\r\n           </ContentPageStyle>\r\n         </>\r\n       ) : (\r\n"
                },
                {
                    "date": 1714989477209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n import FicheUnivers from \"./ficheUnivers\";\r\n import { consoleActivated, pathImage } from \"../../vars\";\r\n \r\n \r\n-export default function Universe() {\r\n+export default function Universeservice() {\r\n   const isDisplayFilter = true;\r\n \r\n   const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n"
                },
                {
                    "date": 1714989541320,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,18 +613,9 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <><FicheUnivers\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-                > </FicheUnivers></>)}\r\n               {isDisplayListeProduits && (\r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n"
                },
                {
                    "date": 1714989580755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n \r\n export default function Universeservice() {\r\n   const isDisplayFilter = true;\r\n \r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n"
                },
                {
                    "date": 1714989844545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,14 +28,15 @@\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n import { consoleActivated, pathImage } from \"../../vars\";\r\n+import FicheUniverservice from \"./ficheUniverservice\";\r\n \r\n \r\n export default function Universeservice() {\r\n   const isDisplayFilter = true;\r\n \r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n@@ -613,24 +614,20 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n+              {isDisplayFicheUnivers && (\r\n+                <><FicheUniverservice\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-              {isDisplayListeProduits && (\r\n-                <ListProduits\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduits>\r\n-              )}\r\n-           \r\n+                > </FicheUnivers></>)}\r\n              \r\n+             \r\n \r\n \r\n \r\n             </Container>\r\n"
                },
                {
                    "date": 1714989852524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -623,9 +623,9 @@\n                   isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-                > </FicheUnivers></>)}\r\n+                > </FicheUniverservice></>)}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714990030386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -619,9 +619,9 @@\n                 <><FicheUniverservice\r\n                   isDisplayListeProduits={isDisplayListeProduits}\r\n                   setDisplayListeProduits={setDisplayListeProduits}\r\n                   setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={false}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n                 > </FicheUniverservice></>)}\r\n"
                },
                {
                    "date": 1714990232920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,18 +614,8 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <><FicheUniverservice\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={false}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUniverservice></>)}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714990251913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,8 +614,18 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n+              {isDisplayFicheUnivers && (\r\n+                <><FicheUniverservice\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={false}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n+\r\n+                > </FicheUniverservice></>)}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714990272728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -615,17 +615,17 @@\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n               {isDisplayFicheUnivers && (\r\n-                <><FicheUniverservice\r\n+                <FicheUniverservice\r\n                   isDisplayListeProduits={isDisplayListeProduits}\r\n                   setDisplayListeProduits={setDisplayListeProduits}\r\n                   setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n                   isDisplayFicheUnivers={false}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-                > </FicheUniverservice></>)}\r\n+                > </FicheUniverservice)}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714990305257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -623,9 +623,9 @@\n                   isDisplayFicheUnivers={false}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-                > </FicheUniverservice)}\r\n+                > </FicheUniverservice>)}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714990980307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,14 +616,14 @@\n                 </BlocFilterStyle>\r\n               )}\r\n               {isDisplayFicheUnivers && (\r\n                 <FicheUniverservice\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  isDisplayListeProduits={true}\r\n                   setDisplayListeProduits={setDisplayListeProduits}\r\n                   setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n                   isDisplayFicheUnivers={false}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={false}\r\n \r\n                 > </FicheUniverservice>)}\r\n              \r\n              \r\n"
                },
                {
                    "date": 1714991009841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,16 +616,16 @@\n                 </BlocFilterStyle>\r\n               )}\r\n               {isDisplayFicheUnivers && (\r\n                 <FicheUniverservice\r\n-                  isDisplayListeProduits={true}\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n                   setDisplayListeProduits={setDisplayListeProduits}\r\n                   setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n                   isDisplayFicheUnivers={false}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={false}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-                > </FicheUniverservice>)}\r\n+                > </FicheUniverservice>}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714991018682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -623,9 +623,9 @@\n                   isDisplayFicheUnivers={false}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-                > </FicheUniverservice>}\r\n+                > </FicheUniverservice>)}\r\n              \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1714991415432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -626,11 +626,23 @@\n \r\n                 > </FicheUniverservice>)}\r\n              \r\n              \r\n+             {isDisplayListeProduits && (\r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+              )}\r\n \r\n \r\n-\r\n             </Container>\r\n           </ContentPageStyle>\r\n         </>\r\n       ) : (\r\n"
                },
                {
                    "date": 1714991500069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,18 +614,8 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <FicheUniverservice\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={false}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUniverservice>)}\r\n              \r\n              \r\n              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n"
                },
                {
                    "date": 1714991512244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,8 +614,18 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n+              {isDisplayFicheUnivers && (\r\n+                <FicheUniverservice\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={false}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n+\r\n+                > </FicheUniverservice>)}\r\n              \r\n              \r\n              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n"
                },
                {
                    "date": 1714991542509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,18 +614,9 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <FicheUniverservice\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={false}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUniverservice>)}\r\n+           \r\n              \r\n              \r\n              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n"
                },
                {
                    "date": 1714991598360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,9 +614,18 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-           \r\n+              {isDisplayFicheUnivers && (\r\n+                <FicheUniverservice\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={false}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n+\r\n+                > </FicheUniverservice>)}\r\n              \r\n              \r\n              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n"
                },
                {
                    "date": 1716462089349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n   const [toggleFilter, setToggleFilter] = useState(false);\r\n   const history = useHistory();\r\n   const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n"
                },
                {
                    "date": 1716462480136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 793px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n   const [toggleFilter, setToggleFilter] = useState(false);\r\n   const history = useHistory();\r\n   const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n"
                },
                {
                    "date": 1718095001379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \r\n   const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({  query: \"(min-width: 994px)\"  });\r\n   const [toggleFilter, setToggleFilter] = useState(false);\r\n   const history = useHistory();\r\n   const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n"
                }
            ],
            "date": 1710443928529,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\nimport { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\nimport BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\nimport {\r\n  BlocFilterStyle,\r\n  ContentPageStyle,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { SearchIcon } from \"../../assets/styles/icons\";\r\nimport SelectCat from \"../../components/categories/selectCat\";\r\nimport FoundPage from \"../../components/foundPage\";\r\nimport BannerPage from \"../../components/front/bannerPage\";\r\nimport ListProduits from \"../../components/front/listProduits\";\r\nimport ArtListProduits from \"../../components/front/artListProduits\";\r\nimport Loader from \"../../components/loader\";\r\nimport Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\nimport InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\nimport InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\nimport Select from \"../../components/ui-elements/select\";\r\nimport endPoints from \"../../config/endPoints\";\r\nimport ROUTES from \"../../config/routes\";\r\nimport connector from \"../../connector\";\r\nimport { clearErrors } from \"../../helper/form\";\r\nimport Base from \"../../theme/front/base\";\r\nimport FicheUnivers from \"./ficheUnivers\";\r\n\r\nexport default function Universe() {\r\n  const isDisplayFilter = true;\r\n  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n \r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const [toggleFilter, setToggleFilter] = useState(false);\r\n  const history = useHistory();\r\n  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n  const [defaultCategory, setDefaultCategory] = useState(\r\n    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n  );\r\n  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n  );\r\n  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n  const { slugIdUniverse } = useParams();\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [universe, setUniverse] = useState(false);\r\n  const [perPage, setPerPage] = useState(perPageDesMob);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [services, setServices] = useState([]);\r\n  const [totalServices, setTotalServices] = useState(0);\r\n  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n  const universeSelector = useSelector((state) => state.universe);\r\n  const [filter, setFilter] = useState({\r\n    universe: {\r\n      label: \"Univers\",\r\n      placeholder: \"Choisir dans la liste\",\r\n      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n      value: \"\",\r\n      category: [],\r\n      nameCategory: \"\",\r\n      nameSubCategory: \"\",\r\n      requireSearchSubCategory: false,\r\n      isSearchable: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n    },\r\n    category: {\r\n      label: \"Catégorie(s)\",\r\n      placeholder: \"Choisir dans la liste\",\r\n      options: [],\r\n      value: null,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n    },\r\n    subCategory: {\r\n      label: \"Sous-catégorie(s)\",\r\n      placeholder: \"Affiner votre recherche\",\r\n      options: [],\r\n      value: null,\r\n      hideOptions: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n    },\r\n    keyword: {\r\n      label: \"Réparer quoi\",\r\n      type: \"text\",\r\n      name: \"keyword\",\r\n      placeholder: \"Rentrer un mot clé\",\r\n      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n      options: [],\r\n      active:\r\n        defaultKeywordBy && defaultKeywordId\r\n          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n          : {},\r\n      error: false,\r\n      required: false,\r\n    },\r\n  });\r\n  const [filterMap, setFilterMap] = useState({\r\n    codePostal: {\r\n      name: \"codePostal\",\r\n      type: \"text\",\r\n      label: \"Où\",\r\n      placeholder: \"Saisir un code postal\",\r\n      value:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultCodePostal\r\n          : \"\",\r\n      latitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLatitude\r\n          : null,\r\n      longitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLongitude\r\n          : null,\r\n      error: false,\r\n      required: true,\r\n      infoBulle: false,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (toggleFilter) {\r\n      document.body.classList.add(\"menu-is-show\");\r\n    } else {\r\n      document.body.classList.remove(\"menu-is-show\");\r\n    }\r\n  }, [toggleFilter]);\r\n\r\n  useEffect(() => {\r\n    if (universeSelector.allUniverses) {\r\n      let cpFilter = { ...filter };\r\n      cpFilter.universe.options = [];\r\n      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n        let o = universeSelector.allUniverses[i];\r\n        cpFilter.universe.options.push({\r\n          label: o.name,\r\n          value: o.id,\r\n          slug: o.slug,\r\n        });\r\n      }\r\n      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n      setFilter(cpFilter);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [universeSelector, slugIdUniverse]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"codePostal\")) {\r\n      getUniverse();\r\n    } else {\r\n      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n      history.push(ROUTES.HOME.url);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [slugIdUniverse]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"Universe\", function (event) {\r\n      if (event?.detail?.url && event?.detail?.id) {\r\n        const cpFilter = { ...filter };\r\n        cpFilter.keyword.value = \"\";\r\n        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n        cpFilter.keyword.options = [];\r\n        localStorage.setItem(\"keywordVal\", \"\");\r\n        localStorage.setItem(\"keywordBy\", \"\");\r\n        localStorage.setItem(\"keywordId\", \"\");\r\n        localStorage.setItem(\"defaultCategory\", \"\");\r\n        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n        setDefaultCategory(null);\r\n        setDefaultSubCategory(null);\r\n        setFilter(cpFilter);\r\n      } else {\r\n        console.log(\"error event params.\");\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (universe && !isPendingLatLng) {\r\n      getServices(false, 0);\r\n    }\r\n  }, [universe]);\r\n\r\n  useEffect(() => {\r\n    if (universe && !isPendingLatLng) {\r\n      getServices(false, null);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isPendingLatLng, pageIndex, perPage]);\r\n\r\n  const getUniverse = () => {\r\n    const id = slugIdUniverse.split(\"-\").pop();\r\n    if (id) {\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n        success: (response) => {\r\n          const arrayObj = response.data || { categories: [] };\r\n          setUniverse(arrayObj);\r\n\r\n          let cpFilter = { ...filter };\r\n          cpFilter.category.options = [];\r\n\r\n          cpFilter.category.value = null;\r\n          cpFilter.subCategory.value = null;\r\n          cpFilter.subCategory.options = [];\r\n\r\n          if (response.data?.nameCategory) {\r\n            cpFilter.category.label = response.data.nameCategory;\r\n          }\r\n\r\n          if (response.data?.nameSubCategory) {\r\n            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n          }\r\n\r\n          if (response.data?.requireSearchSubCategory != undefined) {\r\n            cpFilter.universe.requireSearchSubCategory =\r\n              response.data.requireSearchSubCategory;\r\n          }\r\n\r\n          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n            let o = arrayObj.categories[i];\r\n\r\n            if (o.id == defaultCategory) {\r\n              cpFilter.category.value = defaultCategory;\r\n              cpFilter.subCategory.value = defaultSubCategory;\r\n              for (let j = 0; j < o.children.length; j++) {\r\n                cpFilter.subCategory.options.push({\r\n                  label: o.children[j].name,\r\n                  value: o.children[j].id,\r\n                });\r\n              }\r\n            }\r\n            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n          }\r\n          setFilter(cpFilter);\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n          if (error.response?.data?.code !== undefined) {\r\n            if (error.response.data.code === 401) {\r\n              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n            } else if (error.response.data.message !== undefined) {\r\n              NotificationManager.error(error.response.data.message, \"\");\r\n            }\r\n          }\r\n          setUniverse(null);\r\n        },\r\n      });\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const getServices = (refresh = false, index = null) => {\r\n    index = index != null ? index : pageIndex;\r\n    setPageIndex(index);\r\n    if (!placeIsSelected) {\r\n      msgErrors({\r\n        codePostal: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!isPending) {\r\n      setIsPending(true);\r\n      setFilter(clearErrors(filter));\r\n      setFilterMap(clearErrors(filterMap));\r\n      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n        let condition = \"\";\r\n        if (filter.category.value) {\r\n          condition += `&categories.parent.id=${filter.category.value}`;\r\n        }\r\n        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n          }\r\n        }\r\n        /*  if (\r\n          filter.keyword.active.id &&\r\n          filter.keyword.active.by &&\r\n          filter.keyword.value.trim()\r\n        ) {\r\n          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n        } else if (filter.keyword.value.trim()) {\r\n          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n        } */\r\n\r\n        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n        }\r\n\r\n        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n          }${condition}`;\r\n\r\n        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n          setParamsUrlService(cpParamsUrlService);\r\n          connector({\r\n            method: \"get\",\r\n            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n            success: (response) => {\r\n              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"] );\r\n              setServices(response.data[\"hydra:member\"] || []);\r\n              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n              console.log(response.data);\r\n              setIsPending(false);\r\n            },\r\n            catch: (error) => {\r\n              console.log(error);\r\n              setIsPending(false);\r\n            },\r\n          });\r\n        } else {\r\n          setIsPending(false);\r\n        }\r\n      } else {\r\n        msgErrors({\r\n          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n        });\r\n        setIsPending(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n    const index = cpCategories.findIndex(\r\n      (cat) => cat.id === cpFilter.category.value\r\n    );\r\n    cpFilter.subCategory.options = [];\r\n    let subCat = [];\r\n    if (index > -1) {\r\n      subCat = cpCategories[index].children;\r\n    } else {\r\n      const allSubCategory = [];\r\n      for (let i = 0; i < cpCategories.length; i++) {\r\n        allSubCategory.push(...cpCategories[i].children);\r\n      }\r\n      subCat = allSubCategory;\r\n    }\r\n    for (let i = 0; i < subCat.length; i++) {\r\n      cpFilter.subCategory.options.push({\r\n        label: subCat[i].name,\r\n        value: subCat[i].id,\r\n      });\r\n    }\r\n    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n    return cpFilter;\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpFilter = { ...filter };\r\n    if (e.universe !== undefined) {\r\n      cpFilter.universe.error = e.universe;\r\n      cpFilter.universe.infoBull = e.universe;\r\n    }\r\n    if (e.category !== undefined) {\r\n      cpFilter.category.error = e.category;\r\n      cpFilter.category.infoBull = e.category;\r\n    }\r\n    if (e.subCategory !== undefined) {\r\n      cpFilter.subCategory.error = e.subCategory;\r\n      cpFilter.subCategory.infoBull = e.subCategory;\r\n    }\r\n\r\n    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n    setFilter(cpFilter);\r\n\r\n    const cpFilterMap = { ...filterMap };\r\n    if (e.codePostal !== undefined) {\r\n      cpFilterMap.codePostal.error = e.codePostal;\r\n      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n    }\r\n    setFilterMap(cpFilterMap);\r\n  };\r\n\r\n  if (universe === false) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <Base>\r\n      {universe ? (\r\n        <>\r\n          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n            <>\r\n              <BannerPage\r\n                universe={universe}\r\n                toggleFilter={toggleFilter}\r\n                setToggleFilter={setToggleFilter}\r\n              /></>\r\n          )}\r\n           <ContentPageStyle style={{backgroundColor:\"#F6F3F5\"}}> \r\n            <Container >\r\n\r\n              {isDesktopOrLaptop && (\r\n                <Breadcrumb\r\n                  crumbs={[\r\n                    { name: \"Accueil\", path: \"/\" },\r\n                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n                  ]}\r\n                />\r\n              )}\r\n\r\n              {isTabletOrMobile && (\r\n                <div\r\n                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n                  onClick={() => {\r\n                    setToggleFilter(!toggleFilter);\r\n                  }}\r\n                >\r\n                  <SearchIcon /> Rechercher une prestation\r\n                </div>\r\n              )}\r\n\r\n              {isDisplayListeProduits && (\r\n                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                  {isTabletOrMobile && (\r\n                    <button\r\n                      className=\"menu-burger is-opened\"\r\n                      onClick={() => {\r\n                        setToggleFilter(false);\r\n                      }}\r\n                    >\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </button>\r\n                  )}\r\n\r\n                  <div className=\"item-filter\">\r\n                    <Select\r\n                      {...filter.universe}\r\n                      element={filter.universe}\r\n                      setElement={(element) => {\r\n                        const cpFilter = { ...filter };\r\n                        cpFilter.universe = element;\r\n                        setFilter(cpFilter);\r\n                      }}\r\n                      onChange={(e) => {\r\n                        if (e.value && e.slug) {\r\n                          document.dispatchEvent(\r\n                            new CustomEvent(\"Universe\", {\r\n                              detail: {\r\n                                url: `/univers/${e.slug}-${e.value}`,\r\n                                id: e.value,\r\n                              },\r\n                            })\r\n                          );\r\n                          history.push(`/univers/${e.slug}-${e.value}`);\r\n\r\n                          msgErrors({\r\n                            universe: false,\r\n                            category: false,\r\n                            subCategory: false,\r\n                            codePostal: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"item-filter\">\r\n                    <Select\r\n                      {...filter.category}\r\n                      element={filter.category}\r\n                      setElement={(element) => {\r\n                        const cpFilter = { ...filter };\r\n                        cpFilter.category = element;\r\n                        setFilter(cpFilter);\r\n                      }}\r\n                      onChange={(e) => {\r\n                        if (filter.category.value !== e.value) {\r\n                          let cpFilter = { ...filter };\r\n                          cpFilter.category.value = e.value;\r\n                          cpFilter.category.error = false;\r\n                          localStorage.setItem(\"defaultCategory\", e.value);\r\n                          cpFilter = refreshSubCategory(\r\n                            cpFilter,\r\n                            universe.categories\r\n                          );\r\n                          if (e.value == \"\") {\r\n                            cpFilter.subCategory.value = \"\";\r\n                          }\r\n                          cpFilter.subCategory.error = false;\r\n                          cpFilter.subCategory.infoBull = false;\r\n                          setFilter(cpFilter);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  {filter.category.value && (\r\n                    <div className=\"item-filter\">\r\n                      <SelectCat\r\n                        {...filter.subCategory}\r\n                        element={filter.subCategory}\r\n                        setElement={(element) => {\r\n                          const cpFilter = { ...filter };\r\n                          cpFilter.subCategory = element;\r\n                          setFilter(cpFilter);\r\n                        }}\r\n                        onChangeCallback={(response) => {\r\n                          const cpFilter = { ...filter };\r\n                          cpFilter.subCategory.value = response;\r\n                          cpFilter.subCategory.error = false;\r\n                          localStorage.setItem(\r\n                            \"defaultSubCategory\",\r\n                            JSON.stringify(response)\r\n                          );\r\n                          setFilter(cpFilter);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* <div className=\"item-filter\">\r\n                  <InputSearchKeyword\r\n                    filter={filter}\r\n                    setFilter={setFilter}\r\n                    universe={universe}\r\n                  />\r\n                </div> */}\r\n\r\n                  <div className=\"item-filter\">\r\n                    <InputAutoComplete\r\n                      filter={filterMap}\r\n                      setFilter={setFilterMap}\r\n                      placeIsSelected={placeIsSelected}\r\n                      setPlaceIsSelected={setPlaceIsSelected}\r\n                      isPendingLatLng={isPendingLatLng}\r\n                      setIsPendingLatLng={setIsPendingLatLng}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"item-filter btn-filter-banner\">\r\n                    <button\r\n                      className=\"btn-search-filter\"\r\n                      onClick={() => {\r\n                        if (\r\n                          isTabletOrMobile &&\r\n                          placeIsSelected &&\r\n                          filterMap.codePostal.latitude &&\r\n                          filterMap.codePostal.value\r\n                        ) {\r\n                          setToggleFilter(false);\r\n                        }\r\n\r\n                        if (\r\n                          filter.universe.value &&\r\n                          filter.category.value &&\r\n                          ((Array.isArray(filter.subCategory.value) &&\r\n                            filter.subCategory.value.length > 0) ||\r\n                            !filter.universe.requireSearchSubCategory) &&\r\n                          placeIsSelected\r\n                        ) {\r\n                          getServices(false, 0);\r\n                        } else {\r\n                          msgErrors({\r\n                            universe: !filter.universe.value,\r\n                            category:\r\n                              filter.universe.value && !filter.category.value,\r\n                            subCategory:\r\n                              filter.universe.value &&\r\n                              filter.category.value &&\r\n                              !(\r\n                                Array.isArray(filter.subCategory.value) &&\r\n                                filter.subCategory.value.length > 0\r\n                              ) &&\r\n                              filter.universe.requireSearchSubCategory,\r\n                            codePostal: !placeIsSelected,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      {isDesktopOrLaptop && (\r\n                        <>\r\n                          <SearchIcon />\r\n                        </>\r\n                      )}\r\n                      {isTabletOrMobile && <>Recherche</>}\r\n                    </button>\r\n                  </div>\r\n                </BlocFilterStyle>\r\n              )}\r\n              {isDisplayFicheUnivers && (\r\n                <><FicheUnivers\r\n                  isDisplayListeProduits={isDisplayListeProduits}\r\n                  setDisplayListeProduits={setDisplayListeProduits}\r\n                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n\r\n                > </FicheUnivers></>)}\r\n              {isDisplayListeProduits && (\r\n                <ListProduits\r\n                  data={services}\r\n                  perPage={perPage}\r\n                  setPerPage={setPerPage}\r\n                  pageIndex={pageIndex}\r\n                  setPageIndex={setPageIndex}\r\n                  totalItemsLength={totalServices}\r\n                  pagination={true}\r\n                  isLoading={isPending}\r\n                >\r\n                </ListProduits>\r\n              )}\r\n           \r\n             \r\n\r\n\r\n\r\n            </Container>\r\n          </ContentPageStyle>\r\n        </>\r\n      ) : (\r\n        <FoundPage\r\n          noBase\r\n          title=\"Univers en cours de développement\"\r\n          image={imgMaintenence}\r\n        />\r\n      )}\r\n    </Base>\r\n  );\r\n}\r\n"
        }
    ]
}