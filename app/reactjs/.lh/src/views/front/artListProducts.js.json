{
    "sourceFile": "src/views/front/artListProducts.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 361,
            "patches": [
                {
                    "date": 1708421987424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708422388629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,113 +1,131 @@\n-import React, { useState } from \"react\";\r\n-import { Row } from \"react-bootstrap\";\r\n-import ReactPaginate from \"react-paginate\";\r\n-import { useParams } from \"react-router-dom\";\r\n-import { ListProductStyle } from \"../../assets/styles/frontGlobalStyle\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import ProduitItem from \"../../components/front/produitItem\";\r\n-import Loader from \"../../components/loader\";\r\n+import React, { useEffect, useState } from \"react\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+import getImgUniverse  from  \"./universeImageManager.js\"\r\n+import { useDispatch, useSelector } from \"react-redux\";\r\n+import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n+import connector from \"../../connector\";\r\n+import endPoints from \"../../config/endPoints\";\r\n import { useMediaQuery } from \"react-responsive\";\r\n+import cordZ3img1 from '../../assets/images/z3-3.png';\r\n+import cordZ3img2 from '../../assets/images/z3-2.png';\r\n+import cordZ3img3 from '../../assets/images/z3-1.png';\r\n+import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n \r\n-export default function ArtListProducts({ data = [], ...props }) {\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const optionsPages = isDesktopOrLaptop\r\n-    ? [\r\n-        { value: 20, label: \"20\" },\r\n-        { value: 40, label: \"40\" },\r\n-        { value: 80, label: \"80\" },\r\n-      ]\r\n-    : [{ value: 8, label: \"8\" }];\r\n-  const { slugIdUniverse } = useParams();\r\n-  const [state, setState] = useState({\r\n-    pageNbr: {\r\n-      label: \"Nombre de résultats par page : \",\r\n-      options: optionsPages,\r\n-      value: props.perPage ? parseInt(props.perPage) : 20,\r\n-      position: \"auto\",\r\n-    },\r\n-  });\r\n-  const rowRenderservices = (row) => (\r\n-    <ProduitItem key={row.id} row={row} slugIdUniverse={slugIdUniverse} />\r\n-  );\r\n-  const showData = () => {\r\n-    if (data === false)\r\n-      return (\r\n-        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n-          Chargement...\r\n-        </p>\r\n-      );\r\n-    if (data.length === 0)\r\n-      return (\r\n-        <h3\r\n-          style={{\r\n-            textAlign: \"center\",\r\n-            width: \"100%\",\r\n-            fontSize: \"22px\",\r\n-            fontWeight: \"600\",\r\n-            margin: \"40px 0\",\r\n-          }}\r\n-        >\r\n-          Aucune donnée\r\n-        </h3>\r\n-      );\r\n+import { useParams } from \"react-router-dom\";\r\n+import MapArtisansUnivers from \"./mapArtisansUnivers\";\r\n+import { Col, Container, Row } from \"react-bootstrap\";\r\n+import Commentcamarche from \"./ficheUniversParts/commentcamarche\";\r\n+import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan\";\r\n+import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse\";\r\n+import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites\";\r\n+import anatomieCord from '../../assets/images/zanatCord.png';\r\n+import ButtonDef from \"../../components/ui-elements/buttonDef\";\r\n \r\n-    return data.map(rowRenderservices);\r\n+\r\n+function strUcFirst(a) {\r\n+  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n+}\r\n+export default function ArtListProducts(props) {\r\n+  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n+  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n+  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n+\r\n+  const [service, setService] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const [activeUniverse, setActiveUniverse] = useState(false);\r\n+  const universe = useSelector((state) => state.universe);\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const { slugIdUniverse, slugIdService } = useParams();\r\n+  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n+  const [universeDescription, setuniverseDescription] = useState('');\r\n+  var universeId = slugIdUniverse.split(\"-\").pop();\r\n+  const getUniverse = () => {\r\n+\r\n+    const universeId = slugIdUniverse.split(\"-\").pop();\r\n+    if (universeId) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+\r\n+          if (response.data?.name) {\r\n+            setuniverseTitle(response.data.name);\r\n+            setuniverseDescription(response.data.description);\r\n+            //\r\n+            //if (response.data.name === 'Cordonnerie') {\r\n+            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n+            //}\r\n+            //console.log('details Univers', response.data);\r\n+          }\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+        },\r\n+      });\r\n+    }\r\n   };\r\n+  \r\n+  useEffect(() => {\r\n+    getUniverse();\r\n+  }, []);\r\n \r\n-  return (\r\n-    <ListProductStyle>\r\n-      {isDesktopOrLaptop && (\r\n-        <h1 className=\"title-bloc-products\">\r\n-          {props.totalItemsLength} service(s)\r\n-        </h1>\r\n-      )}\r\n-      <Row style={props.isLoading ? { padding: \"50px 0\" } : null}>\r\n-        {props.isLoading ? <Loader /> : showData()}\r\n-      </Row>\r\n-      {!props.isLoading && props.pagination && props.totalItemsLength > 0 ? (\r\n-        <div className=\"paginations-bloc\">\r\n-          {isDesktopOrLaptop && (\r\n-            <div className=\"results-of-page\">\r\n-              <Select\r\n-                {...state.pageNbr}\r\n-                onChange={(e) => {\r\n-                  const cpState = { ...state };\r\n-                  cpState.pageNbr.value = e.value;\r\n-                  setState(cpState);\r\n-                  props.setPerPage(e.value);\r\n-                }}\r\n-              />\r\n-            </div>\r\n-          )}\r\n+  const handleProductListClick = () => {\r\n+    setDisplayListeProduits(!isDisplayListeProduits);\r\n+    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n+  };\r\n \r\n-          <ReactPaginate\r\n-            previousLabel={\"<\"}\r\n-            nextLabel={\">\"}\r\n-            breakLabel={\"...\"}\r\n-            pageCount={Math.ceil(props.totalItemsLength / props.perPage)}\r\n-            marginPagesDisplayed={2}\r\n-            pageRangeDisplayed={3}\r\n-            onPageChange={(data) => {\r\n-              props.setPageIndex(data.selected);\r\n-            }}\r\n-            containerClassName={\"pagination\"}\r\n-            subContainerClassName={\"page-item\"}\r\n-            activeLinkClassName={\"active disabled\"}\r\n-            pageLinkClassName={\"page-link\"}\r\n-            pageClassName={\"page-item\"}\r\n-            breakClassName={\"page-item\"}\r\n-            breakLinkClassName={\"page-link\"}\r\n-            activeClassName={\"active disabled\"}\r\n-            previousLinkClassName={\"page-link\"}\r\n-            nextLinkClassName={\"page-link\"}\r\n-            previousClassName={\"page-item\"}\r\n-            nextClassName={\"page-item\"}\r\n-            forcePage={props.pageIndex ? props.pageIndex : 0}\r\n-          />\r\n-        </div>\r\n-      ) : null}\r\n-    </ListProductStyle>\r\n-  );\r\n+  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n+    <div style={{\r\n+      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n+      gap: 24, display: 'inline-flex'\r\n+    }}>\r\n+      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        {universeTitle}\r\n+      </div>\r\n+      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+        {universeDescription}</div>\r\n+    </div>\r\n+    <div>\r\n+      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n+        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n+      </div>\r\n+    </div>\r\n+\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n+    </Row>\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n+    </Row>\r\n+\r\n+    <Row>\r\n+      <Col>\r\n+        <Commentcamarche></Commentcamarche>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row >\r\n+      <Col >\r\n+        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n+                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n+      </Col>\r\n+    </Row>\r\n+\r\n+  </Container>\r\n+\r\n }\r\n"
                },
                {
                    "date": 1708422568396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,14 +112,11 @@\n         <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n       <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n         <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n     </Row>\r\n+<Row><Col>\r\n \r\n-    <Row>\r\n-      <Col>\r\n-        <Commentcamarche></Commentcamarche>\r\n-      </Col>\r\n-    </Row>\r\n+</Col></Row>\r\n     <Row >\r\n       <Col >\r\n         <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n                                                  Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n"
                },
                {
                    "date": 1708422641036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,10 @@\n         <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n       <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n         <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n     </Row>\r\n-<Row><Col>\r\n+<Row><Col><>\r\n+<ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></</div>\r\n \r\n </Col></Row>\r\n     <Row >\r\n       <Col >\r\n"
                },
                {
                    "date": 1708422664547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,11 +112,10 @@\n         <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n       <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n         <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n     </Row>\r\n-<Row><Col><>\r\n-<ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></</div>\r\n-\r\n+<Row><Col> <>\r\n+<ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></>\r\n </Col></Row>\r\n     <Row >\r\n       <Col >\r\n         <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n"
                },
                {
                    "date": 1708422673148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,10 +112,10 @@\n         <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n       <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n         <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n     </Row>\r\n-<Row><Col> <>\r\n-<ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></>\r\n+<Row><Col> \r\n+<ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef>\r\n </Col></Row>\r\n     <Row >\r\n       <Col >\r\n         <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n"
                },
                {
                    "date": 1708422746543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,24 +96,9 @@\n           <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n       </div>\r\n     </div>\r\n \r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n-    </Row>\r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n-    </Row>\r\n+\r\n <Row><Col> \r\n <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef>\r\n </Col></Row>\r\n     <Row >\r\n"
                },
                {
                    "date": 1708422805156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,24 @@\n           <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n       </div>\r\n     </div>\r\n \r\n-\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n+    </Row>\r\n+    <Row >\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n+        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n+      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n+        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n+    </Row>\r\n <Row><Col> \r\n <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef>\r\n </Col></Row>\r\n     <Row >\r\n"
                },
                {
                    "date": 1708422868854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n \r\n function strUcFirst(a) {\r\n   return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n }\r\n-export default function ArtListProducts(props) {\r\n+export default function ArtisanListProducts(props\r\n+) {\r\n   const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n   const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n   const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n \r\n@@ -112,11 +113,45 @@\n         <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n       <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n         <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n     </Row>\r\n-<Row><Col> \r\n-<ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef>\r\n-</Col></Row>\r\n+\r\n+    <Row>\r\n+      <Col>\r\n+        <Commentcamarche></Commentcamarche>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row style={{ marginbottom: 50 }}>\r\n+      <Col>\r\n+        <MapArtisansUnivers>\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n+        </MapArtisansUnivers>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row>\r\n+      <Col>\r\n+        <AnatomieUniverse\r\n+          title={universeTitle}\r\n+          image={anatomieCord}\r\n+        ></AnatomieUniverse>\r\n+      </Col>\r\n+    </Row>\r\n+    <Row>\r\n+      <Col>\r\n+        <div>\r\n+          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n+            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n+              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n+          </div>\r\n+        </div>\r\n+      </Col>\r\n+    </Row>\r\n+    <PrestationsFavorites></PrestationsFavorites>\r\n     <Row >\r\n       <Col >\r\n         <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n                                                  Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n"
                },
                {
                    "date": 1708422947787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,163 +1,660 @@\n import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerPage from \"../../components/front/bannerPage\";\r\n import ListProduits from \"../../components/front/listProduits\";\r\n-import getImgUniverse  from  \"./universeImageManager.js\"\r\n-import { useDispatch, useSelector } from \"react-redux\";\r\n-import imgbonusreparation from '../../assets/images/bonusreparation.png';\r\n+import ArtListProduits from \"../../components/front/artListProduits\";\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n import connector from \"../../connector\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import cordZ3img1 from '../../assets/images/z3-3.png';\r\n-import cordZ3img2 from '../../assets/images/z3-2.png';\r\n-import cordZ3img3 from '../../assets/images/z3-1.png';\r\n-import cordZ3imgbottom from '../../assets/images/cordZ3imgbottom.png';\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n \r\n-import { useParams } from \"react-router-dom\";\r\n-import MapArtisansUnivers from \"./mapArtisansUnivers\";\r\n-import { Col, Container, Row } from \"react-bootstrap\";\r\n-import Commentcamarche from \"./ficheUniversParts/commentcamarche\";\r\n-import DecouvrezArtisan from \"./ficheUniversParts/decouvrezArtisan\";\r\n-import AnatomieUniverse from \"./ficheUniversParts/anatomieUniverse\";\r\n-import PrestationsFavorites from \"./ficheUniversParts/prestationsFavorites\";\r\n-import anatomieCord from '../../assets/images/zanatCord.png';\r\n-import ButtonDef from \"../../components/ui-elements/buttonDef\";\r\n+export default function ArtisanListProducys() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+ \r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n \r\n-\r\n-function strUcFirst(a) {\r\n-  return (a + '').charAt(0).toUpperCase() + (a + '').substr(1);\r\n-}\r\n-export default function ArtisanListProducts(props\r\n-) {\r\n-  const { isDisplayListeProduits, setDisplayListeProduits } = props;\r\n-  const { isDisplayFicheUnivers, setDisplayFicheUnivers } = props;\r\n-  const { isDisplayPrestationsArtisan, setDisplayPrestationsArtisan } = props;\r\n-\r\n-  const [service, setService] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const [activeUniverse, setActiveUniverse] = useState(false);\r\n-  const universe = useSelector((state) => state.universe);\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [universe, setUniverse] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const { slugIdUniverse, slugIdService } = useParams();\r\n-  const [universeTitle, setuniverseTitle] = useState(\"\");\r\n-  const [universeDescription, setuniverseDescription] = useState('');\r\n-  var universeId = slugIdUniverse.split(\"-\").pop();\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n   const getUniverse = () => {\r\n-\r\n-    const universeId = slugIdUniverse.split(\"-\").pop();\r\n-    if (universeId) {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n       connector({\r\n         method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${universeId}/categories`,\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n           const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n \r\n-          if (response.data?.name) {\r\n-            setuniverseTitle(response.data.name);\r\n-            setuniverseDescription(response.data.description);\r\n-            //\r\n-            //if (response.data.name === 'Cordonnerie') {\r\n-            //  setuniverseDescription(\"Nos artisans partenaires ne manquent ni de talons, ni de talents. Parfaitement bien dans leurs baskets, ils redonnent forme aux escarpins, bottes, ballerines et sneakers qui passent entre leurs mains. Ils sont du genre à bichonner vos chaussures de la semelle jusqu’au dernier lacet : pas question de s’arrêter au premier coup de pompe !\");\r\n-            //}\r\n-            //console.log('details Univers', response.data);\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n           }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n         },\r\n         catch: (error) => {\r\n           console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n         },\r\n       });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n-  \r\n-  useEffect(() => {\r\n-    getUniverse();\r\n-  }, []);\r\n \r\n-  const handleProductListClick = () => {\r\n-    setDisplayListeProduits(!isDisplayListeProduits);\r\n-    setDisplayFicheUnivers(!isDisplayFicheUnivers);\r\n+  const getServices = (refresh = false, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(response.data);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n   };\r\n \r\n-  return <Container style={{ backgroundColor: '#FEFDFA' }}>\r\n-    <div style={{\r\n-      width: '100%', height: '100%', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start',\r\n-      gap: 24, display: 'inline-flex'\r\n-    }}>\r\n-      <div style={{ width: '100%', height: '100%', color: '#4D5F68', fontSize: 50, fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        {universeTitle}\r\n-      </div>\r\n-      <div style={{ width: 1000, color: '#929292', fontSize: 20, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-        {universeDescription}</div>\r\n-    </div>\r\n-    <div>\r\n-      <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n-        <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-          <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n-      </div>\r\n-    </div>\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n \r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={getImgUniverse(universeId,1)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={getImgUniverse(universeId,2)} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={getImgUniverse(universeId,3)} /></div>\r\n-    </Row>\r\n-    <Row >\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }} >\r\n-        <img style={{ maxHeight:346 }} src={cordZ3imgbottom} /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img  style={{ maxHeight:346 }} src={cordZ3imgbottom}  /></div>\r\n-      <div class=\"col-sm-1 col-md-4 col-lg-4\" style={{ width: '30%' }}>\r\n-        <img style={{ maxHeight:346}} src={cordZ3imgbottom}  /></div>\r\n-    </Row>\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n \r\n-    <Row>\r\n-      <Col>\r\n-        <Commentcamarche></Commentcamarche>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row style={{ marginbottom: 50 }}>\r\n-      <Col>\r\n-        <MapArtisansUnivers>\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+        <>\r\n+          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n+            <>\r\n+              <BannerPage\r\n+                universe={universe}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              /></>\r\n+          )}\r\n+          {isDisplayListeProduits && isDisplayPrestationsArtisan && (\r\n+            <>\r\n+              <h1>FICHE ARTISAN</h1>\r\n+              </>\r\n+          )}\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+              {isDisplayFicheUnivers && (\r\n+                <><FicheUnivers\r\n                   isDisplayListeProduits={isDisplayListeProduits}\r\n                   setDisplayListeProduits={setDisplayListeProduits}\r\n                   setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n                   isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={ isDisplayPrestationsArtisan}\r\n-        </MapArtisansUnivers>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row>\r\n-      <Col>\r\n-        <AnatomieUniverse\r\n-          title={universeTitle}\r\n-          image={anatomieCord}\r\n-        ></AnatomieUniverse>\r\n-      </Col>\r\n-    </Row>\r\n-    <Row>\r\n-      <Col>\r\n-        <div>\r\n-          <div style={{ width: '50%', height: '100%', marginLeft: \"25%\", marginTop: 20, marginBottom: 20, borderRadius: 16, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'inline-flex' }}>\r\n-            <div style={{ color: 'white', fontFamily: 'Helvetica Neue LT Std', fontWeight: '700', lineHeight: 1, wordWrap: 'break-word' }}>\r\n-              <ButtonDef width=\"50%\" background='rgb(154, 202, 60)' textButton={\"Choisissez votre prestation\"} onClick={handleProductListClick}></ButtonDef></div>\r\n-          </div>\r\n-        </div>\r\n-      </Col>\r\n-    </Row>\r\n-    <PrestationsFavorites></PrestationsFavorites>\r\n-    <Row >\r\n-      <Col >\r\n-        <img style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }} alt=\"Lançé en Novembre 2023, ce bonus vous permet de bénéficier de réductions sur la réparation de vos chaussures et vêtements auprès des réparateurs labellisés Refashion. Cette réduction s’applique directement au moment du paiement. Pour plus d’informations sur les prestations éligibles, veuillez cliquer  ici.\r\n-                                                 Réparer c’est faire durer et c’est bon pour votre porte-monnaie !\" src={imgbonusreparation} />\r\n-      </Col>\r\n-    </Row>\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n-  </Container>\r\n+                > </FicheUnivers></>)}\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+              )}\r\n+           \r\n+             \r\n \r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )}\r\n+    </Base>\r\n+  );\r\n }\r\n"
                },
                {
                    "date": 1708423244858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n \r\n-export default function ArtisanListProducys() {\r\n+export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n@@ -305,17 +305,9 @@\n           for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n             condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n           }\r\n         }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n+   \r\n \r\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n@@ -547,15 +539,8 @@\n                       />\r\n                     </div>\r\n                   )}\r\n \r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n \r\n                   <div className=\"item-filter\">\r\n                     <InputAutoComplete\r\n                       filter={filterMap}\r\n@@ -626,9 +611,9 @@\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n                 > </FicheUnivers></>)}\r\n-              {isDisplayListeProduits && (\r\n+        \r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -638,9 +623,9 @@\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n                 </ListProduits>\r\n-              )}\r\n+             \r\n            \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1708423270697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -305,9 +305,17 @@\n           for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n             condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n           }\r\n         }\r\n-   \r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n \r\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n@@ -539,8 +547,15 @@\n                       />\r\n                     </div>\r\n                   )}\r\n \r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n \r\n                   <div className=\"item-filter\">\r\n                     <InputAutoComplete\r\n                       filter={filterMap}\r\n@@ -611,9 +626,9 @@\n                   setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n                   isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n \r\n                 > </FicheUnivers></>)}\r\n-        \r\n+              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -623,9 +638,9 @@\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n                 </ListProduits>\r\n-             \r\n+              )}\r\n            \r\n              \r\n \r\n \r\n"
                },
                {
                    "date": 1708423485902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,19 +616,9 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <><FicheUnivers\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUnivers></>)}\r\n-              {isDisplayListeProduits && (\r\n+            \r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -638,10 +628,9 @@\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n                 </ListProduits>\r\n-              )}\r\n-           \r\n+            \r\n              \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1708423522193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,9 +616,19 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-            \r\n+              {isDisplayFicheUnivers && (\r\n+                <><FicheUnivers\r\n+                  isDisplayListeProduits={isDisplayListeProduits}\r\n+                  setDisplayListeProduits={setDisplayListeProduits}\r\n+                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n+                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n+                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n+                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n+\r\n+                > </FicheUnivers></>)}\r\n+              {isDisplayListeProduits && (\r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -628,9 +638,10 @@\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n                 </ListProduits>\r\n-            \r\n+              )}\r\n+           \r\n              \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1708423924709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,10 @@\n import FicheUnivers from \"./ficheUnivers\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(true);\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(false);\r\n+  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n  \r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n"
                },
                {
                    "date": 1708424045955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -616,18 +616,9 @@\n                     </button>\r\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n-              {isDisplayFicheUnivers && (\r\n-                <><FicheUnivers\r\n-                  isDisplayListeProduits={isDisplayListeProduits}\r\n-                  setDisplayListeProduits={setDisplayListeProduits}\r\n-                  setDisplayFicheUnivers={setDisplayFicheUnivers}\r\n-                  isDisplayFicheUnivers={isDisplayFicheUnivers}\r\n-                  setDisplayPrestationsArtisan={setDisplayPrestationsArtisan}\r\n-                  isDisplayPrestationsArtisan={isDisplayPrestationsArtisan}\r\n-\r\n-                > </FicheUnivers></>)}\r\n+          \r\n               {isDisplayListeProduits && (\r\n                 <ListProduits\r\n                   data={services}\r\n                   perPage={perPage}\r\n"
                },
                {
                    "date": 1708424250215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,8 @@\n import FicheUnivers from \"./ficheUnivers\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n-  const [isDisplayFicheUnivers, setDisplayFicheUnivers] = useState(false);\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n  \r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n@@ -410,21 +409,10 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n-          {isDisplayListeProduits && !isDisplayPrestationsArtisan && (\r\n-            <>\r\n-              <BannerPage\r\n-                universe={universe}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              /></>\r\n-          )}\r\n-          {isDisplayListeProduits && isDisplayPrestationsArtisan && (\r\n-            <>\r\n-              <h1>FICHE ARTISAN</h1>\r\n-              </>\r\n-          )}\r\n+       \r\n+       \r\n           <ContentPageStyle>\r\n             <Container>\r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1708424488767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { SearchIcon } from \"../../assets/styles/icons\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import FoundPage from \"../../components/foundPage\";\r\n-import BannerPage from \"../../components/front/bannerPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n import ListProduits from \"../../components/front/listProduits\";\r\n import ArtListProduits from \"../../components/front/artListProduits\";\r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n@@ -409,10 +409,16 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n+   \r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              /></>\r\n+   \r\n        \r\n-       \r\n           <ContentPageStyle>\r\n             <Container>\r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1708424516307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -409,15 +409,15 @@\n   return (\r\n     <Base>\r\n       {universe ? (\r\n         <>\r\n-   \r\n+     \r\n+            <>\r\n               <BannerRepairMan\r\n                 universe={universe}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               /></>\r\n-   \r\n        \r\n           <ContentPageStyle>\r\n             <Container>\r\n \r\n"
                },
                {
                    "date": 1708424690469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -416,9 +416,11 @@\n                 universe={universe}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               /></>\r\n-       \r\n+       <BannerYourCommand>\r\n+        \r\n+       </BannerYourCommand>\r\n           <ContentPageStyle>\r\n             <Container>\r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1708424763618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,646 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+import ArtListProduits from \"../../components/front/artListProduits\";\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+ \r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [universe, setUniverse] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = false, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(response.data);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+            <ContentPageStyle>\r\n+      <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+       <BannerYourCommand>\r\n+\r\n+       </BannerYourCommand>\r\n+      \r\n+           \r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+          \r\n+              {isDisplayListeProduits && (\r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+              )}\r\n+           \r\n+             \r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )}\r\n+    </Base>\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708424899322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n- \r\n+\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n@@ -408,886 +408,242 @@\n \r\n   return (\r\n     <Base>\r\n       {universe ? (\r\n-            <ContentPageStyle>\r\n-      <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-       <BannerYourCommand>\r\n+        \r\n+        <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n \r\n-       </BannerYourCommand>\r\n-      \r\n-           \r\n+            </BannerYourCommand>\r\n \r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n \r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n \r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n \r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n \r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n \r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n \r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n                   />\r\n-                </div> */}\r\n+                </div>\r\n \r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n                         }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-          \r\n-              {isDisplayListeProduits && (\r\n-                <ListProduits\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduits>\r\n-              )}\r\n-           \r\n-             \r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )}\r\n-    </Base>\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n-import ArtListProduits from \"../../components/front/artListProduits\";\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n- \r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = false, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(response.data);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-        <>\r\n-     \r\n-            <>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              /></>\r\n-       <BannerYourCommand>\r\n-        \r\n-       </BannerYourCommand>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n                 </div>\r\n-              )}\r\n \r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n+                {filter.category.value && (\r\n                   <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n                       setElement={(element) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n+                        cpFilter.subCategory = element;\r\n                         setFilter(cpFilter);\r\n                       }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n+                      onChangeCallback={(response) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n                         setFilter(cpFilter);\r\n                       }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n                     />\r\n                   </div>\r\n+                )}\r\n \r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n+                {/* <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n                     setFilter={setFilter}\r\n                     universe={universe}\r\n                   />\r\n                 </div> */}\r\n \r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n \r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n \r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-          \r\n-              {isDisplayListeProduits && (\r\n-                <ListProduits\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduits>\r\n-              )}\r\n-           \r\n-             \r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n \r\n+            {isDisplayListeProduits && (\r\n+              <ListProduits\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              >\r\n+              </ListProduits>\r\n+            )}\r\n \r\n \r\n-            </Container>\r\n-          </ContentPageStyle>\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n         </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )}\r\n-    </Base>\r\n+  ) : (\r\n+    <FoundPage\r\n+      noBase\r\n+      title=\"Univers en cours de développement\"\r\n+      image={imgMaintenence}\r\n+    />\r\n+  )\r\n+}\r\n+    </Base >\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1708424947243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,11 @@\n import { SearchIcon } from \"../../assets/styles/icons\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import FoundPage from \"../../components/foundPage\";\r\n import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerRepairMan from \"../../components/front/bannerYourCommand\";\r\n import ListProduits from \"../../components/front/listProduits\";\r\n-import ArtListProduits from \"../../components/front/artListProduits\";\r\n+\r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n"
                },
                {
                    "date": 1708425186697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import { SearchIcon } from \"../../assets/styles/icons\";\r\n import SelectCat from \"../../components/categories/selectCat\";\r\n import FoundPage from \"../../components/foundPage\";\r\n import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerRepairMan from \"../../components/front/bannerYourCommand\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n import ListProduits from \"../../components/front/listProduits\";\r\n \r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n"
                },
                {
                    "date": 1708457257274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,652 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [universe, setUniverse] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    console.log(\"universe,id\");\r\n+    return;\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = false, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(response.data);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+        \r\n+        <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                {filter.category.value && (\r\n+                  <div className=\"item-filter\">\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChangeCallback={(response) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                )}\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduits\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              >\r\n+              </ListProduits>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+        </>\r\n+  ) : (\r\n+    <FoundPage\r\n+      noBase\r\n+      title=\"Univers en cours de développement\"\r\n+      image={imgMaintenence}\r\n+    />\r\n+  )\r\n+}\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708457269782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"universe,id\");\r\n+    console.log(\"STEP GETuniverse,id\");\r\n     return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n@@ -649,654 +649,4 @@\n }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = false, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(response.data);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-        \r\n-        <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                {filter.category.value && (\r\n-                  <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChangeCallback={(response) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                )}\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <ListProduits\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              >\r\n-              </ListProduits>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-        </>\r\n-  ) : (\r\n-    <FoundPage\r\n-      noBase\r\n-      title=\"Univers en cours de développement\"\r\n-      image={imgMaintenence}\r\n-    />\r\n-  )\r\n-}\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1708457291605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP GETuniverse,id\");\r\n+    console.log(\"STEP GETuniverse\",id);\r\n     return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n"
                },
                {
                    "date": 1708457345642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,10 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    console.log(\"STEP GETuniverse\",id);\r\n+    const artisanId=slugIdRepairman.split(\"-\").pop();\r\n+    console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n     return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n"
                },
                {
                    "date": 1708457490275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n   );\r\n \r\n   const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n   const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   const [universe, setUniverse] = useState(false);\r\n"
                },
                {
                    "date": 1708457558780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,10 +221,9 @@\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-    console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n-    return;\r\n+\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n"
                },
                {
                    "date": 1708457603668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,8 +228,10 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n           const arrayObj = response.data || { categories: [] };\r\n+          console.log(\"STEP GETuniverse  \",response.data);\r\n+          return;\r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n"
                },
                {
                    "date": 1708457708372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n+  const [universe, setUniverse] = useState();\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n"
                },
                {
                    "date": 1708457763328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,10 +228,9 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n           const arrayObj = response.data || { categories: [] };\r\n-          console.log(\"STEP GETuniverse  \",response.data);\r\n-          return;\r\n+        \r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n"
                },
                {
                    "date": 1708457818384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n+          const arrayObj = { categories: [] };\r\n         \r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n"
                },
                {
                    "date": 1708457832999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n-          const arrayObj = { categories: [] };\r\n+          const arrayObj = response.data;\r\n         \r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n"
                },
                {
                    "date": 1708457924239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState();\r\n+  const [universe, setUniverse] = useState(false);\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n@@ -220,17 +220,17 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-\r\n+    const artisanId=repairmanId.split(\"-\").pop();\r\n+    console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n+    return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n-          const arrayObj = response.data;\r\n-        \r\n+          const arrayObj = response.data || { categories: [] };\r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n"
                },
                {
                    "date": 1708458064786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    const artisanId=repairmanId.split(\"-\").pop();\r\n+    const artisanId=slugIdRepairman.split(\"-\").pop();\r\n     console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n     return;\r\n     if (id) {\r\n       connector({\r\n"
                },
                {
                    "date": 1708458105739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,654 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [universe, setUniverse] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    const artisanId=slugIdRepairman.split(\"-\").pop();\r\n+    console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n+    return;\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = false, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(response.data);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+        \r\n+        <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                {filter.category.value && (\r\n+                  <div className=\"item-filter\">\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChangeCallback={(response) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                )}\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduits\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              >\r\n+              </ListProduits>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+        </>\r\n+  ) : (\r\n+    <FoundPage\r\n+      noBase\r\n+      title=\"Univers en cours de développement\"\r\n+      image={imgMaintenence}\r\n+    />\r\n+  )\r\n+}\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708458253226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,664 +220,11 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-    console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n-    return;\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n+    //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n+    console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n \r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = false, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(response.data);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-        \r\n-        <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                {filter.category.value && (\r\n-                  <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChangeCallback={(response) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                )}\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <ListProduits\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              >\r\n-              </ListProduits>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-        </>\r\n-  ) : (\r\n-    <FoundPage\r\n-      noBase\r\n-      title=\"Univers en cours de développement\"\r\n-      image={imgMaintenence}\r\n-    />\r\n-  )\r\n-}\r\n-    </Base >\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-    console.log(\"STEP GETuniverse %s %s\",id, artisanId);\r\n     return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n"
                },
                {
                    "date": 1708458277540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n     console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n-\r\n+    console.log(\"STEP REPAIRMAN\",slugIdUniverse);\r\n     return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n"
                },
                {
                    "date": 1708458284040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n     console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n-    console.log(\"STEP REPAIRMAN\",slugIdUniverse);\r\n+    console.log(\"STEP universe\",slugIdUniverse);\r\n     return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n"
                },
                {
                    "date": 1708458317138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,654 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+import ListProduits from \"../../components/front/listProduits\";\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [universe, setUniverse] = useState(false);\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n+    console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n+    console.log(\"STEP universe\",slugIdUniverse);\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = false, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(response.data);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+        \r\n+        <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                {filter.category.value && (\r\n+                  <div className=\"item-filter\">\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChangeCallback={(response) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                )}\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduits\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              >\r\n+              </ListProduits>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+        </>\r\n+  ) : (\r\n+    <FoundPage\r\n+      noBase\r\n+      title=\"Univers en cours de développement\"\r\n+      image={imgMaintenence}\r\n+    />\r\n+  )\r\n+}\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1708458400669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,671 +221,17 @@\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-    console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n-    console.log(\"STEP universe\",slugIdUniverse);\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n \r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = false, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(response.data);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-        \r\n-        <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                {filter.category.value && (\r\n-                  <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChangeCallback={(response) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                )}\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <ListProduits\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              >\r\n-              </ListProduits>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-        </>\r\n-  ) : (\r\n-    <FoundPage\r\n-      noBase\r\n-      title=\"Univers en cours de développement\"\r\n-      image={imgMaintenence}\r\n-    />\r\n-  )\r\n-}\r\n-    </Base >\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-    console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n-    console.log(\"STEP universe\",slugIdUniverse);\r\n-    return;\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n           const arrayObj = response.data || { categories: [] };\r\n+          console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n+          console.log(\"STEP array\",arrayObj);\r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n"
                },
                {
                    "date": 1708458506299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState(false);\r\n+  const [universe, setUniverse] = useState([]]);\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n"
                },
                {
                    "date": 1708458629466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [universe, setUniverse] = useState([]]);\r\n+  const [universe, setUniverse] = useState([]);\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n@@ -174,9 +174,9 @@\n   }, [universeSelector, slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n     if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n+      //getUniverse();\r\n     } else {\r\n       localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n       history.push(ROUTES.HOME.url);\r\n     }\r\n@@ -220,10 +220,8 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n-    //const artisanId=slugIdRepairman.split(\"-\").pop();\r\n-\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n"
                },
                {
                    "date": 1708459061142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,18 +218,45 @@\n     }\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n+\r\n+\r\n+  const getRepairMans = () => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          let o = arrayObj[i];\r\n+          let showcases = [];\r\n+          for (let j = 0; j < o.showcases.length; j++) {\r\n+            showcases.push({\r\n+              label: o.showcases[j].name,\r\n+              value: o.showcases[j].id,\r\n+            });\r\n+          }\r\n+          console.log (\"step\", showcases);\r\n+        }\r\n+        \r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n           const arrayObj = response.data || { categories: [] };\r\n-          console.log(\"STEP REPAIRMAN\",slugIdRepairman);\r\n-          console.log(\"STEP array\",arrayObj);\r\n+          console.log(\"STEP REPAIRMAN\", slugIdRepairman);\r\n+          console.log(\"STEP array\", arrayObj);\r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n@@ -412,242 +439,242 @@\n \r\n   return (\r\n     <Base>\r\n       {universe ? (\r\n-        \r\n+\r\n         <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n               />\r\n-            )}\r\n+              <BannerYourCommand>\r\n \r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n+              </BannerYourCommand>\r\n \r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n \r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n                 </div>\r\n+              )}\r\n \r\n-                {filter.category.value && (\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n                   <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n                       setElement={(element) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n+                        cpFilter.universe = element;\r\n                         setFilter(cpFilter);\r\n                       }}\r\n-                      onChangeCallback={(response) => {\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n+                        cpFilter.category = element;\r\n                         setFilter(cpFilter);\r\n                       }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n                     />\r\n                   </div>\r\n-                )}\r\n \r\n-                {/* <div className=\"item-filter\">\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n                     setFilter={setFilter}\r\n                     universe={universe}\r\n                   />\r\n                 </div> */}\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n \r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n \r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n \r\n-            {isDisplayListeProduits && (\r\n-              <ListProduits\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              >\r\n-              </ListProduits>\r\n-            )}\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduits\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduits>\r\n+              )}\r\n \r\n \r\n \r\n \r\n \r\n-          </Container>\r\n-        </ContentPageStyle>\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n         </>\r\n-  ) : (\r\n-    <FoundPage\r\n-      noBase\r\n-      title=\"Univers en cours de développement\"\r\n-      image={imgMaintenence}\r\n-    />\r\n-  )\r\n-}\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n     </Base >\r\n   );\r\n }\r\n"
                },
                {
                    "date": 1708459121495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,9 @@\n         localStorage.setItem(\"defaultSubCategory\", \"\");\r\n         setDefaultCategory(null);\r\n         setDefaultSubCategory(null);\r\n         setFilter(cpFilter);\r\n+        getRepairMans();\r\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n"
                },
                {
                    "date": 1708459186988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,12 +237,13 @@\n               label: o.showcases[j].name,\r\n               value: o.showcases[j].id,\r\n             });\r\n           }\r\n-          console.log (\"step\", showcases);\r\n+          \r\n         }\r\n-        \r\n+        console.log (\"STEP GET REPAIRM\", response);\r\n       },\r\n+     \r\n       catch: (error) => {\r\n         console.log(error);\r\n       },\r\n     });\r\n"
                },
                {
                    "date": 1708459245270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,13 +197,14 @@\n         localStorage.setItem(\"defaultSubCategory\", \"\");\r\n         setDefaultCategory(null);\r\n         setDefaultSubCategory(null);\r\n         setFilter(cpFilter);\r\n-        getRepairMans();\r\n+       \r\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n+    getRepairMans();\r\n \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1708459369582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const arrayObj = response.data[\"hydra:member\"] ;\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           let o = arrayObj[i];\r\n           let showcases = [];\r\n           for (let j = 0; j < o.showcases.length; j++) {\r\n"
                },
                {
                    "date": 1708459402101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,9 @@\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n       data: {},\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] ;\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n           let o = arrayObj[i];\r\n           let showcases = [];\r\n           for (let j = 0; j < o.showcases.length; j++) {\r\n@@ -240,9 +240,9 @@\n             });\r\n           }\r\n           \r\n         }\r\n-        console.log (\"STEP GET REPAIRM\", response);\r\n+        console.log (\"STEP GET REPAIRM\", response.data);\r\n       },\r\n      \r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708459481865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n \r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=5`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n"
                },
                {
                    "date": 1708459526659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n \r\n   const getRepairMans = () => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=5`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=111`,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n"
                },
                {
                    "date": 1708459699525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n-    getRepairMans();\r\n+    getRepairMan(slugIdRepairman);\r\n \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n@@ -222,12 +222,12 @@\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n \r\n \r\n-  const getRepairMans = () => {\r\n+  const getRepairMan = (repairmanId) => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=111`,\r\n+      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         for (let i = 0; i < arrayObj.length; i++) {\r\n@@ -256,10 +256,8 @@\n         method: \"get\",\r\n         url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n         success: (response) => {\r\n           const arrayObj = response.data || { categories: [] };\r\n-          console.log(\"STEP REPAIRMAN\", slugIdRepairman);\r\n-          console.log(\"STEP array\", arrayObj);\r\n           setUniverse(arrayObj);\r\n \r\n           let cpFilter = { ...filter };\r\n           cpFilter.category.options = [];\r\n"
                },
                {
                    "date": 1708459760720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,8 +202,9 @@\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n+    console.log(\"STEP\",slugIdRepairman):\r\n     getRepairMan(slugIdRepairman);\r\n \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n"
                },
                {
                    "date": 1708459767085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n-    console.log(\"STEP\",slugIdRepairman):\r\n+    console.log(\"STEP\",slugIdRepairman);\r\n     getRepairMan(slugIdRepairman);\r\n \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n"
                },
                {
                    "date": 1708459881293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,10 @@\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n     console.log(\"STEP\",slugIdRepairman);\r\n-    getRepairMan(slugIdRepairman);\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop();\r\n+    getRepairMan(repairmanId);\r\n \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1708459896475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n     console.log(\"STEP\",slugIdRepairman);\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop();\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n \r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n"
                },
                {
                    "date": 1708459988783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,16 +202,17 @@\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n-    console.log(\"STEP\",slugIdRepairman);\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n \r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+}, []);\r\n+\r\n+  useEffect(() => {\r\n     if (universe && !isPendingLatLng) {\r\n       getServices(false, 0);\r\n     }\r\n   }, [universe]);\r\n"
                },
                {
                    "date": 1708460133109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,10 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  \r\n+  const [repairMan, setRepairMan] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n@@ -449,8 +451,9 @@\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n                 universe={universe}\r\n+                repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand>\r\n"
                },
                {
                    "date": 1708460202847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,18 +234,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          let o = arrayObj[i];\r\n-          let showcases = [];\r\n-          for (let j = 0; j < o.showcases.length; j++) {\r\n-            showcases.push({\r\n-              label: o.showcases[j].name,\r\n-              value: o.showcases[j].id,\r\n-            });\r\n-          }\r\n-          \r\n+        \r\n         }\r\n         console.log (\"STEP GET REPAIRM\", response.data);\r\n       },\r\n      \r\n"
                },
                {
                    "date": 1708460421727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,11 +234,10 @@\n       url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        \r\n-        }\r\n-        console.log (\"STEP GET REPAIRM\", response.data);\r\n+        setRepairMan(arrayObj)\r\n+       \r\n       },\r\n      \r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708510686963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -572,16 +572,16 @@\n                       />\r\n                     </div>\r\n                   )}\r\n \r\n-                  {/* <div className=\"item-filter\">\r\n+                  { <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n                     setFilter={setFilter}\r\n                     universe={universe}\r\n                   />\r\n-                </div> */}\r\n-\r\n+                </div> }\r\n+{/*\r\n                   <div className=\"item-filter\">\r\n                     <InputAutoComplete\r\n                       filter={filterMap}\r\n                       setFilter={setFilterMap}\r\n@@ -590,9 +590,9 @@\n                       isPendingLatLng={isPendingLatLng}\r\n                       setIsPendingLatLng={setIsPendingLatLng}\r\n                     />\r\n                   </div>\r\n-\r\n+              */ }\r\n                   <div className=\"item-filter btn-filter-banner\">\r\n                     <button\r\n                       className=\"btn-search-filter\"\r\n                       onClick={() => {\r\n"
                },
                {
                    "date": 1708510734761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -572,16 +572,16 @@\n                       />\r\n                     </div>\r\n                   )}\r\n \r\n-                  { <div className=\"item-filter\">\r\n+                  {/* <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n                     setFilter={setFilter}\r\n                     universe={universe}\r\n                   />\r\n-                </div> }\r\n-{/*\r\n+                </div> */}\r\n+\r\n                   <div className=\"item-filter\">\r\n                     <InputAutoComplete\r\n                       filter={filterMap}\r\n                       setFilter={setFilterMap}\r\n@@ -590,9 +590,9 @@\n                       isPendingLatLng={isPendingLatLng}\r\n                       setIsPendingLatLng={setIsPendingLatLng}\r\n                     />\r\n                   </div>\r\n-              */ }\r\n+\r\n                   <div className=\"item-filter btn-filter-banner\">\r\n                     <button\r\n                       className=\"btn-search-filter\"\r\n                       onClick={() => {\r\n"
                },
                {
                    "date": 1708513465115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,11 +209,56 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n }, []);\r\n \r\n+const getUserRepairmanBenefits = (id) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+    success: (response) => {\r\n+      if (response.data?.benefits) {\r\n+        let subCategories = [];\r\n+        response.data.benefits.map((benefit) => {\r\n+          if (benefit?.service?.categories) {\r\n+            subCategories = [...subCategories, ...benefit.service.categories];\r\n+          }\r\n+        });\r\n+        const cpCategories = parentCategories(subCategories);\r\n+        setCategories(cpCategories);\r\n+        if (cpCategories.length > 0) {\r\n+          let cpUniversRepairman = [];\r\n+          cpCategories.map((cat) => {\r\n+            if (cat?.universe) {\r\n+              cpUniversRepairman.push({\r\n+                id: cat.universe.id,\r\n+                name: cat.universe.name,\r\n+                slug: cat.universe.slug,\r\n+                position: cat.universe.position,\r\n+              });\r\n+            }\r\n+          });\r\n+          setUniversRepairman(\r\n+            sortObjects(\r\n+              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+              \"position\",\r\n+              \"asc\"\r\n+            )\r\n+          );\r\n+        }\r\n+      }\r\n+      setIsPending(false);\r\n+    },\r\n+    catch: (error) => {\r\n+      setIsPending(false);\r\n+      NotificationManager.error(getMsgError(error), \"\");\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+\r\n   useEffect(() => {\r\n     if (universe && !isPendingLatLng) {\r\n       getServices(false, 0);\r\n     }\r\n"
                },
                {
                    "date": 1708513674370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,11 +209,11 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getUserRepairmanBenefits(repairmanId);\r\n+    getRepairMan(repairmanId);\r\n }, []);\r\n-\r\n+{/*\r\n const getUserRepairmanBenefits = (id) => {\r\n   connector({\r\n     method: \"get\",\r\n     url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n@@ -256,8 +256,10 @@\n     },\r\n   });\r\n };\r\n \r\n+*/\r\n+}\r\n \r\n   useEffect(() => {\r\n     if (universe && !isPendingLatLng) {\r\n       getServices(false, 0);\r\n"
                },
                {
                    "date": 1708514617218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,10 @@\n \r\n   const getRepairMan = (repairmanId) => {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n+      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n@@ -290,8 +291,60 @@\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n+\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n"
                },
                {
                    "date": 1708514638914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,8 +292,9 @@\n       },\r\n     });\r\n   };\r\n \r\n+  {/*}\r\n   const filterRepairMenOnly = (showCasesArray) => {\r\n     let userFieldMap = {\r\n       '@id': \"userId\", id: \"id\",\r\n       username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n@@ -343,8 +344,9 @@\n         console.log(error);\r\n       }\r\n     });\r\n   };\r\n+*/}\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n"
                },
                {
                    "date": 1708514715260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,9 +283,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n-       \r\n+       console.log(\"STEP artlistproduct\",arrayObj);\r\n       },\r\n      \r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1708516973888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -542,9 +542,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={universe}\r\n+                universe={slugIdUniverse}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708517064230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -542,9 +542,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={slugIdUniverse}\r\n+                universe={universe}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708517197354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -542,9 +542,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={universe}\r\n+                universe={parseInt(slugIdUniverse.split(\"-\").pop()}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708517205999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -542,9 +542,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={parseInt(slugIdUniverse.split(\"-\").pop()}\r\n+                universe={parseInt(slugIdUniverse.split(\"-\").pop())}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708517477972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   \r\n   const [repairMan, setRepairMan] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n+  const [universeLight, setUniverseLight] = useState([]);\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n@@ -204,8 +205,9 @@\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n+    setUniverseLight(getUniverseLight());\r\n \r\n   }, []);\r\n \r\n   useEffect(() => {\r\n@@ -345,8 +347,37 @@\n       }\r\n     });\r\n   };\r\n */}\r\n+\r\n+const getUniverseLight = () => {\r\n+  const id = slugIdUniverse.split(\"-\").pop();\r\n+  if (id) {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data || { categories: [] };\r\n+        setUniverse(arrayObj);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        if (error.response?.data?.code !== undefined) {\r\n+          if (error.response.data.code === 401) {\r\n+            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+          } else if (error.response.data.message !== undefined) {\r\n+            NotificationManager.error(error.response.data.message, \"\");\r\n+          }\r\n+        }\r\n+        setUniverse(null);\r\n+      },\r\n+    });\r\n+  } else {\r\n+    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+  }\r\n+};\r\n+\r\n+\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n"
                },
                {
                    "date": 1708517560264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -356,9 +356,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n       success: (response) => {\r\n         const arrayObj = response.data || { categories: [] };\r\n-        setUniverse(arrayObj);\r\n+        setUniverseLight(arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         console.log(error);\r\n         if (error.response?.data?.code !== undefined) {\r\n@@ -573,9 +573,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={parseInt(slugIdUniverse.split(\"-\").pop())}\r\n+                universe={universeLight}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708518055883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,8 +186,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n+    setUniverseLight(getUniverseLight());\r\n     document.addEventListener(\"Universe\", function (event) {\r\n       if (event?.detail?.url && event?.detail?.id) {\r\n         const cpFilter = { ...filter };\r\n         cpFilter.keyword.value = \"\";\r\n@@ -205,9 +206,9 @@\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n-    setUniverseLight(getUniverseLight());\r\n+    \r\n \r\n   }, []);\r\n \r\n   useEffect(() => {\r\n"
                },
                {
                    "date": 1708518380138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n-    setUniverseLight(getUniverseLight());\r\n+    setUniverseLight(slugIdUniverse);\r\n     document.addEventListener(\"Universe\", function (event) {\r\n       if (event?.detail?.url && event?.detail?.id) {\r\n         const cpFilter = { ...filter };\r\n         cpFilter.keyword.value = \"\";\r\n@@ -349,10 +349,10 @@\n     });\r\n   };\r\n */}\r\n \r\n-const getUniverseLight = () => {\r\n-  const id = slugIdUniverse.split(\"-\").pop();\r\n+const getUniverseLight = (id) => {\r\n+\r\n   if (id) {\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n"
                },
                {
                    "date": 1708518546233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n-    setUniverseLight(slugIdUniverse);\r\n+    setUniverseLight(getUniverseLight(slugIdUniverse));\r\n     document.addEventListener(\"Universe\", function (event) {\r\n       if (event?.detail?.url && event?.detail?.id) {\r\n         const cpFilter = { ...filter };\r\n         cpFilter.keyword.value = \"\";\r\n"
                },
                {
                    "date": 1708518584078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n-    setUniverseLight(getUniverseLight(slugIdUniverse));\r\n+    setUniverseLight(slugIdUniverse);\r\n     document.addEventListener(\"Universe\", function (event) {\r\n       if (event?.detail?.url && event?.detail?.id) {\r\n         const cpFilter = { ...filter };\r\n         cpFilter.keyword.value = \"\";\r\n"
                },
                {
                    "date": 1708518771088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n   \r\n   const [repairMan, setRepairMan] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n-  const [universeLight, setUniverseLight] = useState([]);\r\n+\r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n@@ -186,9 +186,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n-    setUniverseLight(slugIdUniverse);\r\n+   \r\n     document.addEventListener(\"Universe\", function (event) {\r\n       if (event?.detail?.url && event?.detail?.id) {\r\n         const cpFilter = { ...filter };\r\n         cpFilter.keyword.value = \"\";\r\n@@ -349,36 +349,10 @@\n     });\r\n   };\r\n */}\r\n \r\n-const getUniverseLight = (id) => {\r\n \r\n-  if (id) {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data || { categories: [] };\r\n-        setUniverseLight(arrayObj);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        if (error.response?.data?.code !== undefined) {\r\n-          if (error.response.data.code === 401) {\r\n-            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-          } else if (error.response.data.message !== undefined) {\r\n-            NotificationManager.error(error.response.data.message, \"\");\r\n-          }\r\n-        }\r\n-        setUniverse(null);\r\n-      },\r\n-    });\r\n-  } else {\r\n-    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-  }\r\n-};\r\n \r\n-\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n@@ -574,9 +548,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={universeLight}\r\n+                universe={universe}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708518826558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={universe}\r\n+                universe={universe.name}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708519102044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n   }, [universeSelector, slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n     if (localStorage.getItem(\"codePostal\")) {\r\n-      //getUniverse();\r\n+      getUniverse();\r\n     } else {\r\n       localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n       history.push(ROUTES.HOME.url);\r\n     }\r\n"
                },
                {
                    "date": 1708519263787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n         <>\r\n           <ContentPageStyle>\r\n             <Container>\r\n               <BannerRepairMan\r\n-                universe={universe.name}\r\n+                universe={universe}\r\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n"
                },
                {
                    "date": 1708596806784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import FoundPage from \"../../components/foundPage\";\r\n import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-import ListProduits from \"../../components/front/listProduits\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n \r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n@@ -28,8 +28,9 @@\n import connector from \"../../connector\";\r\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n@@ -751,9 +752,9 @@\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n-                <ListProduits\r\n+                <ListProduitsBonus\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n@@ -761,9 +762,9 @@\n                   totalItemsLength={totalServices}\r\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n-                </ListProduits>\r\n+                </ListProduitsBonus>\r\n               )}\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1708596910632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n import SelectCat from \"../../components/categories/selectCat\";\r\n import FoundPage from \"../../components/foundPage\";\r\n import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n \r\n+\r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n"
                },
                {
                    "date": 1709555790775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -466,9 +466,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(response.data);\r\n+              console.log(\"ANONYMOUS_SERVICES_CATALOG\",response.data);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709557466037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -466,9 +466,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ANONYMOUS_SERVICES_CATALOG\",response.data);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709557657860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -466,9 +466,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"]);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709558702342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -466,9 +466,10 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"]);\r\n+\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"]['universe']);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709558860305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -466,10 +466,10 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response.data[\"hydra:member\"]['universe']);\r\n+var fdata = response.data[\"hydra:member\"];\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",fdata);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709559095651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n+  const [servicesByU, setServicesByU] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n   const [filter, setFilter] = useState({\r\n@@ -465,11 +466,12 @@\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n+              setServicesByU(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-var fdata = response.data[\"hydra:member\"];\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",fdata);\r\n+\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",servicesByU);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709559263910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,9 +469,9 @@\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",servicesByU);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709559306400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,9 +469,9 @@\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",servicesByU);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709559693200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -465,10 +465,11 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n+            \r\n+              setServicesByU(response.data[\"hydra:member\"] || []);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n-              setServicesByU(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",servicesByU);\r\n               setIsPending(false);\r\n"
                },
                {
                    "date": 1709559718422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -470,9 +470,9 @@\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",servicesByU);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709559780240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,9 +467,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n             \r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n+              setServices(setServicesByU);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n               setIsPending(false);\r\n"
                },
                {
                    "date": 1709559919448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,8 +467,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n             \r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n+              console.log(\"STEP ANONYMOUS after\",response.data[\"hydra:member\"]);\r\n               setServices(setServicesByU);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n"
                },
                {
                    "date": 1709559966761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,9 +467,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n             \r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n-              console.log(\"STEP ANONYMOUS after\",response.data[\"hydra:member\"]);\r\n+              console.log(\"ANONYMOUS_SERVICES_CATALOG after\",response.data[\"hydra:member\"]);\r\n               setServices(setServicesByU);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n"
                },
                {
                    "date": 1709560023455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -465,9 +465,9 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-            \r\n+              console.log(\"ANONYMOUS_SERVICES_CATALOG  before\",response.data[\"hydra:member\"]);\r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n               console.log(\"ANONYMOUS_SERVICES_CATALOG after\",response.data[\"hydra:member\"]);\r\n               setServices(setServicesByU);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n"
                },
                {
                    "date": 1709560099524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -465,11 +465,11 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-              console.log(\"ANONYMOUS_SERVICES_CATALOG  before\",response.data[\"hydra:member\"]);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG  before\",response.data[\"hydra:member\"]);\r\n               setServicesByU(response.data[\"hydra:member\"] || []);\r\n-              console.log(\"ANONYMOUS_SERVICES_CATALOG after\",response.data[\"hydra:member\"]);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG after\",response.data[\"hydra:member\"]);\r\n               setServices(setServicesByU);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n"
                },
                {
                    "date": 1709560508270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -465,12 +465,9 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG  before\",response.data[\"hydra:member\"]);\r\n-              setServicesByU(response.data[\"hydra:member\"] || []);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG after\",response.data[\"hydra:member\"]);\r\n-              setServices(setServicesByU);\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n               setIsPending(false);\r\n"
                },
                {
                    "date": 1709560624216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n-  const [servicesByU, setServicesByU] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n   const [filter, setFilter] = useState({\r\n@@ -466,11 +465,11 @@\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n+             \r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG servicesByU\",services);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",services);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709560720092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -457,10 +457,10 @@\n \r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+var trace =true;\r\n+        if (trace || refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n"
                },
                {
                    "date": 1709560835643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n+  const [uniServices, setUniServices] = useState([]);\r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n   const [filter, setFilter] = useState({\r\n@@ -465,11 +466,11 @@\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n-             \r\n+              setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",services);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709561034133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -465,8 +465,9 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices);\r\n"
                },
                {
                    "date": 1709561073216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -461,13 +461,14 @@\n           }${condition}`;\r\n var trace =true;\r\n         if (trace || refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n+          console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n+     \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices);\r\n"
                },
                {
                    "date": 1709561506627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -431,9 +431,10 @@\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setFilter(clearErrors(filter));\r\n       setFilterMap(clearErrors(filterMap));\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+      var trace =true;\r\n+      if (trace || refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n         let condition = \"\";\r\n         if (filter.category.value) {\r\n           condition += `&categories.parent.id=${filter.category.value}`;\r\n         }\r\n@@ -458,9 +459,9 @@\n \r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n-var trace =true;\r\n+\r\n         if (trace || refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n           console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n           connector({\r\n"
                },
                {
                    "date": 1709561606680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,12 +459,12 @@\n \r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n-\r\n+        console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n         if (trace || refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n-          console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n+       \r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n"
                },
                {
                    "date": 1709561825420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,9 +459,9 @@\n \r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n-        console.log(\"STEP ANONYMOUS_SERVICES_CATALOG cpParamsUrlService\",cpParamsUrlService);\r\n+        console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n         if (trace || refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n        \r\n           connector({\r\n"
                },
                {
                    "date": 1709568645740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -417,9 +417,9 @@\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n \r\n-  const getServices = (refresh = false, index = null) => {\r\n+  const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n     if (!placeIsSelected) {\r\n       msgErrors({\r\n@@ -431,10 +431,10 @@\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setFilter(clearErrors(filter));\r\n       setFilterMap(clearErrors(filterMap));\r\n-      var trace =true;\r\n-      if (trace || refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+     \r\n+      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n         let condition = \"\";\r\n         if (filter.category.value) {\r\n           condition += `&categories.parent.id=${filter.category.value}`;\r\n         }\r\n@@ -460,9 +460,9 @@\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n         console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if (trace || refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n        \r\n           connector({\r\n             method: \"get\",\r\n"
                },
                {
                    "date": 1709568715153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -471,9 +471,9 @@\n      \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1709568875076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,8 +420,9 @@\n \r\n   const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n+    refresh = true;\r\n     if (!placeIsSelected) {\r\n       msgErrors({\r\n         codePostal: true,\r\n       });\r\n"
                },
                {
                    "date": 1709573334345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,9 +420,9 @@\n \r\n   const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n-    refresh = true;\r\n+    \r\n     if (!placeIsSelected) {\r\n       msgErrors({\r\n         codePostal: true,\r\n       });\r\n"
                },
                {
                    "date": 1709573383900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n \r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n-        console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n         if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n        \r\n           connector({\r\n"
                },
                {
                    "date": 1709573541259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,9 +456,9 @@\n \r\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n-\r\n+console.log('Check universe',universe.id);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n"
                },
                {
                    "date": 1709573782893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,793 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  \r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [uniServices, setUniServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+   \r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+       \r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+    \r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+}, []);\r\n+{/*\r\n+const getUserRepairmanBenefits = (id) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+    success: (response) => {\r\n+      if (response.data?.benefits) {\r\n+        let subCategories = [];\r\n+        response.data.benefits.map((benefit) => {\r\n+          if (benefit?.service?.categories) {\r\n+            subCategories = [...subCategories, ...benefit.service.categories];\r\n+          }\r\n+        });\r\n+        const cpCategories = parentCategories(subCategories);\r\n+        setCategories(cpCategories);\r\n+        if (cpCategories.length > 0) {\r\n+          let cpUniversRepairman = [];\r\n+          cpCategories.map((cat) => {\r\n+            if (cat?.universe) {\r\n+              cpUniversRepairman.push({\r\n+                id: cat.universe.id,\r\n+                name: cat.universe.name,\r\n+                slug: cat.universe.slug,\r\n+                position: cat.universe.position,\r\n+              });\r\n+            }\r\n+          });\r\n+          setUniversRepairman(\r\n+            sortObjects(\r\n+              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+              \"position\",\r\n+              \"asc\"\r\n+            )\r\n+          );\r\n+        }\r\n+      }\r\n+      setIsPending(false);\r\n+    },\r\n+    catch: (error) => {\r\n+      setIsPending(false);\r\n+      NotificationManager.error(getMsgError(error), \"\");\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+*/\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n+      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setRepairMan(arrayObj)\r\n+       console.log(\"STEP artlistproduct\",arrayObj);\r\n+      },\r\n+     \r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  {/*}\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+*/}\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    \r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+     \r\n+      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+console.log('Check universe',universe.id);\r\n+console.log('Check params',);\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n+          }${condition}`;\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+       \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+     \r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setUniServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709573812388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -457,9 +457,9 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n console.log('Check universe',universe.id);\r\n-console.log('Check params',);\r\n+console.log('Check params',slugIdUniverse);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n@@ -790,796 +790,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  \r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [uniServices, setUniServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-   \r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-       \r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-    \r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-}, []);\r\n-{/*\r\n-const getUserRepairmanBenefits = (id) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-    success: (response) => {\r\n-      if (response.data?.benefits) {\r\n-        let subCategories = [];\r\n-        response.data.benefits.map((benefit) => {\r\n-          if (benefit?.service?.categories) {\r\n-            subCategories = [...subCategories, ...benefit.service.categories];\r\n-          }\r\n-        });\r\n-        const cpCategories = parentCategories(subCategories);\r\n-        setCategories(cpCategories);\r\n-        if (cpCategories.length > 0) {\r\n-          let cpUniversRepairman = [];\r\n-          cpCategories.map((cat) => {\r\n-            if (cat?.universe) {\r\n-              cpUniversRepairman.push({\r\n-                id: cat.universe.id,\r\n-                name: cat.universe.name,\r\n-                slug: cat.universe.slug,\r\n-                position: cat.universe.position,\r\n-              });\r\n-            }\r\n-          });\r\n-          setUniversRepairman(\r\n-            sortObjects(\r\n-              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-              \"position\",\r\n-              \"asc\"\r\n-            )\r\n-          );\r\n-        }\r\n-      }\r\n-      setIsPending(false);\r\n-    },\r\n-    catch: (error) => {\r\n-      setIsPending(false);\r\n-      NotificationManager.error(getMsgError(error), \"\");\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-*/\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n-      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n-       console.log(\"STEP artlistproduct\",arrayObj);\r\n-      },\r\n-     \r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  {/*}\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-\r\n-        console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-*/}\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    \r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-     \r\n-      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-console.log('Check universe',universe.id);\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-       \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-     \r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setUniServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1709573841874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -457,9 +457,9 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n console.log('Check universe',universe.id);\r\n-console.log('Check params',slugIdUniverse);\r\n+console.log('Check universe params',slugIdUniverse);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n"
                },
                {
                    "date": 1709573988742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,10 +456,11 @@\n \r\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n console.log('Check universe',universe.id);\r\n-console.log('Check universe params',slugIdUniverse);\r\n+console.log('Check universe params',parent_univ_id);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n"
                },
                {
                    "date": 1709574003816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,9 +458,9 @@\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n console.log('Check universe',universe.id);\r\n-console.log('Check universe params',parent_univ_id);\r\n+console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n"
                },
                {
                    "date": 1709574087615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,794 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  \r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [uniServices, setUniServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+   \r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+       \r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+    \r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+}, []);\r\n+{/*\r\n+const getUserRepairmanBenefits = (id) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+    success: (response) => {\r\n+      if (response.data?.benefits) {\r\n+        let subCategories = [];\r\n+        response.data.benefits.map((benefit) => {\r\n+          if (benefit?.service?.categories) {\r\n+            subCategories = [...subCategories, ...benefit.service.categories];\r\n+          }\r\n+        });\r\n+        const cpCategories = parentCategories(subCategories);\r\n+        setCategories(cpCategories);\r\n+        if (cpCategories.length > 0) {\r\n+          let cpUniversRepairman = [];\r\n+          cpCategories.map((cat) => {\r\n+            if (cat?.universe) {\r\n+              cpUniversRepairman.push({\r\n+                id: cat.universe.id,\r\n+                name: cat.universe.name,\r\n+                slug: cat.universe.slug,\r\n+                position: cat.universe.position,\r\n+              });\r\n+            }\r\n+          });\r\n+          setUniversRepairman(\r\n+            sortObjects(\r\n+              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+              \"position\",\r\n+              \"asc\"\r\n+            )\r\n+          );\r\n+        }\r\n+      }\r\n+      setIsPending(false);\r\n+    },\r\n+    catch: (error) => {\r\n+      setIsPending(false);\r\n+      NotificationManager.error(getMsgError(error), \"\");\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+*/\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n+      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setRepairMan(arrayObj)\r\n+       console.log(\"STEP artlistproduct\",arrayObj);\r\n+      },\r\n+     \r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  {/*}\r\n+  const filterRepairMenOnly = (showCasesArray) => {\r\n+    let userFieldMap = {\r\n+      '@id': \"userId\", id: \"id\",\r\n+      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n+      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n+      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n+      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n+      address: \"address\", roles: \"roles\",\r\n+    }\r\n+\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n+        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n+        for (let i = 0; i < arrayObj.length; i++) {\r\n+          var result = [];\r\n+          let obj = arrayObj[i];\r\n+          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n+          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n+          if (toKeep) {\r\n+            Object.entries(obj).forEach(entry => {\r\n+              const [key, value] = entry;\r\n+              let hasKey = userFieldMap.hasOwnProperty(key);\r\n+              if (hasKey) {\r\n+                result[userFieldMap[key]] = value;\r\n+              }\r\n+            });\r\n+            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n+\r\n+            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n+              tabArray.push(result);\r\n+            }\r\n+            else {\r\n+            }\r\n+          }\r\n+        };\r\n+        setxObjElem(tabArray);\r\n+\r\n+        console.log(\"STEP MAP \", tabArray);\r\n+        setDisplayUniverseUsersIsReady(true);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      }\r\n+    });\r\n+  };\r\n+*/}\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    \r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+     \r\n+      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+console.log('Check universe',universe.id);\r\n+console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+          }${condition}`;\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+       \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+     \r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setUniServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1709574852654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -457,10 +457,10 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-console.log('Check universe',universe.id);\r\n-console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n+//console.log('Check universe',universe.id);\r\n+//console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n@@ -791,798 +791,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  \r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [uniServices, setUniServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-   \r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-       \r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-    \r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-}, []);\r\n-{/*\r\n-const getUserRepairmanBenefits = (id) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-    success: (response) => {\r\n-      if (response.data?.benefits) {\r\n-        let subCategories = [];\r\n-        response.data.benefits.map((benefit) => {\r\n-          if (benefit?.service?.categories) {\r\n-            subCategories = [...subCategories, ...benefit.service.categories];\r\n-          }\r\n-        });\r\n-        const cpCategories = parentCategories(subCategories);\r\n-        setCategories(cpCategories);\r\n-        if (cpCategories.length > 0) {\r\n-          let cpUniversRepairman = [];\r\n-          cpCategories.map((cat) => {\r\n-            if (cat?.universe) {\r\n-              cpUniversRepairman.push({\r\n-                id: cat.universe.id,\r\n-                name: cat.universe.name,\r\n-                slug: cat.universe.slug,\r\n-                position: cat.universe.position,\r\n-              });\r\n-            }\r\n-          });\r\n-          setUniversRepairman(\r\n-            sortObjects(\r\n-              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-              \"position\",\r\n-              \"asc\"\r\n-            )\r\n-          );\r\n-        }\r\n-      }\r\n-      setIsPending(false);\r\n-    },\r\n-    catch: (error) => {\r\n-      setIsPending(false);\r\n-      NotificationManager.error(getMsgError(error), \"\");\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-*/\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n-      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n-       console.log(\"STEP artlistproduct\",arrayObj);\r\n-      },\r\n-     \r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  {/*}\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n-\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n-\r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n-\r\n-        console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n-\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-*/}\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    \r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-     \r\n-      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-console.log('Check universe',universe.id);\r\n-console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${universe.id\r\n-          }${condition}`;\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-       \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-     \r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setUniServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710133513018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,64 +297,12 @@\n       },\r\n     });\r\n   };\r\n \r\n-  {/*}\r\n-  const filterRepairMenOnly = (showCasesArray) => {\r\n-    let userFieldMap = {\r\n-      '@id': \"userId\", id: \"id\",\r\n-      username: \"username\", firstName: \"firstname\", lastName: \"lastname\",\r\n-      email: \"email\", enterprise: \"label\", gender: \"genre\", postalCode: \"postalcode\",\r\n-      city: \"city_code\", latitude: \"lat\", longitude: \"lng\", picture: \"picture\",\r\n-      description: \"description\", facebook: \"facebook\", instagram: \"instagram\",\r\n-      address: \"address\", roles: \"roles\",\r\n-    }\r\n \r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc`,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        console.log(\"STEP 2.1  USERS_REPAIRMAN_PUBLIC( getRepairMen SUCCESS\", arrayObj);\r\n-        console.log(\"STEP 2.1  CHECK WARNING Contents of showCasesArray\", showCasesArray);\r\n-        for (let i = 0; i < arrayObj.length; i++) {\r\n-          var result = [];\r\n-          let obj = arrayObj[i];\r\n-          const found = obj[\"roles\"].find((element) => element == ROLES.ROLE_REPAIRMAN);\r\n-          let toKeep = (found == ROLES.ROLE_REPAIRMAN);\r\n-          if (toKeep) {\r\n-            Object.entries(obj).forEach(entry => {\r\n-              const [key, value] = entry;\r\n-              let hasKey = userFieldMap.hasOwnProperty(key);\r\n-              if (hasKey) {\r\n-                result[userFieldMap[key]] = value;\r\n-              }\r\n-            });\r\n-            console.log(\"STEP 3 VERIFY each USER HAVE SHOWCASE\", result);\r\n \r\n-            if (userIsInThisUniverse(result['userId'], showCasesArray)) {\r\n-              tabArray.push(result);\r\n-            }\r\n-            else {\r\n-            }\r\n-          }\r\n-        };\r\n-        setxObjElem(tabArray);\r\n \r\n-        console.log(\"STEP MAP \", tabArray);\r\n-        setDisplayUniverseUsersIsReady(true);\r\n \r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      }\r\n-    });\r\n-  };\r\n-*/}\r\n-\r\n-\r\n-\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n"
                },
                {
                    "date": 1710168690935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -721,8 +721,15 @@\n                 >\r\n                 </ListProduitsBonus>\r\n               )}\r\n \r\n+<ListePrestationFiche\r\n+            service={service}\r\n+            benefits={benefits}\r\n+            filter={filter}\r\n+            setFilter={setFilter}\r\n+            isPending={isPending}\r\n+          />\r\n \r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1710168729324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import { useSelector } from \"react-redux\";\r\n import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n import {\r\n   BlocFilterStyle,\r\n   ContentPageStyle,\r\n } from \"../../assets/styles/frontGlobalStyle\";\r\n@@ -722,9 +723,9 @@\n                 </ListProduitsBonus>\r\n               )}\r\n \r\n <ListePrestationFiche\r\n-            service={service}\r\n+            service={services}\r\n             benefits={benefits}\r\n             filter={filter}\r\n             setFilter={setFilter}\r\n             isPending={isPending}\r\n"
                },
                {
                    "date": 1710168782821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { useMediaQuery } from \"react-responsive\";\r\n import { useHistory, useParams } from \"react-router-dom\";\r\n import { useSelector } from \"react-redux\";\r\n import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n import {\r\n@@ -35,9 +36,9 @@\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-\r\n+  const [benefits, setBenefits] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n"
                },
                {
                    "date": 1710168830655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -723,19 +723,13 @@\n                 >\r\n                 </ListProduitsBonus>\r\n               )}\r\n \r\n-<ListePrestationFiche\r\n-            service={services}\r\n-            benefits={benefits}\r\n-            filter={filter}\r\n-            setFilter={setFilter}\r\n-            isPending={isPending}\r\n-          />\r\n \r\n \r\n \r\n \r\n+\r\n             </Container>\r\n           </ContentPageStyle>\r\n         </>\r\n       ) : (\r\n"
                },
                {
                    "date": 1710770671315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -513,9 +513,8 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand>\r\n-\r\n               </BannerYourCommand>\r\n \r\n \r\n \r\n@@ -711,8 +710,9 @@\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n                 <ListProduitsBonus\r\n+                {{console.log(\"here\")}}\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n"
                },
                {
                    "date": 1710770678981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -710,9 +710,9 @@\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n                 <ListProduitsBonus\r\n-                {{console.log(\"here\")}}\r\n+                {console.log(\"here\")}\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n"
                },
                {
                    "date": 1710770695085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,745 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  \r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [uniServices, setUniServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+   \r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+       \r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+    \r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+}, []);\r\n+{/*\r\n+const getUserRepairmanBenefits = (id) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+    success: (response) => {\r\n+      if (response.data?.benefits) {\r\n+        let subCategories = [];\r\n+        response.data.benefits.map((benefit) => {\r\n+          if (benefit?.service?.categories) {\r\n+            subCategories = [...subCategories, ...benefit.service.categories];\r\n+          }\r\n+        });\r\n+        const cpCategories = parentCategories(subCategories);\r\n+        setCategories(cpCategories);\r\n+        if (cpCategories.length > 0) {\r\n+          let cpUniversRepairman = [];\r\n+          cpCategories.map((cat) => {\r\n+            if (cat?.universe) {\r\n+              cpUniversRepairman.push({\r\n+                id: cat.universe.id,\r\n+                name: cat.universe.name,\r\n+                slug: cat.universe.slug,\r\n+                position: cat.universe.position,\r\n+              });\r\n+            }\r\n+          });\r\n+          setUniversRepairman(\r\n+            sortObjects(\r\n+              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+              \"position\",\r\n+              \"asc\"\r\n+            )\r\n+          );\r\n+        }\r\n+      }\r\n+      setIsPending(false);\r\n+    },\r\n+    catch: (error) => {\r\n+      setIsPending(false);\r\n+      NotificationManager.error(getMsgError(error), \"\");\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+*/\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n+      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setRepairMan(arrayObj)\r\n+       console.log(\"STEP artlistproduct\",arrayObj);\r\n+      },\r\n+     \r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    \r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+     \r\n+      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+//console.log('Check universe',universe.id);\r\n+//console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+          }${condition}`;\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+       \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+     \r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setUniServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                \r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710770816389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -407,10 +407,11 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-//console.log('Check universe',universe.id);\r\n-//console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n+console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n+console.log('STEP TU Uniquement les services de l artisan:',parent_univ_id);\r\n+\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n@@ -742,749 +743,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  \r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [uniServices, setUniServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-   \r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-       \r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-    \r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-}, []);\r\n-{/*\r\n-const getUserRepairmanBenefits = (id) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-    success: (response) => {\r\n-      if (response.data?.benefits) {\r\n-        let subCategories = [];\r\n-        response.data.benefits.map((benefit) => {\r\n-          if (benefit?.service?.categories) {\r\n-            subCategories = [...subCategories, ...benefit.service.categories];\r\n-          }\r\n-        });\r\n-        const cpCategories = parentCategories(subCategories);\r\n-        setCategories(cpCategories);\r\n-        if (cpCategories.length > 0) {\r\n-          let cpUniversRepairman = [];\r\n-          cpCategories.map((cat) => {\r\n-            if (cat?.universe) {\r\n-              cpUniversRepairman.push({\r\n-                id: cat.universe.id,\r\n-                name: cat.universe.name,\r\n-                slug: cat.universe.slug,\r\n-                position: cat.universe.position,\r\n-              });\r\n-            }\r\n-          });\r\n-          setUniversRepairman(\r\n-            sortObjects(\r\n-              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-              \"position\",\r\n-              \"asc\"\r\n-            )\r\n-          );\r\n-        }\r\n-      }\r\n-      setIsPending(false);\r\n-    },\r\n-    catch: (error) => {\r\n-      setIsPending(false);\r\n-      NotificationManager.error(getMsgError(error), \"\");\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-*/\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n-      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n-       console.log(\"STEP artlistproduct\",arrayObj);\r\n-      },\r\n-     \r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    \r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-     \r\n-      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-//console.log('Check universe',universe.id);\r\n-//console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-          }${condition}`;\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-       \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-     \r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setUniServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                {console.log(\"here\")}\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1710771026027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,10 @@\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [repairManId, setRepairManId ] = useState()\r\n+\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n@@ -290,9 +292,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n-       console.log(\"STEP artlistproduct\",arrayObj);\r\n+       console.log(\"STEP TU artlistproduct:\",arrayObj);\r\n       },\r\n      \r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1710771236928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -410,9 +410,9 @@\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n-console.log('STEP TU Uniquement les services de l artisan:',parent_univ_id);\r\n+console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n \r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n@@ -427,9 +427,9 @@\n      \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1710771383048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,16 +372,14 @@\n \r\n   const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n-    \r\n     if (!placeIsSelected) {\r\n       msgErrors({\r\n         codePostal: true,\r\n       });\r\n       return;\r\n     }\r\n-\r\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setFilter(clearErrors(filter));\r\n       setFilterMap(clearErrors(filterMap));\r\n@@ -409,11 +407,10 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n-console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n \r\n+\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n@@ -423,9 +420,10 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-     \r\n+              console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n+              console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n               console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n"
                },
                {
                    "date": 1710771630741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,8 +420,9 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n+              console.log(\"Step Tu ser de la requete\",cpParamsUrlService);\r\n               console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n"
                },
                {
                    "date": 1710771744157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,8 +293,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n        console.log(\"STEP TU artlistproduct:\",arrayObj);\r\n+       console.log(\"Step Parametre de la fonction getrepairma Repaiman Id\" , repairmanId)\r\n       },\r\n      \r\n       catch: (error) => {\r\n         console.log(error);\r\n"
                },
                {
                    "date": 1710772270935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n import connector from \"../../connector\";\r\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+import ListServicesRepairman from \"../../components/front/listServicesRepairman\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n"
                },
                {
                    "date": 1710772298621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -712,9 +712,9 @@\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n+                <ListServicesRepairman\r\n                 \r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n"
                },
                {
                    "date": 1710772315532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -723,9 +723,9 @@\n                   totalItemsLength={totalServices}\r\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n-                </ListProduitsBonus>\r\n+                </ListServicesRepairman>\r\n               )}\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1710772479765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n import ListServicesRepairman from \"../../components/front/listServicesRepairman\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayServicesRepairman, setDisplayListeProduits] = useState(true);\r\n   const [repairManId, setRepairManId ] = useState()\r\n \r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n@@ -540,9 +540,9 @@\n                   <SearchIcon /> Rechercher une prestation\r\n                 </div>\r\n               )}\r\n \r\n-              {isDisplayListeProduits && (\r\n+              {isDisplayServicesRepairman && (\r\n                 <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                   {isTabletOrMobile && (\r\n                     <button\r\n                       className=\"menu-burger is-opened\"\r\n@@ -711,9 +711,9 @@\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n-              {isDisplayListeProduits && (\r\n+              {isDisplayServicesRepairman && (\r\n                 <ListServicesRepairman\r\n                 \r\n                   data={services}\r\n                   perPage={perPage}\r\n"
                },
                {
                    "date": 1710773231269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,740 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListServicesRepairman from \"../../components/front/listServicesRepairman\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayServicesRepairman, setDisplayListeProduits] = useState(true);\r\n+  const [repairManId, setRepairManId ] = useState()\r\n+\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  \r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [uniServices, setUniServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+   \r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+       \r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+    \r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+}, []);\r\n+{/*\r\n+const getUserRepairmanBenefits = (id) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+    success: (response) => {\r\n+      if (response.data?.benefits) {\r\n+        let subCategories = [];\r\n+        response.data.benefits.map((benefit) => {\r\n+          if (benefit?.service?.categories) {\r\n+            subCategories = [...subCategories, ...benefit.service.categories];\r\n+          }\r\n+        });\r\n+        const cpCategories = parentCategories(subCategories);\r\n+        setCategories(cpCategories);\r\n+        if (cpCategories.length > 0) {\r\n+          let cpUniversRepairman = [];\r\n+          cpCategories.map((cat) => {\r\n+            if (cat?.universe) {\r\n+              cpUniversRepairman.push({\r\n+                id: cat.universe.id,\r\n+                name: cat.universe.name,\r\n+                slug: cat.universe.slug,\r\n+                position: cat.universe.position,\r\n+              });\r\n+            }\r\n+          });\r\n+          setUniversRepairman(\r\n+            sortObjects(\r\n+              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+              \"position\",\r\n+              \"asc\"\r\n+            )\r\n+          );\r\n+        }\r\n+      }\r\n+      setIsPending(false);\r\n+    },\r\n+    catch: (error) => {\r\n+      setIsPending(false);\r\n+      NotificationManager.error(getMsgError(error), \"\");\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+*/\r\n+}\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, 0);\r\n+    }\r\n+  }, [universe]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n+      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setRepairMan(arrayObj)\r\n+       console.log(\"STEP TU artlistproduct:\",arrayObj);\r\n+       console.log(\"Step Parametre de la fonction getrepairma Repaiman Id\" , repairmanId)\r\n+      },\r\n+     \r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+     \r\n+      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        /*  if (\r\n+          filter.keyword.active.id &&\r\n+          filter.keyword.active.by &&\r\n+          filter.keyword.value.trim()\r\n+        ) {\r\n+          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+        } else if (filter.keyword.value.trim()) {\r\n+          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+        } */\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+\r\n+\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+          }${condition}`;\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+       \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              console.log(\"Step Tu ser de la requete\",cpParamsUrlService);\r\n+              console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n+              console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setUniServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayServicesRepairman && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayServicesRepairman && (\r\n+                <ListServicesRepairman\r\n+                \r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                >\r\n+                </ListServicesRepairman>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1710802537614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -370,9 +370,9 @@\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n \r\n-  const getServices = (refresh = true, index = null) => {\r\n+  const getServices = (refresh = false, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n     if (!placeIsSelected) {\r\n       msgErrors({\r\n@@ -737,752 +737,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListServicesRepairman from \"../../components/front/listServicesRepairman\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayServicesRepairman, setDisplayListeProduits] = useState(true);\r\n-  const [repairManId, setRepairManId ] = useState()\r\n-\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  \r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [uniServices, setUniServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-   \r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-       \r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-    \r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-}, []);\r\n-{/*\r\n-const getUserRepairmanBenefits = (id) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-    success: (response) => {\r\n-      if (response.data?.benefits) {\r\n-        let subCategories = [];\r\n-        response.data.benefits.map((benefit) => {\r\n-          if (benefit?.service?.categories) {\r\n-            subCategories = [...subCategories, ...benefit.service.categories];\r\n-          }\r\n-        });\r\n-        const cpCategories = parentCategories(subCategories);\r\n-        setCategories(cpCategories);\r\n-        if (cpCategories.length > 0) {\r\n-          let cpUniversRepairman = [];\r\n-          cpCategories.map((cat) => {\r\n-            if (cat?.universe) {\r\n-              cpUniversRepairman.push({\r\n-                id: cat.universe.id,\r\n-                name: cat.universe.name,\r\n-                slug: cat.universe.slug,\r\n-                position: cat.universe.position,\r\n-              });\r\n-            }\r\n-          });\r\n-          setUniversRepairman(\r\n-            sortObjects(\r\n-              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-              \"position\",\r\n-              \"asc\"\r\n-            )\r\n-          );\r\n-        }\r\n-      }\r\n-      setIsPending(false);\r\n-    },\r\n-    catch: (error) => {\r\n-      setIsPending(false);\r\n-      NotificationManager.error(getMsgError(error), \"\");\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-*/\r\n-}\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n-      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n-       console.log(\"STEP TU artlistproduct:\",arrayObj);\r\n-       console.log(\"Step Parametre de la fonction getrepairma Repaiman Id\" , repairmanId)\r\n-      },\r\n-     \r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-     \r\n-      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-\r\n-\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-          }${condition}`;\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-       \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              console.log(\"Step Tu ser de la requete\",cpParamsUrlService);\r\n-              console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n-              console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setUniServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayServicesRepairman && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayServicesRepairman && (\r\n-                <ListServicesRepairman\r\n-                \r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                >\r\n-                </ListServicesRepairman>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1711295737208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data[\"hydra:totalItems], repairManId);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711295757673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data[\"hydra:totalItems], repairManId);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data[\"hydra:totalItems\"], repairManId);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711295806115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data[\"hydra:totalItems\"], repairManId);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data, repairManId);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711295873373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data, repairManId);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data, cpParamsUrlService);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711296202946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data, cpParamsUrlService);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data, slugIdRepairman);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711301294945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n               console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",response.data, slugIdRepairman);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711305931967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -704,9 +704,9 @@\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n               {isDisplayServicesRepairman && (\r\n-                <ListServicesRepairman\r\n+                 <ListProduitsBonus\r\n                 \r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n@@ -715,9 +715,9 @@\n                   totalItemsLength={totalServices}\r\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n-                </ListServicesRepairman>\r\n+              </ListProduitsBonus>\r\n               )}\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711306071771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -704,10 +704,9 @@\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n               {isDisplayServicesRepairman && (\r\n-                 <ListProduitsBonus\r\n-                \r\n+                <ListServicesRepairman\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n@@ -715,9 +714,9 @@\n                   totalItemsLength={totalServices}\r\n                   pagination={true}\r\n                   isLoading={isPending}\r\n                 >\r\n-              </ListProduitsBonus>\r\n+                </ListServicesRepairman>\r\n               )}\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711306758476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -703,9 +703,9 @@\n                   </div>\r\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n-              {isDisplayServicesRepairman && (\r\n+              {isDisplayListeProduits && (\r\n                 <ListServicesRepairman\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n"
                },
                {
                    "date": 1711307266261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,15 +30,13 @@\n import connector from \"../../connector\";\r\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n-import ListServicesRepairman from \"../../components/front/listServicesRepairman\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n-  const [isDisplayServicesRepairman, setDisplayListeProduits] = useState(true);\r\n-  const [repairManId, setRepairManId ] = useState()\r\n-\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n   const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n@@ -292,10 +290,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n-       console.log(\"STEP TU artlistproduct:\",arrayObj);\r\n-       console.log(\"Step Parametre de la fonction getrepairma Repaiman Id\" , repairmanId)\r\n+       console.log(\"STEP artlistproduct\",arrayObj);\r\n       },\r\n      \r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -370,17 +367,19 @@\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n \r\n-  const getServices = (refresh = false, index = null) => {\r\n+  const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n+    \r\n     if (!placeIsSelected) {\r\n       msgErrors({\r\n         codePostal: true,\r\n       });\r\n       return;\r\n     }\r\n+\r\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setFilter(clearErrors(filter));\r\n       setFilterMap(clearErrors(filterMap));\r\n@@ -408,10 +407,10 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-\r\n-\r\n+//console.log('Check universe',universe.id);\r\n+//console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n@@ -421,15 +420,13 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-              console.log(\"Step Tu ser de la requete\",cpParamsUrlService);\r\n-              console.log('STEP TU Check universe slugIdUniverse params',parent_univ_id);\r\n-              console.log('STEP TU Check  Uniquement les services de l artisan:',repairManId);\r\n+     \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG Check pour un artisan\",uniServices['universe'], repairManId);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n@@ -516,8 +513,9 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand>\r\n+\r\n               </BannerYourCommand>\r\n \r\n \r\n \r\n@@ -540,9 +538,9 @@\n                   <SearchIcon /> Rechercher une prestation\r\n                 </div>\r\n               )}\r\n \r\n-              {isDisplayServicesRepairman && (\r\n+              {isDisplayListeProduits && (\r\n                 <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                   {isTabletOrMobile && (\r\n                     <button\r\n                       className=\"menu-burger is-opened\"\r\n@@ -641,8 +639,16 @@\n                       />\r\n                     </div>\r\n                   )}\r\n \r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n                   <div className=\"item-filter\">\r\n                     <InputAutoComplete\r\n                       filter={filterMap}\r\n                       setFilter={setFilterMap}\r\n@@ -704,19 +710,18 @@\n                 </BlocFilterStyle>\r\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n-                <ListServicesRepairman\r\n+                <ListProduitsBonus\r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n                   setPageIndex={setPageIndex}\r\n                   totalItemsLength={totalServices}\r\n                   pagination={true}\r\n                   isLoading={isPending}\r\n-                >\r\n-                </ListServicesRepairman>\r\n+                > </ListProduitsBonus>\r\n               )}\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711443176458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,9 @@\n           setParamsUrlService(cpParamsUrlService);\r\n        \r\n           connector({\r\n             method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n      \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n@@ -512,14 +512,12 @@\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n-              <BannerYourCommand>\r\n+              <BannerYourCommand>  </BannerYourCommand>\r\n \r\n-              </BannerYourCommand>\r\n \r\n \r\n-\r\n               {isDesktopOrLaptop && (\r\n                 <Breadcrumb\r\n                   crumbs={[\r\n                     { name: \"Accueil\", path: \"/\" },\r\n"
                },
                {
                    "date": 1711443311724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,9 @@\n           setParamsUrlService(cpParamsUrlService);\r\n        \r\n           connector({\r\n             method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_BENEFITS_SERVICE}?${cpParamsUrlService}`,\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n      \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n@@ -512,9 +512,10 @@\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n-              <BannerYourCommand>  </BannerYourCommand>\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n \r\n \r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1711443373678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -424,9 +424,9 @@\n      \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setUniServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",uniServices['universe']);\r\n+              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n               console.log(error);\r\n"
                },
                {
                    "date": 1711445988986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  \r\n+\r\n   const [repairMan, setRepairMan] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n@@ -190,9 +190,9 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n-   \r\n+\r\n     document.addEventListener(\"Universe\", function (event) {\r\n       if (event?.detail?.url && event?.detail?.id) {\r\n         const cpFilter = { ...filter };\r\n         cpFilter.keyword.value = \"\";\r\n@@ -205,539 +205,538 @@\n         localStorage.setItem(\"defaultSubCategory\", \"\");\r\n         setDefaultCategory(null);\r\n         setDefaultSubCategory(null);\r\n         setFilter(cpFilter);\r\n-       \r\n+\r\n       } else {\r\n         console.log(\"error event params.\");\r\n       }\r\n     });\r\n-    \r\n \r\n+\r\n   }, []);\r\n \r\n   useEffect(() => {\r\n-    let repairmanId =  parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n-}, []);\r\n-{/*\r\n-const getUserRepairmanBenefits = (id) => {\r\n+  }, []);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        if (response.data?.benefits) {\r\n+          let subCategories = [];\r\n+          response.data.benefits.map((benefit) => {\r\n+            if (benefit?.service?.categories) {\r\n+              subCategories = [...subCategories, ...benefit.service.categories];\r\n+            }\r\n+          });\r\n+          const cpCategories = parentCategories(subCategories);\r\n+          setCategories(cpCategories);\r\n+          if (cpCategories.length > 0) {\r\n+            let cpUniversRepairman = [];\r\n+            cpCategories.map((cat) => {\r\n+              if (cat?.universe) {\r\n+                cpUniversRepairman.push({\r\n+                  id: cat.universe.id,\r\n+                  name: cat.universe.name,\r\n+                  slug: cat.universe.slug,\r\n+                  position: cat.universe.position,\r\n+                });\r\n+              }\r\n+            });\r\n+            setUniversRepairman(\r\n+              sortObjects(\r\n+                getUniqueListBy(cpUniversRepairman, \"id\"),\r\n+                \"position\",\r\n+                \"asc\"\r\n+              )\r\n+            );\r\n+          }\r\n+        }\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+        NotificationManager.error(getMsgError(error), \"\");\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+}\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, 0);\r\n+  }\r\n+}, [universe]);\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, null);\r\n+  }\r\n+  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+}, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+const getRepairMan = (repairmanId) => {\r\n   connector({\r\n     method: \"get\",\r\n-    url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+    //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+    data: {},\r\n     success: (response) => {\r\n-      if (response.data?.benefits) {\r\n-        let subCategories = [];\r\n-        response.data.benefits.map((benefit) => {\r\n-          if (benefit?.service?.categories) {\r\n-            subCategories = [...subCategories, ...benefit.service.categories];\r\n-          }\r\n-        });\r\n-        const cpCategories = parentCategories(subCategories);\r\n-        setCategories(cpCategories);\r\n-        if (cpCategories.length > 0) {\r\n-          let cpUniversRepairman = [];\r\n-          cpCategories.map((cat) => {\r\n-            if (cat?.universe) {\r\n-              cpUniversRepairman.push({\r\n-                id: cat.universe.id,\r\n-                name: cat.universe.name,\r\n-                slug: cat.universe.slug,\r\n-                position: cat.universe.position,\r\n-              });\r\n-            }\r\n-          });\r\n-          setUniversRepairman(\r\n-            sortObjects(\r\n-              getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-              \"position\",\r\n-              \"asc\"\r\n-            )\r\n-          );\r\n-        }\r\n-      }\r\n-      setIsPending(false);\r\n+      const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      setRepairMan(arrayObj)\r\n+      console.log(\"STEP artlistproduct\", arrayObj);\r\n     },\r\n+\r\n     catch: (error) => {\r\n-      setIsPending(false);\r\n-      NotificationManager.error(getMsgError(error), \"\");\r\n+      console.log(error);\r\n     },\r\n   });\r\n };\r\n \r\n-*/\r\n-}\r\n \r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, 0);\r\n-    }\r\n-  }, [universe]);\r\n \r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n \r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n+const getUniverse = () => {\r\n+  const id = slugIdUniverse.split(\"-\").pop();\r\n+  if (id) {\r\n     connector({\r\n       method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=`+repairmanId,\r\n-      //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n-      data: {},\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n-       console.log(\"STEP artlistproduct\",arrayObj);\r\n-      },\r\n-     \r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n+        const arrayObj = response.data || { categories: [] };\r\n+        setUniverse(arrayObj);\r\n \r\n+        let cpFilter = { ...filter };\r\n+        cpFilter.category.options = [];\r\n \r\n+        cpFilter.category.value = null;\r\n+        cpFilter.subCategory.value = null;\r\n+        cpFilter.subCategory.options = [];\r\n \r\n+        if (response.data?.nameCategory) {\r\n+          cpFilter.category.label = response.data.nameCategory;\r\n+        }\r\n \r\n+        if (response.data?.nameSubCategory) {\r\n+          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+        }\r\n \r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n+        if (response.data?.requireSearchSubCategory != undefined) {\r\n+          cpFilter.universe.requireSearchSubCategory =\r\n+            response.data.requireSearchSubCategory;\r\n+        }\r\n \r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n+        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+          let o = arrayObj.categories[i];\r\n \r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n+          if (o.id == defaultCategory) {\r\n+            cpFilter.category.value = defaultCategory;\r\n+            cpFilter.subCategory.value = defaultSubCategory;\r\n+            for (let j = 0; j < o.children.length; j++) {\r\n+              cpFilter.subCategory.options.push({\r\n+                label: o.children[j].name,\r\n+                value: o.children[j].id,\r\n+              });\r\n+            }\r\n           }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        if (error.response?.data?.code !== undefined) {\r\n+          if (error.response.data.code === 401) {\r\n+            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+          } else if (error.response.data.message !== undefined) {\r\n+            NotificationManager.error(error.response.data.message, \"\");\r\n           }\r\n+        }\r\n+        setUniverse(null);\r\n+      },\r\n+    });\r\n+  } else {\r\n+    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+  }\r\n+};\r\n \r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n+const getServices = (refresh = true, index = null) => {\r\n+  index = index != null ? index : pageIndex;\r\n+  setPageIndex(index);\r\n \r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n+  if (!placeIsSelected) {\r\n+    msgErrors({\r\n+      codePostal: true,\r\n+    });\r\n+    return;\r\n+  }\r\n \r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n+  if (!isPending) {\r\n+    setIsPending(true);\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n \r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-    \r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-     \r\n-      if ( refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n+    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+      let condition = \"\";\r\n+      if (filter.category.value) {\r\n+        condition += `&categories.parent.id=${filter.category.value}`;\r\n+      }\r\n+      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n         }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        /*  if (\r\n-          filter.keyword.active.id &&\r\n-          filter.keyword.active.by &&\r\n-          filter.keyword.value.trim()\r\n-        ) {\r\n-          condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-        } else if (filter.keyword.value.trim()) {\r\n-          condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-        } */\r\n+      }\r\n+      /*  if (\r\n+        filter.keyword.active.id &&\r\n+        filter.keyword.active.by &&\r\n+        filter.keyword.value.trim()\r\n+      ) {\r\n+        condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+      } else if (filter.keyword.value.trim()) {\r\n+        condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+      } */\r\n \r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-//console.log('Check universe',universe.id);\r\n-//console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-          }${condition}`;\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if ( refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-       \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-     \r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setUniServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\",response);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n+      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+      }\r\n+      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+      //console.log('Check universe',universe.id);\r\n+      //console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n+      const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+        }${condition}`;\r\n+      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        setParamsUrlService(cpParamsUrlService);\r\n+\r\n+        connector({\r\n+          method: \"get\",\r\n+          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+          success: (response) => {\r\n+\r\n+            setServices(response.data[\"hydra:member\"] || []);\r\n+            setUniServices(response.data[\"hydra:member\"] || []);\r\n+            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\", response);\r\n+            setIsPending(false);\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+          },\r\n+        });\r\n       } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n         setIsPending(false);\r\n       }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n     } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n+      msgErrors({\r\n+        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n       });\r\n+      setIsPending(false);\r\n     }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n+  }\r\n+};\r\n \r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n+const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+  const index = cpCategories.findIndex(\r\n+    (cat) => cat.id === cpFilter.category.value\r\n+  );\r\n+  cpFilter.subCategory.options = [];\r\n+  let subCat = [];\r\n+  if (index > -1) {\r\n+    subCat = cpCategories[index].children;\r\n+  } else {\r\n+    const allSubCategory = [];\r\n+    for (let i = 0; i < cpCategories.length; i++) {\r\n+      allSubCategory.push(...cpCategories[i].children);\r\n     }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n+    subCat = allSubCategory;\r\n+  }\r\n+  for (let i = 0; i < subCat.length; i++) {\r\n+    cpFilter.subCategory.options.push({\r\n+      label: subCat[i].name,\r\n+      value: subCat[i].id,\r\n+    });\r\n+  }\r\n+  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+  return cpFilter;\r\n+};\r\n \r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n+const msgErrors = (e) => {\r\n+  const cpFilter = { ...filter };\r\n+  if (e.universe !== undefined) {\r\n+    cpFilter.universe.error = e.universe;\r\n+    cpFilter.universe.infoBull = e.universe;\r\n+  }\r\n+  if (e.category !== undefined) {\r\n+    cpFilter.category.error = e.category;\r\n+    cpFilter.category.infoBull = e.category;\r\n+  }\r\n+  if (e.subCategory !== undefined) {\r\n+    cpFilter.subCategory.error = e.subCategory;\r\n+    cpFilter.subCategory.infoBull = e.subCategory;\r\n+  }\r\n \r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n+  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+  setFilter(cpFilter);\r\n \r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n+  const cpFilterMap = { ...filterMap };\r\n+  if (e.codePostal !== undefined) {\r\n+    cpFilterMap.codePostal.error = e.codePostal;\r\n+    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n   }\r\n+  setFilterMap(cpFilterMap);\r\n+};\r\n \r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n+if (universe === false) {\r\n+  return <Loader />;\r\n+}\r\n \r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n+return (\r\n+  <Base>\r\n+    {universe ? (\r\n+\r\n+      <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              repairMan={repairMan}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n               />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n+            )}\r\n \r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n \r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n \r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n \r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n                 </div>\r\n-              )}\r\n \r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n \r\n+                {filter.category.value && (\r\n                   <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n                       setElement={(element) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n+                        cpFilter.subCategory = element;\r\n                         setFilter(cpFilter);\r\n                       }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n+                      onChangeCallback={(response) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n                         setFilter(cpFilter);\r\n                       }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n                     />\r\n                   </div>\r\n+                )}\r\n \r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n+                {/* <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n                     setFilter={setFilter}\r\n                     universe={universe}\r\n                   />\r\n                 </div> */}\r\n \r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n \r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n \r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n \r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n \r\n \r\n \r\n \r\n \r\n \r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+      </>\r\n+    ) : (\r\n+      <FoundPage\r\n+        noBase\r\n+        title=\"Univers en cours de développement\"\r\n+        image={imgMaintenence}\r\n+      />\r\n+    )\r\n+    }\r\n+  </Base >\r\n+);\r\n }\r\n"
                },
                {
                    "date": 1711445997052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,10 +263,10 @@\n       },\r\n     });\r\n   };\r\n \r\n-}\r\n \r\n+\r\n useEffect(() => {\r\n   if (universe && !isPendingLatLng) {\r\n     getServices(false, 0);\r\n   }\r\n"
                },
                {
                    "date": 1711446221202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,38 +224,10 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        if (response.data?.benefits) {\r\n-          let subCategories = [];\r\n-          response.data.benefits.map((benefit) => {\r\n-            if (benefit?.service?.categories) {\r\n-              subCategories = [...subCategories, ...benefit.service.categories];\r\n-            }\r\n-          });\r\n-          const cpCategories = parentCategories(subCategories);\r\n-          setCategories(cpCategories);\r\n-          if (cpCategories.length > 0) {\r\n-            let cpUniversRepairman = [];\r\n-            cpCategories.map((cat) => {\r\n-              if (cat?.universe) {\r\n-                cpUniversRepairman.push({\r\n-                  id: cat.universe.id,\r\n-                  name: cat.universe.name,\r\n-                  slug: cat.universe.slug,\r\n-                  position: cat.universe.position,\r\n-                });\r\n-              }\r\n-            });\r\n-            setUniversRepairman(\r\n-              sortObjects(\r\n-                getUniqueListBy(cpUniversRepairman, \"id\"),\r\n-                \"position\",\r\n-                \"asc\"\r\n-              )\r\n-            );\r\n-          }\r\n-        }\r\n+        \r\n+        console.log(\"STEP artlistproducts ANONYMOUS_USER_REPAIRMAN  \",response)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1711446235294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,714 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+  const [uniServices, setUniServices] = useState([]);\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+  }, []);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        \r\n+        console.log(\"STEP artlistproducts ANONYMOUS_USER_REPAIRMAN  \",response)\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+      \r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, 0);\r\n+  }\r\n+}, [universe]);\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, null);\r\n+  }\r\n+  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+}, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+const getRepairMan = (repairmanId) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+    //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n+    data: {},\r\n+    success: (response) => {\r\n+      const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      setRepairMan(arrayObj)\r\n+      console.log(\"STEP artlistproduct\", arrayObj);\r\n+    },\r\n+\r\n+    catch: (error) => {\r\n+      console.log(error);\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+const getUniverse = () => {\r\n+  const id = slugIdUniverse.split(\"-\").pop();\r\n+  if (id) {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data || { categories: [] };\r\n+        setUniverse(arrayObj);\r\n+\r\n+        let cpFilter = { ...filter };\r\n+        cpFilter.category.options = [];\r\n+\r\n+        cpFilter.category.value = null;\r\n+        cpFilter.subCategory.value = null;\r\n+        cpFilter.subCategory.options = [];\r\n+\r\n+        if (response.data?.nameCategory) {\r\n+          cpFilter.category.label = response.data.nameCategory;\r\n+        }\r\n+\r\n+        if (response.data?.nameSubCategory) {\r\n+          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+        }\r\n+\r\n+        if (response.data?.requireSearchSubCategory != undefined) {\r\n+          cpFilter.universe.requireSearchSubCategory =\r\n+            response.data.requireSearchSubCategory;\r\n+        }\r\n+\r\n+        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+          let o = arrayObj.categories[i];\r\n+\r\n+          if (o.id == defaultCategory) {\r\n+            cpFilter.category.value = defaultCategory;\r\n+            cpFilter.subCategory.value = defaultSubCategory;\r\n+            for (let j = 0; j < o.children.length; j++) {\r\n+              cpFilter.subCategory.options.push({\r\n+                label: o.children[j].name,\r\n+                value: o.children[j].id,\r\n+              });\r\n+            }\r\n+          }\r\n+          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        if (error.response?.data?.code !== undefined) {\r\n+          if (error.response.data.code === 401) {\r\n+            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+          } else if (error.response.data.message !== undefined) {\r\n+            NotificationManager.error(error.response.data.message, \"\");\r\n+          }\r\n+        }\r\n+        setUniverse(null);\r\n+      },\r\n+    });\r\n+  } else {\r\n+    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+  }\r\n+};\r\n+\r\n+const getServices = (refresh = true, index = null) => {\r\n+  index = index != null ? index : pageIndex;\r\n+  setPageIndex(index);\r\n+\r\n+  if (!placeIsSelected) {\r\n+    msgErrors({\r\n+      codePostal: true,\r\n+    });\r\n+    return;\r\n+  }\r\n+\r\n+  if (!isPending) {\r\n+    setIsPending(true);\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+\r\n+    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+      let condition = \"\";\r\n+      if (filter.category.value) {\r\n+        condition += `&categories.parent.id=${filter.category.value}`;\r\n+      }\r\n+      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+        }\r\n+      }\r\n+      /*  if (\r\n+        filter.keyword.active.id &&\r\n+        filter.keyword.active.by &&\r\n+        filter.keyword.value.trim()\r\n+      ) {\r\n+        condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n+      } else if (filter.keyword.value.trim()) {\r\n+        condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n+      } */\r\n+\r\n+      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+      }\r\n+      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+      //console.log('Check universe',universe.id);\r\n+      //console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n+      const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+        }${condition}`;\r\n+      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        setParamsUrlService(cpParamsUrlService);\r\n+\r\n+        connector({\r\n+          method: \"get\",\r\n+          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+          success: (response) => {\r\n+\r\n+            setServices(response.data[\"hydra:member\"] || []);\r\n+            setUniServices(response.data[\"hydra:member\"] || []);\r\n+            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\", response);\r\n+            setIsPending(false);\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+          },\r\n+        });\r\n+      } else {\r\n+        setIsPending(false);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+      });\r\n+      setIsPending(false);\r\n+    }\r\n+  }\r\n+};\r\n+\r\n+const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+  const index = cpCategories.findIndex(\r\n+    (cat) => cat.id === cpFilter.category.value\r\n+  );\r\n+  cpFilter.subCategory.options = [];\r\n+  let subCat = [];\r\n+  if (index > -1) {\r\n+    subCat = cpCategories[index].children;\r\n+  } else {\r\n+    const allSubCategory = [];\r\n+    for (let i = 0; i < cpCategories.length; i++) {\r\n+      allSubCategory.push(...cpCategories[i].children);\r\n+    }\r\n+    subCat = allSubCategory;\r\n+  }\r\n+  for (let i = 0; i < subCat.length; i++) {\r\n+    cpFilter.subCategory.options.push({\r\n+      label: subCat[i].name,\r\n+      value: subCat[i].id,\r\n+    });\r\n+  }\r\n+  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+  return cpFilter;\r\n+};\r\n+\r\n+const msgErrors = (e) => {\r\n+  const cpFilter = { ...filter };\r\n+  if (e.universe !== undefined) {\r\n+    cpFilter.universe.error = e.universe;\r\n+    cpFilter.universe.infoBull = e.universe;\r\n+  }\r\n+  if (e.category !== undefined) {\r\n+    cpFilter.category.error = e.category;\r\n+    cpFilter.category.infoBull = e.category;\r\n+  }\r\n+  if (e.subCategory !== undefined) {\r\n+    cpFilter.subCategory.error = e.subCategory;\r\n+    cpFilter.subCategory.infoBull = e.subCategory;\r\n+  }\r\n+\r\n+  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+  setFilter(cpFilter);\r\n+\r\n+  const cpFilterMap = { ...filterMap };\r\n+  if (e.codePostal !== undefined) {\r\n+    cpFilterMap.codePostal.error = e.codePostal;\r\n+    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+  }\r\n+  setFilterMap(cpFilterMap);\r\n+};\r\n+\r\n+if (universe === false) {\r\n+  return <Loader />;\r\n+}\r\n+\r\n+return (\r\n+  <Base>\r\n+    {universe ? (\r\n+\r\n+      <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              repairMan={repairMan}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                {filter.category.value && (\r\n+                  <div className=\"item-filter\">\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChangeCallback={(response) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                )}\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+      </>\r\n+    ) : (\r\n+      <FoundPage\r\n+        noBase\r\n+        title=\"Univers en cours de développement\"\r\n+        image={imgMaintenence}\r\n+      />\r\n+    )\r\n+    }\r\n+  </Base >\r\n+);\r\n+}\r\n"
                },
                {
                    "date": 1711446595326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,8 +217,9 @@\n \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -246,8 +247,9 @@\n \r\n useEffect(() => {\r\n   if (universe && !isPendingLatLng) {\r\n     getServices(false, null);\r\n+   \r\n   }\r\n   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n@@ -364,17 +366,9 @@\n         for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n           condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n         }\r\n       }\r\n-      /*  if (\r\n-        filter.keyword.active.id &&\r\n-        filter.keyword.active.by &&\r\n-        filter.keyword.value.trim()\r\n-      ) {\r\n-        condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-      } else if (filter.keyword.value.trim()) {\r\n-        condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-      } */\r\n+ \r\n \r\n       if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n         condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n       }\r\n@@ -711,718 +705,4 @@\n     }\r\n   </Base >\r\n );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-  const [uniServices, setUniServices] = useState([]);\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-  }, []);\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        \r\n-        console.log(\"STEP artlistproducts ANONYMOUS_USER_REPAIRMAN  \",response)\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setIsPending(false);\r\n-        NotificationManager.error(getMsgError(error), \"\");\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, 0);\r\n-  }\r\n-}, [universe]);\r\n-\r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, null);\r\n-  }\r\n-  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-}, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-const getRepairMan = (repairmanId) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-    //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n-    data: {},\r\n-    success: (response) => {\r\n-      const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      setRepairMan(arrayObj)\r\n-      console.log(\"STEP artlistproduct\", arrayObj);\r\n-    },\r\n-\r\n-    catch: (error) => {\r\n-      console.log(error);\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-const getUniverse = () => {\r\n-  const id = slugIdUniverse.split(\"-\").pop();\r\n-  if (id) {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data || { categories: [] };\r\n-        setUniverse(arrayObj);\r\n-\r\n-        let cpFilter = { ...filter };\r\n-        cpFilter.category.options = [];\r\n-\r\n-        cpFilter.category.value = null;\r\n-        cpFilter.subCategory.value = null;\r\n-        cpFilter.subCategory.options = [];\r\n-\r\n-        if (response.data?.nameCategory) {\r\n-          cpFilter.category.label = response.data.nameCategory;\r\n-        }\r\n-\r\n-        if (response.data?.nameSubCategory) {\r\n-          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-        }\r\n-\r\n-        if (response.data?.requireSearchSubCategory != undefined) {\r\n-          cpFilter.universe.requireSearchSubCategory =\r\n-            response.data.requireSearchSubCategory;\r\n-        }\r\n-\r\n-        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-          let o = arrayObj.categories[i];\r\n-\r\n-          if (o.id == defaultCategory) {\r\n-            cpFilter.category.value = defaultCategory;\r\n-            cpFilter.subCategory.value = defaultSubCategory;\r\n-            for (let j = 0; j < o.children.length; j++) {\r\n-              cpFilter.subCategory.options.push({\r\n-                label: o.children[j].name,\r\n-                value: o.children[j].id,\r\n-              });\r\n-            }\r\n-          }\r\n-          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        if (error.response?.data?.code !== undefined) {\r\n-          if (error.response.data.code === 401) {\r\n-            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-          } else if (error.response.data.message !== undefined) {\r\n-            NotificationManager.error(error.response.data.message, \"\");\r\n-          }\r\n-        }\r\n-        setUniverse(null);\r\n-      },\r\n-    });\r\n-  } else {\r\n-    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-  }\r\n-};\r\n-\r\n-const getServices = (refresh = true, index = null) => {\r\n-  index = index != null ? index : pageIndex;\r\n-  setPageIndex(index);\r\n-\r\n-  if (!placeIsSelected) {\r\n-    msgErrors({\r\n-      codePostal: true,\r\n-    });\r\n-    return;\r\n-  }\r\n-\r\n-  if (!isPending) {\r\n-    setIsPending(true);\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-\r\n-    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-      let condition = \"\";\r\n-      if (filter.category.value) {\r\n-        condition += `&categories.parent.id=${filter.category.value}`;\r\n-      }\r\n-      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-        }\r\n-      }\r\n-      /*  if (\r\n-        filter.keyword.active.id &&\r\n-        filter.keyword.active.by &&\r\n-        filter.keyword.value.trim()\r\n-      ) {\r\n-        condition += `&${filter.keyword.active.by}=${filter.keyword.value}`;\r\n-      } else if (filter.keyword.value.trim()) {\r\n-        condition += `&or[name,categories.parent.name,categories.name,description]=${filter.keyword.value}`;\r\n-      } */\r\n-\r\n-      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-      }\r\n-      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-      //console.log('Check universe',universe.id);\r\n-      //console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n-      const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-        }${condition}`;\r\n-      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        setParamsUrlService(cpParamsUrlService);\r\n-\r\n-        connector({\r\n-          method: \"get\",\r\n-          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-          success: (response) => {\r\n-\r\n-            setServices(response.data[\"hydra:member\"] || []);\r\n-            setUniServices(response.data[\"hydra:member\"] || []);\r\n-            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\", response);\r\n-            setIsPending(false);\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-          },\r\n-        });\r\n-      } else {\r\n-        setIsPending(false);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-      });\r\n-      setIsPending(false);\r\n-    }\r\n-  }\r\n-};\r\n-\r\n-const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-  const index = cpCategories.findIndex(\r\n-    (cat) => cat.id === cpFilter.category.value\r\n-  );\r\n-  cpFilter.subCategory.options = [];\r\n-  let subCat = [];\r\n-  if (index > -1) {\r\n-    subCat = cpCategories[index].children;\r\n-  } else {\r\n-    const allSubCategory = [];\r\n-    for (let i = 0; i < cpCategories.length; i++) {\r\n-      allSubCategory.push(...cpCategories[i].children);\r\n-    }\r\n-    subCat = allSubCategory;\r\n-  }\r\n-  for (let i = 0; i < subCat.length; i++) {\r\n-    cpFilter.subCategory.options.push({\r\n-      label: subCat[i].name,\r\n-      value: subCat[i].id,\r\n-    });\r\n-  }\r\n-  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-  return cpFilter;\r\n-};\r\n-\r\n-const msgErrors = (e) => {\r\n-  const cpFilter = { ...filter };\r\n-  if (e.universe !== undefined) {\r\n-    cpFilter.universe.error = e.universe;\r\n-    cpFilter.universe.infoBull = e.universe;\r\n-  }\r\n-  if (e.category !== undefined) {\r\n-    cpFilter.category.error = e.category;\r\n-    cpFilter.category.infoBull = e.category;\r\n-  }\r\n-  if (e.subCategory !== undefined) {\r\n-    cpFilter.subCategory.error = e.subCategory;\r\n-    cpFilter.subCategory.infoBull = e.subCategory;\r\n-  }\r\n-\r\n-  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-  setFilter(cpFilter);\r\n-\r\n-  const cpFilterMap = { ...filterMap };\r\n-  if (e.codePostal !== undefined) {\r\n-    cpFilterMap.codePostal.error = e.codePostal;\r\n-    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-  }\r\n-  setFilterMap(cpFilterMap);\r\n-};\r\n-\r\n-if (universe === false) {\r\n-  return <Loader />;\r\n-}\r\n-\r\n-return (\r\n-  <Base>\r\n-    {universe ? (\r\n-\r\n-      <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              repairMan={repairMan}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                {filter.category.value && (\r\n-                  <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChangeCallback={(response) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                )}\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-      </>\r\n-    ) : (\r\n-      <FoundPage\r\n-        noBase\r\n-        title=\"Univers en cours de développement\"\r\n-        image={imgMaintenence}\r\n-      />\r\n-    )\r\n-    }\r\n-  </Base >\r\n-);\r\n-}\r\n"
                },
                {
                    "date": 1711446618234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         \r\n-        console.log(\"STEP artlistproducts ANONYMOUS_USER_REPAIRMAN  \",response)\r\n+        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",response)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1711447063713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,9 +258,8 @@\n const getRepairMan = (repairmanId) => {\r\n   connector({\r\n     method: \"get\",\r\n     url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-    //url: `${endPoints.USERS_REPAIRMAN_UNIVERSES}?order[enterprise]=asc&id=`+repairmanId,\r\n     data: {},\r\n     success: (response) => {\r\n       const arrayObj = response.data[\"hydra:member\"] || [];\r\n       setRepairMan(arrayObj)\r\n@@ -389,9 +388,9 @@\n \r\n             setServices(response.data[\"hydra:member\"] || []);\r\n             setUniServices(response.data[\"hydra:member\"] || []);\r\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG\", response);\r\n+            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n             setIsPending(false);\r\n           },\r\n           catch: (error) => {\r\n             console.log(error);\r\n"
                },
                {
                    "date": 1711447190983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n-  const [uniServices, setUniServices] = useState([]);\r\n+ \r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n   const [filter, setFilter] = useState({\r\n@@ -386,9 +386,8 @@\n           url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n           success: (response) => {\r\n \r\n             setServices(response.data[\"hydra:member\"] || []);\r\n-            setUniServices(response.data[\"hydra:member\"] || []);\r\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n             console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n             setIsPending(false);\r\n           },\r\n"
                },
                {
                    "date": 1711447304862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,11 +371,9 @@\n       if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n         condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n       }\r\n       const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-      //console.log('Check universe',universe.id);\r\n-      //console.log('Check universe slugIdUniverse params',parent_univ_id);\r\n-      const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n         }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n         }${condition}`;\r\n       //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n       if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n@@ -683,14 +681,25 @@\n                 pagination={true}\r\n                 isLoading={isPending}\r\n               > </ListProduitsBonus>\r\n             )}\r\n+      {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n \r\n \r\n \r\n \r\n \r\n-\r\n           </Container>\r\n         </ContentPageStyle>\r\n       </>\r\n     ) : (\r\n"
                },
                {
                    "date": 1711447574339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,72 +275,10 @@\n \r\n \r\n \r\n \r\n-const getUniverse = () => {\r\n-  const id = slugIdUniverse.split(\"-\").pop();\r\n-  if (id) {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data || { categories: [] };\r\n-        setUniverse(arrayObj);\r\n \r\n-        let cpFilter = { ...filter };\r\n-        cpFilter.category.options = [];\r\n \r\n-        cpFilter.category.value = null;\r\n-        cpFilter.subCategory.value = null;\r\n-        cpFilter.subCategory.options = [];\r\n-\r\n-        if (response.data?.nameCategory) {\r\n-          cpFilter.category.label = response.data.nameCategory;\r\n-        }\r\n-\r\n-        if (response.data?.nameSubCategory) {\r\n-          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-        }\r\n-\r\n-        if (response.data?.requireSearchSubCategory != undefined) {\r\n-          cpFilter.universe.requireSearchSubCategory =\r\n-            response.data.requireSearchSubCategory;\r\n-        }\r\n-\r\n-        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-          let o = arrayObj.categories[i];\r\n-\r\n-          if (o.id == defaultCategory) {\r\n-            cpFilter.category.value = defaultCategory;\r\n-            cpFilter.subCategory.value = defaultSubCategory;\r\n-            for (let j = 0; j < o.children.length; j++) {\r\n-              cpFilter.subCategory.options.push({\r\n-                label: o.children[j].name,\r\n-                value: o.children[j].id,\r\n-              });\r\n-            }\r\n-          }\r\n-          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        if (error.response?.data?.code !== undefined) {\r\n-          if (error.response.data.code === 401) {\r\n-            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-          } else if (error.response.data.message !== undefined) {\r\n-            NotificationManager.error(error.response.data.message, \"\");\r\n-          }\r\n-        }\r\n-        setUniverse(null);\r\n-      },\r\n-    });\r\n-  } else {\r\n-    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-  }\r\n-};\r\n-\r\n const getServices = (refresh = true, index = null) => {\r\n   index = index != null ? index : pageIndex;\r\n   setPageIndex(index);\r\n \r\n"
                },
                {
                    "date": 1711447598698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n   }, [universeSelector, slugIdUniverse]);\r\n \r\n   useEffect(() => {\r\n     if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n+      //getUniverse();\r\n     } else {\r\n       localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n       history.push(ROUTES.HOME.url);\r\n     }\r\n"
                },
                {
                    "date": 1711447642707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -343,58 +343,11 @@\n     }\r\n   }\r\n };\r\n \r\n-const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-  const index = cpCategories.findIndex(\r\n-    (cat) => cat.id === cpFilter.category.value\r\n-  );\r\n-  cpFilter.subCategory.options = [];\r\n-  let subCat = [];\r\n-  if (index > -1) {\r\n-    subCat = cpCategories[index].children;\r\n-  } else {\r\n-    const allSubCategory = [];\r\n-    for (let i = 0; i < cpCategories.length; i++) {\r\n-      allSubCategory.push(...cpCategories[i].children);\r\n-    }\r\n-    subCat = allSubCategory;\r\n-  }\r\n-  for (let i = 0; i < subCat.length; i++) {\r\n-    cpFilter.subCategory.options.push({\r\n-      label: subCat[i].name,\r\n-      value: subCat[i].id,\r\n-    });\r\n-  }\r\n-  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-  return cpFilter;\r\n-};\r\n \r\n-const msgErrors = (e) => {\r\n-  const cpFilter = { ...filter };\r\n-  if (e.universe !== undefined) {\r\n-    cpFilter.universe.error = e.universe;\r\n-    cpFilter.universe.infoBull = e.universe;\r\n-  }\r\n-  if (e.category !== undefined) {\r\n-    cpFilter.category.error = e.category;\r\n-    cpFilter.category.infoBull = e.category;\r\n-  }\r\n-  if (e.subCategory !== undefined) {\r\n-    cpFilter.subCategory.error = e.subCategory;\r\n-    cpFilter.subCategory.infoBull = e.subCategory;\r\n-  }\r\n \r\n-  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-  setFilter(cpFilter);\r\n \r\n-  const cpFilterMap = { ...filterMap };\r\n-  if (e.codePostal !== undefined) {\r\n-    cpFilterMap.codePostal.error = e.codePostal;\r\n-    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-  }\r\n-  setFilterMap(cpFilterMap);\r\n-};\r\n \r\n if (universe === false) {\r\n   return <Loader />;\r\n }\r\n"
                },
                {
                    "date": 1711447656110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -345,10 +345,34 @@\n };\r\n \r\n \r\n \r\n+const msgErrors = (e) => {\r\n+  const cpFilter = { ...filter };\r\n+  if (e.universe !== undefined) {\r\n+    cpFilter.universe.error = e.universe;\r\n+    cpFilter.universe.infoBull = e.universe;\r\n+  }\r\n+  if (e.category !== undefined) {\r\n+    cpFilter.category.error = e.category;\r\n+    cpFilter.category.infoBull = e.category;\r\n+  }\r\n+  if (e.subCategory !== undefined) {\r\n+    cpFilter.subCategory.error = e.subCategory;\r\n+    cpFilter.subCategory.infoBull = e.subCategory;\r\n+  }\r\n \r\n+  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+  setFilter(cpFilter);\r\n \r\n+  const cpFilterMap = { ...filterMap };\r\n+  if (e.codePostal !== undefined) {\r\n+    cpFilterMap.codePostal.error = e.codePostal;\r\n+    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+  }\r\n+  setFilterMap(cpFilterMap);\r\n+};\r\n+\r\n if (universe === false) {\r\n   return <Loader />;\r\n }\r\n \r\n"
                },
                {
                    "date": 1711447676154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,37 +460,9 @@\n                     }}\r\n                   />\r\n                 </div>\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n+           \r\n \r\n                 {filter.category.value && (\r\n                   <div className=\"item-filter\">\r\n                     <SelectCat\r\n"
                },
                {
                    "date": 1711447699394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -462,31 +462,8 @@\n                 </div>\r\n \r\n            \r\n \r\n-                {filter.category.value && (\r\n-                  <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChangeCallback={(response) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                )}\r\n \r\n                 {/* <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n"
                },
                {
                    "date": 1711447794534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,131 +411,11 @@\n                 }}\r\n               >\r\n                 <SearchIcon /> Rechercher une prestation\r\n               </div>\r\n-            )}\r\n+            )\r\n \r\n             {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-           \r\n-\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n                 data={services}\r\n                 perPage={perPage}\r\n                 setPerPage={setPerPage}\r\n"
                },
                {
                    "date": 1711447804816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,11 +411,131 @@\n                 }}\r\n               >\r\n                 <SearchIcon /> Rechercher une prestation\r\n               </div>\r\n-            )\r\n+            )}\r\n \r\n             {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+           \r\n+\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n                 data={services}\r\n                 perPage={perPage}\r\n                 setPerPage={setPerPage}\r\n"
                },
                {
                    "date": 1711447854694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,128 +413,10 @@\n                 <SearchIcon /> Rechercher une prestation\r\n               </div>\r\n             )}\r\n \r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n+        \r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-           \r\n-\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n             {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n                 data={services}\r\n                 perPage={perPage}\r\n"
                },
                {
                    "date": 1711447872499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,10 +413,128 @@\n                 <SearchIcon /> Rechercher une prestation\r\n               </div>\r\n             )}\r\n \r\n-        \r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n \r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+           \r\n+\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n             {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n                 data={services}\r\n                 perPage={perPage}\r\n"
                },
                {
                    "date": 1711447963828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -415,74 +415,16 @@\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n+               \r\n+          \r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n            \r\n \r\n \r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n+                \r\n \r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n \r\n                 <div className=\"item-filter btn-filter-banner\">\r\n                   <button\r\n                     className=\"btn-search-filter\"\r\n"
                },
                {
                    "date": 1711448029859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -416,16 +416,8 @@\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                \r\n-          \r\n-\r\n-           \r\n-\r\n-\r\n-                \r\n-\r\n-\r\n                 <div className=\"item-filter btn-filter-banner\">\r\n                   <button\r\n                     className=\"btn-search-filter\"\r\n                     onClick={() => {\r\n@@ -464,14 +456,9 @@\n                         });\r\n                       }\r\n                     }}\r\n                   >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n+                   \r\n                   </button>\r\n                 </div>\r\n               </BlocFilterStyle>\r\n             )}\r\n"
                },
                {
                    "date": 1711448078155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -416,51 +416,9 @@\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                \r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                   \r\n-                  </button>\r\n-                </div>\r\n+              \r\n               </BlocFilterStyle>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n"
                },
                {
                    "date": 1711448214470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,8 +218,9 @@\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n+    getServices(false, 0);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -416,9 +417,51 @@\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                \r\n-              \r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                   \r\n+                  </button>\r\n+                </div>\r\n               </BlocFilterStyle>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n"
                },
                {
                    "date": 1711448229315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n-    getServices(false, 0);\r\n+    getServices(true, 0);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n"
                },
                {
                    "date": 1711448253437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,8 @@\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n-    getServices(true, 0);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -417,8 +416,16 @@\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                \r\n+          \r\n+\r\n+           \r\n+\r\n+\r\n+                \r\n+\r\n+\r\n                 <div className=\"item-filter btn-filter-banner\">\r\n                   <button\r\n                     className=\"btn-search-filter\"\r\n                     onClick={() => {\r\n@@ -457,9 +464,14 @@\n                         });\r\n                       }\r\n                     }}\r\n                   >\r\n-                   \r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n                   </button>\r\n                 </div>\r\n               </BlocFilterStyle>\r\n             )}\r\n"
                },
                {
                    "date": 1711448278953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -436,9 +436,9 @@\n                         filterMap.codePostal.value\r\n                       ) {\r\n                         setToggleFilter(false);\r\n                       }\r\n-\r\n+                      getServices(false, 0);\r\n                       if (\r\n                         filter.universe.value &&\r\n                         filter.category.value &&\r\n                         ((Array.isArray(filter.subCategory.value) &&\r\n"
                },
                {
                    "date": 1711448306980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -415,16 +415,74 @@\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-               \r\n-          \r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n \r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n            \r\n \r\n \r\n-                \r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n \r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n \r\n                 <div className=\"item-filter btn-filter-banner\">\r\n                   <button\r\n                     className=\"btn-search-filter\"\r\n@@ -436,9 +494,9 @@\n                         filterMap.codePostal.value\r\n                       ) {\r\n                         setToggleFilter(false);\r\n                       }\r\n-                      getServices(false, 0);\r\n+\r\n                       if (\r\n                         filter.universe.value &&\r\n                         filter.category.value &&\r\n                         ((Array.isArray(filter.subCategory.value) &&\r\n"
                },
                {
                    "date": 1711448348517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -415,53 +415,11 @@\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n+               \r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n+            \r\n            \r\n \r\n \r\n                 {/* <div className=\"item-filter\">\r\n"
                },
                {
                    "date": 1711448399393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -417,20 +417,9 @@\n             {isDisplayListeProduits && (\r\n               <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                \r\n \r\n-            \r\n-           \r\n \r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n                 <div className=\"item-filter\">\r\n                   <InputAutoComplete\r\n                     filter={filterMap}\r\n                     setFilter={setFilterMap}\r\n"
                },
                {
                    "date": 1711448437367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -441,9 +441,9 @@\n                         filterMap.codePostal.value\r\n                       ) {\r\n                         setToggleFilter(false);\r\n                       }\r\n-\r\n+                      getServices(false, 0);\r\n                       if (\r\n                         filter.universe.value &&\r\n                         filter.category.value &&\r\n                         ((Array.isArray(filter.subCategory.value) &&\r\n"
                },
                {
                    "date": 1711448463724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -442,33 +442,9 @@\n                       ) {\r\n                         setToggleFilter(false);\r\n                       }\r\n                       getServices(false, 0);\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n+                     \r\n                     }}\r\n                   >\r\n                     {isDesktopOrLaptop && (\r\n                       <>\r\n"
                },
                {
                    "date": 1711448541233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -429,32 +429,10 @@\n                     setIsPendingLatLng={setIsPendingLatLng}\r\n                   />\r\n                 </div>\r\n \r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-                      getServices(false, 0);\r\n-                     \r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n+                {getServices(false, 0)}\r\n+\r\n               </BlocFilterStyle>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n"
                },
                {
                    "date": 1711448568507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -431,8 +431,32 @@\n                 </div>\r\n \r\n                 {getServices(false, 0)}\r\n \r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+                      getServices(false, 0);\r\n+                     \r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n               </BlocFilterStyle>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n"
                },
                {
                    "date": 1711448589178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,503 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+ \r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      //getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n+  }, []);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        \r\n+        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",response)\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+      \r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, 0);\r\n+  }\r\n+}, [universe]);\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, null);\r\n+   \r\n+  }\r\n+  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+}, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+const getRepairMan = (repairmanId) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+    data: {},\r\n+    success: (response) => {\r\n+      const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      setRepairMan(arrayObj)\r\n+      console.log(\"STEP artlistproduct\", arrayObj);\r\n+    },\r\n+\r\n+    catch: (error) => {\r\n+      console.log(error);\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+const getServices = (refresh = true, index = null) => {\r\n+  index = index != null ? index : pageIndex;\r\n+  setPageIndex(index);\r\n+\r\n+  if (!placeIsSelected) {\r\n+    msgErrors({\r\n+      codePostal: true,\r\n+    });\r\n+    return;\r\n+  }\r\n+\r\n+  if (!isPending) {\r\n+    setIsPending(true);\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+\r\n+    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+      let condition = \"\";\r\n+      if (filter.category.value) {\r\n+        condition += `&categories.parent.id=${filter.category.value}`;\r\n+      }\r\n+      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+        }\r\n+      }\r\n+ \r\n+\r\n+      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+      }\r\n+      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+        }${condition}`;\r\n+      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        setParamsUrlService(cpParamsUrlService);\r\n+\r\n+        connector({\r\n+          method: \"get\",\r\n+          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+          success: (response) => {\r\n+\r\n+            setServices(response.data[\"hydra:member\"] || []);\r\n+            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n+            setIsPending(false);\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+          },\r\n+        });\r\n+      } else {\r\n+        setIsPending(false);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+      });\r\n+      setIsPending(false);\r\n+    }\r\n+  }\r\n+};\r\n+\r\n+\r\n+\r\n+const msgErrors = (e) => {\r\n+  const cpFilter = { ...filter };\r\n+  if (e.universe !== undefined) {\r\n+    cpFilter.universe.error = e.universe;\r\n+    cpFilter.universe.infoBull = e.universe;\r\n+  }\r\n+  if (e.category !== undefined) {\r\n+    cpFilter.category.error = e.category;\r\n+    cpFilter.category.infoBull = e.category;\r\n+  }\r\n+  if (e.subCategory !== undefined) {\r\n+    cpFilter.subCategory.error = e.subCategory;\r\n+    cpFilter.subCategory.infoBull = e.subCategory;\r\n+  }\r\n+\r\n+  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+  setFilter(cpFilter);\r\n+\r\n+  const cpFilterMap = { ...filterMap };\r\n+  if (e.codePostal !== undefined) {\r\n+    cpFilterMap.codePostal.error = e.codePostal;\r\n+    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+  }\r\n+  setFilterMap(cpFilterMap);\r\n+};\r\n+\r\n+if (universe === false) {\r\n+  return <Loader />;\r\n+}\r\n+\r\n+return (\r\n+  <Base>\r\n+    {universe ? (\r\n+\r\n+      <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              repairMan={repairMan}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+               \r\n+\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+                      getServices(false, 0);\r\n+                     \r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n+      {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+      </>\r\n+    ) : (\r\n+      <FoundPage\r\n+        noBase\r\n+        title=\"Univers en cours de développement\"\r\n+        image={imgMaintenence}\r\n+      />\r\n+    )\r\n+    }\r\n+  </Base >\r\n+);\r\n+}\r\n"
                },
                {
                    "date": 1711448606612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -446,14 +446,9 @@\n                       getServices(false, 0);\r\n                      \r\n                     }}\r\n                   >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n+                  \r\n                   </button>\r\n                 </div>\r\n               </BlocFilterStyle>\r\n             )}\r\n@@ -500,508 +495,4 @@\n     }\r\n   </Base >\r\n );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n- \r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      //getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-    getUserRepairmanBenefits(repairmanId);\r\n-  }, []);\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        \r\n-        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",response)\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setIsPending(false);\r\n-      \r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, 0);\r\n-  }\r\n-}, [universe]);\r\n-\r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, null);\r\n-   \r\n-  }\r\n-  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-}, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-const getRepairMan = (repairmanId) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-    data: {},\r\n-    success: (response) => {\r\n-      const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      setRepairMan(arrayObj)\r\n-      console.log(\"STEP artlistproduct\", arrayObj);\r\n-    },\r\n-\r\n-    catch: (error) => {\r\n-      console.log(error);\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-const getServices = (refresh = true, index = null) => {\r\n-  index = index != null ? index : pageIndex;\r\n-  setPageIndex(index);\r\n-\r\n-  if (!placeIsSelected) {\r\n-    msgErrors({\r\n-      codePostal: true,\r\n-    });\r\n-    return;\r\n-  }\r\n-\r\n-  if (!isPending) {\r\n-    setIsPending(true);\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-\r\n-    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-      let condition = \"\";\r\n-      if (filter.category.value) {\r\n-        condition += `&categories.parent.id=${filter.category.value}`;\r\n-      }\r\n-      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-        }\r\n-      }\r\n- \r\n-\r\n-      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-      }\r\n-      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-        }${condition}`;\r\n-      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        setParamsUrlService(cpParamsUrlService);\r\n-\r\n-        connector({\r\n-          method: \"get\",\r\n-          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-          success: (response) => {\r\n-\r\n-            setServices(response.data[\"hydra:member\"] || []);\r\n-            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n-            setIsPending(false);\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-          },\r\n-        });\r\n-      } else {\r\n-        setIsPending(false);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-      });\r\n-      setIsPending(false);\r\n-    }\r\n-  }\r\n-};\r\n-\r\n-\r\n-\r\n-const msgErrors = (e) => {\r\n-  const cpFilter = { ...filter };\r\n-  if (e.universe !== undefined) {\r\n-    cpFilter.universe.error = e.universe;\r\n-    cpFilter.universe.infoBull = e.universe;\r\n-  }\r\n-  if (e.category !== undefined) {\r\n-    cpFilter.category.error = e.category;\r\n-    cpFilter.category.infoBull = e.category;\r\n-  }\r\n-  if (e.subCategory !== undefined) {\r\n-    cpFilter.subCategory.error = e.subCategory;\r\n-    cpFilter.subCategory.infoBull = e.subCategory;\r\n-  }\r\n-\r\n-  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-  setFilter(cpFilter);\r\n-\r\n-  const cpFilterMap = { ...filterMap };\r\n-  if (e.codePostal !== undefined) {\r\n-    cpFilterMap.codePostal.error = e.codePostal;\r\n-    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-  }\r\n-  setFilterMap(cpFilterMap);\r\n-};\r\n-\r\n-if (universe === false) {\r\n-  return <Loader />;\r\n-}\r\n-\r\n-return (\r\n-  <Base>\r\n-    {universe ? (\r\n-\r\n-      <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              repairMan={repairMan}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-               \r\n-\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                {getServices(false, 0)}\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-                      getServices(false, 0);\r\n-                     \r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n-      {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-      </>\r\n-    ) : (\r\n-      <FoundPage\r\n-        noBase\r\n-        title=\"Univers en cours de développement\"\r\n-        image={imgMaintenence}\r\n-      />\r\n-    )\r\n-    }\r\n-  </Base >\r\n-);\r\n-}\r\n"
                },
                {
                    "date": 1711448632113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -434,16 +434,9 @@\n                 <div className=\"item-filter btn-filter-banner\">\r\n                   <button\r\n                     className=\"btn-search-filter\"\r\n                     onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n+                     \r\n                       getServices(false, 0);\r\n                      \r\n                     }}\r\n                   >\r\n"
                },
                {
                    "date": 1711448736381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,14 +238,10 @@\n   };\r\n \r\n \r\n \r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, 0);\r\n-  }\r\n-}, [universe]);\r\n \r\n+\r\n useEffect(() => {\r\n   if (universe && !isPendingLatLng) {\r\n     getServices(false, null);\r\n    \r\n"
                },
                {
                    "date": 1711448783040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -426,20 +426,9 @@\n                   />\r\n                 </div>\r\n \r\n \r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                     \r\n-                      getServices(false, 0);\r\n-                     \r\n-                    }}\r\n-                  >\r\n-                  \r\n-                  </button>\r\n-                </div>\r\n+            \r\n               </BlocFilterStyle>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n"
                },
                {
                    "date": 1711448805107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -410,9 +410,8 @@\n               </div>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n                \r\n \r\n \r\n                 <div className=\"item-filter\">\r\n@@ -426,10 +425,8 @@\n                   />\r\n                 </div>\r\n \r\n \r\n-            \r\n-              </BlocFilterStyle>\r\n             )}\r\n \r\n             {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n"
                },
                {
                    "date": 1711448945001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n \r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputAutoCompleteArt from \"../../components/ui-elements/inputAutoComplete\";\r\n import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n import Select from \"../../components/ui-elements/select\";\r\n import endPoints from \"../../config/endPoints\";\r\n import ROUTES from \"../../config/routes\";\r\n@@ -31,8 +31,9 @@\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n import FicheUnivers from \"./ficheUnivers\";\r\n import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+import InputAutoCompleteArt from \"../../components/ui-elements/inputAutoCompleteArt\";\r\n \r\n export default function ArtisanListProducts() {\r\n   const isDisplayFilter = true;\r\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n@@ -414,9 +415,9 @@\n                \r\n \r\n \r\n                 <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n+                  <InputAutoCompleteArt\r\n                     filter={filterMap}\r\n                     setFilter={setFilterMap}\r\n                     placeIsSelected={placeIsSelected}\r\n                     setPlaceIsSelected={setPlaceIsSelected}\r\n"
                },
                {
                    "date": 1711448963534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,8 @@\n \r\n \r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoCompleteArt from \"../../components/ui-elements/inputAutoComplete\";\r\n import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n import Select from \"../../components/ui-elements/select\";\r\n import endPoints from \"../../config/endPoints\";\r\n import ROUTES from \"../../config/routes\";\r\n"
                },
                {
                    "date": 1711449066432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,84 +77,9 @@\n  \r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n+  \r\n   useEffect(() => {\r\n     if (toggleFilter) {\r\n       document.body.classList.add(\"menu-is-show\");\r\n     } else {\r\n"
                },
                {
                    "date": 1711449082183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,35 +77,94 @@\n  \r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n-  \r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n   useEffect(() => {\r\n     if (toggleFilter) {\r\n       document.body.classList.add(\"menu-is-show\");\r\n     } else {\r\n       document.body.classList.remove(\"menu-is-show\");\r\n     }\r\n   }, [toggleFilter]);\r\n \r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n \r\n+\r\n   useEffect(() => {\r\n     if (localStorage.getItem(\"codePostal\")) {\r\n       //getUniverse();\r\n     } else {\r\n"
                },
                {
                    "date": 1711449139360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,31 +326,9 @@\n \r\n \r\n \r\n const msgErrors = (e) => {\r\n-  const cpFilter = { ...filter };\r\n-  if (e.universe !== undefined) {\r\n-    cpFilter.universe.error = e.universe;\r\n-    cpFilter.universe.infoBull = e.universe;\r\n-  }\r\n-  if (e.category !== undefined) {\r\n-    cpFilter.category.error = e.category;\r\n-    cpFilter.category.infoBull = e.category;\r\n-  }\r\n-  if (e.subCategory !== undefined) {\r\n-    cpFilter.subCategory.error = e.subCategory;\r\n-    cpFilter.subCategory.infoBull = e.subCategory;\r\n-  }\r\n \r\n-  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-  setFilter(cpFilter);\r\n-\r\n-  const cpFilterMap = { ...filterMap };\r\n-  if (e.codePostal !== undefined) {\r\n-    cpFilterMap.codePostal.error = e.codePostal;\r\n-    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-  }\r\n-  setFilterMap(cpFilterMap);\r\n };\r\n \r\n if (universe === false) {\r\n   return <Loader />;\r\n"
                },
                {
                    "date": 1711449196083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,9 +350,8 @@\n             <BannerYourCommand>\r\n             </BannerYourCommand>\r\n \r\n \r\n-\r\n             {isDesktopOrLaptop && (\r\n               <Breadcrumb\r\n                 crumbs={[\r\n                   { name: \"Accueil\", path: \"/\" },\r\n@@ -371,26 +370,17 @@\n                 <SearchIcon /> Rechercher une prestation\r\n               </div>\r\n             )}\r\n \r\n-            {isDisplayListeProduits && (\r\n-               \r\n-\r\n-\r\n-                <div className=\"item-filter\">\r\n                   <InputAutoCompleteArt\r\n                     filter={filterMap}\r\n                     setFilter={setFilterMap}\r\n                     placeIsSelected={placeIsSelected}\r\n                     setPlaceIsSelected={setPlaceIsSelected}\r\n                     isPendingLatLng={isPendingLatLng}\r\n                     setIsPendingLatLng={setIsPendingLatLng}\r\n                   />\r\n-                </div>\r\n \r\n-\r\n-            )}\r\n-\r\n             {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n                 data={services}\r\n                 perPage={perPage}\r\n"
                },
                {
                    "date": 1711449238395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,32 +5,25 @@\n import { useHistory, useParams } from \"react-router-dom\";\r\n import { useSelector } from \"react-redux\";\r\n import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n \r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n import {\r\n   BlocFilterStyle,\r\n   ContentPageStyle,\r\n } from \"../../assets/styles/frontGlobalStyle\";\r\n import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n import FoundPage from \"../../components/foundPage\";\r\n import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n \r\n \r\n import Loader from \"../../components/loader\";\r\n import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n import endPoints from \"../../config/endPoints\";\r\n import ROUTES from \"../../config/routes\";\r\n import connector from \"../../connector\";\r\n import { clearErrors } from \"../../helper/form\";\r\n import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n import InputAutoCompleteArt from \"../../components/ui-elements/inputAutoCompleteArt\";\r\n \r\n export default function ArtisanListProducts() {\r\n@@ -379,20 +372,9 @@\n                     isPendingLatLng={isPendingLatLng}\r\n                     setIsPendingLatLng={setIsPendingLatLng}\r\n                   />\r\n \r\n-            {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n+        \r\n       {isDisplayListeProduits && (\r\n               <ListProduitsBonus\r\n                 data={services}\r\n                 perPage={perPage}\r\n"
                },
                {
                    "date": 1711449250509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   const [services, setServices] = useState([]);\r\n  \r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n+\r\n   const [filter, setFilter] = useState({\r\n     universe: {\r\n       label: \"Univers\",\r\n       placeholder: \"Choisir dans la liste\",\r\n"
                },
                {
                    "date": 1711450864874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,704 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+ \r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n+  }, []);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        \r\n+        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",response)\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+      \r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, 0);\r\n+  }\r\n+}, [universe]);\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, null);\r\n+   \r\n+  }\r\n+  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+}, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+const getRepairMan = (repairmanId) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+    data: {},\r\n+    success: (response) => {\r\n+      const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      setRepairMan(arrayObj)\r\n+      console.log(\"STEP artlistproduct\", arrayObj);\r\n+    },\r\n+\r\n+    catch: (error) => {\r\n+      console.log(error);\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+const getUniverse = () => {\r\n+  const id = slugIdUniverse.split(\"-\").pop();\r\n+  if (id) {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data || { categories: [] };\r\n+        setUniverse(arrayObj);\r\n+\r\n+        let cpFilter = { ...filter };\r\n+        cpFilter.category.options = [];\r\n+\r\n+        cpFilter.category.value = null;\r\n+        cpFilter.subCategory.value = null;\r\n+        cpFilter.subCategory.options = [];\r\n+\r\n+        if (response.data?.nameCategory) {\r\n+          cpFilter.category.label = response.data.nameCategory;\r\n+        }\r\n+\r\n+        if (response.data?.nameSubCategory) {\r\n+          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+        }\r\n+\r\n+        if (response.data?.requireSearchSubCategory != undefined) {\r\n+          cpFilter.universe.requireSearchSubCategory =\r\n+            response.data.requireSearchSubCategory;\r\n+        }\r\n+\r\n+        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+          let o = arrayObj.categories[i];\r\n+\r\n+          if (o.id == defaultCategory) {\r\n+            cpFilter.category.value = defaultCategory;\r\n+            cpFilter.subCategory.value = defaultSubCategory;\r\n+            for (let j = 0; j < o.children.length; j++) {\r\n+              cpFilter.subCategory.options.push({\r\n+                label: o.children[j].name,\r\n+                value: o.children[j].id,\r\n+              });\r\n+            }\r\n+          }\r\n+          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        if (error.response?.data?.code !== undefined) {\r\n+          if (error.response.data.code === 401) {\r\n+            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+          } else if (error.response.data.message !== undefined) {\r\n+            NotificationManager.error(error.response.data.message, \"\");\r\n+          }\r\n+        }\r\n+        setUniverse(null);\r\n+      },\r\n+    });\r\n+  } else {\r\n+    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+  }\r\n+};\r\n+\r\n+const getServices = (refresh = true, index = null) => {\r\n+  index = index != null ? index : pageIndex;\r\n+  setPageIndex(index);\r\n+\r\n+  if (!placeIsSelected) {\r\n+    msgErrors({\r\n+      codePostal: true,\r\n+    });\r\n+    return;\r\n+  }\r\n+\r\n+  if (!isPending) {\r\n+    setIsPending(true);\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+\r\n+    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+      let condition = \"\";\r\n+      if (filter.category.value) {\r\n+        condition += `&categories.parent.id=${filter.category.value}`;\r\n+      }\r\n+      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+        }\r\n+      }\r\n+ \r\n+\r\n+      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+      }\r\n+      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+        }${condition}`;\r\n+      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        setParamsUrlService(cpParamsUrlService);\r\n+\r\n+        connector({\r\n+          method: \"get\",\r\n+          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+          success: (response) => {\r\n+\r\n+            setServices(response.data[\"hydra:member\"] || []);\r\n+            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n+            setIsPending(false);\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+          },\r\n+        });\r\n+      } else {\r\n+        setIsPending(false);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+      });\r\n+      setIsPending(false);\r\n+    }\r\n+  }\r\n+};\r\n+\r\n+const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+  const index = cpCategories.findIndex(\r\n+    (cat) => cat.id === cpFilter.category.value\r\n+  );\r\n+  cpFilter.subCategory.options = [];\r\n+  let subCat = [];\r\n+  if (index > -1) {\r\n+    subCat = cpCategories[index].children;\r\n+  } else {\r\n+    const allSubCategory = [];\r\n+    for (let i = 0; i < cpCategories.length; i++) {\r\n+      allSubCategory.push(...cpCategories[i].children);\r\n+    }\r\n+    subCat = allSubCategory;\r\n+  }\r\n+  for (let i = 0; i < subCat.length; i++) {\r\n+    cpFilter.subCategory.options.push({\r\n+      label: subCat[i].name,\r\n+      value: subCat[i].id,\r\n+    });\r\n+  }\r\n+  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+  return cpFilter;\r\n+};\r\n+\r\n+const msgErrors = (e) => {\r\n+  const cpFilter = { ...filter };\r\n+  if (e.universe !== undefined) {\r\n+    cpFilter.universe.error = e.universe;\r\n+    cpFilter.universe.infoBull = e.universe;\r\n+  }\r\n+  if (e.category !== undefined) {\r\n+    cpFilter.category.error = e.category;\r\n+    cpFilter.category.infoBull = e.category;\r\n+  }\r\n+  if (e.subCategory !== undefined) {\r\n+    cpFilter.subCategory.error = e.subCategory;\r\n+    cpFilter.subCategory.infoBull = e.subCategory;\r\n+  }\r\n+\r\n+  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+  setFilter(cpFilter);\r\n+\r\n+  const cpFilterMap = { ...filterMap };\r\n+  if (e.codePostal !== undefined) {\r\n+    cpFilterMap.codePostal.error = e.codePostal;\r\n+    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+  }\r\n+  setFilterMap(cpFilterMap);\r\n+};\r\n+\r\n+if (universe === false) {\r\n+  return <Loader />;\r\n+}\r\n+\r\n+return (\r\n+  <Base>\r\n+    {universe ? (\r\n+\r\n+      <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              repairMan={repairMan}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                {filter.category.value && (\r\n+                  <div className=\"item-filter\">\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChangeCallback={(response) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                )}\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+      </>\r\n+    ) : (\r\n+      <FoundPage\r\n+        noBase\r\n+        title=\"Univers en cours de développement\"\r\n+        image={imgMaintenence}\r\n+      />\r\n+    )\r\n+    }\r\n+  </Base >\r\n+);\r\n+}\r\n"
                },
                {
                    "date": 1711451054115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -701,411 +701,4 @@\n     }\r\n   </Base >\r\n );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-import InputAutoCompleteArt from \"../../components/ui-elements/inputAutoCompleteArt\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n- \r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      //getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-    getUserRepairmanBenefits(repairmanId);\r\n-  }, []);\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        \r\n-        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",response)\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setIsPending(false);\r\n-      \r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, null);\r\n-   \r\n-  }\r\n-  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-}, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-const getRepairMan = (repairmanId) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-    data: {},\r\n-    success: (response) => {\r\n-      const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      setRepairMan(arrayObj)\r\n-      console.log(\"STEP artlistproduct\", arrayObj);\r\n-    },\r\n-\r\n-    catch: (error) => {\r\n-      console.log(error);\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-const getServices = (refresh = true, index = null) => {\r\n-  index = index != null ? index : pageIndex;\r\n-  setPageIndex(index);\r\n-\r\n-  if (!placeIsSelected) {\r\n-    msgErrors({\r\n-      codePostal: true,\r\n-    });\r\n-    return;\r\n-  }\r\n-\r\n-  if (!isPending) {\r\n-    setIsPending(true);\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-\r\n-    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-      let condition = \"\";\r\n-      if (filter.category.value) {\r\n-        condition += `&categories.parent.id=${filter.category.value}`;\r\n-      }\r\n-      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-        }\r\n-      }\r\n- \r\n-\r\n-      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-      }\r\n-      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-        }${condition}`;\r\n-      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        setParamsUrlService(cpParamsUrlService);\r\n-\r\n-        connector({\r\n-          method: \"get\",\r\n-          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-          success: (response) => {\r\n-\r\n-            setServices(response.data[\"hydra:member\"] || []);\r\n-            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n-            setIsPending(false);\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-          },\r\n-        });\r\n-      } else {\r\n-        setIsPending(false);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-      });\r\n-      setIsPending(false);\r\n-    }\r\n-  }\r\n-};\r\n-\r\n-\r\n-\r\n-const msgErrors = (e) => {\r\n-\r\n-};\r\n-\r\n-if (universe === false) {\r\n-  return <Loader />;\r\n-}\r\n-\r\n-return (\r\n-  <Base>\r\n-    {universe ? (\r\n-\r\n-      <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              repairMan={repairMan}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-                  <InputAutoCompleteArt\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-\r\n-        \r\n-      {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-      </>\r\n-    ) : (\r\n-      <FoundPage\r\n-        noBase\r\n-        title=\"Univers en cours de développement\"\r\n-        image={imgMaintenence}\r\n-      />\r\n-    )\r\n-    }\r\n-  </Base >\r\n-);\r\n-}\r\n"
                },
                {
                    "date": 1711451414264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,14 +238,10 @@\n   };\r\n \r\n \r\n \r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, 0);\r\n-  }\r\n-}, [universe]);\r\n \r\n+\r\n useEffect(() => {\r\n   if (universe && !isPendingLatLng) {\r\n     getServices(false, null);\r\n    \r\n"
                },
                {
                    "date": 1711451677708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,10 +225,10 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        \r\n-        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",response)\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n@@ -258,9 +258,9 @@\n     data: {},\r\n     success: (response) => {\r\n       const arrayObj = response.data[\"hydra:member\"] || [];\r\n       setRepairMan(arrayObj)\r\n-      console.log(\"STEP artlistproduct\", arrayObj);\r\n+      //console.log(\"STEP artlistproduct\", arrayObj);\r\n     },\r\n \r\n     catch: (error) => {\r\n       console.log(error);\r\n"
                },
                {
                    "date": 1711451740670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const arrayObj = response.data || [];\r\n         console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1711451795546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        const arrayObj = response.data || [];\r\n+        const arrayObj = response.data[\"hydra:member\"]['benefits'] || [];\r\n         console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1711451892368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"]['benefits'] || [];\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n         console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1711451915426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        const arrayObj = response.data || [];\r\n         console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1711451943889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n-        const arrayObj = response.data || [];\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1711452151500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"STEP artlistproducts getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n+        console.log(\"STEP artlistprto be keep getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n@@ -381,9 +381,9 @@\n           success: (response) => {\r\n \r\n             setServices(response.data[\"hydra:member\"] || []);\r\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP ANONYMOUS_SERVICES_CATALOG BA\", response);\r\n+            console.log(\"STEP aLL SERVICES_CATALOG BA\", response);\r\n             setIsPending(false);\r\n           },\r\n           catch: (error) => {\r\n             console.log(error);\r\n"
                },
                {
                    "date": 1711452240220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"STEP artlistprto be keep getUserRepairmanBenefits ANONYMOUS_USER_REPAIRMAN  \",id, arrayObj)\r\n+        console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \",id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n@@ -258,9 +258,9 @@\n     data: {},\r\n     success: (response) => {\r\n       const arrayObj = response.data[\"hydra:member\"] || [];\r\n       setRepairMan(arrayObj)\r\n-      //console.log(\"STEP artlistproduct\", arrayObj);\r\n+    \r\n     },\r\n \r\n     catch: (error) => {\r\n       console.log(error);\r\n@@ -381,9 +381,9 @@\n           success: (response) => {\r\n \r\n             setServices(response.data[\"hydra:member\"] || []);\r\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP aLL SERVICES_CATALOG BA\", response);\r\n+            console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n             setIsPending(false);\r\n           },\r\n           catch: (error) => {\r\n             console.log(error);\r\n"
                },
                {
                    "date": 1711452644894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,8 +382,18 @@\n \r\n             setServices(response.data[\"hydra:member\"] || []);\r\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n             console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n+            let xOneRow = [];\r\n+            xi = 0;\r\n+            Object.entries(services).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                xOneRow = value;\r\n+                console.log('Step Artlistprod Xonerox',xOneRow);\r\n+        \r\n+            });\r\n+            console.log(\"STEP KEY xOneRow\", xOneRow);\r\n             setIsPending(false);\r\n           },\r\n           catch: (error) => {\r\n             console.log(error);\r\n"
                },
                {
                    "date": 1711452653612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,9 +383,9 @@\n             setServices(response.data[\"hydra:member\"] || []);\r\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n             console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n             let xOneRow = [];\r\n-            xi = 0;\r\n+            let xi = 0;\r\n             Object.entries(services).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n                 xOneRow = value;\r\n"
                },
                {
                    "date": 1711452688257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,9 @@\n             Object.entries(services).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n                 xOneRow = value;\r\n-                console.log('Step Artlistprod Xonerox',xOneRow);\r\n+                console.log('STEP aLL SERVICES_CATALOG BA whole',xOneRow);\r\n         \r\n             });\r\n             console.log(\"STEP KEY xOneRow\", xOneRow);\r\n             setIsPending(false);\r\n"
                },
                {
                    "date": 1711452809934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -384,9 +384,9 @@\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n             console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n             let xOneRow = [];\r\n             let xi = 0;\r\n-            Object.entries(services).forEach(entry => {\r\n+            Object.entries(response.data[\"hydra:totalItems\"] ).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n                 xOneRow = value;\r\n                 console.log('STEP aLL SERVICES_CATALOG BA whole',xOneRow);\r\n"
                },
                {
                    "date": 1711452857491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,710 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+ \r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n+  }, []);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+        console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \",id, arrayObj)\r\n+        setIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+      \r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+useEffect(() => {\r\n+  if (universe && !isPendingLatLng) {\r\n+    getServices(false, null);\r\n+   \r\n+  }\r\n+  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+}, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+const getRepairMan = (repairmanId) => {\r\n+  connector({\r\n+    method: \"get\",\r\n+    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+    data: {},\r\n+    success: (response) => {\r\n+      const arrayObj = response.data[\"hydra:member\"] || [];\r\n+      setRepairMan(arrayObj)\r\n+    \r\n+    },\r\n+\r\n+    catch: (error) => {\r\n+      console.log(error);\r\n+    },\r\n+  });\r\n+};\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+const getUniverse = () => {\r\n+  const id = slugIdUniverse.split(\"-\").pop();\r\n+  if (id) {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data || { categories: [] };\r\n+        setUniverse(arrayObj);\r\n+\r\n+        let cpFilter = { ...filter };\r\n+        cpFilter.category.options = [];\r\n+\r\n+        cpFilter.category.value = null;\r\n+        cpFilter.subCategory.value = null;\r\n+        cpFilter.subCategory.options = [];\r\n+\r\n+        if (response.data?.nameCategory) {\r\n+          cpFilter.category.label = response.data.nameCategory;\r\n+        }\r\n+\r\n+        if (response.data?.nameSubCategory) {\r\n+          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+        }\r\n+\r\n+        if (response.data?.requireSearchSubCategory != undefined) {\r\n+          cpFilter.universe.requireSearchSubCategory =\r\n+            response.data.requireSearchSubCategory;\r\n+        }\r\n+\r\n+        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+          let o = arrayObj.categories[i];\r\n+\r\n+          if (o.id == defaultCategory) {\r\n+            cpFilter.category.value = defaultCategory;\r\n+            cpFilter.subCategory.value = defaultSubCategory;\r\n+            for (let j = 0; j < o.children.length; j++) {\r\n+              cpFilter.subCategory.options.push({\r\n+                label: o.children[j].name,\r\n+                value: o.children[j].id,\r\n+              });\r\n+            }\r\n+          }\r\n+          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+        }\r\n+        setFilter(cpFilter);\r\n+      },\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+        if (error.response?.data?.code !== undefined) {\r\n+          if (error.response.data.code === 401) {\r\n+            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+          } else if (error.response.data.message !== undefined) {\r\n+            NotificationManager.error(error.response.data.message, \"\");\r\n+          }\r\n+        }\r\n+        setUniverse(null);\r\n+      },\r\n+    });\r\n+  } else {\r\n+    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+  }\r\n+};\r\n+\r\n+const getServices = (refresh = true, index = null) => {\r\n+  index = index != null ? index : pageIndex;\r\n+  setPageIndex(index);\r\n+\r\n+  if (!placeIsSelected) {\r\n+    msgErrors({\r\n+      codePostal: true,\r\n+    });\r\n+    return;\r\n+  }\r\n+\r\n+  if (!isPending) {\r\n+    setIsPending(true);\r\n+    setFilter(clearErrors(filter));\r\n+    setFilterMap(clearErrors(filterMap));\r\n+\r\n+    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+      let condition = \"\";\r\n+      if (filter.category.value) {\r\n+        condition += `&categories.parent.id=${filter.category.value}`;\r\n+      }\r\n+      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+        }\r\n+      }\r\n+ \r\n+\r\n+      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+      }\r\n+      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+        }${condition}`;\r\n+      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        setParamsUrlService(cpParamsUrlService);\r\n+\r\n+        connector({\r\n+          method: \"get\",\r\n+          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+          success: (response) => {\r\n+\r\n+            setServices(response.data[\"hydra:member\"] || []);\r\n+            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+            console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n+            let xOneRow = [];\r\n+            let xi = 0;\r\n+            Object.entries(response.data[\"hydra:totalItems\"] ).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                xOneRow = value;\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole',xOneRow);\r\n+        \r\n+            });\r\n+            console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+            setIsPending(false);\r\n+          },\r\n+          catch: (error) => {\r\n+            console.log(error);\r\n+            setIsPending(false);\r\n+          },\r\n+        });\r\n+      } else {\r\n+        setIsPending(false);\r\n+      }\r\n+    } else {\r\n+      msgErrors({\r\n+        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+      });\r\n+      setIsPending(false);\r\n+    }\r\n+  }\r\n+};\r\n+\r\n+const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+  const index = cpCategories.findIndex(\r\n+    (cat) => cat.id === cpFilter.category.value\r\n+  );\r\n+  cpFilter.subCategory.options = [];\r\n+  let subCat = [];\r\n+  if (index > -1) {\r\n+    subCat = cpCategories[index].children;\r\n+  } else {\r\n+    const allSubCategory = [];\r\n+    for (let i = 0; i < cpCategories.length; i++) {\r\n+      allSubCategory.push(...cpCategories[i].children);\r\n+    }\r\n+    subCat = allSubCategory;\r\n+  }\r\n+  for (let i = 0; i < subCat.length; i++) {\r\n+    cpFilter.subCategory.options.push({\r\n+      label: subCat[i].name,\r\n+      value: subCat[i].id,\r\n+    });\r\n+  }\r\n+  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+  return cpFilter;\r\n+};\r\n+\r\n+const msgErrors = (e) => {\r\n+  const cpFilter = { ...filter };\r\n+  if (e.universe !== undefined) {\r\n+    cpFilter.universe.error = e.universe;\r\n+    cpFilter.universe.infoBull = e.universe;\r\n+  }\r\n+  if (e.category !== undefined) {\r\n+    cpFilter.category.error = e.category;\r\n+    cpFilter.category.infoBull = e.category;\r\n+  }\r\n+  if (e.subCategory !== undefined) {\r\n+    cpFilter.subCategory.error = e.subCategory;\r\n+    cpFilter.subCategory.infoBull = e.subCategory;\r\n+  }\r\n+\r\n+  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+  setFilter(cpFilter);\r\n+\r\n+  const cpFilterMap = { ...filterMap };\r\n+  if (e.codePostal !== undefined) {\r\n+    cpFilterMap.codePostal.error = e.codePostal;\r\n+    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+  }\r\n+  setFilterMap(cpFilterMap);\r\n+};\r\n+\r\n+if (universe === false) {\r\n+  return <Loader />;\r\n+}\r\n+\r\n+return (\r\n+  <Base>\r\n+    {universe ? (\r\n+\r\n+      <>\r\n+        <ContentPageStyle>\r\n+          <Container>\r\n+            <BannerRepairMan\r\n+              universe={universe}\r\n+              repairMan={repairMan}\r\n+              toggleFilter={toggleFilter}\r\n+              setToggleFilter={setToggleFilter}\r\n+            />\r\n+            <BannerYourCommand>\r\n+            </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+            {isDesktopOrLaptop && (\r\n+              <Breadcrumb\r\n+                crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                ]}\r\n+              />\r\n+            )}\r\n+\r\n+            {isTabletOrMobile && (\r\n+              <div\r\n+                className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                onClick={() => {\r\n+                  setToggleFilter(!toggleFilter);\r\n+                }}\r\n+              >\r\n+                <SearchIcon /> Rechercher une prestation\r\n+              </div>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                {isTabletOrMobile && (\r\n+                  <button\r\n+                    className=\"menu-burger is-opened\"\r\n+                    onClick={() => {\r\n+                      setToggleFilter(false);\r\n+                    }}\r\n+                  >\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                    <span></span>\r\n+                  </button>\r\n+                )}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.universe}\r\n+                    element={filter.universe}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.universe = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (e.value && e.slug) {\r\n+                        document.dispatchEvent(\r\n+                          new CustomEvent(\"Universe\", {\r\n+                            detail: {\r\n+                              url: `/univers/${e.slug}-${e.value}`,\r\n+                              id: e.value,\r\n+                            },\r\n+                          })\r\n+                        );\r\n+                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                        msgErrors({\r\n+                          universe: false,\r\n+                          category: false,\r\n+                          subCategory: false,\r\n+                          codePostal: false,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <Select\r\n+                    {...filter.category}\r\n+                    element={filter.category}\r\n+                    setElement={(element) => {\r\n+                      const cpFilter = { ...filter };\r\n+                      cpFilter.category = element;\r\n+                      setFilter(cpFilter);\r\n+                    }}\r\n+                    onChange={(e) => {\r\n+                      if (filter.category.value !== e.value) {\r\n+                        let cpFilter = { ...filter };\r\n+                        cpFilter.category.value = e.value;\r\n+                        cpFilter.category.error = false;\r\n+                        localStorage.setItem(\"defaultCategory\", e.value);\r\n+                        cpFilter = refreshSubCategory(\r\n+                          cpFilter,\r\n+                          universe.categories\r\n+                        );\r\n+                        if (e.value == \"\") {\r\n+                          cpFilter.subCategory.value = \"\";\r\n+                        }\r\n+                        cpFilter.subCategory.error = false;\r\n+                        cpFilter.subCategory.infoBull = false;\r\n+                        setFilter(cpFilter);\r\n+                      }\r\n+                    }}\r\n+                  />\r\n+                </div>\r\n+\r\n+                {filter.category.value && (\r\n+                  <div className=\"item-filter\">\r\n+                    <SelectCat\r\n+                      {...filter.subCategory}\r\n+                      element={filter.subCategory}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChangeCallback={(response) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.subCategory.value = response;\r\n+                        cpFilter.subCategory.error = false;\r\n+                        localStorage.setItem(\r\n+                          \"defaultSubCategory\",\r\n+                          JSON.stringify(response)\r\n+                        );\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+                )}\r\n+\r\n+                {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                <div className=\"item-filter\">\r\n+                  <InputAutoComplete\r\n+                    filter={filterMap}\r\n+                    setFilter={setFilterMap}\r\n+                    placeIsSelected={placeIsSelected}\r\n+                    setPlaceIsSelected={setPlaceIsSelected}\r\n+                    isPendingLatLng={isPendingLatLng}\r\n+                    setIsPendingLatLng={setIsPendingLatLng}\r\n+                  />\r\n+                </div>\r\n+\r\n+                <div className=\"item-filter btn-filter-banner\">\r\n+                  <button\r\n+                    className=\"btn-search-filter\"\r\n+                    onClick={() => {\r\n+                      if (\r\n+                        isTabletOrMobile &&\r\n+                        placeIsSelected &&\r\n+                        filterMap.codePostal.latitude &&\r\n+                        filterMap.codePostal.value\r\n+                      ) {\r\n+                        setToggleFilter(false);\r\n+                      }\r\n+\r\n+                      if (\r\n+                        filter.universe.value &&\r\n+                        filter.category.value &&\r\n+                        ((Array.isArray(filter.subCategory.value) &&\r\n+                          filter.subCategory.value.length > 0) ||\r\n+                          !filter.universe.requireSearchSubCategory) &&\r\n+                        placeIsSelected\r\n+                      ) {\r\n+                        getServices(false, 0);\r\n+                      } else {\r\n+                        msgErrors({\r\n+                          universe: !filter.universe.value,\r\n+                          category:\r\n+                            filter.universe.value && !filter.category.value,\r\n+                          subCategory:\r\n+                            filter.universe.value &&\r\n+                            filter.category.value &&\r\n+                            !(\r\n+                              Array.isArray(filter.subCategory.value) &&\r\n+                              filter.subCategory.value.length > 0\r\n+                            ) &&\r\n+                            filter.universe.requireSearchSubCategory,\r\n+                          codePostal: !placeIsSelected,\r\n+                        });\r\n+                      }\r\n+                    }}\r\n+                  >\r\n+                    {isDesktopOrLaptop && (\r\n+                      <>\r\n+                        <SearchIcon />\r\n+                      </>\r\n+                    )}\r\n+                    {isTabletOrMobile && <>Recherche</>}\r\n+                  </button>\r\n+                </div>\r\n+              </BlocFilterStyle>\r\n+            )}\r\n+\r\n+            {isDisplayListeProduits && (\r\n+              <ListProduitsBonus\r\n+                data={services}\r\n+                perPage={perPage}\r\n+                setPerPage={setPerPage}\r\n+                pageIndex={pageIndex}\r\n+                setPageIndex={setPageIndex}\r\n+                totalItemsLength={totalServices}\r\n+                pagination={true}\r\n+                isLoading={isPending}\r\n+              > </ListProduitsBonus>\r\n+            )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+          </Container>\r\n+        </ContentPageStyle>\r\n+      </>\r\n+    ) : (\r\n+      <FoundPage\r\n+        noBase\r\n+        title=\"Univers en cours de développement\"\r\n+        image={imgMaintenence}\r\n+      />\r\n+    )\r\n+    }\r\n+  </Base >\r\n+);\r\n+}\r\n"
                },
                {
                    "date": 1711452919138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -384,9 +384,9 @@\n             setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n             console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n             let xOneRow = [];\r\n             let xi = 0;\r\n-            Object.entries(response.data[\"hydra:totalItems\"] ).forEach(entry => {\r\n+            Object.entries(response.data[\"hydra:member\"] ).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n                 xOneRow = value;\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole',xOneRow);\r\n@@ -707,714 +707,4 @@\n     }\r\n   </Base >\r\n );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n- \r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-    getUserRepairmanBenefits(repairmanId);\r\n-  }, []);\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \",id, arrayObj)\r\n-        setIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setIsPending(false);\r\n-      \r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, null);\r\n-   \r\n-  }\r\n-  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-}, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-const getRepairMan = (repairmanId) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-    data: {},\r\n-    success: (response) => {\r\n-      const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      setRepairMan(arrayObj)\r\n-    \r\n-    },\r\n-\r\n-    catch: (error) => {\r\n-      console.log(error);\r\n-    },\r\n-  });\r\n-};\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-const getUniverse = () => {\r\n-  const id = slugIdUniverse.split(\"-\").pop();\r\n-  if (id) {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data || { categories: [] };\r\n-        setUniverse(arrayObj);\r\n-\r\n-        let cpFilter = { ...filter };\r\n-        cpFilter.category.options = [];\r\n-\r\n-        cpFilter.category.value = null;\r\n-        cpFilter.subCategory.value = null;\r\n-        cpFilter.subCategory.options = [];\r\n-\r\n-        if (response.data?.nameCategory) {\r\n-          cpFilter.category.label = response.data.nameCategory;\r\n-        }\r\n-\r\n-        if (response.data?.nameSubCategory) {\r\n-          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-        }\r\n-\r\n-        if (response.data?.requireSearchSubCategory != undefined) {\r\n-          cpFilter.universe.requireSearchSubCategory =\r\n-            response.data.requireSearchSubCategory;\r\n-        }\r\n-\r\n-        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-          let o = arrayObj.categories[i];\r\n-\r\n-          if (o.id == defaultCategory) {\r\n-            cpFilter.category.value = defaultCategory;\r\n-            cpFilter.subCategory.value = defaultSubCategory;\r\n-            for (let j = 0; j < o.children.length; j++) {\r\n-              cpFilter.subCategory.options.push({\r\n-                label: o.children[j].name,\r\n-                value: o.children[j].id,\r\n-              });\r\n-            }\r\n-          }\r\n-          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        if (error.response?.data?.code !== undefined) {\r\n-          if (error.response.data.code === 401) {\r\n-            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-          } else if (error.response.data.message !== undefined) {\r\n-            NotificationManager.error(error.response.data.message, \"\");\r\n-          }\r\n-        }\r\n-        setUniverse(null);\r\n-      },\r\n-    });\r\n-  } else {\r\n-    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-  }\r\n-};\r\n-\r\n-const getServices = (refresh = true, index = null) => {\r\n-  index = index != null ? index : pageIndex;\r\n-  setPageIndex(index);\r\n-\r\n-  if (!placeIsSelected) {\r\n-    msgErrors({\r\n-      codePostal: true,\r\n-    });\r\n-    return;\r\n-  }\r\n-\r\n-  if (!isPending) {\r\n-    setIsPending(true);\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n-\r\n-    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-      let condition = \"\";\r\n-      if (filter.category.value) {\r\n-        condition += `&categories.parent.id=${filter.category.value}`;\r\n-      }\r\n-      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-        }\r\n-      }\r\n- \r\n-\r\n-      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-      }\r\n-      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-        }${condition}`;\r\n-      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        setParamsUrlService(cpParamsUrlService);\r\n-\r\n-        connector({\r\n-          method: \"get\",\r\n-          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-          success: (response) => {\r\n-\r\n-            setServices(response.data[\"hydra:member\"] || []);\r\n-            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n-            let xOneRow = [];\r\n-            let xi = 0;\r\n-            Object.entries(response.data[\"hydra:totalItems\"] ).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                xOneRow = value;\r\n-                console.log('STEP aLL SERVICES_CATALOG BA whole',xOneRow);\r\n-        \r\n-            });\r\n-            console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-            setIsPending(false);\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-          },\r\n-        });\r\n-      } else {\r\n-        setIsPending(false);\r\n-      }\r\n-    } else {\r\n-      msgErrors({\r\n-        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-      });\r\n-      setIsPending(false);\r\n-    }\r\n-  }\r\n-};\r\n-\r\n-const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-  const index = cpCategories.findIndex(\r\n-    (cat) => cat.id === cpFilter.category.value\r\n-  );\r\n-  cpFilter.subCategory.options = [];\r\n-  let subCat = [];\r\n-  if (index > -1) {\r\n-    subCat = cpCategories[index].children;\r\n-  } else {\r\n-    const allSubCategory = [];\r\n-    for (let i = 0; i < cpCategories.length; i++) {\r\n-      allSubCategory.push(...cpCategories[i].children);\r\n-    }\r\n-    subCat = allSubCategory;\r\n-  }\r\n-  for (let i = 0; i < subCat.length; i++) {\r\n-    cpFilter.subCategory.options.push({\r\n-      label: subCat[i].name,\r\n-      value: subCat[i].id,\r\n-    });\r\n-  }\r\n-  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-  return cpFilter;\r\n-};\r\n-\r\n-const msgErrors = (e) => {\r\n-  const cpFilter = { ...filter };\r\n-  if (e.universe !== undefined) {\r\n-    cpFilter.universe.error = e.universe;\r\n-    cpFilter.universe.infoBull = e.universe;\r\n-  }\r\n-  if (e.category !== undefined) {\r\n-    cpFilter.category.error = e.category;\r\n-    cpFilter.category.infoBull = e.category;\r\n-  }\r\n-  if (e.subCategory !== undefined) {\r\n-    cpFilter.subCategory.error = e.subCategory;\r\n-    cpFilter.subCategory.infoBull = e.subCategory;\r\n-  }\r\n-\r\n-  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-  setFilter(cpFilter);\r\n-\r\n-  const cpFilterMap = { ...filterMap };\r\n-  if (e.codePostal !== undefined) {\r\n-    cpFilterMap.codePostal.error = e.codePostal;\r\n-    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-  }\r\n-  setFilterMap(cpFilterMap);\r\n-};\r\n-\r\n-if (universe === false) {\r\n-  return <Loader />;\r\n-}\r\n-\r\n-return (\r\n-  <Base>\r\n-    {universe ? (\r\n-\r\n-      <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              repairMan={repairMan}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n-              />\r\n-            )}\r\n-\r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n-\r\n-                {filter.category.value && (\r\n-                  <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChangeCallback={(response) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-                )}\r\n-\r\n-                {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n-\r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n-\r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n-\r\n-            {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-      </>\r\n-    ) : (\r\n-      <FoundPage\r\n-        noBase\r\n-        title=\"Univers en cours de développement\"\r\n-        image={imgMaintenence}\r\n-      />\r\n-    )\r\n-    }\r\n-  </Base >\r\n-);\r\n-}\r\n"
                },
                {
                    "date": 1711453180494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n   const [services, setServices] = useState([]);\r\n- \r\n+\r\n   const [totalServices, setTotalServices] = useState(0);\r\n   const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n   const universeSelector = useSelector((state) => state.universe);\r\n   const [filter, setFilter] = useState({\r\n@@ -226,485 +226,495 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \",id, arrayObj)\r\n+        console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \", id, arrayObj)\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n-      \r\n+\r\n       },\r\n     });\r\n   };\r\n \r\n \r\n \r\n \r\n \r\n-useEffect(() => {\r\n-  if (universe && !isPendingLatLng) {\r\n-    getServices(false, null);\r\n-   \r\n-  }\r\n-  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-}, [isPendingLatLng, pageIndex, perPage]);\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n \r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n \r\n-const getRepairMan = (repairmanId) => {\r\n-  connector({\r\n-    method: \"get\",\r\n-    url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-    data: {},\r\n-    success: (response) => {\r\n-      const arrayObj = response.data[\"hydra:member\"] || [];\r\n-      setRepairMan(arrayObj)\r\n-    \r\n-    },\r\n \r\n-    catch: (error) => {\r\n-      console.log(error);\r\n-    },\r\n-  });\r\n-};\r\n+  const getRepairMan = (repairmanId) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setRepairMan(arrayObj)\r\n \r\n+      },\r\n \r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n \r\n \r\n \r\n-const getUniverse = () => {\r\n-  const id = slugIdUniverse.split(\"-\").pop();\r\n-  if (id) {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data || { categories: [] };\r\n-        setUniverse(arrayObj);\r\n \r\n-        let cpFilter = { ...filter };\r\n-        cpFilter.category.options = [];\r\n \r\n-        cpFilter.category.value = null;\r\n-        cpFilter.subCategory.value = null;\r\n-        cpFilter.subCategory.options = [];\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n \r\n-        if (response.data?.nameCategory) {\r\n-          cpFilter.category.label = response.data.nameCategory;\r\n-        }\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n \r\n-        if (response.data?.nameSubCategory) {\r\n-          cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-        }\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n \r\n-        if (response.data?.requireSearchSubCategory != undefined) {\r\n-          cpFilter.universe.requireSearchSubCategory =\r\n-            response.data.requireSearchSubCategory;\r\n-        }\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n \r\n-        for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-          let o = arrayObj.categories[i];\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n \r\n-          if (o.id == defaultCategory) {\r\n-            cpFilter.category.value = defaultCategory;\r\n-            cpFilter.subCategory.value = defaultSubCategory;\r\n-            for (let j = 0; j < o.children.length; j++) {\r\n-              cpFilter.subCategory.options.push({\r\n-                label: o.children[j].name,\r\n-                value: o.children[j].id,\r\n-              });\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n             }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n           }\r\n-          cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-        }\r\n-        setFilter(cpFilter);\r\n-      },\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-        if (error.response?.data?.code !== undefined) {\r\n-          if (error.response.data.code === 401) {\r\n-            NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-          } else if (error.response.data.message !== undefined) {\r\n-            NotificationManager.error(error.response.data.message, \"\");\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n           }\r\n-        }\r\n-        setUniverse(null);\r\n-      },\r\n-    });\r\n-  } else {\r\n-    NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-  }\r\n-};\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n \r\n-const getServices = (refresh = true, index = null) => {\r\n-  index = index != null ? index : pageIndex;\r\n-  setPageIndex(index);\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n \r\n-  if (!placeIsSelected) {\r\n-    msgErrors({\r\n-      codePostal: true,\r\n-    });\r\n-    return;\r\n-  }\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n \r\n-  if (!isPending) {\r\n-    setIsPending(true);\r\n-    setFilter(clearErrors(filter));\r\n-    setFilterMap(clearErrors(filterMap));\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n \r\n-    if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-      let condition = \"\";\r\n-      if (filter.category.value) {\r\n-        condition += `&categories.parent.id=${filter.category.value}`;\r\n-      }\r\n-      if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-        for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-          condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n         }\r\n-      }\r\n- \r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n \r\n-      if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-        condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-      }\r\n-      const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-       const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-        }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-        }${condition}`;\r\n-      //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-      if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        setParamsUrlService(cpParamsUrlService);\r\n \r\n-        connector({\r\n-          method: \"get\",\r\n-          url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-          success: (response) => {\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+          }${condition}`;\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n \r\n-            setServices(response.data[\"hydra:member\"] || []);\r\n-            setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n-            let xOneRow = [];\r\n-            let xi = 0;\r\n-            Object.entries(response.data[\"hydra:member\"] ).forEach(entry => {\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n                 xOneRow = value;\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole',xOneRow);\r\n-        \r\n-            });\r\n-            console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-            setIsPending(false);\r\n-          },\r\n-          catch: (error) => {\r\n-            console.log(error);\r\n-            setIsPending(false);\r\n-          },\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                  }\r\n+                  xOneRow = value;\r\n+                 \r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n         });\r\n-      } else {\r\n         setIsPending(false);\r\n       }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n     } else {\r\n-      msgErrors({\r\n-        codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n       });\r\n-      setIsPending(false);\r\n     }\r\n-  }\r\n-};\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n \r\n-const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-  const index = cpCategories.findIndex(\r\n-    (cat) => cat.id === cpFilter.category.value\r\n-  );\r\n-  cpFilter.subCategory.options = [];\r\n-  let subCat = [];\r\n-  if (index > -1) {\r\n-    subCat = cpCategories[index].children;\r\n-  } else {\r\n-    const allSubCategory = [];\r\n-    for (let i = 0; i < cpCategories.length; i++) {\r\n-      allSubCategory.push(...cpCategories[i].children);\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n     }\r\n-    subCat = allSubCategory;\r\n-  }\r\n-  for (let i = 0; i < subCat.length; i++) {\r\n-    cpFilter.subCategory.options.push({\r\n-      label: subCat[i].name,\r\n-      value: subCat[i].id,\r\n-    });\r\n-  }\r\n-  if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-  return cpFilter;\r\n-};\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n \r\n-const msgErrors = (e) => {\r\n-  const cpFilter = { ...filter };\r\n-  if (e.universe !== undefined) {\r\n-    cpFilter.universe.error = e.universe;\r\n-    cpFilter.universe.infoBull = e.universe;\r\n-  }\r\n-  if (e.category !== undefined) {\r\n-    cpFilter.category.error = e.category;\r\n-    cpFilter.category.infoBull = e.category;\r\n-  }\r\n-  if (e.subCategory !== undefined) {\r\n-    cpFilter.subCategory.error = e.subCategory;\r\n-    cpFilter.subCategory.infoBull = e.subCategory;\r\n-  }\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n \r\n-  if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-  setFilter(cpFilter);\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n \r\n-  const cpFilterMap = { ...filterMap };\r\n-  if (e.codePostal !== undefined) {\r\n-    cpFilterMap.codePostal.error = e.codePostal;\r\n-    cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n   }\r\n-  setFilterMap(cpFilterMap);\r\n-};\r\n \r\n-if (universe === false) {\r\n-  return <Loader />;\r\n-}\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n \r\n-return (\r\n-  <Base>\r\n-    {universe ? (\r\n-\r\n-      <>\r\n-        <ContentPageStyle>\r\n-          <Container>\r\n-            <BannerRepairMan\r\n-              universe={universe}\r\n-              repairMan={repairMan}\r\n-              toggleFilter={toggleFilter}\r\n-              setToggleFilter={setToggleFilter}\r\n-            />\r\n-            <BannerYourCommand>\r\n-            </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-            {isDesktopOrLaptop && (\r\n-              <Breadcrumb\r\n-                crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                ]}\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n               />\r\n-            )}\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n \r\n-            {isTabletOrMobile && (\r\n-              <div\r\n-                className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                onClick={() => {\r\n-                  setToggleFilter(!toggleFilter);\r\n-                }}\r\n-              >\r\n-                <SearchIcon /> Rechercher une prestation\r\n-              </div>\r\n-            )}\r\n \r\n-            {isDisplayListeProduits && (\r\n-              <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                {isTabletOrMobile && (\r\n-                  <button\r\n-                    className=\"menu-burger is-opened\"\r\n-                    onClick={() => {\r\n-                      setToggleFilter(false);\r\n-                    }}\r\n-                  >\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                    <span></span>\r\n-                  </button>\r\n-                )}\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.universe}\r\n-                    element={filter.universe}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.universe = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (e.value && e.slug) {\r\n-                        document.dispatchEvent(\r\n-                          new CustomEvent(\"Universe\", {\r\n-                            detail: {\r\n-                              url: `/univers/${e.slug}-${e.value}`,\r\n-                              id: e.value,\r\n-                            },\r\n-                          })\r\n-                        );\r\n-                        history.push(`/univers/${e.slug}-${e.value}`);\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n \r\n-                        msgErrors({\r\n-                          universe: false,\r\n-                          category: false,\r\n-                          subCategory: false,\r\n-                          codePostal: false,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  />\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n                 </div>\r\n+              )}\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <Select\r\n-                    {...filter.category}\r\n-                    element={filter.category}\r\n-                    setElement={(element) => {\r\n-                      const cpFilter = { ...filter };\r\n-                      cpFilter.category = element;\r\n-                      setFilter(cpFilter);\r\n-                    }}\r\n-                    onChange={(e) => {\r\n-                      if (filter.category.value !== e.value) {\r\n-                        let cpFilter = { ...filter };\r\n-                        cpFilter.category.value = e.value;\r\n-                        cpFilter.category.error = false;\r\n-                        localStorage.setItem(\"defaultCategory\", e.value);\r\n-                        cpFilter = refreshSubCategory(\r\n-                          cpFilter,\r\n-                          universe.categories\r\n-                        );\r\n-                        if (e.value == \"\") {\r\n-                          cpFilter.subCategory.value = \"\";\r\n-                        }\r\n-                        cpFilter.subCategory.error = false;\r\n-                        cpFilter.subCategory.infoBull = false;\r\n-                        setFilter(cpFilter);\r\n-                      }\r\n-                    }}\r\n-                  />\r\n-                </div>\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n \r\n-                {filter.category.value && (\r\n                   <div className=\"item-filter\">\r\n-                    <SelectCat\r\n-                      {...filter.subCategory}\r\n-                      element={filter.subCategory}\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n                       setElement={(element) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory = element;\r\n+                        cpFilter.universe = element;\r\n                         setFilter(cpFilter);\r\n                       }}\r\n-                      onChangeCallback={(response) => {\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n                         const cpFilter = { ...filter };\r\n-                        cpFilter.subCategory.value = response;\r\n-                        cpFilter.subCategory.error = false;\r\n-                        localStorage.setItem(\r\n-                          \"defaultSubCategory\",\r\n-                          JSON.stringify(response)\r\n-                        );\r\n+                        cpFilter.category = element;\r\n                         setFilter(cpFilter);\r\n                       }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n                     />\r\n                   </div>\r\n-                )}\r\n \r\n-                {/* <div className=\"item-filter\">\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n                   <InputSearchKeyword\r\n                     filter={filter}\r\n                     setFilter={setFilter}\r\n                     universe={universe}\r\n                   />\r\n                 </div> */}\r\n \r\n-                <div className=\"item-filter\">\r\n-                  <InputAutoComplete\r\n-                    filter={filterMap}\r\n-                    setFilter={setFilterMap}\r\n-                    placeIsSelected={placeIsSelected}\r\n-                    setPlaceIsSelected={setPlaceIsSelected}\r\n-                    isPendingLatLng={isPendingLatLng}\r\n-                    setIsPendingLatLng={setIsPendingLatLng}\r\n-                  />\r\n-                </div>\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n \r\n-                <div className=\"item-filter btn-filter-banner\">\r\n-                  <button\r\n-                    className=\"btn-search-filter\"\r\n-                    onClick={() => {\r\n-                      if (\r\n-                        isTabletOrMobile &&\r\n-                        placeIsSelected &&\r\n-                        filterMap.codePostal.latitude &&\r\n-                        filterMap.codePostal.value\r\n-                      ) {\r\n-                        setToggleFilter(false);\r\n-                      }\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n \r\n-                      if (\r\n-                        filter.universe.value &&\r\n-                        filter.category.value &&\r\n-                        ((Array.isArray(filter.subCategory.value) &&\r\n-                          filter.subCategory.value.length > 0) ||\r\n-                          !filter.universe.requireSearchSubCategory) &&\r\n-                        placeIsSelected\r\n-                      ) {\r\n-                        getServices(false, 0);\r\n-                      } else {\r\n-                        msgErrors({\r\n-                          universe: !filter.universe.value,\r\n-                          category:\r\n-                            filter.universe.value && !filter.category.value,\r\n-                          subCategory:\r\n-                            filter.universe.value &&\r\n-                            filter.category.value &&\r\n-                            !(\r\n-                              Array.isArray(filter.subCategory.value) &&\r\n-                              filter.subCategory.value.length > 0\r\n-                            ) &&\r\n-                            filter.universe.requireSearchSubCategory,\r\n-                          codePostal: !placeIsSelected,\r\n-                        });\r\n-                      }\r\n-                    }}\r\n-                  >\r\n-                    {isDesktopOrLaptop && (\r\n-                      <>\r\n-                        <SearchIcon />\r\n-                      </>\r\n-                    )}\r\n-                    {isTabletOrMobile && <>Recherche</>}\r\n-                  </button>\r\n-                </div>\r\n-              </BlocFilterStyle>\r\n-            )}\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n \r\n-            {isDisplayListeProduits && (\r\n-              <ListProduitsBonus\r\n-                data={services}\r\n-                perPage={perPage}\r\n-                setPerPage={setPerPage}\r\n-                pageIndex={pageIndex}\r\n-                setPageIndex={setPageIndex}\r\n-                totalItemsLength={totalServices}\r\n-                pagination={true}\r\n-                isLoading={isPending}\r\n-              > </ListProduitsBonus>\r\n-            )}\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n \r\n \r\n \r\n \r\n \r\n \r\n-          </Container>\r\n-        </ContentPageStyle>\r\n-      </>\r\n-    ) : (\r\n-      <FoundPage\r\n-        noBase\r\n-        title=\"Univers en cours de développement\"\r\n-        image={imgMaintenence}\r\n-      />\r\n-    )\r\n-    }\r\n-  </Base >\r\n-);\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n }\r\n"
                },
                {
                    "date": 1711453383370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,9 @@\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n \r\n   const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] =useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n@@ -227,8 +228,9 @@\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \", id, arrayObj)\r\n+        setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n@@ -393,11 +395,13 @@\n                 Object.entries(xOneRow).forEach(entry => {\r\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n                   }\r\n-                  xOneRow = value;\r\n                  \r\n+                 \r\n \r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n \r\n"
                },
                {
                    "date": 1711453491552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -396,9 +396,9 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n-\r\n+                    console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",repairManBenefits); \r\n                   }\r\n                  \r\n                  \r\n \r\n"
                },
                {
                    "date": 1711453646665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"STEP aLL SERVICES_CATALOG BA whole filter  \", id, arrayObj)\r\n+        console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n"
                },
                {
                    "date": 1711453899589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n \r\n   const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] =useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n \r\n   const [perPage, setPerPage] = useState(perPageDesMob);\r\n   const [pageIndex, setPageIndex] = useState(0);\r\n@@ -383,8 +383,10 @@\n             success: (response) => {\r\n \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+              getUserRepairmanBenefits(repairmanId);\r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n"
                },
                {
                    "date": 1711453925844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,8 +230,9 @@\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n+        return (arrayObj);\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n \r\n"
                },
                {
                    "date": 1711453964049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,9 +385,9 @@\n \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n               let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-              getUserRepairmanBenefits(repairmanId);\r\n+              let rMBenefits = getUserRepairmanBenefits(repairmanId);\r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n@@ -399,9 +399,9 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n-                    console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",repairManBenefits); \r\n+                    console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",rMBenefits); \r\n                   }\r\n                  \r\n                  \r\n \r\n"
                },
                {
                    "date": 1711454269270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,9 +230,9 @@\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n-        return (arrayObj);\r\n+        \r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n \r\n@@ -384,10 +384,10 @@\n             success: (response) => {\r\n \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-              let rMBenefits = getUserRepairmanBenefits(repairmanId);\r\n+            \r\n+              let rMBenefits = repairManBenefits;\r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n"
                },
                {
                    "date": 1711454306288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,8 +386,9 @@\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n             \r\n               let rMBenefits = repairManBenefits;\r\n+              console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",rMBenefits); \r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n@@ -399,9 +400,9 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n-                    console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",rMBenefits); \r\n+                   \r\n                   }\r\n                  \r\n                  \r\n \r\n"
                },
                {
                    "date": 1711454744432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,11 +216,11 @@\n \r\n   }, []);\r\n \r\n   useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+\r\n     getRepairMan(repairmanId);\r\n-    getUserRepairmanBenefits(repairmanId);\r\n+\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -230,9 +230,9 @@\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n-        \r\n+\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n \r\n@@ -373,8 +373,10 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n+        let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+        getUserRepairmanBenefits(repairmanId);\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n \r\n@@ -384,11 +386,11 @@\n             success: (response) => {\r\n \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            \r\n-              let rMBenefits = repairManBenefits;\r\n-              console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",rMBenefits); \r\n+\r\n+\r\n+              console.log(\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\", repairManBenefits);\r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n@@ -400,13 +402,13 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n-                   \r\n+\r\n                   }\r\n-                 \r\n-                 \r\n \r\n+\r\n+\r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n \r\n               });\r\n"
                },
                {
                    "date": 1711454792960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,11 +216,11 @@\n \r\n   }, []);\r\n \r\n   useEffect(() => {\r\n-\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n-\r\n+   \r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -230,9 +230,9 @@\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n-\r\n+        \r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n \r\n@@ -373,10 +373,10 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n-        let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        getUserRepairmanBenefits(repairmanId);\r\n+          let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+              getUserRepairmanBenefits(repairmanId);  \r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n \r\n@@ -386,11 +386,11 @@\n             success: (response) => {\r\n \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-\r\n-              console.log(\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\", repairManBenefits);\r\n+            \r\n+          \r\n+              console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",repairManBenefits); \r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n@@ -402,13 +402,13 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n-\r\n+                   \r\n                   }\r\n+                 \r\n+                 \r\n \r\n-\r\n-\r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n \r\n               });\r\n"
                },
                {
                    "date": 1711454966743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n-   \r\n+    console.log (\"Step Set artListProduct 1 repairmanbenefits \",repairManBenefits);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n"
                },
                {
                    "date": 1711455049986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,8 +219,9 @@\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n     console.log (\"Step Set artListProduct 1 repairmanbenefits \",repairManBenefits);\r\n+    getServices(true);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -373,10 +374,9 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n-          let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-              getUserRepairmanBenefits(repairmanId);  \r\n+     \r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n \r\n"
                },
                {
                    "date": 1711455139282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n-    console.log (\"Step Set artListProduct 1 repairmanbenefits \",repairManBenefits);\r\n+    console.log(\"Step Set artListProduct 1 repairmanbenefits \", repairManBenefits);\r\n     getServices(true);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n@@ -231,9 +231,9 @@\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n         setIsPending(false);\r\n-        \r\n+\r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n \r\n@@ -374,9 +374,9 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1\r\n           }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n           }${condition}`;\r\n-     \r\n+\r\n         //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n \r\n@@ -386,11 +386,11 @@\n             success: (response) => {\r\n \r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-            \r\n-          \r\n-              console.log (\"STEP aLL SERVICES_CATALOG searchingetUserRepairmanBenefits\",repairManBenefits); \r\n+\r\n+\r\n+              console.log(\"STEP aLL SERVICES_CATALOG Check contentUserRepairmanBenefits\", repairManBenefits);\r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n@@ -402,13 +402,13 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n-                   \r\n+\r\n                   }\r\n-                 \r\n-                 \r\n \r\n+\r\n+\r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n \r\n               });\r\n"
                },
                {
                    "date": 1711455280271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,9 @@\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n \r\n-              console.log(\"STEP aLL SERVICES_CATALOG Check contentUserRepairmanBenefits\", repairManBenefits);\r\n+              console.log(\"STEP aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n               console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n"
                },
                {
                    "date": 1711455384447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,16 +388,16 @@\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n \r\n \r\n-              console.log(\"STEP aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n-              console.log(\"STEP aLL SERVICES_CATALOG BA whole\", response);\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n                 xOneRow = value;\r\n                 Object.entries(xOneRow).forEach(entry => {\r\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n"
                },
                {
                    "date": 1711455548528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,11 @@\n \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     getRepairMan(repairmanId);\r\n-    console.log(\"Step Set artListProduct 1 repairmanbenefits \", repairManBenefits);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n+    console.log(\"ALP 0:1 STEP Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n+    \r\n     getServices(true);\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n"
                },
                {
                    "date": 1711455698150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n+  const [isPendingRepairman, setisPendingRepairman] = useState(true);\r\n   const [repairMan, setRepairMan] = useState([]);\r\n   const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n \r\n@@ -232,9 +232,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n         setRepairManBenefits(arrayObj);\r\n-        setIsPending(false);\r\n+        setRepairmanIsPending(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1711455907108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,8 +217,9 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    setisPendingRepairman(true);\r\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n     console.log(\"ALP 0:1 STEP Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     \r\n@@ -230,11 +231,11 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"STEP aLL SERVICES_CATALOG BA load benefits  of repairman  \", id, arrayObj)\r\n+        console.log(\"ALP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n         setRepairManBenefits(arrayObj);\r\n-        setRepairmanIsPending(false);\r\n+        setisPendingRepairman(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1711455954844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     setisPendingRepairman(true);\r\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n-    console.log(\"ALP 0:1 STEP Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n+    console.log(\"ALP STEP 0:1 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     \r\n     getServices(true);\r\n   }, []);\r\n \r\n@@ -231,9 +231,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"ALP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n+        console.log(\"ALP STEP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n         setRepairManBenefits(arrayObj);\r\n         setisPendingRepairman(false);\r\n \r\n       },\r\n"
                },
                {
                    "date": 1711456173692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,733 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+  const [isPendingRepairman, setisPendingRepairman] = useState(true);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    setisPendingRepairman(true);\r\n+    getRepairMan(repairmanId);\r\n+    getUserRepairmanBenefits(repairmanId);\r\n+    console.log(\"ALP STEP 0:1 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n+    \r\n+    getServices(true);\r\n+  }, [isPendingRepairman]);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+        console.log(\"ALP STEP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n+        setRepairManBenefits(arrayObj);\r\n+        setisPendingRepairman(false);\r\n+\r\n+      },\r\n+      catch: (error) => {\r\n+        setIsPending(false);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        setRepairMan(arrayObj)\r\n+\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n+          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n+          }${condition}`;\r\n+\r\n+        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+\r\n+\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n+                  }\r\n+\r\n+\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711456240489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n     console.log(\"ALP STEP 0:1 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     \r\n-    getServices(true);\r\n+  \r\n   }, [isPendingRepairman]);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n@@ -238,743 +238,11 @@\n \r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n-\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-          }${condition}`;\r\n-\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n-                    // find in services all benefits of the repairman\r\n-\r\n-                  }\r\n-\r\n-\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [isPendingRepairman, setisPendingRepairman] = useState(true);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    setisPendingRepairman(true);\r\n-    getRepairMan(repairmanId);\r\n-    getUserRepairmanBenefits(repairmanId);\r\n-    console.log(\"ALP STEP 0:1 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n-    \r\n-    getServices(true);\r\n-  }, []);\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"ALP STEP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n-        setRepairManBenefits(arrayObj);\r\n         setisPendingRepairman(false);\r\n \r\n       },\r\n-      catch: (error) => {\r\n-        setIsPending(false);\r\n-\r\n-      },\r\n     });\r\n   };\r\n \r\n \r\n"
                },
                {
                    "date": 1711456495515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -217,15 +217,15 @@\n   }, []);\r\n \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    setisPendingRepairman(true);\r\n+   \r\n     getRepairMan(repairmanId);\r\n     getUserRepairmanBenefits(repairmanId);\r\n     console.log(\"ALP STEP 0:1 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     \r\n   \r\n-  }, [isPendingRepairman]);\r\n+  }, [repairManBenefits]);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     connector({\r\n       method: \"get\",\r\n@@ -233,9 +233,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         console.log(\"ALP STEP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n         setRepairManBenefits(arrayObj);\r\n-        setisPendingRepairman(false);\r\n+    \r\n \r\n       },\r\n       catch: (error) => {\r\n         setIsPending(false);\r\n"
                },
                {
                    "date": 1711457229510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,10 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [isPendingRepairman, setisPendingRepairman] = useState(true);\r\n+  const [repairmanBenefIsPending, setRepairmanBenefIsPending] = useState(false);\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n   const [repairMan, setRepairMan] = useState([]);\r\n   const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n \r\n@@ -214,61 +215,54 @@\n     });\r\n \r\n \r\n   }, []);\r\n-\r\n+  \r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-   \r\n-    getRepairMan(repairmanId);\r\n-    getUserRepairmanBenefits(repairmanId);\r\n-    console.log(\"ALP STEP 0:1 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n+    if (!repairmanIsPending) {\r\n+      getRepairMan(repairmanId);\r\n+      console.log(\"ALP STEP 0:1 user repairman benefits  of repairman success  \", id, repairMan);\r\n+    }\r\n+     \r\n+    if (!repairmanBenefIsPending) {\r\n+      getUserRepairmanBenefits(repairmanId);\r\n+      console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n+    }\r\n     \r\n   \r\n   }, [repairManBenefits]);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n+    setRepairmanBenefIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        console.log(\"ALP STEP 0:2 user repairman benefits  of repairman success  \", id, arrayObj);\r\n+      \r\n         setRepairManBenefits(arrayObj);\r\n-    \r\n+        setRepairmanBenefIsPending(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n-        setIsPending(false);\r\n-        setisPendingRepairman(false);\r\n+        setRepairmanBenefIsPending(false);\r\n \r\n       },\r\n     });\r\n   };\r\n \r\n \r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n   const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n-\r\n+        setRepairmanIsPending(false);\r\n       },\r\n \r\n       catch: (error) => {\r\n         console.log(error);\r\n@@ -278,9 +272,22 @@\n \r\n \r\n \r\n \r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n \r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n   const getUniverse = () => {\r\n     const id = slugIdUniverse.split(\"-\").pop();\r\n     if (id) {\r\n       connector({\r\n"
                },
                {
                    "date": 1711457286187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,8 +264,9 @@\n         setRepairmanIsPending(false);\r\n       },\r\n \r\n       catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n         console.log(error);\r\n       },\r\n     });\r\n   };\r\n"
                },
                {
                    "date": 1711457298115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     if (!repairmanIsPending) {\r\n       getRepairMan(repairmanId);\r\n-      console.log(\"ALP STEP 0:1 user repairman benefits  of repairman success  \", id, repairMan);\r\n+      console.log(\"ALP STEP 0:1 user repairman benefits  of repairman success  \",  repairMan);\r\n     }\r\n      \r\n     if (!repairmanBenefIsPending) {\r\n       getUserRepairmanBenefits(repairmanId);\r\n"
                },
                {
                    "date": 1711457534692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n       console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     }\r\n     \r\n   \r\n-  }, [repairManBenefits]);\r\n+  }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     setRepairmanBenefIsPending(true);\r\n     connector({\r\n@@ -383,25 +383,17 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1\r\n-          }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id\r\n-          }${condition}`;\r\n-\r\n-        //console.log(\"STEP ANONYMOUS_SERVICES_CATALOG pParamsUrlService\",cpParamsUrlService);\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1  }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id     }${condition}`;\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n-\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n-\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-\r\n               console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n               console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n"
                },
                {
                    "date": 1711457612631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n       console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     }\r\n     \r\n   \r\n-  }, []);\r\n+  }, [repairmanIsPending]);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     setRepairmanBenefIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1711457796223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n       console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     }\r\n     \r\n   \r\n-  }, [repairmanIsPending]);\r\n+  }, [repairmanBenefIsPending]);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     setRepairmanBenefIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1711457865716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,9 @@\n       console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n     }\r\n     \r\n   \r\n-  }, [repairmanBenefIsPending]);\r\n+  }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     setRepairmanBenefIsPending(true);\r\n     connector({\r\n"
                },
                {
                    "date": 1711458054538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,32 +215,33 @@\n     });\r\n \r\n \r\n   }, []);\r\n-  \r\n+\r\n   useEffect(() => {\r\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     if (!repairmanIsPending) {\r\n       getRepairMan(repairmanId);\r\n-      console.log(\"ALP STEP 0:1 user repairman benefits  of repairman success  \",  repairMan);\r\n     }\r\n-     \r\n+    else\r\n+      console.log(\"ALP STEP 0:1 user repairman benefits  of repairman success  \", repairMan);\r\n     if (!repairmanBenefIsPending) {\r\n       getUserRepairmanBenefits(repairmanId);\r\n+    }\r\n+    else\r\n       console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n-    }\r\n-    \r\n-  \r\n-  }, []);\r\n \r\n+\r\n+  }, [repairmanBenefIsPending]);\r\n+\r\n   const getUserRepairmanBenefits = (id) => {\r\n     setRepairmanBenefIsPending(true);\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-      \r\n+\r\n         setRepairManBenefits(arrayObj);\r\n         setRepairmanBenefIsPending(false);\r\n \r\n       },\r\n@@ -383,9 +384,9 @@\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1  }&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id     }${condition}`;\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n           connector({\r\n             method: \"get\",\r\n"
                },
                {
                    "date": 1711458482181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n   const { slugIdRepairman } = useParams();\r\n   const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-  const [repairmanBenefIsPending, setRepairmanBenefIsPending] = useState(false);\r\n+\r\n   const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n   const [repairMan, setRepairMan] = useState([]);\r\n   const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n   const [universe, setUniverse] = useState([]);\r\n@@ -221,33 +221,27 @@\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     if (!repairmanIsPending) {\r\n       getRepairMan(repairmanId);\r\n     }\r\n-    else\r\n-      console.log(\"ALP STEP 0:1 user repairman benefits  of repairman success  \", repairMan);\r\n-    if (!repairmanBenefIsPending) {\r\n-      getUserRepairmanBenefits(repairmanId);\r\n-    }\r\n-    else\r\n-      console.log(\"ALP STEP 0:2 Set artListProduct 1 check return repairmanbenefits from case \", repairManBenefits);\r\n \r\n \r\n-  }, [repairmanBenefIsPending]);\r\n \r\n+  }, [repairmanIsPending]);\r\n+\r\n   const getUserRepairmanBenefits = (id) => {\r\n-    setRepairmanBenefIsPending(true);\r\n+  \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n \r\n         setRepairManBenefits(arrayObj);\r\n-        setRepairmanBenefIsPending(false);\r\n+        setRepairmanIsPending(false);\r\n \r\n       },\r\n       catch: (error) => {\r\n-        setRepairmanBenefIsPending(false);\r\n+        setRepairmanIsPending(false);\r\n \r\n       },\r\n     });\r\n   };\r\n@@ -261,9 +255,10 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj)\r\n-        setRepairmanIsPending(false);\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+      \r\n       },\r\n \r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n"
                },
                {
                    "date": 1711458531157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n     }\r\n \r\n \r\n \r\n-  }, [repairmanIsPending]);\r\n+  }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n   \r\n     connector({\r\n"
                },
                {
                    "date": 1711458764292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,11 +221,8 @@\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     if (!repairmanIsPending) {\r\n       getRepairMan(repairmanId);\r\n     }\r\n-\r\n-\r\n-\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n   \r\n@@ -254,11 +251,11 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj)\r\n+        setRepairMan(arrayObj);\r\n         getUserRepairmanBenefits(repairmanId);\r\n-      \r\n+        setRepairmanIsPending(false);\r\n       },\r\n \r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n"
                },
                {
                    "date": 1711458932685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,18 +224,17 @@\n     }\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n-  \r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-\r\n         setRepairManBenefits(arrayObj);\r\n         setRepairmanIsPending(false);\r\n-\r\n+        console.log(\"ALP STEP 0.1 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.2 repairman benefit\", repairManBenefits);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n \r\n"
                },
                {
                    "date": 1711459039525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,8 +224,9 @@\n     }\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.0 repairman loading.. \");\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n"
                },
                {
                    "date": 1711459547441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,9 @@\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj);\r\n         getUserRepairmanBenefits(repairmanId);\r\n-        setRepairmanIsPending(false);\r\n+        \r\n       },\r\n \r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n"
                },
                {
                    "date": 1711459700944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,11 +231,12 @@\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.0 repairmanbenefit is loaded.. \",arrayObj);\r\n         setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.1 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.2 repairman benefit\", repairManBenefits);\r\n+        console.log(\"ALP STEP 0.4 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.5 repairman benefit\", repairManBenefits);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n \r\n@@ -252,8 +253,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.3 repairmanbenefit is loaded.. \",arrayObj);\r\n         getUserRepairmanBenefits(repairmanId);\r\n         \r\n       },\r\n \r\n"
                },
                {
                    "date": 1711459799115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,9 +253,10 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.3 repairmanbenefit is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n         getUserRepairmanBenefits(repairmanId);\r\n         \r\n       },\r\n \r\n"
                },
                {
                    "date": 1711459935936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,19 +224,19 @@\n     }\r\n   }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.0 repairman loading.. \");\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.0 repairmanbenefit is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n         setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.4 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.5 repairman benefit\", repairManBenefits);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n \r\n"
                },
                {
                    "date": 1711460002391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -246,8 +246,9 @@\n \r\n \r\n   const getRepairMan = (repairmanId) => {\r\n     setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n       data: {},\r\n"
                },
                {
                    "date": 1711460082163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,8 +238,9 @@\n         console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n \r\n       },\r\n     });\r\n   };\r\n"
                },
                {
                    "date": 1711460257586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     if (!repairmanIsPending) {\r\n       getRepairMan(repairmanId);\r\n     }\r\n-  }, []);\r\n+  }, [repairmanIsPending]);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n     connector({\r\n"
                },
                {
                    "date": 1711460282875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n     let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n     if (!repairmanIsPending) {\r\n       getRepairMan(repairmanId);\r\n     }\r\n-  }, [repairmanIsPending]);\r\n+  }, []);\r\n \r\n   const getUserRepairmanBenefits = (id) => {\r\n     console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n     connector({\r\n"
                },
                {
                    "date": 1711460395375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,9 +230,9 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        setRepairManBenefits(arrayObj);\r\n+        repairManBenefits = arrayObj;\r\n         console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n         setRepairmanIsPending(false);\r\n         console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n@@ -254,9 +254,9 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        setRepairMan(arrayObj);\r\n+        repairMan=arrayObj;\r\n         console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n         console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n         getUserRepairmanBenefits(repairmanId);\r\n         \r\n"
                },
                {
                    "date": 1711460759516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,732 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    if (!repairmanIsPending) {\r\n+      getRepairMan(repairmanId);\r\n+    }\r\n+  }, []);\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+        repairManBenefits = arrayObj;\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  let xRepairman =[];\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        xRepairman = arrayObj;\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+        \r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) {\r\n+      msgErrors({\r\n+        codePostal: true,\r\n+      });\r\n+      return;\r\n+    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+\r\n+\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n+                  }\r\n+\r\n+\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711460869881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,20 +223,22 @@\n       getRepairMan(repairmanId);\r\n     }\r\n   }, []);\r\n \r\n+  let xRepairManBenefits =[];\r\n+  let xRepairman =[];\r\n   const getUserRepairmanBenefits = (id) => {\r\n     console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n     connector({\r\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-        repairManBenefits = arrayObj;\r\n+        xRepairManBenefits = arrayObj;\r\n         console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n         setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+        console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n         console.log(\"ALP STEP 0.99 Error.. \",error);\r\n@@ -244,9 +246,8 @@\n       },\r\n     });\r\n   };\r\n \r\n-  let xRepairman =[];\r\n   const getRepairMan = (repairmanId) => {\r\n     setRepairmanIsPending(true);\r\n     console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n     connector({\r\n@@ -729,736 +730,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    if (!repairmanIsPending) {\r\n-      getRepairMan(repairmanId);\r\n-    }\r\n-  }, []);\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-        repairManBenefits = arrayObj;\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        repairMan=arrayObj;\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-        \r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-\r\n-\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n-                    // find in services all benefits of the repairman\r\n-\r\n-                  }\r\n-\r\n-\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1711461036203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,8 +256,9 @@\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n         xRepairman = arrayObj;\r\n+        setRepairMan(arrayObj);\r\n         console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n         console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n         getUserRepairmanBenefits(repairmanId);\r\n         \r\n@@ -391,9 +392,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", repairManBenefits);\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n               console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n@@ -408,10 +409,8 @@\n                     // find in services all benefits of the repairman\r\n \r\n                   }\r\n \r\n-\r\n-\r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n \r\n               });\r\n"
                },
                {
                    "date": 1711461077146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,8 +233,9 @@\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         xRepairManBenefits = arrayObj;\r\n+        setRepairManBenefits(arrayObj);\r\n         console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n         setRepairmanIsPending(false);\r\n         console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n"
                },
                {
                    "date": 1711461148558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,8 +238,10 @@\n         console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n         setRepairmanIsPending(false);\r\n         console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n+        console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n         console.log(\"ALP STEP 0.99 Error.. \",error);\r\n"
                },
                {
                    "date": 1711461591848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,13 +235,15 @@\n         const arrayObj = response.data[\"benefits\"] || [];\r\n         xRepairManBenefits = arrayObj;\r\n         setRepairManBenefits(arrayObj);\r\n         console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-        setRepairmanIsPending(false);\r\n+     \r\n         console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n         console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n         console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n+        getServices(false, null);\r\n+        setRepairmanIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n         console.log(\"ALP STEP 0.99 Error.. \",error);\r\n@@ -264,8 +266,9 @@\n         console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n         console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n         getUserRepairmanBenefits(repairmanId);\r\n         \r\n+        \r\n       },\r\n \r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n@@ -290,82 +293,14 @@\n \r\n \r\n \r\n \r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n+ \r\n   const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n \r\n-    if (!placeIsSelected) {\r\n-      msgErrors({\r\n-        codePostal: true,\r\n-      });\r\n-      return;\r\n-    }\r\n+    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n \r\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setFilter(clearErrors(filter));\r\n@@ -380,10 +315,8 @@\n           for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n             condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n           }\r\n         }\r\n-\r\n-\r\n         if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n@@ -436,8 +369,74 @@\n       }\r\n     }\r\n   };\r\n \r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+ \r\n   const refreshSubCategory = (cpFilter, cpCategories) => {\r\n     const index = cpCategories.findIndex(\r\n       (cat) => cat.id === cpFilter.category.value\r\n     );\r\n"
                },
                {
                    "date": 1711461678250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,9 +240,9 @@\n         console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n         console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n         console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n-        getServices(false, null);\r\n+        getServices(true, null);\r\n         setRepairmanIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n"
                },
                {
                    "date": 1711461776803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,10 +223,10 @@\n       getRepairMan(repairmanId);\r\n     }\r\n   }, []);\r\n \r\n-  let xRepairManBenefits =[];\r\n-  let xRepairman =[];\r\n+  const xRepairManBenefits =[];\r\n+  const xRepairman =[];\r\n   const getUserRepairmanBenefits = (id) => {\r\n     console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n     connector({\r\n       method: \"get\",\r\n"
                },
                {
                    "date": 1711461824209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,10 +223,10 @@\n       getRepairMan(repairmanId);\r\n     }\r\n   }, []);\r\n \r\n-  const xRepairManBenefits =[];\r\n-  const xRepairman =[];\r\n+  var xRepairManBenefits =[];\r\n+  var xRepairman =[];\r\n   const getUserRepairmanBenefits = (id) => {\r\n     console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n     connector({\r\n       method: \"get\",\r\n"
                },
                {
                    "date": 1711462275875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,735 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    if (!repairmanIsPending) {\r\n+      getRepairMan(repairmanId);\r\n+    }\r\n+  }, []);\r\n+\r\n+  var xRepairManBenefits =[];\r\n+  var xRepairman =[];\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+        xRepairManBenefits = arrayObj;\r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+     \r\n+        console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n+        console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n+        getServices(true, null);\r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        xRepairman = arrayObj;\r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+        \r\n+        \r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+ \r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          console.log(\"ALP STEP 1.111 aLL Not in success contentUserRepairmanBenefits\", xRepairManBenefits);\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n+                  }\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+ \r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711462572001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,9 +240,9 @@\n         console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n         console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n         console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n-        getServices(true, null);\r\n+       \r\n         setRepairmanIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n@@ -320,745 +320,14 @@\n           condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          console.log(\"ALP STEP 1.111 aLL Not in success contentUserRepairmanBenefits\", xRepairManBenefits);\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n-                    // find in services all benefits of the repairman\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+        getRepairMan(repairmanId);\r\n \r\n-                  }\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n- \r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    if (!repairmanIsPending) {\r\n-      getRepairMan(repairmanId);\r\n-    }\r\n-  }, []);\r\n-\r\n-  var xRepairManBenefits =[];\r\n-  var xRepairman =[];\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-        xRepairManBenefits = arrayObj;\r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-     \r\n-        console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n-        console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n-        getServices(true, null);\r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        xRepairman = arrayObj;\r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-        \r\n-        \r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n+          \r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n"
                },
                {
                    "date": 1711462729850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,739 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+  useEffect(() => {\r\n+    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    if (!repairmanIsPending) {\r\n+      getRepairMan(repairmanId);\r\n+    }\r\n+  }, []);\r\n+\r\n+  var xRepairManBenefits =[];\r\n+  var xRepairman =[];\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+        xRepairManBenefits = arrayObj;\r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+     \r\n+        console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n+        console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n+       \r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+        xRepairman = arrayObj;\r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+        \r\n+        \r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+ \r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+        alert(\"get repaior\");\r\n+        getRepairMan(repairmanId);\r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n+                  }\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+ \r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711462780986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,749 +321,12 @@\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        alert(\"get repaior\");\r\n+        alert(\"get repaior\",repairmanId);\r\n         getRepairMan(repairmanId);\r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n-                    // find in services all benefits of the repairman\r\n-\r\n-                  }\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n- \r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    if (!repairmanIsPending) {\r\n-      getRepairMan(repairmanId);\r\n-    }\r\n-  }, []);\r\n-\r\n-  var xRepairManBenefits =[];\r\n-  var xRepairman =[];\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-        xRepairManBenefits = arrayObj;\r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-     \r\n-        console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n-        console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n-       \r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        xRepairman = arrayObj;\r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n         \r\n-        \r\n-      },\r\n \r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        getRepairMan(repairmanId);\r\n-\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n           setParamsUrlService(cpParamsUrlService);\r\n           \r\n           connector({\r\n"
                },
                {
                    "date": 1711462789852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,9 +321,9 @@\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        alert(\"get repaior\",repairmanId);\r\n+        alert(\"get repaior\".repairmanId);\r\n         getRepairMan(repairmanId);\r\n         \r\n \r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n"
                },
                {
                    "date": 1711462830378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,9 +321,9 @@\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        alert(\"get repaior\".repairmanId);\r\n+        alert(\"get repaior\"+repairmanId);\r\n         getRepairMan(repairmanId);\r\n         \r\n \r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n"
                },
                {
                    "date": 1711463105028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,15 +216,10 @@\n \r\n \r\n   }, []);\r\n \r\n-  useEffect(() => {\r\n-    let repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    if (!repairmanIsPending) {\r\n-      getRepairMan(repairmanId);\r\n-    }\r\n-  }, []);\r\n \r\n+\r\n   var xRepairManBenefits =[];\r\n   var xRepairman =[];\r\n   const getUserRepairmanBenefits = (id) => {\r\n     console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n"
                },
                {
                    "date": 1711464394115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,730 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+   \r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+       \r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+        \r\n+        \r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+ \r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+   \r\n+        getRepairMan(repairmanId);\r\n+        \r\n+\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n+                  }\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+ \r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711464560284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,744 +324,9 @@\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n-                    // find in services all benefits of the repairman\r\n-\r\n-                  }\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n- \r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  var xRepairManBenefits =[];\r\n-  var xRepairman =[];\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-        xRepairManBenefits = arrayObj;\r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-     \r\n-        console.log(\"ALP STEP 0.6 repairman \", xRepairman);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", xRepairManBenefits);\r\n-        console.log(\"ALP STEP 0.8 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.9 repairman benefit\", repairManBenefits);\r\n-       \r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-        xRepairman = arrayObj;\r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-        \r\n-        \r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        alert(\"get repaior\"+repairmanId);\r\n-        getRepairMan(repairmanId);\r\n-        \r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-          setParamsUrlService(cpParamsUrlService);\r\n           \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-              console.log(\"ALP STEP 1.11 aLL Check contentUserRepairmanBenefits\", xRepairManBenefits);\r\n               console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n"
                },
                {
                    "date": 1711464678207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,12 +312,38 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n    \r\n-        getRepairMan(repairmanId);\r\n         \r\n+        \r\n \r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        \r\n+        \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+            data: {},\r\n+            success: (response) => {\r\n+              const arrayObj = response.data[\"hydra:member\"] || [];\r\n+             \r\n+              setRepairMan(arrayObj);\r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \",arrayObj);\r\n+              console.log(\"ALP STEP 9.3 go to repairmanbenefit  \");\r\n+              getUserRepairmanBenefits(repairmanId);\r\n+              \r\n+              \r\n+            },\r\n+      \r\n+            catch: (error) => {\r\n+              setRepairmanIsPending(false);\r\n+              console.log(error);\r\n+            },\r\n+          });\r\n+        \r\n+        \r\n+        \r\n+        \r\n           setParamsUrlService(cpParamsUrlService);\r\n           \r\n           connector({\r\n             method: \"get\",\r\n"
                },
                {
                    "date": 1711464873392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,9 @@\n              \r\n               setRepairMan(arrayObj);\r\n               console.log(\"ALP STEP 9.2 repairman is loaded.. \",arrayObj);\r\n               console.log(\"ALP STEP 9.3 go to repairmanbenefit  \");\r\n-              getUserRepairmanBenefits(repairmanId);\r\n+             \r\n               \r\n               \r\n             },\r\n       \r\n@@ -339,11 +339,29 @@\n               console.log(error);\r\n             },\r\n           });\r\n         \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n+            success: (response) => {\r\n+              const arrayObj = response.data[\"benefits\"] || [];\r\n+         \r\n+              setRepairManBenefits(arrayObj);\r\n+              console.log(\"ALP STEP 9.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+              console.log(\"ALP STEP 9.6 repairman \", repairMan);\r\n+              console.log(\"ALP STEP 9.7 repairman benefit\", repairManBenefits);\r\n+             \r\n+              setRepairmanIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              setRepairmanIsPending(false);\r\n+              console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+      \r\n+            },\r\n+          });\r\n         \r\n         \r\n-        \r\n           setParamsUrlService(cpParamsUrlService);\r\n           \r\n           connector({\r\n             method: \"get\",\r\n"
                },
                {
                    "date": 1711464991391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,10 +312,10 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n    \r\n+        const repairman = [];\r\n         \r\n-        \r\n \r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n         \r\n         \r\n@@ -323,12 +323,12 @@\n             method: \"get\",\r\n             url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n             data: {},\r\n             success: (response) => {\r\n-              const arrayObj = response.data[\"hydra:member\"] || [];\r\n+              repairman = response.data[\"hydra:member\"] || [];\r\n              \r\n-              setRepairMan(arrayObj);\r\n-              console.log(\"ALP STEP 9.2 repairman is loaded.. \",arrayObj);\r\n+            \r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \",repairman);\r\n               console.log(\"ALP STEP 9.3 go to repairmanbenefit  \");\r\n              \r\n               \r\n               \r\n"
                },
                {
                    "date": 1711465106228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,761 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+   \r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+       \r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+       \r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+        \r\n+        \r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+ \r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+   \r\n+        const repairman = [];\r\n+        \r\n+        const repairmanBenefit = [];\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+        \r\n+        \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+            data: {},\r\n+            success: (response) => {\r\n+              repairman = response.data[\"hydra:member\"] || [];\r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \",repairman);\r\n+              console.log(\"ALP STEP 9.3 go to repairmanbenefit  \");\r\n+              \r\n+            },\r\n+      \r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+            },\r\n+          });\r\n+        \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n+            success: (response) => {\r\n+              repairmanBenefit = response.data[\"benefits\"] || [];\r\n+                     },\r\n+            catch: (error) => {\r\n+              console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+      \r\n+            },\r\n+          });\r\n+        \r\n+        \r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          \r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+          \r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, value] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    // find in services all benefits of the repairman\r\n+\r\n+                  }\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+ \r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711465176644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,15 +311,12 @@\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-   \r\n         const repairman = [];\r\n-        \r\n         const repairmanBenefit = [];\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n         \r\n-        \r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n             data: {},\r\n@@ -346,9 +343,8 @@\n       \r\n             },\r\n           });\r\n         \r\n-        \r\n           setParamsUrlService(cpParamsUrlService);\r\n           \r\n           connector({\r\n             method: \"get\",\r\n@@ -758,778 +754,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-   \r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n-       \r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-        \r\n-        \r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n- \r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-   \r\n-        const repairman = [];\r\n-        \r\n-\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        \r\n-        \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-            data: {},\r\n-            success: (response) => {\r\n-              repairman = response.data[\"hydra:member\"] || [];\r\n-             \r\n-            \r\n-              console.log(\"ALP STEP 9.2 repairman is loaded.. \",repairman);\r\n-              console.log(\"ALP STEP 9.3 go to repairmanbenefit  \");\r\n-             \r\n-              \r\n-              \r\n-            },\r\n-      \r\n-            catch: (error) => {\r\n-              setRepairmanIsPending(false);\r\n-              console.log(error);\r\n-            },\r\n-          });\r\n-        \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n-            success: (response) => {\r\n-              const arrayObj = response.data[\"benefits\"] || [];\r\n-         \r\n-              setRepairManBenefits(arrayObj);\r\n-              console.log(\"ALP STEP 9.5 repairmanbenefit is loaded.. \",arrayObj);\r\n-              console.log(\"ALP STEP 9.6 repairman \", repairMan);\r\n-              console.log(\"ALP STEP 9.7 repairman benefit\", repairManBenefits);\r\n-             \r\n-              setRepairmanIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              setRepairmanIsPending(false);\r\n-              console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-      \r\n-            },\r\n-          });\r\n-        \r\n-        \r\n-          setParamsUrlService(cpParamsUrlService);\r\n-          \r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-          \r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n-                    // find in services all benefits of the repairman\r\n-\r\n-                  }\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n- \r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1711465393494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,13 +278,16 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n \r\n+useEffect(()=> {\r\n+  const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+  getRepairMan();\r\n+},[]);\r\n \r\n \r\n \r\n \r\n-\r\n  \r\n   const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n"
                },
                {
                    "date": 1711465403663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,9 @@\n \r\n \r\n useEffect(()=> {\r\n   const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-  getRepairMan();\r\n+  getRepairMan(repairmanId);\r\n },[]);\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711465581897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,9 +315,9 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n         const repairman = [];\r\n-        const repairmanBenefit = [];\r\n+        const xrepairmanBenefit = [];\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n         \r\n           connector({\r\n             method: \"get\",\r\n@@ -338,9 +338,9 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n             success: (response) => {\r\n-              repairmanBenefit = response.data[\"benefits\"] || [];\r\n+              xrepairmanBenefit = response.data[\"benefits\"] || [];\r\n                      },\r\n             catch: (error) => {\r\n               console.log(\"ALP STEP 0.99 Error.. \",error);\r\n       \r\n"
                },
                {
                    "date": 1711465626227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,10 +314,10 @@\n         }\r\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        const repairman = [];\r\n-        const xrepairmanBenefit = [];\r\n+        let repairman = [];\r\n+        let xrepairmanBenefit = [];\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n         \r\n           connector({\r\n             method: \"get\",\r\n"
                },
                {
                    "date": 1711465692665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n             data: {},\r\n             success: (response) => {\r\n               repairman = response.data[\"hydra:member\"] || [];\r\n               console.log(\"ALP STEP 9.2 repairman is loaded.. \",repairman);\r\n-              console.log(\"ALP STEP 9.3 go to repairmanbenefit  \");\r\n+              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n               \r\n             },\r\n       \r\n             catch: (error) => {\r\n@@ -339,8 +339,10 @@\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n             success: (response) => {\r\n               xrepairmanBenefit = response.data[\"benefits\"] || [];\r\n+              console.log(\"ALP STEP 9.27 repairman is loaded.. \",xrepairmanBenefit);\r\n+              console.log(\"ALP STEP 9.31 go to repairmanbenefit  \");\r\n                      },\r\n             catch: (error) => {\r\n               console.log(\"ALP STEP 0.99 Error.. \",error);\r\n       \r\n"
                },
                {
                    "date": 1711465755268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,9 +315,9 @@\n         const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n         const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n         let repairman = [];\r\n-        let xrepairmanBenefit = [];\r\n+        let repairmanBenefit = [];\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n         \r\n           connector({\r\n             method: \"get\",\r\n@@ -338,11 +338,12 @@\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n             success: (response) => {\r\n-              xrepairmanBenefit = response.data[\"benefits\"] || [];\r\n-              console.log(\"ALP STEP 9.27 repairman is loaded.. \",xrepairmanBenefit);\r\n-              console.log(\"ALP STEP 9.31 go to repairmanbenefit  \");\r\n+              \r\n+              repairmanBenefit = response.data[\"benefits\"] || [];\r\n+              console.log(\"ALP STEP 9.207 repairmanbenefits is loaded.. \",repairmanBenefit);\r\n+             \r\n                      },\r\n             catch: (error) => {\r\n               console.log(\"ALP STEP 0.99 Error.. \",error);\r\n       \r\n"
                },
                {
                    "date": 1711478169229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,9 +369,9 @@\n                 xOneRow = value;\r\n                 Object.entries(xOneRow).forEach(entry => {\r\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n-                    console.log('STEP aLL SERVICES_CATALOG BA detail benefits', value);\r\n+                    console.log('ALP STEP 1.13 STEP VICES_CATALOG BA detail benefits', value);\r\n                     // find in services all benefits of the repairman\r\n \r\n                   }\r\n \r\n"
                },
                {
                    "date": 1711480559015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,19 +225,19 @@\n       method: \"get\",\r\n       url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"benefits\"] || [];\r\n-   \r\n+\r\n         setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n         console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n         console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n-       \r\n+\r\n         setRepairmanIsPending(false);\r\n       },\r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \",error);\r\n+        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n \r\n       },\r\n     });\r\n   };\r\n@@ -250,15 +250,15 @@\n       url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n       data: {},\r\n       success: (response) => {\r\n         const arrayObj = response.data[\"hydra:member\"] || [];\r\n-       \r\n+\r\n         setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \",arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n         console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n         getUserRepairmanBenefits(repairmanId);\r\n-        \r\n-        \r\n+\r\n+\r\n       },\r\n \r\n       catch: (error) => {\r\n         setRepairmanIsPending(false);\r\n@@ -278,22 +278,22 @@\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n   }, [isPendingLatLng, pageIndex, perPage]);\r\n \r\n \r\n-useEffect(()=> {\r\n-  const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-  getRepairMan(repairmanId);\r\n-},[]);\r\n+  useEffect(() => {\r\n+    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+  }, []);\r\n \r\n \r\n \r\n \r\n- \r\n+\r\n   const getServices = (refresh = true, index = null) => {\r\n     index = index != null ? index : pageIndex;\r\n     setPageIndex(index);\r\n \r\n-    if (!placeIsSelected) {      msgErrors({        codePostal: true,      });      return;    }\r\n+    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n \r\n     if (!isPending) {\r\n       setIsPending(true);\r\n       setFilter(clearErrors(filter));\r\n@@ -317,61 +317,63 @@\n         const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n         let repairman = [];\r\n         let repairmanBenefit = [];\r\n         if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-        \r\n+\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n             data: {},\r\n             success: (response) => {\r\n               repairman = response.data[\"hydra:member\"] || [];\r\n-              console.log(\"ALP STEP 9.2 repairman is loaded.. \",repairman);\r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n               console.log(\"ALP STEP 9.3 go to repairman  \");\r\n-              \r\n+\r\n             },\r\n-      \r\n+\r\n             catch: (error) => {\r\n               console.log(error);\r\n             },\r\n           });\r\n-        \r\n+\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n             success: (response) => {\r\n-              \r\n+\r\n               repairmanBenefit = response.data[\"benefits\"] || [];\r\n-              console.log(\"ALP STEP 9.207 repairmanbenefits is loaded.. \",repairmanBenefit);\r\n-             \r\n-                     },\r\n+              console.log(\"ALP STEP 9.207 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n+\r\n+            },\r\n             catch: (error) => {\r\n-              console.log(\"ALP STEP 0.99 Error.. \",error);\r\n-      \r\n+              console.log(\"ALP STEP 0.99 Error.. \", error);\r\n+\r\n             },\r\n           });\r\n-        \r\n+\r\n           setParamsUrlService(cpParamsUrlService);\r\n-          \r\n+\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               setServices(response.data[\"hydra:member\"] || []);\r\n               setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-          \r\n+\r\n               console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n               let xOneRow = [];\r\n               let xi = 0;\r\n+              // Lecture des services et extraction de ceux pour lequels une prestation\r\n+              // de l'artisan existe\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n-                console.log('ALP STEP 1.13 STEP aLL SERVICES_CATALOG BA detail whole', xOneRow)\r\n+                console.log('ALP STEP 1.13 STEP Parcours du service :', xOneRow)\r\n                 xOneRow = value;\r\n                 Object.entries(xOneRow).forEach(entry => {\r\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n-                    console.log('ALP STEP 1.13 STEP VICES_CATALOG BA detail benefits', value);\r\n+                    console.log('ALP STEP 1.13 STEP prestations rattachés a ce service', value);\r\n                     // find in services all benefits of the repairman\r\n \r\n                   }\r\n \r\n@@ -463,9 +465,9 @@\n     } else {\r\n       NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n     }\r\n   };\r\n- \r\n+\r\n   const refreshSubCategory = (cpFilter, cpCategories) => {\r\n     const index = cpCategories.findIndex(\r\n       (cat) => cat.id === cpFilter.category.value\r\n     );\r\n"
                },
                {
                    "date": 1711480859229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -373,9 +373,11 @@\n                   const [key, value] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('ALP STEP 1.13 STEP prestations rattachés a ce service', value);\r\n                     // find in services all benefits of the repairman\r\n-\r\n+                    // pracours des prestations de l'artisan\r\n+                    console.log('ALP STEP 1.13 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n+                    \r\n                   }\r\n \r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n"
                },
                {
                    "date": 1711480927173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -340,13 +340,13 @@\n             url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n             success: (response) => {\r\n \r\n               repairmanBenefit = response.data[\"benefits\"] || [];\r\n-              console.log(\"ALP STEP 9.207 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n+              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n \r\n             },\r\n             catch: (error) => {\r\n-              console.log(\"ALP STEP 0.99 Error.. \", error);\r\n+              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n \r\n             },\r\n           });\r\n \r\n"
                },
                {
                    "date": 1711481606074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,781 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+\r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+\r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+\r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+\r\n+\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+        let repairman = [];\r\n+        let repairmanBenefit = [];\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+            data: {},\r\n+            success: (response) => {\r\n+              repairman = response.data[\"hydra:member\"] || [];\r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n+              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n+\r\n+            },\r\n+\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+            },\r\n+          });\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n+            success: (response) => {\r\n+\r\n+              repairmanBenefit = response.data[\"benefits\"] || [];\r\n+              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n+\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n+\r\n+            },\r\n+          });\r\n+\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              // Lecture des services et extraction de ceux pour lequels une prestation\r\n+              // de l'artisan existe\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                const [key, value] = entry;\r\n+                xi++;\r\n+                console.log('ALP STEP 1.13 STEP Parcours du service :', xOneRow)\r\n+                xOneRow = value;\r\n+                Object.entries(xOneRow).forEach(entry => {\r\n+                  const [key, xvalue] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',xvalue);\r\n+                    // find in services all benefits of the repairman\r\n+                    // pracours des prestations de l'artisan\r\n+\r\n+                    Object.entries(value).forEach(entry => {\r\n+                      //parcours prestation de l'artisan rattaché a ce service\r\n+                      const [key,yvalue] = entry;\r\n+                      if (key === 'benefits') {\r\n+                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', yvalue);\r\n+                        // find in services all benefits of the repairman\r\n+                        // pracours des prestations de l'artisan\r\n+                        if (xvalue === yvalue)\r\n+                        console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n+                        \r\n+                      }\r\n+    \r\n+                    });\r\n+                    console.log('ALP STEP 1.14 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n+                    \r\n+                  }\r\n+\r\n+                });\r\n+                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711481725155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,9 +375,9 @@\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',xvalue);\r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n-                    Object.entries(value).forEach(entry => {\r\n+                    Object.entries(xvalue).forEach(entry => {\r\n                       //parcours prestation de l'artisan rattaché a ce service\r\n                       const [key,yvalue] = entry;\r\n                       if (key === 'benefits') {\r\n                         console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', yvalue);\r\n@@ -778,771 +778,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-\r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n-        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n-\r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-\r\n-\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        let repairman = [];\r\n-        let repairmanBenefit = [];\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-            data: {},\r\n-            success: (response) => {\r\n-              repairman = response.data[\"hydra:member\"] || [];\r\n-              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n-              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n-\r\n-            },\r\n-\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-            },\r\n-          });\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n-            success: (response) => {\r\n-\r\n-              repairmanBenefit = response.data[\"benefits\"] || [];\r\n-              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n-\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n-\r\n-            },\r\n-          });\r\n-\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              // Lecture des services et extraction de ceux pour lequels une prestation\r\n-              // de l'artisan existe\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n-                xi++;\r\n-                console.log('ALP STEP 1.13 STEP Parcours du service :', xOneRow)\r\n-                xOneRow = value;\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, value] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('ALP STEP 1.13 STEP prestations rattachés a ce service', value);\r\n-                    // find in services all benefits of the repairman\r\n-                    // pracours des prestations de l'artisan\r\n-                    console.log('ALP STEP 1.13 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n-                    \r\n-                  }\r\n-\r\n-                });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1711482209082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,23 +369,23 @@\n                 xi++;\r\n                 console.log('ALP STEP 1.13 STEP Parcours du service :', xOneRow)\r\n                 xOneRow = value;\r\n                 Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, xvalue] = entry;\r\n+                  const [key, service] = entry;\r\n                   if (key === 'benefits') {\r\n-                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',xvalue);\r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',service);\r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n-                    Object.entries(xvalue).forEach(entry => {\r\n+                    Object.entries(service).forEach(entry => {\r\n                       //parcours prestation de l'artisan rattaché a ce service\r\n-                      const [key,yvalue] = entry;\r\n+                      const [key,prestations] = entry;\r\n                       if (key === 'benefits') {\r\n-                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', yvalue);\r\n+                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestations);\r\n                         // find in services all benefits of the repairman\r\n                         // pracours des prestations de l'artisan\r\n                         if (xvalue === yvalue)\r\n-                        console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n+                              console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n                         \r\n                       }\r\n     \r\n                     });\r\n"
                },
                {
                    "date": 1711482220116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,9 +382,9 @@\n                       if (key === 'benefits') {\r\n                         console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestations);\r\n                         // find in services all benefits of the repairman\r\n                         // pracours des prestations de l'artisan\r\n-                        if (xvalue === yvalue)\r\n+                       // if (xvalue === yvalue)\r\n                               console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n                         \r\n                       }\r\n     \r\n"
                },
                {
                    "date": 1711483491714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -366,10 +366,11 @@\n               // de l'artisan existe\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n                 const [key, value] = entry;\r\n                 xi++;\r\n+               \r\n+                xOneRow = value;\r\n                 console.log('ALP STEP 1.13 STEP Parcours du service :', xOneRow)\r\n-                xOneRow = value;\r\n                 Object.entries(xOneRow).forEach(entry => {\r\n                   const [key, service] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',service);\r\n"
                },
                {
                    "date": 1711485418084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -364,17 +364,17 @@\n               let xi = 0;\r\n               // Lecture des services et extraction de ceux pour lequels une prestation\r\n               // de l'artisan existe\r\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                const [key, value] = entry;\r\n+                //service 130 Talons escarpins\r\n+                const [key, service] = entry;\r\n                 xi++;\r\n-               \r\n-                xOneRow = value;\r\n-                console.log('ALP STEP 1.13 STEP Parcours du service :', xOneRow)\r\n+             \r\n+                console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(xOneRow).forEach(entry => {\r\n-                  const [key, service] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',service);\r\n+                  const [key, prestations] = entry;\r\n+                  if (key === 'benefit') {\r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n                     Object.entries(service).forEach(entry => {\r\n"
                },
                {
                    "date": 1711485482415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -378,11 +378,11 @@\n                     // pracours des prestations de l'artisan\r\n \r\n                     Object.entries(service).forEach(entry => {\r\n                       //parcours prestation de l'artisan rattaché a ce service\r\n-                      const [key,prestations] = entry;\r\n+                      const [key,prestationArtisan] = entry;\r\n                       if (key === 'benefits') {\r\n-                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestations);\r\n+                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestationArtisan);\r\n                         // find in services all benefits of the repairman\r\n                         // pracours des prestations de l'artisan\r\n                        // if (xvalue === yvalue)\r\n                               console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n"
                },
                {
                    "date": 1711485539154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,16 +369,16 @@\n                 const [key, service] = entry;\r\n                 xi++;\r\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n-                Object.entries(xOneRow).forEach(entry => {\r\n+                Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n                   if (key === 'benefit') {\r\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n-                    Object.entries(service).forEach(entry => {\r\n+                    Object.entries(prestations).forEach(entry => {\r\n                       //parcours prestation de l'artisan rattaché a ce service\r\n                       const [key,prestationArtisan] = entry;\r\n                       if (key === 'benefits') {\r\n                         console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestationArtisan);\r\n"
                },
                {
                    "date": 1711486803469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,10 +371,11 @@\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n+                  console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                   if (key === 'benefit') {\r\n-                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n+                    \r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n                     Object.entries(prestations).forEach(entry => {\r\n"
                },
                {
                    "date": 1711487030572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,11 +371,11 @@\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n-                  console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n+                \r\n                   if (key === 'benefit') {\r\n-                    \r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n                     Object.entries(prestations).forEach(entry => {\r\n"
                },
                {
                    "date": 1711487058573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,11 +371,11 @@\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n-                \r\n+                  console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                   if (key === 'benefit') {\r\n-                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n+                  \r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n                     Object.entries(prestations).forEach(entry => {\r\n"
                },
                {
                    "date": 1711487118894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,9 +372,9 @@\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n                   console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-                  if (key === 'benefit') {\r\n+                  if (key === 'benefits') {\r\n                   \r\n                     // find in services all benefits of the repairman\r\n                     // pracours des prestations de l'artisan\r\n \r\n"
                },
                {
                    "date": 1711487490343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,27 +372,9 @@\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n                   console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-                  if (key === 'benefits') {\r\n-                  \r\n-                    // find in services all benefits of the repairman\r\n-                    // pracours des prestations de l'artisan\r\n-\r\n-                    Object.entries(prestations).forEach(entry => {\r\n-                      //parcours prestation de l'artisan rattaché a ce service\r\n-                      const [key,prestationArtisan] = entry;\r\n-                      if (key === 'benefits') {\r\n-                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestationArtisan);\r\n-                        // find in services all benefits of the repairman\r\n-                        // pracours des prestations de l'artisan\r\n-                       // if (xvalue === yvalue)\r\n-                              console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n-                        \r\n-                      }\r\n-    \r\n-                    });\r\n-                    console.log('ALP STEP 1.14 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n+                  console.log('ALP STEP 1.17 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n                     \r\n                   }\r\n \r\n                 });\r\n"
                },
                {
                    "date": 1711487517706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,9 +372,27 @@\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n                   console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-                  console.log('ALP STEP 1.17 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n+                  if (key === 'benefits') {\r\n+                  \r\n+                    // find in services all benefits of the repairman\r\n+                    // pracours des prestations de l'artisan\r\n+\r\n+                    Object.entries(prestations).forEach(entry => {\r\n+                      //parcours prestation de l'artisan rattaché a ce service\r\n+                      const [key,prestationArtisan] = entry;\r\n+                      if (key === 'benefits') {\r\n+                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestationArtisan);\r\n+                        // find in services all benefits of the repairman\r\n+                        // pracours des prestations de l'artisan\r\n+                       // if (xvalue === yvalue)\r\n+                              console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n+                        \r\n+                      }\r\n+    \r\n+                    });\r\n+                    console.log('ALP STEP 1.14 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n                     \r\n                   }\r\n \r\n                 });\r\n"
                },
                {
                    "date": 1711487525838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,30 +372,10 @@\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n                   console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-                  if (key === 'benefits') {\r\n-                  \r\n-                    // find in services all benefits of the repairman\r\n-                    // pracours des prestations de l'artisan\r\n+               \r\n \r\n-                    Object.entries(prestations).forEach(entry => {\r\n-                      //parcours prestation de l'artisan rattaché a ce service\r\n-                      const [key,prestationArtisan] = entry;\r\n-                      if (key === 'benefits') {\r\n-                        console.log('ALP STEP 1.15 STEP comparaison prestations rattachés a ce service', prestationArtisan);\r\n-                        // find in services all benefits of the repairman\r\n-                        // pracours des prestations de l'artisan\r\n-                       // if (xvalue === yvalue)\r\n-                              console.log('ALP STEP 1.16 STEP ************************',repairmanBenefit);\r\n-                        \r\n-                      }\r\n-    \r\n-                    });\r\n-                    console.log('ALP STEP 1.14 STEP Prestations présente chez ce repairman',repairmanBenefit);\r\n-                    \r\n-                  }\r\n-\r\n                 });\r\n                 console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n \r\n               });\r\n"
                },
                {
                    "date": 1711487675773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,9 +375,9 @@\n                   console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                \r\n \r\n                 });\r\n-                console.log('STEP aLL SERVICES_CATALOG BA detail whole', xOneRow);\r\n+                \r\n \r\n               });\r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n               setIsPending(false);\r\n"
                },
                {
                    "date": 1711487760567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,9 +371,10 @@\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n-                  console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n+                  if (key ==='benefit')\r\n+                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                \r\n \r\n                 });\r\n                 \r\n"
                },
                {
                    "date": 1711487785460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,9 +371,9 @@\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n-                  if (key ==='benefit')\r\n+                  if (key ==='benefits')\r\n                      console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n                \r\n \r\n                 });\r\n"
                },
                {
                    "date": 1711487982431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,12 +371,16 @@\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n-                  if (key ==='benefits')\r\n+                  if (key ==='benefits') {\r\n                      console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-               \r\n+                  console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n+                  \r\n+                    }\r\n \r\n+\r\n+\r\n                 });\r\n                 \r\n \r\n               });\r\n"
                },
                {
                    "date": 1711488764362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,18 +369,25 @@\n                 const [key, service] = entry;\r\n                 xi++;\r\n              \r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n-                Object.entries(service).forEach(entry => {\r\n-                  const [key, prestations] = entry;\r\n+                Object.entries(service).forEach(entry => {  const [key, prestations] = entry;\r\n                   if (key ==='benefits') {\r\n                      console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-                  console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n-                  \r\n+                     Object.entries(prestations).forEach(entry => {  \r\n+                      const [key, prestation] = entry;\r\n+                      if (key === 'id')\r\n+                      {\r\n+                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id',prestation);\r\n+                        Object.entries(repairmanBenefit).forEach(entry => {  \r\n+                          const [key, id] = entry;\r\n+                          if (key === 'id') {\r\n+                            console.log('ALP STEP 1.16 id repairman ',id);\r\n+                          }\r\n+                            \r\n+                      }\r\n+                     console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n                     }\r\n-\r\n-\r\n-\r\n                 });\r\n                 \r\n \r\n               });\r\n"
                },
                {
                    "date": 1711488815116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,9 +383,9 @@\n                           if (key === 'id') {\r\n                             console.log('ALP STEP 1.16 id repairman ',id);\r\n                           }\r\n                             \r\n-                      }\r\n+                        }\r\n                      console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n                     }\r\n                 });\r\n                 \r\n"
                },
                {
                    "date": 1711488842147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -367,38 +367,39 @@\n               Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n                 //service 130 Talons escarpins\r\n                 const [key, service] = entry;\r\n                 xi++;\r\n-             \r\n+\r\n                 console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n-                Object.entries(service).forEach(entry => {  const [key, prestations] = entry;\r\n-                  if (key ==='benefits') {\r\n-                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service',prestations);\r\n-                     Object.entries(prestations).forEach(entry => {  \r\n+                Object.entries(service).forEach(entry => {\r\n+                  const [key, prestations] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n+                    Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n-                      if (key === 'id')\r\n-                      {\r\n-                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id',prestation);\r\n-                        Object.entries(repairmanBenefit).forEach(entry => {  \r\n+                      if (key === 'id') {\r\n+                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n+                        Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, id] = entry;\r\n                           if (key === 'id') {\r\n-                            console.log('ALP STEP 1.16 id repairman ',id);\r\n+                            console.log('ALP STEP 1.16 id repairman ', id);\r\n                           }\r\n-                            \r\n+\r\n                         }\r\n-                     console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n+                      }\r\n+                        console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n                     }\r\n-                });\r\n-                \r\n+                    });\r\n \r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n+\r\n+                  });\r\n+                console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+                setIsPending(false);\r\n+              },\r\n             catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n+                console.log(error);\r\n+                setIsPending(false);\r\n+              },\r\n           });\r\n         } else {\r\n           setIsPending(false);\r\n         }\r\n"
                },
                {
                    "date": 1711488860907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,776 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+\r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+\r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+\r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+\r\n+\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+        let repairman = [];\r\n+        let repairmanBenefit = [];\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+            data: {},\r\n+            success: (response) => {\r\n+              repairman = response.data[\"hydra:member\"] || [];\r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n+              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n+\r\n+            },\r\n+\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+            },\r\n+          });\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n+            success: (response) => {\r\n+\r\n+              repairmanBenefit = response.data[\"benefits\"] || [];\r\n+              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n+\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n+\r\n+            },\r\n+          });\r\n+\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              // Lecture des services et extraction de ceux pour lequels une prestation\r\n+              // de l'artisan existe\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                //service 130 Talons escarpins\r\n+                const [key, service] = entry;\r\n+                xi++;\r\n+\r\n+                console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n+                Object.entries(service).forEach(entry => {\r\n+                  const [key, prestations] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n+                    Object.entries(prestations).forEach(entry => {\r\n+                      const [key, prestation] = entry;\r\n+                      if (key === 'id') {\r\n+                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n+                        Object.entries(repairmanBenefit).forEach(entry => {\r\n+                          const [key, id] = entry;\r\n+                          if (key === 'id') {\r\n+                            console.log('ALP STEP 1.16 id repairman ', id);\r\n+                          }\r\n+\r\n+                        }\r\n+                      }\r\n+                        console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n+                    }\r\n+                });\r\n+\r\n+\r\n+                  });\r\n+                console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+                setIsPending(false);\r\n+              },\r\n+            catch: (error) => {\r\n+                console.log(error);\r\n+                setIsPending(false);\r\n+              },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711488881979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,8 +387,9 @@\n                         }\r\n                       }\r\n                         console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n                     }\r\n+                  }\r\n                 });\r\n \r\n \r\n                   });\r\n@@ -773,780 +774,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-\r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n-        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n-\r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-\r\n-\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        let repairman = [];\r\n-        let repairmanBenefit = [];\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-            data: {},\r\n-            success: (response) => {\r\n-              repairman = response.data[\"hydra:member\"] || [];\r\n-              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n-              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n-\r\n-            },\r\n-\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-            },\r\n-          });\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n-            success: (response) => {\r\n-\r\n-              repairmanBenefit = response.data[\"benefits\"] || [];\r\n-              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n-\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n-\r\n-            },\r\n-          });\r\n-\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              // Lecture des services et extraction de ceux pour lequels une prestation\r\n-              // de l'artisan existe\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                //service 130 Talons escarpins\r\n-                const [key, service] = entry;\r\n-                xi++;\r\n-\r\n-                console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n-                Object.entries(service).forEach(entry => {\r\n-                  const [key, prestations] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n-                    Object.entries(prestations).forEach(entry => {\r\n-                      const [key, prestation] = entry;\r\n-                      if (key === 'id') {\r\n-                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n-                        Object.entries(repairmanBenefit).forEach(entry => {\r\n-                          const [key, id] = entry;\r\n-                          if (key === 'id') {\r\n-                            console.log('ALP STEP 1.16 id repairman ', id);\r\n-                          }\r\n-\r\n-                        }\r\n-                      }\r\n-                        console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n-                    }\r\n-                    });\r\n-\r\n-\r\n-                  });\r\n-                console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-                setIsPending(false);\r\n-              },\r\n-            catch: (error) => {\r\n-                console.log(error);\r\n-                setIsPending(false);\r\n-              },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1711488945081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,14 +383,14 @@\n                           if (key === 'id') {\r\n                             console.log('ALP STEP 1.16 id repairman ', id);\r\n                           }\r\n \r\n-                        }\r\n+                        })\r\n                       }\r\n                         console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n                     }\r\n                   }\r\n-                });\r\n+                };\r\n \r\n \r\n                   });\r\n                 console.log(\"STEP KEY xOneRow\", xOneRow);\r\n"
                },
                {
                    "date": 1711489016178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -385,22 +385,22 @@\n                           }\r\n \r\n                         })\r\n                       }\r\n-                        console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit)\r\n+                      console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n                     }\r\n                   }\r\n-                };\r\n+                )};\r\n \r\n \r\n-                  });\r\n-                console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-                setIsPending(false);\r\n-              },\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n             catch: (error) => {\r\n-                console.log(error);\r\n-                setIsPending(false);\r\n-              },\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n           });\r\n         } else {\r\n           setIsPending(false);\r\n         }\r\n"
                },
                {
                    "date": 1711489038122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,9 @@\n                       }\r\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n                     }\r\n                   }\r\n-                )};\r\n+                });\r\n \r\n \r\n               });\r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n"
                },
                {
                    "date": 1711489067501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,777 @@\n+import React, { useEffect, useState } from \"react\";\r\n+import { Container } from \"react-bootstrap\";\r\n+import { NotificationManager } from \"react-notifications\";\r\n+import { useMediaQuery } from \"react-responsive\";\r\n+import { useHistory, useParams } from \"react-router-dom\";\r\n+import { useSelector } from \"react-redux\";\r\n+import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n+\r\n+import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n+import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n+import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n+import {\r\n+  BlocFilterStyle,\r\n+  ContentPageStyle,\r\n+} from \"../../assets/styles/frontGlobalStyle\";\r\n+import { SearchIcon } from \"../../assets/styles/icons\";\r\n+import SelectCat from \"../../components/categories/selectCat\";\r\n+import FoundPage from \"../../components/foundPage\";\r\n+import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n+import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n+\r\n+\r\n+import Loader from \"../../components/loader\";\r\n+import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n+import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n+import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n+import Select from \"../../components/ui-elements/select\";\r\n+import endPoints from \"../../config/endPoints\";\r\n+import ROUTES from \"../../config/routes\";\r\n+import connector from \"../../connector\";\r\n+import { clearErrors } from \"../../helper/form\";\r\n+import Base from \"../../theme/front/base\";\r\n+import FicheUnivers from \"./ficheUnivers\";\r\n+import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n+\r\n+export default function ArtisanListProducts() {\r\n+  const isDisplayFilter = true;\r\n+  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n+  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n+  const [benefits, setBenefits] = useState([]);\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n+  const isDesktopOrLaptop = useMediaQuery({\r\n+    query: \"(min-width: 994px)\",\r\n+  });\r\n+  const [toggleFilter, setToggleFilter] = useState(false);\r\n+  const history = useHistory();\r\n+  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n+  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n+  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n+  const [defaultCategory, setDefaultCategory] = useState(\r\n+    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n+  );\r\n+  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n+    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n+  );\r\n+  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n+  const [defaultLatitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"latitude\"))\r\n+  );\r\n+  const [defaultLongitude] = useState(\r\n+    parseFloat(localStorage.getItem(\"longitude\"))\r\n+  );\r\n+\r\n+  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n+  const { slugIdUniverse } = useParams();\r\n+  const { slugIdRepairman } = useParams();\r\n+  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n+  const [isPending, setIsPending] = useState(false);\r\n+  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n+\r\n+  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n+  const [repairMan, setRepairMan] = useState([]);\r\n+  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n+  const [universe, setUniverse] = useState([]);\r\n+\r\n+  const [perPage, setPerPage] = useState(perPageDesMob);\r\n+  const [pageIndex, setPageIndex] = useState(0);\r\n+  const [services, setServices] = useState([]);\r\n+\r\n+  const [totalServices, setTotalServices] = useState(0);\r\n+  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n+  const universeSelector = useSelector((state) => state.universe);\r\n+  const [filter, setFilter] = useState({\r\n+    universe: {\r\n+      label: \"Univers\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n+      value: \"\",\r\n+      category: [],\r\n+      nameCategory: \"\",\r\n+      nameSubCategory: \"\",\r\n+      requireSearchSubCategory: false,\r\n+      isSearchable: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n+    },\r\n+    category: {\r\n+      label: \"Catégorie(s)\",\r\n+      placeholder: \"Choisir dans la liste\",\r\n+      options: [],\r\n+      value: null,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    subCategory: {\r\n+      label: \"Sous-catégorie(s)\",\r\n+      placeholder: \"Affiner votre recherche\",\r\n+      options: [],\r\n+      value: null,\r\n+      hideOptions: true,\r\n+      error: false,\r\n+      infoBull: false,\r\n+      textInfoBulle:\r\n+        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n+    },\r\n+    keyword: {\r\n+      label: \"Réparer quoi\",\r\n+      type: \"text\",\r\n+      name: \"keyword\",\r\n+      placeholder: \"Rentrer un mot clé\",\r\n+      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n+      options: [],\r\n+      active:\r\n+        defaultKeywordBy && defaultKeywordId\r\n+          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n+          : {},\r\n+      error: false,\r\n+      required: false,\r\n+    },\r\n+  });\r\n+  const [filterMap, setFilterMap] = useState({\r\n+    codePostal: {\r\n+      name: \"codePostal\",\r\n+      type: \"text\",\r\n+      label: \"Où\",\r\n+      placeholder: \"Saisir un code postal\",\r\n+      value:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultCodePostal\r\n+          : \"\",\r\n+      latitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLatitude\r\n+          : null,\r\n+      longitude:\r\n+        defaultCodePostal && defaultLatitude && defaultLongitude\r\n+          ? defaultLongitude\r\n+          : null,\r\n+      error: false,\r\n+      required: true,\r\n+      infoBulle: false,\r\n+    },\r\n+  });\r\n+\r\n+  useEffect(() => {\r\n+    if (toggleFilter) {\r\n+      document.body.classList.add(\"menu-is-show\");\r\n+    } else {\r\n+      document.body.classList.remove(\"menu-is-show\");\r\n+    }\r\n+  }, [toggleFilter]);\r\n+\r\n+  useEffect(() => {\r\n+    if (universeSelector.allUniverses) {\r\n+      let cpFilter = { ...filter };\r\n+      cpFilter.universe.options = [];\r\n+      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n+        let o = universeSelector.allUniverses[i];\r\n+        cpFilter.universe.options.push({\r\n+          label: o.name,\r\n+          value: o.id,\r\n+          slug: o.slug,\r\n+        });\r\n+      }\r\n+      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n+      setFilter(cpFilter);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [universeSelector, slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+    if (localStorage.getItem(\"codePostal\")) {\r\n+      getUniverse();\r\n+    } else {\r\n+      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n+      history.push(ROUTES.HOME.url);\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [slugIdUniverse]);\r\n+\r\n+  useEffect(() => {\r\n+\r\n+    document.addEventListener(\"Universe\", function (event) {\r\n+      if (event?.detail?.url && event?.detail?.id) {\r\n+        const cpFilter = { ...filter };\r\n+        cpFilter.keyword.value = \"\";\r\n+        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n+        cpFilter.keyword.options = [];\r\n+        localStorage.setItem(\"keywordVal\", \"\");\r\n+        localStorage.setItem(\"keywordBy\", \"\");\r\n+        localStorage.setItem(\"keywordId\", \"\");\r\n+        localStorage.setItem(\"defaultCategory\", \"\");\r\n+        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n+        setDefaultCategory(null);\r\n+        setDefaultSubCategory(null);\r\n+        setFilter(cpFilter);\r\n+\r\n+      } else {\r\n+        console.log(\"error event params.\");\r\n+      }\r\n+    });\r\n+\r\n+\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const getUserRepairmanBenefits = (id) => {\r\n+    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"benefits\"] || [];\r\n+\r\n+        setRepairManBenefits(arrayObj);\r\n+        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n+        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n+        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n+\r\n+        setRepairmanIsPending(false);\r\n+      },\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n+\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+  const getRepairMan = (repairmanId) => {\r\n+    setRepairmanIsPending(true);\r\n+    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n+    connector({\r\n+      method: \"get\",\r\n+      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+      data: {},\r\n+      success: (response) => {\r\n+        const arrayObj = response.data[\"hydra:member\"] || [];\r\n+\r\n+        setRepairMan(arrayObj);\r\n+        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n+        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n+        getUserRepairmanBenefits(repairmanId);\r\n+\r\n+\r\n+      },\r\n+\r\n+      catch: (error) => {\r\n+        setRepairmanIsPending(false);\r\n+        console.log(error);\r\n+      },\r\n+    });\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    if (universe && !isPendingLatLng) {\r\n+      getServices(false, null);\r\n+\r\n+    }\r\n+    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n+  }, [isPendingLatLng, pageIndex, perPage]);\r\n+\r\n+\r\n+  useEffect(() => {\r\n+    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+    getRepairMan(repairmanId);\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+  const getServices = (refresh = true, index = null) => {\r\n+    index = index != null ? index : pageIndex;\r\n+    setPageIndex(index);\r\n+\r\n+    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n+\r\n+    if (!isPending) {\r\n+      setIsPending(true);\r\n+      setFilter(clearErrors(filter));\r\n+      setFilterMap(clearErrors(filterMap));\r\n+\r\n+      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n+        let condition = \"\";\r\n+        if (filter.category.value) {\r\n+          condition += `&categories.parent.id=${filter.category.value}`;\r\n+        }\r\n+        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n+          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n+            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n+          }\r\n+        }\r\n+        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n+          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n+        }\r\n+        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n+        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n+        let repairman = [];\r\n+        let repairmanBenefit = [];\r\n+        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n+            data: {},\r\n+            success: (response) => {\r\n+              repairman = response.data[\"hydra:member\"] || [];\r\n+              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n+              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n+\r\n+            },\r\n+\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+            },\r\n+          });\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n+            success: (response) => {\r\n+\r\n+              repairmanBenefit = response.data[\"benefits\"] || [];\r\n+              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n+\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n+\r\n+            },\r\n+          });\r\n+\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+\r\n+          connector({\r\n+            method: \"get\",\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            success: (response) => {\r\n+              setServices(response.data[\"hydra:member\"] || []);\r\n+              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n+\r\n+              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n+              let xOneRow = [];\r\n+              let xi = 0;\r\n+              // Lecture des services et extraction de ceux pour lequels une prestation\r\n+              // de l'artisan existe\r\n+              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n+                //service 130 Talons escarpins\r\n+                const [key, service] = entry;\r\n+                xi++;\r\n+\r\n+                console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n+                Object.entries(service).forEach(entry => {\r\n+                  const [key, prestations] = entry;\r\n+                  if (key === 'benefits') {\r\n+                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n+                    Object.entries(prestations).forEach(entry => {\r\n+                      const [key, prestation] = entry;\r\n+                      if (key === 'id') {\r\n+                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n+                        Object.entries(repairmanBenefit).forEach(entry => {\r\n+                          const [key, id] = entry;\r\n+                          if (key === 'id') {\r\n+                            console.log('ALP STEP 1.16 id repairman ', id);\r\n+                          }\r\n+\r\n+                        })\r\n+                      }\r\n+                      console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n+                    }\r\n+                  }\r\n+                )};\r\n+\r\n+\r\n+              });\r\n+              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n+              setIsPending(false);\r\n+            },\r\n+            catch: (error) => {\r\n+              console.log(error);\r\n+              setIsPending(false);\r\n+            },\r\n+          });\r\n+        } else {\r\n+          setIsPending(false);\r\n+        }\r\n+      } else {\r\n+        msgErrors({\r\n+          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n+        });\r\n+        setIsPending(false);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+\r\n+\r\n+  const getUniverse = () => {\r\n+    const id = slugIdUniverse.split(\"-\").pop();\r\n+    if (id) {\r\n+      connector({\r\n+        method: \"get\",\r\n+        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n+        success: (response) => {\r\n+          const arrayObj = response.data || { categories: [] };\r\n+          setUniverse(arrayObj);\r\n+\r\n+          let cpFilter = { ...filter };\r\n+          cpFilter.category.options = [];\r\n+\r\n+          cpFilter.category.value = null;\r\n+          cpFilter.subCategory.value = null;\r\n+          cpFilter.subCategory.options = [];\r\n+\r\n+          if (response.data?.nameCategory) {\r\n+            cpFilter.category.label = response.data.nameCategory;\r\n+          }\r\n+\r\n+          if (response.data?.nameSubCategory) {\r\n+            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n+          }\r\n+\r\n+          if (response.data?.requireSearchSubCategory != undefined) {\r\n+            cpFilter.universe.requireSearchSubCategory =\r\n+              response.data.requireSearchSubCategory;\r\n+          }\r\n+\r\n+          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n+            let o = arrayObj.categories[i];\r\n+\r\n+            if (o.id == defaultCategory) {\r\n+              cpFilter.category.value = defaultCategory;\r\n+              cpFilter.subCategory.value = defaultSubCategory;\r\n+              for (let j = 0; j < o.children.length; j++) {\r\n+                cpFilter.subCategory.options.push({\r\n+                  label: o.children[j].name,\r\n+                  value: o.children[j].id,\r\n+                });\r\n+              }\r\n+            }\r\n+            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n+          }\r\n+          setFilter(cpFilter);\r\n+        },\r\n+        catch: (error) => {\r\n+          console.log(error);\r\n+          if (error.response?.data?.code !== undefined) {\r\n+            if (error.response.data.code === 401) {\r\n+              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n+            } else if (error.response.data.message !== undefined) {\r\n+              NotificationManager.error(error.response.data.message, \"\");\r\n+            }\r\n+          }\r\n+          setUniverse(null);\r\n+        },\r\n+      });\r\n+    } else {\r\n+      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n+    }\r\n+  };\r\n+\r\n+  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n+    const index = cpCategories.findIndex(\r\n+      (cat) => cat.id === cpFilter.category.value\r\n+    );\r\n+    cpFilter.subCategory.options = [];\r\n+    let subCat = [];\r\n+    if (index > -1) {\r\n+      subCat = cpCategories[index].children;\r\n+    } else {\r\n+      const allSubCategory = [];\r\n+      for (let i = 0; i < cpCategories.length; i++) {\r\n+        allSubCategory.push(...cpCategories[i].children);\r\n+      }\r\n+      subCat = allSubCategory;\r\n+    }\r\n+    for (let i = 0; i < subCat.length; i++) {\r\n+      cpFilter.subCategory.options.push({\r\n+        label: subCat[i].name,\r\n+        value: subCat[i].id,\r\n+      });\r\n+    }\r\n+    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n+    return cpFilter;\r\n+  };\r\n+\r\n+  const msgErrors = (e) => {\r\n+    const cpFilter = { ...filter };\r\n+    if (e.universe !== undefined) {\r\n+      cpFilter.universe.error = e.universe;\r\n+      cpFilter.universe.infoBull = e.universe;\r\n+    }\r\n+    if (e.category !== undefined) {\r\n+      cpFilter.category.error = e.category;\r\n+      cpFilter.category.infoBull = e.category;\r\n+    }\r\n+    if (e.subCategory !== undefined) {\r\n+      cpFilter.subCategory.error = e.subCategory;\r\n+      cpFilter.subCategory.infoBull = e.subCategory;\r\n+    }\r\n+\r\n+    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n+    setFilter(cpFilter);\r\n+\r\n+    const cpFilterMap = { ...filterMap };\r\n+    if (e.codePostal !== undefined) {\r\n+      cpFilterMap.codePostal.error = e.codePostal;\r\n+      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n+    }\r\n+    setFilterMap(cpFilterMap);\r\n+  };\r\n+\r\n+  if (universe === false) {\r\n+    return <Loader />;\r\n+  }\r\n+\r\n+  return (\r\n+    <Base>\r\n+      {universe ? (\r\n+\r\n+        <>\r\n+          <ContentPageStyle>\r\n+            <Container>\r\n+              <BannerRepairMan\r\n+                universe={universe}\r\n+                repairMan={repairMan}\r\n+                toggleFilter={toggleFilter}\r\n+                setToggleFilter={setToggleFilter}\r\n+              />\r\n+              <BannerYourCommand>\r\n+              </BannerYourCommand>\r\n+\r\n+\r\n+\r\n+              {isDesktopOrLaptop && (\r\n+                <Breadcrumb\r\n+                  crumbs={[\r\n+                    { name: \"Accueil\", path: \"/\" },\r\n+                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  ]}\r\n+                />\r\n+              )}\r\n+\r\n+              {isTabletOrMobile && (\r\n+                <div\r\n+                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n+                  onClick={() => {\r\n+                    setToggleFilter(!toggleFilter);\r\n+                  }}\r\n+                >\r\n+                  <SearchIcon /> Rechercher une prestation\r\n+                </div>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n+                  {isTabletOrMobile && (\r\n+                    <button\r\n+                      className=\"menu-burger is-opened\"\r\n+                      onClick={() => {\r\n+                        setToggleFilter(false);\r\n+                      }}\r\n+                    >\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                      <span></span>\r\n+                    </button>\r\n+                  )}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.universe}\r\n+                      element={filter.universe}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.universe = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (e.value && e.slug) {\r\n+                          document.dispatchEvent(\r\n+                            new CustomEvent(\"Universe\", {\r\n+                              detail: {\r\n+                                url: `/univers/${e.slug}-${e.value}`,\r\n+                                id: e.value,\r\n+                              },\r\n+                            })\r\n+                          );\r\n+                          history.push(`/univers/${e.slug}-${e.value}`);\r\n+\r\n+                          msgErrors({\r\n+                            universe: false,\r\n+                            category: false,\r\n+                            subCategory: false,\r\n+                            codePostal: false,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <Select\r\n+                      {...filter.category}\r\n+                      element={filter.category}\r\n+                      setElement={(element) => {\r\n+                        const cpFilter = { ...filter };\r\n+                        cpFilter.category = element;\r\n+                        setFilter(cpFilter);\r\n+                      }}\r\n+                      onChange={(e) => {\r\n+                        if (filter.category.value !== e.value) {\r\n+                          let cpFilter = { ...filter };\r\n+                          cpFilter.category.value = e.value;\r\n+                          cpFilter.category.error = false;\r\n+                          localStorage.setItem(\"defaultCategory\", e.value);\r\n+                          cpFilter = refreshSubCategory(\r\n+                            cpFilter,\r\n+                            universe.categories\r\n+                          );\r\n+                          if (e.value == \"\") {\r\n+                            cpFilter.subCategory.value = \"\";\r\n+                          }\r\n+                          cpFilter.subCategory.error = false;\r\n+                          cpFilter.subCategory.infoBull = false;\r\n+                          setFilter(cpFilter);\r\n+                        }\r\n+                      }}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  {filter.category.value && (\r\n+                    <div className=\"item-filter\">\r\n+                      <SelectCat\r\n+                        {...filter.subCategory}\r\n+                        element={filter.subCategory}\r\n+                        setElement={(element) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory = element;\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                        onChangeCallback={(response) => {\r\n+                          const cpFilter = { ...filter };\r\n+                          cpFilter.subCategory.value = response;\r\n+                          cpFilter.subCategory.error = false;\r\n+                          localStorage.setItem(\r\n+                            \"defaultSubCategory\",\r\n+                            JSON.stringify(response)\r\n+                          );\r\n+                          setFilter(cpFilter);\r\n+                        }}\r\n+                      />\r\n+                    </div>\r\n+                  )}\r\n+\r\n+                  {/* <div className=\"item-filter\">\r\n+                  <InputSearchKeyword\r\n+                    filter={filter}\r\n+                    setFilter={setFilter}\r\n+                    universe={universe}\r\n+                  />\r\n+                </div> */}\r\n+\r\n+                  <div className=\"item-filter\">\r\n+                    <InputAutoComplete\r\n+                      filter={filterMap}\r\n+                      setFilter={setFilterMap}\r\n+                      placeIsSelected={placeIsSelected}\r\n+                      setPlaceIsSelected={setPlaceIsSelected}\r\n+                      isPendingLatLng={isPendingLatLng}\r\n+                      setIsPendingLatLng={setIsPendingLatLng}\r\n+                    />\r\n+                  </div>\r\n+\r\n+                  <div className=\"item-filter btn-filter-banner\">\r\n+                    <button\r\n+                      className=\"btn-search-filter\"\r\n+                      onClick={() => {\r\n+                        if (\r\n+                          isTabletOrMobile &&\r\n+                          placeIsSelected &&\r\n+                          filterMap.codePostal.latitude &&\r\n+                          filterMap.codePostal.value\r\n+                        ) {\r\n+                          setToggleFilter(false);\r\n+                        }\r\n+\r\n+                        if (\r\n+                          filter.universe.value &&\r\n+                          filter.category.value &&\r\n+                          ((Array.isArray(filter.subCategory.value) &&\r\n+                            filter.subCategory.value.length > 0) ||\r\n+                            !filter.universe.requireSearchSubCategory) &&\r\n+                          placeIsSelected\r\n+                        ) {\r\n+                          getServices(false, 0);\r\n+                        } else {\r\n+                          msgErrors({\r\n+                            universe: !filter.universe.value,\r\n+                            category:\r\n+                              filter.universe.value && !filter.category.value,\r\n+                            subCategory:\r\n+                              filter.universe.value &&\r\n+                              filter.category.value &&\r\n+                              !(\r\n+                                Array.isArray(filter.subCategory.value) &&\r\n+                                filter.subCategory.value.length > 0\r\n+                              ) &&\r\n+                              filter.universe.requireSearchSubCategory,\r\n+                            codePostal: !placeIsSelected,\r\n+                          });\r\n+                        }\r\n+                      }}\r\n+                    >\r\n+                      {isDesktopOrLaptop && (\r\n+                        <>\r\n+                          <SearchIcon />\r\n+                        </>\r\n+                      )}\r\n+                      {isTabletOrMobile && <>Recherche</>}\r\n+                    </button>\r\n+                  </div>\r\n+                </BlocFilterStyle>\r\n+              )}\r\n+\r\n+              {isDisplayListeProduits && (\r\n+                <ListProduitsBonus\r\n+                  data={services}\r\n+                  perPage={perPage}\r\n+                  setPerPage={setPerPage}\r\n+                  pageIndex={pageIndex}\r\n+                  setPageIndex={setPageIndex}\r\n+                  totalItemsLength={totalServices}\r\n+                  pagination={true}\r\n+                  isLoading={isPending}\r\n+                > </ListProduitsBonus>\r\n+              )}\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+            </Container>\r\n+          </ContentPageStyle>\r\n+        </>\r\n+      ) : (\r\n+        <FoundPage\r\n+          noBase\r\n+          title=\"Univers en cours de développement\"\r\n+          image={imgMaintenence}\r\n+        />\r\n+      )\r\n+      }\r\n+    </Base >\r\n+  );\r\n+}\r\n"
                },
                {
                    "date": 1711489172419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,14 +386,14 @@\n \r\n                         })\r\n                       }\r\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n-                    }\r\n+                    )}\r\n                   }\r\n                 )};\r\n \r\n \r\n-              });\r\n+             \r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n@@ -774,781 +774,4 @@\n       }\r\n     </Base >\r\n   );\r\n }\r\n-import React, { useEffect, useState } from \"react\";\r\n-import { Container } from \"react-bootstrap\";\r\n-import { NotificationManager } from \"react-notifications\";\r\n-import { useMediaQuery } from \"react-responsive\";\r\n-import { useHistory, useParams } from \"react-router-dom\";\r\n-import { useSelector } from \"react-redux\";\r\n-import imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\n-\r\n-import { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\n-import BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\n-import ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\n-import {\r\n-  BlocFilterStyle,\r\n-  ContentPageStyle,\r\n-} from \"../../assets/styles/frontGlobalStyle\";\r\n-import { SearchIcon } from \"../../assets/styles/icons\";\r\n-import SelectCat from \"../../components/categories/selectCat\";\r\n-import FoundPage from \"../../components/foundPage\";\r\n-import BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\n-import BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\n-\r\n-\r\n-import Loader from \"../../components/loader\";\r\n-import Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\n-import InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\n-import InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\n-import Select from \"../../components/ui-elements/select\";\r\n-import endPoints from \"../../config/endPoints\";\r\n-import ROUTES from \"../../config/routes\";\r\n-import connector from \"../../connector\";\r\n-import { clearErrors } from \"../../helper/form\";\r\n-import Base from \"../../theme/front/base\";\r\n-import FicheUnivers from \"./ficheUnivers\";\r\n-import ListProduitsBonus from \"../../components/front/listProduitsBonus\";\r\n-\r\n-export default function ArtisanListProducts() {\r\n-  const isDisplayFilter = true;\r\n-  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n-  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n-  const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 993px)\" });\r\n-  const isDesktopOrLaptop = useMediaQuery({\r\n-    query: \"(min-width: 994px)\",\r\n-  });\r\n-  const [toggleFilter, setToggleFilter] = useState(false);\r\n-  const history = useHistory();\r\n-  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n-  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n-  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n-  const [defaultCategory, setDefaultCategory] = useState(\r\n-    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n-  );\r\n-  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n-    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n-  );\r\n-  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n-  const [defaultLatitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"latitude\"))\r\n-  );\r\n-  const [defaultLongitude] = useState(\r\n-    parseFloat(localStorage.getItem(\"longitude\"))\r\n-  );\r\n-\r\n-  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n-  const { slugIdUniverse } = useParams();\r\n-  const { slugIdRepairman } = useParams();\r\n-  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n-  const [isPending, setIsPending] = useState(false);\r\n-  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n-\r\n-  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n-  const [repairMan, setRepairMan] = useState([]);\r\n-  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n-  const [universe, setUniverse] = useState([]);\r\n-\r\n-  const [perPage, setPerPage] = useState(perPageDesMob);\r\n-  const [pageIndex, setPageIndex] = useState(0);\r\n-  const [services, setServices] = useState([]);\r\n-\r\n-  const [totalServices, setTotalServices] = useState(0);\r\n-  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n-  const universeSelector = useSelector((state) => state.universe);\r\n-  const [filter, setFilter] = useState({\r\n-    universe: {\r\n-      label: \"Univers\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n-      value: \"\",\r\n-      category: [],\r\n-      nameCategory: \"\",\r\n-      nameSubCategory: \"\",\r\n-      requireSearchSubCategory: false,\r\n-      isSearchable: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n-    },\r\n-    category: {\r\n-      label: \"Catégorie(s)\",\r\n-      placeholder: \"Choisir dans la liste\",\r\n-      options: [],\r\n-      value: null,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    subCategory: {\r\n-      label: \"Sous-catégorie(s)\",\r\n-      placeholder: \"Affiner votre recherche\",\r\n-      options: [],\r\n-      value: null,\r\n-      hideOptions: true,\r\n-      error: false,\r\n-      infoBull: false,\r\n-      textInfoBulle:\r\n-        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n-    },\r\n-    keyword: {\r\n-      label: \"Réparer quoi\",\r\n-      type: \"text\",\r\n-      name: \"keyword\",\r\n-      placeholder: \"Rentrer un mot clé\",\r\n-      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n-      options: [],\r\n-      active:\r\n-        defaultKeywordBy && defaultKeywordId\r\n-          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n-          : {},\r\n-      error: false,\r\n-      required: false,\r\n-    },\r\n-  });\r\n-  const [filterMap, setFilterMap] = useState({\r\n-    codePostal: {\r\n-      name: \"codePostal\",\r\n-      type: \"text\",\r\n-      label: \"Où\",\r\n-      placeholder: \"Saisir un code postal\",\r\n-      value:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultCodePostal\r\n-          : \"\",\r\n-      latitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLatitude\r\n-          : null,\r\n-      longitude:\r\n-        defaultCodePostal && defaultLatitude && defaultLongitude\r\n-          ? defaultLongitude\r\n-          : null,\r\n-      error: false,\r\n-      required: true,\r\n-      infoBulle: false,\r\n-    },\r\n-  });\r\n-\r\n-  useEffect(() => {\r\n-    if (toggleFilter) {\r\n-      document.body.classList.add(\"menu-is-show\");\r\n-    } else {\r\n-      document.body.classList.remove(\"menu-is-show\");\r\n-    }\r\n-  }, [toggleFilter]);\r\n-\r\n-  useEffect(() => {\r\n-    if (universeSelector.allUniverses) {\r\n-      let cpFilter = { ...filter };\r\n-      cpFilter.universe.options = [];\r\n-      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n-        let o = universeSelector.allUniverses[i];\r\n-        cpFilter.universe.options.push({\r\n-          label: o.name,\r\n-          value: o.id,\r\n-          slug: o.slug,\r\n-        });\r\n-      }\r\n-      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n-      setFilter(cpFilter);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [universeSelector, slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-    if (localStorage.getItem(\"codePostal\")) {\r\n-      getUniverse();\r\n-    } else {\r\n-      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n-      history.push(ROUTES.HOME.url);\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [slugIdUniverse]);\r\n-\r\n-  useEffect(() => {\r\n-\r\n-    document.addEventListener(\"Universe\", function (event) {\r\n-      if (event?.detail?.url && event?.detail?.id) {\r\n-        const cpFilter = { ...filter };\r\n-        cpFilter.keyword.value = \"\";\r\n-        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n-        cpFilter.keyword.options = [];\r\n-        localStorage.setItem(\"keywordVal\", \"\");\r\n-        localStorage.setItem(\"keywordBy\", \"\");\r\n-        localStorage.setItem(\"keywordId\", \"\");\r\n-        localStorage.setItem(\"defaultCategory\", \"\");\r\n-        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n-        setDefaultCategory(null);\r\n-        setDefaultSubCategory(null);\r\n-        setFilter(cpFilter);\r\n-\r\n-      } else {\r\n-        console.log(\"error event params.\");\r\n-      }\r\n-    });\r\n-\r\n-\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const getUserRepairmanBenefits = (id) => {\r\n-    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"benefits\"] || [];\r\n-\r\n-        setRepairManBenefits(arrayObj);\r\n-        console.log(\"ALP STEP 0.5 repairmanbenefit is loaded.. \", arrayObj);\r\n-        console.log(\"ALP STEP 0.6 repairman \", repairMan);\r\n-        console.log(\"ALP STEP 0.7 repairman benefit\", repairManBenefits);\r\n-\r\n-        setRepairmanIsPending(false);\r\n-      },\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n-\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-  const getRepairMan = (repairmanId) => {\r\n-    setRepairmanIsPending(true);\r\n-    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n-    connector({\r\n-      method: \"get\",\r\n-      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-      data: {},\r\n-      success: (response) => {\r\n-        const arrayObj = response.data[\"hydra:member\"] || [];\r\n-\r\n-        setRepairMan(arrayObj);\r\n-        console.log(\"ALP STEP 0.2 repairman is loaded.. \", arrayObj);\r\n-        console.log(\"ALP STEP 0.3 go to repairmanbenefit  \");\r\n-        getUserRepairmanBenefits(repairmanId);\r\n-\r\n-\r\n-      },\r\n-\r\n-      catch: (error) => {\r\n-        setRepairmanIsPending(false);\r\n-        console.log(error);\r\n-      },\r\n-    });\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    if (universe && !isPendingLatLng) {\r\n-      getServices(false, null);\r\n-\r\n-    }\r\n-    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n-  }, [isPendingLatLng, pageIndex, perPage]);\r\n-\r\n-\r\n-  useEffect(() => {\r\n-    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-    getRepairMan(repairmanId);\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-  const getServices = (refresh = true, index = null) => {\r\n-    index = index != null ? index : pageIndex;\r\n-    setPageIndex(index);\r\n-\r\n-    if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n-\r\n-    if (!isPending) {\r\n-      setIsPending(true);\r\n-      setFilter(clearErrors(filter));\r\n-      setFilterMap(clearErrors(filterMap));\r\n-\r\n-      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n-        let condition = \"\";\r\n-        if (filter.category.value) {\r\n-          condition += `&categories.parent.id=${filter.category.value}`;\r\n-        }\r\n-        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n-          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n-            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n-          }\r\n-        }\r\n-        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n-          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n-        }\r\n-        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n-        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=${perPage}&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n-        let repairman = [];\r\n-        let repairmanBenefit = [];\r\n-        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n-            data: {},\r\n-            success: (response) => {\r\n-              repairman = response.data[\"hydra:member\"] || [];\r\n-              console.log(\"ALP STEP 9.2 repairman is loaded.. \", repairman);\r\n-              console.log(\"ALP STEP 9.3 go to repairman  \");\r\n-\r\n-            },\r\n-\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-            },\r\n-          });\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n-            success: (response) => {\r\n-\r\n-              repairmanBenefit = response.data[\"benefits\"] || [];\r\n-              console.log(\"ALP STEP 1.101 repairmanbenefits is loaded.. \", repairmanBenefit);\r\n-\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n-\r\n-            },\r\n-          });\r\n-\r\n-          setParamsUrlService(cpParamsUrlService);\r\n-\r\n-          connector({\r\n-            method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n-            success: (response) => {\r\n-              setServices(response.data[\"hydra:member\"] || []);\r\n-              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n-\r\n-              console.log(\"ALP STEP 1.12 extract service catalog\", response);\r\n-              let xOneRow = [];\r\n-              let xi = 0;\r\n-              // Lecture des services et extraction de ceux pour lequels une prestation\r\n-              // de l'artisan existe\r\n-              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n-                //service 130 Talons escarpins\r\n-                const [key, service] = entry;\r\n-                xi++;\r\n-\r\n-                console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n-                Object.entries(service).forEach(entry => {\r\n-                  const [key, prestations] = entry;\r\n-                  if (key === 'benefits') {\r\n-                    console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n-                    Object.entries(prestations).forEach(entry => {\r\n-                      const [key, prestation] = entry;\r\n-                      if (key === 'id') {\r\n-                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n-                        Object.entries(repairmanBenefit).forEach(entry => {\r\n-                          const [key, id] = entry;\r\n-                          if (key === 'id') {\r\n-                            console.log('ALP STEP 1.16 id repairman ', id);\r\n-                          }\r\n-\r\n-                        })\r\n-                      }\r\n-                      console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n-                    }\r\n-                  }\r\n-                });\r\n-\r\n-\r\n-              });\r\n-              console.log(\"STEP KEY xOneRow\", xOneRow);\r\n-              setIsPending(false);\r\n-            },\r\n-            catch: (error) => {\r\n-              console.log(error);\r\n-              setIsPending(false);\r\n-            },\r\n-          });\r\n-        } else {\r\n-          setIsPending(false);\r\n-        }\r\n-      } else {\r\n-        msgErrors({\r\n-          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n-        });\r\n-        setIsPending(false);\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-\r\n-\r\n-  const getUniverse = () => {\r\n-    const id = slugIdUniverse.split(\"-\").pop();\r\n-    if (id) {\r\n-      connector({\r\n-        method: \"get\",\r\n-        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n-        success: (response) => {\r\n-          const arrayObj = response.data || { categories: [] };\r\n-          setUniverse(arrayObj);\r\n-\r\n-          let cpFilter = { ...filter };\r\n-          cpFilter.category.options = [];\r\n-\r\n-          cpFilter.category.value = null;\r\n-          cpFilter.subCategory.value = null;\r\n-          cpFilter.subCategory.options = [];\r\n-\r\n-          if (response.data?.nameCategory) {\r\n-            cpFilter.category.label = response.data.nameCategory;\r\n-          }\r\n-\r\n-          if (response.data?.nameSubCategory) {\r\n-            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n-          }\r\n-\r\n-          if (response.data?.requireSearchSubCategory != undefined) {\r\n-            cpFilter.universe.requireSearchSubCategory =\r\n-              response.data.requireSearchSubCategory;\r\n-          }\r\n-\r\n-          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n-            let o = arrayObj.categories[i];\r\n-\r\n-            if (o.id == defaultCategory) {\r\n-              cpFilter.category.value = defaultCategory;\r\n-              cpFilter.subCategory.value = defaultSubCategory;\r\n-              for (let j = 0; j < o.children.length; j++) {\r\n-                cpFilter.subCategory.options.push({\r\n-                  label: o.children[j].name,\r\n-                  value: o.children[j].id,\r\n-                });\r\n-              }\r\n-            }\r\n-            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n-          }\r\n-          setFilter(cpFilter);\r\n-        },\r\n-        catch: (error) => {\r\n-          console.log(error);\r\n-          if (error.response?.data?.code !== undefined) {\r\n-            if (error.response.data.code === 401) {\r\n-              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n-            } else if (error.response.data.message !== undefined) {\r\n-              NotificationManager.error(error.response.data.message, \"\");\r\n-            }\r\n-          }\r\n-          setUniverse(null);\r\n-        },\r\n-      });\r\n-    } else {\r\n-      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n-    }\r\n-  };\r\n-\r\n-  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n-    const index = cpCategories.findIndex(\r\n-      (cat) => cat.id === cpFilter.category.value\r\n-    );\r\n-    cpFilter.subCategory.options = [];\r\n-    let subCat = [];\r\n-    if (index > -1) {\r\n-      subCat = cpCategories[index].children;\r\n-    } else {\r\n-      const allSubCategory = [];\r\n-      for (let i = 0; i < cpCategories.length; i++) {\r\n-        allSubCategory.push(...cpCategories[i].children);\r\n-      }\r\n-      subCat = allSubCategory;\r\n-    }\r\n-    for (let i = 0; i < subCat.length; i++) {\r\n-      cpFilter.subCategory.options.push({\r\n-        label: subCat[i].name,\r\n-        value: subCat[i].id,\r\n-      });\r\n-    }\r\n-    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n-    return cpFilter;\r\n-  };\r\n-\r\n-  const msgErrors = (e) => {\r\n-    const cpFilter = { ...filter };\r\n-    if (e.universe !== undefined) {\r\n-      cpFilter.universe.error = e.universe;\r\n-      cpFilter.universe.infoBull = e.universe;\r\n-    }\r\n-    if (e.category !== undefined) {\r\n-      cpFilter.category.error = e.category;\r\n-      cpFilter.category.infoBull = e.category;\r\n-    }\r\n-    if (e.subCategory !== undefined) {\r\n-      cpFilter.subCategory.error = e.subCategory;\r\n-      cpFilter.subCategory.infoBull = e.subCategory;\r\n-    }\r\n-\r\n-    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n-    setFilter(cpFilter);\r\n-\r\n-    const cpFilterMap = { ...filterMap };\r\n-    if (e.codePostal !== undefined) {\r\n-      cpFilterMap.codePostal.error = e.codePostal;\r\n-      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n-    }\r\n-    setFilterMap(cpFilterMap);\r\n-  };\r\n-\r\n-  if (universe === false) {\r\n-    return <Loader />;\r\n-  }\r\n-\r\n-  return (\r\n-    <Base>\r\n-      {universe ? (\r\n-\r\n-        <>\r\n-          <ContentPageStyle>\r\n-            <Container>\r\n-              <BannerRepairMan\r\n-                universe={universe}\r\n-                repairMan={repairMan}\r\n-                toggleFilter={toggleFilter}\r\n-                setToggleFilter={setToggleFilter}\r\n-              />\r\n-              <BannerYourCommand>\r\n-              </BannerYourCommand>\r\n-\r\n-\r\n-\r\n-              {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n-              )}\r\n-\r\n-              {isTabletOrMobile && (\r\n-                <div\r\n-                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n-                  onClick={() => {\r\n-                    setToggleFilter(!toggleFilter);\r\n-                  }}\r\n-                >\r\n-                  <SearchIcon /> Rechercher une prestation\r\n-                </div>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter}>\r\n-                  {isTabletOrMobile && (\r\n-                    <button\r\n-                      className=\"menu-burger is-opened\"\r\n-                      onClick={() => {\r\n-                        setToggleFilter(false);\r\n-                      }}\r\n-                    >\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                      <span></span>\r\n-                    </button>\r\n-                  )}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.universe}\r\n-                      element={filter.universe}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.universe = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (e.value && e.slug) {\r\n-                          document.dispatchEvent(\r\n-                            new CustomEvent(\"Universe\", {\r\n-                              detail: {\r\n-                                url: `/univers/${e.slug}-${e.value}`,\r\n-                                id: e.value,\r\n-                              },\r\n-                            })\r\n-                          );\r\n-                          history.push(`/univers/${e.slug}-${e.value}`);\r\n-\r\n-                          msgErrors({\r\n-                            universe: false,\r\n-                            category: false,\r\n-                            subCategory: false,\r\n-                            codePostal: false,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <Select\r\n-                      {...filter.category}\r\n-                      element={filter.category}\r\n-                      setElement={(element) => {\r\n-                        const cpFilter = { ...filter };\r\n-                        cpFilter.category = element;\r\n-                        setFilter(cpFilter);\r\n-                      }}\r\n-                      onChange={(e) => {\r\n-                        if (filter.category.value !== e.value) {\r\n-                          let cpFilter = { ...filter };\r\n-                          cpFilter.category.value = e.value;\r\n-                          cpFilter.category.error = false;\r\n-                          localStorage.setItem(\"defaultCategory\", e.value);\r\n-                          cpFilter = refreshSubCategory(\r\n-                            cpFilter,\r\n-                            universe.categories\r\n-                          );\r\n-                          if (e.value == \"\") {\r\n-                            cpFilter.subCategory.value = \"\";\r\n-                          }\r\n-                          cpFilter.subCategory.error = false;\r\n-                          cpFilter.subCategory.infoBull = false;\r\n-                          setFilter(cpFilter);\r\n-                        }\r\n-                      }}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  {filter.category.value && (\r\n-                    <div className=\"item-filter\">\r\n-                      <SelectCat\r\n-                        {...filter.subCategory}\r\n-                        element={filter.subCategory}\r\n-                        setElement={(element) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory = element;\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                        onChangeCallback={(response) => {\r\n-                          const cpFilter = { ...filter };\r\n-                          cpFilter.subCategory.value = response;\r\n-                          cpFilter.subCategory.error = false;\r\n-                          localStorage.setItem(\r\n-                            \"defaultSubCategory\",\r\n-                            JSON.stringify(response)\r\n-                          );\r\n-                          setFilter(cpFilter);\r\n-                        }}\r\n-                      />\r\n-                    </div>\r\n-                  )}\r\n-\r\n-                  {/* <div className=\"item-filter\">\r\n-                  <InputSearchKeyword\r\n-                    filter={filter}\r\n-                    setFilter={setFilter}\r\n-                    universe={universe}\r\n-                  />\r\n-                </div> */}\r\n-\r\n-                  <div className=\"item-filter\">\r\n-                    <InputAutoComplete\r\n-                      filter={filterMap}\r\n-                      setFilter={setFilterMap}\r\n-                      placeIsSelected={placeIsSelected}\r\n-                      setPlaceIsSelected={setPlaceIsSelected}\r\n-                      isPendingLatLng={isPendingLatLng}\r\n-                      setIsPendingLatLng={setIsPendingLatLng}\r\n-                    />\r\n-                  </div>\r\n-\r\n-                  <div className=\"item-filter btn-filter-banner\">\r\n-                    <button\r\n-                      className=\"btn-search-filter\"\r\n-                      onClick={() => {\r\n-                        if (\r\n-                          isTabletOrMobile &&\r\n-                          placeIsSelected &&\r\n-                          filterMap.codePostal.latitude &&\r\n-                          filterMap.codePostal.value\r\n-                        ) {\r\n-                          setToggleFilter(false);\r\n-                        }\r\n-\r\n-                        if (\r\n-                          filter.universe.value &&\r\n-                          filter.category.value &&\r\n-                          ((Array.isArray(filter.subCategory.value) &&\r\n-                            filter.subCategory.value.length > 0) ||\r\n-                            !filter.universe.requireSearchSubCategory) &&\r\n-                          placeIsSelected\r\n-                        ) {\r\n-                          getServices(false, 0);\r\n-                        } else {\r\n-                          msgErrors({\r\n-                            universe: !filter.universe.value,\r\n-                            category:\r\n-                              filter.universe.value && !filter.category.value,\r\n-                            subCategory:\r\n-                              filter.universe.value &&\r\n-                              filter.category.value &&\r\n-                              !(\r\n-                                Array.isArray(filter.subCategory.value) &&\r\n-                                filter.subCategory.value.length > 0\r\n-                              ) &&\r\n-                              filter.universe.requireSearchSubCategory,\r\n-                            codePostal: !placeIsSelected,\r\n-                          });\r\n-                        }\r\n-                      }}\r\n-                    >\r\n-                      {isDesktopOrLaptop && (\r\n-                        <>\r\n-                          <SearchIcon />\r\n-                        </>\r\n-                      )}\r\n-                      {isTabletOrMobile && <>Recherche</>}\r\n-                    </button>\r\n-                  </div>\r\n-                </BlocFilterStyle>\r\n-              )}\r\n-\r\n-              {isDisplayListeProduits && (\r\n-                <ListProduitsBonus\r\n-                  data={services}\r\n-                  perPage={perPage}\r\n-                  setPerPage={setPerPage}\r\n-                  pageIndex={pageIndex}\r\n-                  setPageIndex={setPageIndex}\r\n-                  totalItemsLength={totalServices}\r\n-                  pagination={true}\r\n-                  isLoading={isPending}\r\n-                > </ListProduitsBonus>\r\n-              )}\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-\r\n-            </Container>\r\n-          </ContentPageStyle>\r\n-        </>\r\n-      ) : (\r\n-        <FoundPage\r\n-          noBase\r\n-          title=\"Univers en cours de développement\"\r\n-          image={imgMaintenence}\r\n-        />\r\n-      )\r\n-      }\r\n-    </Base >\r\n-  );\r\n-}\r\n"
                },
                {
                    "date": 1711489193757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,9 @@\n                       }\r\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n                     )}\r\n                   }\r\n-                )};\r\n+              });\r\n \r\n \r\n              \r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n"
                },
                {
                    "date": 1711489279780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,14 +383,12 @@\n                           if (key === 'id') {\r\n                             console.log('ALP STEP 1.16 id repairman ', id);\r\n                           }\r\n \r\n-                        })\r\n+                        });\r\n                       }\r\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n-                    )}\r\n-                  }\r\n-              });\r\n+                    });\r\n \r\n \r\n              \r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n"
                },
                {
                    "date": 1711489291935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,10 +387,10 @@\n                         });\r\n                       }\r\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n                     });\r\n+                  }\r\n \r\n-\r\n              \r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n               setIsPending(false);\r\n             },\r\n"
                },
                {
                    "date": 1711489301560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,9 @@\n                       }\r\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n                     });\r\n                   }\r\n-\r\n+                });\r\n              \r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n               setIsPending(false);\r\n             },\r\n"
                },
                {
                    "date": 1711489318178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -389,9 +389,9 @@\n                       console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n                     });\r\n                   }\r\n                 });\r\n-             \r\n+              });\r\n               console.log(\"STEP KEY xOneRow\", xOneRow);\r\n               setIsPending(false);\r\n             },\r\n             catch: (error) => {\r\n"
                },
                {
                    "date": 1711489690665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,8 +375,9 @@\n                   if (key === 'benefits') {\r\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n                     Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n+                      console.log('ALP STEP 1.145 STEP prestation',prestation);\r\n                       if (key === 'id') {\r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, id] = entry;\r\n@@ -385,9 +386,9 @@\n                           }\r\n \r\n                         });\r\n                       }\r\n-                      console.log('ALP STEP 1.15 STEP prestations artisan', repairmanBenefit);\r\n+                      console.log('ALP STEP 1.175 STEP prestations artisan', repairmanBenefit);\r\n                     });\r\n                   }\r\n                 });\r\n               });\r\n"
                },
                {
                    "date": 1711489926803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,9 +375,9 @@\n                   if (key === 'benefits') {\r\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n                     Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n-                      console.log('ALP STEP 1.145 STEP prestation',prestation);\r\n+                      console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n                       if (key === 'id') {\r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, id] = entry;\r\n"
                },
                {
                    "date": 1711490091245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -376,18 +376,18 @@\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n                     Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n                       console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n-                      if (key === 'id') {\r\n+                     \r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, id] = entry;\r\n                           if (key === 'id') {\r\n                             console.log('ALP STEP 1.16 id repairman ', id);\r\n                           }\r\n \r\n                         });\r\n-                      }\r\n+                      \r\n                       console.log('ALP STEP 1.175 STEP prestations artisan', repairmanBenefit);\r\n                     });\r\n                   }\r\n                 });\r\n"
                },
                {
                    "date": 1711490238978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -377,9 +377,9 @@\n                     Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n                       console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n                      \r\n-                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation);\r\n+                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, id] = entry;\r\n                           if (key === 'id') {\r\n                             console.log('ALP STEP 1.16 id repairman ', id);\r\n"
                },
                {
                    "date": 1711490361038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,11 +379,11 @@\n                       console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n                      \r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n-                          const [key, id] = entry;\r\n-                          if (key === 'id') {\r\n-                            console.log('ALP STEP 1.16 id repairman ', id);\r\n+                          const [key, value] = entry;\r\n+                          if (value['id'] == prestation['id'] ) {\r\n+                            console.log('ALP STEP 1.16 id repairman is found ******');\r\n                           }\r\n \r\n                         });\r\n                       \r\n"
                },
                {
                    "date": 1711490457396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -380,8 +380,9 @@\n                      \r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, value] = entry;\r\n+                          console.log(\"ALP STEP 1.151 repairmandbenefit\", key, value);\r\n                           if (value['id'] == prestation['id'] ) {\r\n                             console.log('ALP STEP 1.16 id repairman is found ******');\r\n                           }\r\n \r\n"
                },
                {
                    "date": 1711490559194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -380,9 +380,9 @@\n                      \r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, value] = entry;\r\n-                          console.log(\"ALP STEP 1.151 repairmandbenefit\", key, value);\r\n+                          console.log(\"ALP STEP 1.151 repairmandbenefit\", key, value['id']);\r\n                           if (value['id'] == prestation['id'] ) {\r\n                             console.log('ALP STEP 1.16 id repairman is found ******');\r\n                           }\r\n \r\n"
                },
                {
                    "date": 1711490635482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -380,10 +380,10 @@\n                      \r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, value] = entry;\r\n-                          console.log(\"ALP STEP 1.151 repairmandbenefit\", key, value['id']);\r\n-                          if (value['id'] == prestation['id'] ) {\r\n+                          console.log(\"ALP STEP 1.151 repairmandbenefit\", prestation['id'], value['id']);\r\n+                          if (value['id'] === prestation['id'] ) {\r\n                             console.log('ALP STEP 1.16 id repairman is found ******');\r\n                           }\r\n \r\n                         });\r\n"
                },
                {
                    "date": 1711490792041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -378,8 +378,9 @@\n                       const [key, prestation] = entry;\r\n                       console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n                      \r\n                         console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n+                        console.log('ALP STEP 1.15 looking for prestation repairmanBenefit', repairmanBenefit);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, value] = entry;\r\n                           console.log(\"ALP STEP 1.151 repairmandbenefit\", prestation['id'], value['id']);\r\n                           if (value['id'] === prestation['id'] ) {\r\n"
                },
                {
                    "date": 1711490844874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,9 +383,9 @@\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, value] = entry;\r\n                           console.log(\"ALP STEP 1.151 repairmandbenefit\", prestation['id'], value['id']);\r\n                           if (value['id'] === prestation['id'] ) {\r\n-                            console.log('ALP STEP 1.16 id repairman is found ******');\r\n+                            console.log('ALP STEP 1.16 id repairman is found *******************');\r\n                           }\r\n \r\n                         });\r\n                       \r\n"
                },
                {
                    "date": 1711491163526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -377,10 +377,10 @@\n                     Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n                       console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n                      \r\n-                        console.log('ALP STEP 1.15 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n-                        console.log('ALP STEP 1.15 looking for prestation repairmanBenefit', repairmanBenefit);\r\n+                        console.log('ALP STEP 1.151 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n+                        console.log('ALP STEP 1.151 looking for prestation repairmanBenefit', repairmanBenefit);\r\n                         Object.entries(repairmanBenefit).forEach(entry => {\r\n                           const [key, value] = entry;\r\n                           console.log(\"ALP STEP 1.151 repairmandbenefit\", prestation['id'], value['id']);\r\n                           if (value['id'] === prestation['id'] ) {\r\n"
                },
                {
                    "date": 1711492115707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -368,28 +368,28 @@\n                 //service 130 Talons escarpins\r\n                 const [key, service] = entry;\r\n                 xi++;\r\n \r\n-                console.log('ALP STEP 1.13 STEP Prestation du  service :', service)\r\n+                console.log(' restation du  service :', service)\r\n                 Object.entries(service).forEach(entry => {\r\n                   const [key, prestations] = entry;\r\n                   if (key === 'benefits') {\r\n                     console.log('ALP STEP 1.14 STEP prestations rattachés a ce service', prestations);\r\n                     Object.entries(prestations).forEach(entry => {\r\n                       const [key, prestation] = entry;\r\n-                      console.log('ALP STEP 1.145 STEP prestation',key,prestation);\r\n-                     \r\n-                        console.log('ALP STEP 1.151 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n-                        console.log('ALP STEP 1.151 looking for prestation repairmanBenefit', repairmanBenefit);\r\n-                        Object.entries(repairmanBenefit).forEach(entry => {\r\n-                          const [key, value] = entry;\r\n-                          console.log(\"ALP STEP 1.151 repairmandbenefit\", prestation['id'], value['id']);\r\n-                          if (value['id'] === prestation['id'] ) {\r\n-                            console.log('ALP STEP 1.16 id repairman is found *******************');\r\n-                          }\r\n+                      console.log('ALP STEP 1.145 STEP prestation', key, prestation);\r\n \r\n-                        });\r\n-                      \r\n+                      console.log('ALP STEP 1.151 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n+                      console.log('ALP STEP 1.151 looking for prestation repairmanBenefit', repairmanBenefit);\r\n+                      Object.entries(repairmanBenefit).forEach(entry => {\r\n+                        const [key, value] = entry;\r\n+                        console.log(\"ALP STEP 1.151 repairmandbenefit\", prestation['id'], value['id']);\r\n+                        if (value['id'] === prestation['id']) {\r\n+                          console.log('ALP STEP 1.16 id repairman is found *******************');\r\n+                        }\r\n+\r\n+                      });\r\n+\r\n                       console.log('ALP STEP 1.175 STEP prestations artisan', repairmanBenefit);\r\n                     });\r\n                   }\r\n                 });\r\n"
                },
                {
                    "date": 1711534998136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,9 +533,9 @@\n \r\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n-\r\n+  let labelService =\"labelservice\";\r\n   return (\r\n     <Base>\r\n       {universe ? (\r\n \r\n@@ -547,9 +547,9 @@\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n-              <BannerYourCommand>\r\n+              <BannerYourCommand label={labelService}>\r\n               </BannerYourCommand>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711535113938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,9 +533,9 @@\n \r\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n-  let labelService =\"labelservice\";\r\n+  let labelService =\"Réparation/Remplacement Semelle\";\r\n   return (\r\n     <Base>\r\n       {universe ? (\r\n \r\n@@ -547,9 +547,11 @@\n                 repairMan={repairMan}\r\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n-              <BannerYourCommand label={labelService}>\r\n+              <BannerYourCommand \r\n+                 label={labelService}\r\n+                 >\r\n               </BannerYourCommand>\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711535404865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                 label={labelService}\r\n+                 label=\"dddd\"\r\n                  >\r\n               </BannerYourCommand>\r\n \r\n \r\n"
                },
                {
                    "date": 1711535517815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                 label=\"dddd\"\r\n+                 label={labelService}\r\n                  >\r\n               </BannerYourCommand>\r\n \r\n \r\n"
                },
                {
                    "date": 1711535725378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,11 +548,14 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                 label={labelService}\r\n-                 >\r\n-              </BannerYourCommand>\r\n+                 crumbs={[\r\n+                  { name: \"Accueil\", path: \"/\" },\r\n+                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n+                  { label: labelService }\r\n+                ]}\r\n+             />\r\n \r\n \r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1711535992586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,14 +548,10 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                 crumbs={[\r\n-                  { name: \"Accueil\", path: \"/\" },\r\n-                  { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  { label: labelService }\r\n-                ]}\r\n-             />\r\n+                label = { labelService }\r\n+                            />\r\n \r\n \r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1711536012364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                label = { labelService }\r\n+                label = {{ labelService }}\r\n                             />\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711536084661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                label = {{ labelService }}\r\n+                label = { labelService }\r\n                             />\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711536557245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,10 +548,10 @@\n                 toggleFilter={toggleFilter}\r\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n-                label = { labelService }\r\n-                            />\r\n+                label = {labelService}\r\n+              />\r\n \r\n \r\n \r\n               {isDesktopOrLaptop && (\r\n"
                },
                {
                    "date": 1711537022903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -534,8 +534,9 @@\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n+  let descriptionService = \" Diagnostic + remplacement ou réparation du talon, sur une ou les deux chaussures\";\r\n   return (\r\n     <Base>\r\n       {universe ? (\r\n \r\n@@ -549,8 +550,9 @@\n                 setToggleFilter={setToggleFilter}\r\n               />\r\n               <BannerYourCommand \r\n                 label = {labelService}\r\n+                description ={descriptionService}\r\n               />\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1711537705100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -534,9 +534,9 @@\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n-  let descriptionService = \" Diagnostic + remplacement ou réparation du talon, sur une ou les deux chaussures\";\r\n+  let descriptionService = \" Diagnostic\";\r\n   return (\r\n     <Base>\r\n       {universe ? (\r\n \r\n"
                },
                {
                    "date": 1711542339116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,8 +533,12 @@\n \r\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n+  constructor(props) {\r\n+    super(props);\r\n+    this.state = { data: \"some data here\" };\r\n+  }\r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n   let descriptionService = \" Diagnostic\";\r\n   return (\r\n     <Base>\r\n"
                },
                {
                    "date": 1711542386850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -536,9 +536,9 @@\n   }\r\n   constructor(props) {\r\n     super(props);\r\n     this.state = { data: \"some data here\" };\r\n-  }\r\n+  };\r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n   let descriptionService = \" Diagnostic\";\r\n   return (\r\n     <Base>\r\n"
                },
                {
                    "date": 1711542568885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,12 +533,14 @@\n \r\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n-  constructor(props) {\r\n-    super(props);\r\n-    this.state = { data: \"some data here\" };\r\n-  };\r\n+// Composant Parent\r\n+class ParentComponent extends React.Component { \r\n+  handleChildEvent = (data) => {\r\n+  // Traiter les données du composant enfant\r\n+  console.log(data);\r\n+}\r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n   let descriptionService = \" Diagnostic\";\r\n   return (\r\n     <Base>\r\n"
                },
                {
                    "date": 1711542635304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,14 +533,14 @@\n \r\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n-// Composant Parent\r\n-class ParentComponent extends React.Component { \r\n+\r\n   handleChildEvent = (data) => {\r\n   // Traiter les données du composant enfant\r\n   console.log(data);\r\n-}\r\n+  }\r\n+  \r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n   let descriptionService = \" Diagnostic\";\r\n   return (\r\n     <Base>\r\n"
                },
                {
                    "date": 1711542653991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -534,13 +534,13 @@\n   if (universe === false) {\r\n     return <Loader />;\r\n   }\r\n \r\n-  handleChildEvent = (data) => {\r\n+  const handleChildEvent = (data) => {\r\n   // Traiter les données du composant enfant\r\n   console.log(data);\r\n   }\r\n-  \r\n+\r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n   let descriptionService = \" Diagnostic\";\r\n   return (\r\n     <Base>\r\n"
                },
                {
                    "date": 1711542782464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -754,8 +754,9 @@\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n                 <ListProduitsBonus\r\n+                  onEvent={this.handleChildEvent} \r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n"
                },
                {
                    "date": 1711542850143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -537,9 +537,9 @@\n \r\n   const handleChildEvent = (data) => {\r\n   // Traiter les données du composant enfant\r\n   console.log(data);\r\n-  }\r\n+  };\r\n \r\n   let labelService =\"Réparation/Remplacement Semelle\";\r\n   let descriptionService = \" Diagnostic\";\r\n   return (\r\n"
                },
                {
                    "date": 1711542901139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -754,9 +754,9 @@\n               )}\r\n \r\n               {isDisplayListeProduits && (\r\n                 <ListProduitsBonus\r\n-                  onEvent={this.handleChildEvent} \r\n+                  onEvent={handleChildEvent} \r\n                   data={services}\r\n                   perPage={perPage}\r\n                   setPerPage={setPerPage}\r\n                   pageIndex={pageIndex}\r\n"
                }
            ],
            "date": 1708421987424,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ListProductStyle } from \"../../assets/styles/frontGlobalStyle\";\r\nimport Select from \"../../components/ui-elements/select\";\r\nimport ProduitItem from \"../../components/front/produitItem\";\r\nimport Loader from \"../../components/loader\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nexport default function ArtListProducts({ data = [], ...props }) {\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const optionsPages = isDesktopOrLaptop\r\n    ? [\r\n        { value: 20, label: \"20\" },\r\n        { value: 40, label: \"40\" },\r\n        { value: 80, label: \"80\" },\r\n      ]\r\n    : [{ value: 8, label: \"8\" }];\r\n  const { slugIdUniverse } = useParams();\r\n  const [state, setState] = useState({\r\n    pageNbr: {\r\n      label: \"Nombre de résultats par page : \",\r\n      options: optionsPages,\r\n      value: props.perPage ? parseInt(props.perPage) : 20,\r\n      position: \"auto\",\r\n    },\r\n  });\r\n  const rowRenderservices = (row) => (\r\n    <ProduitItem key={row.id} row={row} slugIdUniverse={slugIdUniverse} />\r\n  );\r\n  const showData = () => {\r\n    if (data === false)\r\n      return (\r\n        <p className=\"loading-table\" style={{ textAlign: \"center\" }}>\r\n          Chargement...\r\n        </p>\r\n      );\r\n    if (data.length === 0)\r\n      return (\r\n        <h3\r\n          style={{\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            fontSize: \"22px\",\r\n            fontWeight: \"600\",\r\n            margin: \"40px 0\",\r\n          }}\r\n        >\r\n          Aucune donnée\r\n        </h3>\r\n      );\r\n\r\n    return data.map(rowRenderservices);\r\n  };\r\n\r\n  return (\r\n    <ListProductStyle>\r\n      {isDesktopOrLaptop && (\r\n        <h1 className=\"title-bloc-products\">\r\n          {props.totalItemsLength} service(s)\r\n        </h1>\r\n      )}\r\n      <Row style={props.isLoading ? { padding: \"50px 0\" } : null}>\r\n        {props.isLoading ? <Loader /> : showData()}\r\n      </Row>\r\n      {!props.isLoading && props.pagination && props.totalItemsLength > 0 ? (\r\n        <div className=\"paginations-bloc\">\r\n          {isDesktopOrLaptop && (\r\n            <div className=\"results-of-page\">\r\n              <Select\r\n                {...state.pageNbr}\r\n                onChange={(e) => {\r\n                  const cpState = { ...state };\r\n                  cpState.pageNbr.value = e.value;\r\n                  setState(cpState);\r\n                  props.setPerPage(e.value);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <ReactPaginate\r\n            previousLabel={\"<\"}\r\n            nextLabel={\">\"}\r\n            breakLabel={\"...\"}\r\n            pageCount={Math.ceil(props.totalItemsLength / props.perPage)}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={3}\r\n            onPageChange={(data) => {\r\n              props.setPageIndex(data.selected);\r\n            }}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"page-item\"}\r\n            activeLinkClassName={\"active disabled\"}\r\n            pageLinkClassName={\"page-link\"}\r\n            pageClassName={\"page-item\"}\r\n            breakClassName={\"page-item\"}\r\n            breakLinkClassName={\"page-link\"}\r\n            activeClassName={\"active disabled\"}\r\n            previousLinkClassName={\"page-link\"}\r\n            nextLinkClassName={\"page-link\"}\r\n            previousClassName={\"page-item\"}\r\n            nextClassName={\"page-item\"}\r\n            forcePage={props.pageIndex ? props.pageIndex : 0}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </ListProductStyle>\r\n  );\r\n}\r\n"
        }
    ]
}