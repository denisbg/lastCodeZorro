{
    "sourceFile": "src/views/front/artisanServicesListePrestations.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 37,
            "patches": [
                {
                    "date": 1717054762572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717153271941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1164,9 +1164,9 @@\n \r\n \r\n \r\n                           {isTabletOrMobile ? (\r\n-                            <Col style={{ width: '100%' }}>\r\n+                            <Col style={{ width: '50%' }}>\r\n                               <Select\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717153316493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1164,9 +1164,9 @@\n \r\n \r\n \r\n                           {isTabletOrMobile ? (\r\n-                            <Col style={{ width: '50%' }}>\r\n+                            <Col style={{ width: 100 }}>\r\n                               <Select\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717153324097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1164,9 +1164,9 @@\n \r\n \r\n \r\n                           {isTabletOrMobile ? (\r\n-                            <Col style={{ width: 100 }}>\r\n+                            <Col style={{ width: 10000 }}>\r\n                               <Select\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717153350275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1164,10 +1164,11 @@\n \r\n \r\n \r\n                           {isTabletOrMobile ? (\r\n-                            <Col style={{ width: 10000 }}>\r\n+                            <Col style={{ width: '100%' }}>\r\n                               <Select\r\n+                              style={{ width: '100%' }}\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n                                   cpState.deliveryModes.value = val.value;\r\n"
                },
                {
                    "date": 1717153379678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1166,9 +1166,9 @@\n \r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n-                              style={{ width: '100%' }}\r\n+                             \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n                                   cpState.deliveryModes.value = val.value;\r\n"
                },
                {
                    "date": 1717153882307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1175,11 +1175,11 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n-                            <Col style={{ width: '100%' }}>\r\n-                              <RadioButton\r\n-\r\n+                            <Col   style={{ width: 300 }}>\r\n+                              <Select\r\n+ style={{ width: 150 }}\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n                                   cpState.deliveryModes.value = val.value;\r\n"
                },
                {
                    "date": 1717160371473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1177,9 +1177,9 @@\n                               /></Col>\r\n                           ) : (\r\n                             <Col   style={{ width: 300 }}>\r\n                               <Select\r\n- style={{ width: 150 }}\r\n+\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n                                   cpState.deliveryModes.value = val.value;\r\n@@ -1477,9 +1477,9 @@\n                 setPerPage={setPerPage}\r\n                 pageIndex={pageIndex}\r\n                 setPageIndex={setPageIndex}\r\n                 totalItemsLength={totalServices}\r\n-                pagination={true}\r\n+                pagination={false}\r\n                 isLoading={isPending}\r\n                 handleParentEvent={handleParentEvent}\r\n               >\r\n               </ArtisanNavListePrestations>\r\n"
                },
                {
                    "date": 1717160692938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1133,9 +1133,9 @@\n                               }\r\n                             </div>\r\n                           </div>\r\n                           <div className=\"bloc-titre-fiche\" style={{ width: '30%' }}>\r\n-                            <p className=\"titre-proposition\">  Propositions du réparateur </p>\r\n+                            <p className=\"titre-proposition\">  Commentaires du réparateur </p>\r\n                             <p className=\"titre-precision\" style={{ color: '#373737', fontSize: 20, fontWeight: '400' }}>\r\n                               {/* Précision de prise en charge du devis: */}\r\n \r\n                               {benefit.typeService === \"devis\" && (\r\n"
                },
                {
                    "date": 1717162884587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1477,9 +1477,9 @@\n                 setPerPage={setPerPage}\r\n                 pageIndex={pageIndex}\r\n                 setPageIndex={setPageIndex}\r\n                 totalItemsLength={totalServices}\r\n-                pagination={false}\r\n+                pagination={false} \r\n                 isLoading={isPending}\r\n                 handleParentEvent={handleParentEvent}\r\n               >\r\n               </ArtisanNavListePrestations>\r\n"
                },
                {
                    "date": 1717487818383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -666,13 +666,20 @@\n \r\n             },\r\n           });\r\n \r\n-          setParamsUrlService(cpParamsUrlService);\r\n+                //const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=500&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+                const cpParamsUrlService = `categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+       \r\n+                console.log(\"DB1 11:07setParamsUrlService  \", cpParamsUrlService );\r\n+      \r\n+                setParamsUrlService(cpParamsUrlService);\r\n+                console.log(\"DB1 12:01 xor  `${endPoints.ANONYMOUS_SERVICES_SPECIAL_CATALOG}?\",cpParamsUrlService );\r\n+          \r\n \r\n           connector({\r\n             method: \"get\",\r\n-            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n+            url: `${endPoints.ANONYMOUS_SERVICES_SPECIAL_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n               let xServices = [];\r\n               let xPrestations = [];\r\n \r\n"
                },
                {
                    "date": 1717580258950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1046,9 +1046,9 @@\n                           </div>\r\n                           <p className=\"titre-proposition\">\r\n                             Proposition(s) du réparateur :\r\n                           </p>\r\n-                          {isTabletOrMobile || true ? (\r\n+                          {isTabletOrMobile ? (\r\n                             <Select\r\n                               {...state.deliveryModes}\r\n                               onChange={(val) => {\r\n                                 const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717580420161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1182,9 +1182,9 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n-                            <Col   style={{ width: 300 }}>\r\n+                            <Col   style={{ width: 400 }}>\r\n                               <Select\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n"
                },
                {
                    "date": 1717580473843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1182,10 +1182,11 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n-                            <Col   style={{ width: 400 }}>\r\n+                            <Col  >\r\n                               <Select\r\n+                              style={{ width: 400 }}\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717580667211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -517,8 +517,9 @@\n             if (options.length == 1) {\r\n               cpState.deliveryModes.value = options[0].value;\r\n             }\r\n             setState(cpState);\r\n+            console.log(\"ASLP 1:24 cpState.deliveryModes.options\",cpState.deliveryModes);\r\n           }\r\n           if (obj?.user?.id) {\r\n             getUserRepairmanBenefits(obj.user.id);\r\n           } else {\r\n"
                },
                {
                    "date": 1717595413491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -517,9 +517,9 @@\n             if (options.length == 1) {\r\n               cpState.deliveryModes.value = options[0].value;\r\n             }\r\n             setState(cpState);\r\n-            console.log(\"ASLP 1:24 cpState.deliveryModes.options\",cpState.deliveryModes);\r\n+            console.log(\"ASLP 1:24 Service cpState.deliveryModes.options\",cpState.deliveryModes);\r\n           }\r\n           if (obj?.user?.id) {\r\n             getUserRepairmanBenefits(obj.user.id);\r\n           } else {\r\n"
                },
                {
                    "date": 1717654638537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1169,10 +1169,10 @@\n \r\n                             </p>\r\n                           </div>\r\n \r\n+<Row>\r\n \r\n-\r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n                              \r\n@@ -1196,9 +1196,9 @@\n                                 }}\r\n                               />\r\n                             </Col>\r\n                           )}\r\n-\r\n+</Row>\r\n                         </div>\r\n                       </div>\r\n                     </Col>\r\n                   )}\r\n"
                },
                {
                    "date": 1717654697007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1169,9 +1169,9 @@\n \r\n                             </p>\r\n                           </div>\r\n \r\n-<Row>\r\n+<br></br>\r\n \r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n@@ -1196,9 +1196,9 @@\n                                 }}\r\n                               />\r\n                             </Col>\r\n                           )}\r\n-</Row>\r\n+\r\n                         </div>\r\n                       </div>\r\n                     </Col>\r\n                   )}\r\n"
                },
                {
                    "date": 1717654722097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1169,10 +1169,9 @@\n \r\n                             </p>\r\n                           </div>\r\n \r\n-<br></br>\r\n-\r\n+fffffffffffffffffff\r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n                              \r\n"
                },
                {
                    "date": 1717654775285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1168,10 +1168,10 @@\n \r\n \r\n                             </p>\r\n                           </div>\r\n-\r\n-fffffffffffffffffff\r\n+</Row>\r\n+<Row>\r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n                              \r\n"
                },
                {
                    "date": 1717654823050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1168,10 +1168,13 @@\n \r\n \r\n                             </p>\r\n                           </div>\r\n-</Row>\r\n-<Row>\r\n+\r\n+</div>\r\n+<div>\r\n+  dqsq\r\n+\r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n                              \r\n@@ -1195,9 +1198,9 @@\n                                 }}\r\n                               />\r\n                             </Col>\r\n                           )}\r\n-\r\n+</Row>\r\n                         </div>\r\n                       </div>\r\n                     </Col>\r\n                   )}\r\n"
                },
                {
                    "date": 1717654834425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1198,9 +1198,9 @@\n                                 }}\r\n                               />\r\n                             </Col>\r\n                           )}\r\n-</Row>\r\n+\r\n                         </div>\r\n                       </div>\r\n                     </Col>\r\n                   )}\r\n"
                },
                {
                    "date": 1717654867682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1140,9 +1140,9 @@\n                                   <br />{maxPrice}€ - {minPrice}€*</span>\r\n                               }\r\n                             </div>\r\n                           </div>\r\n-                          <div className=\"bloc-titre-fiche\" style={{ width: '30%' }}>\r\n+                          <div className=\"bloc-titre-fiche\" style={{ width: '100%' }}>\r\n                             <p className=\"titre-proposition\">  Commentaires du réparateur </p>\r\n                             <p className=\"titre-precision\" style={{ color: '#373737', fontSize: 20, fontWeight: '400' }}>\r\n                               {/* Précision de prise en charge du devis: */}\r\n \r\n"
                },
                {
                    "date": 1717654891811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1171,10 +1171,8 @@\n                           </div>\r\n \r\n </div>\r\n <div>\r\n-  dqsq\r\n-\r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n                              \r\n"
                },
                {
                    "date": 1717654911025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1183,9 +1183,9 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n-                            <Col  >\r\n+                            <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n                               style={{ width: 400 }}\r\n \r\n                                 {...state.deliveryModes}\r\n"
                },
                {
                    "date": 1717655076983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -517,9 +517,9 @@\n             if (options.length == 1) {\r\n               cpState.deliveryModes.value = options[0].value;\r\n             }\r\n             setState(cpState);\r\n-            console.log(\"ASLP 1:24 Service cpState.deliveryModes.options\",cpState.deliveryModes);\r\n+            console.log(\"ASLP 1:24 Service cpState.deliveryModes.options\", cpState.deliveryModes);\r\n           }\r\n           if (obj?.user?.id) {\r\n             getUserRepairmanBenefits(obj.user.id);\r\n           } else {\r\n@@ -667,17 +667,17 @@\n \r\n             },\r\n           });\r\n \r\n-                //const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=500&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-                const cpParamsUrlService = `categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n-       \r\n-                console.log(\"DB1 11:07setParamsUrlService  \", cpParamsUrlService );\r\n-      \r\n-                setParamsUrlService(cpParamsUrlService);\r\n-                console.log(\"DB1 12:01 xor  `${endPoints.ANONYMOUS_SERVICES_SPECIAL_CATALOG}?\",cpParamsUrlService );\r\n-          \r\n+          //const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=500&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n+          const cpParamsUrlService = `categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n \r\n+          console.log(\"DB1 11:07setParamsUrlService  \", cpParamsUrlService);\r\n+\r\n+          setParamsUrlService(cpParamsUrlService);\r\n+          console.log(\"DB1 12:01 xor  `${endPoints.ANONYMOUS_SERVICES_SPECIAL_CATALOG}?\", cpParamsUrlService);\r\n+\r\n+\r\n           connector({\r\n             method: \"get\",\r\n             url: `${endPoints.ANONYMOUS_SERVICES_SPECIAL_CATALOG}?${cpParamsUrlService}`,\r\n             success: (response) => {\r\n@@ -1105,9 +1105,9 @@\n                   )}\r\n                 </Row>\r\n                 <Row>\r\n                   {xserviceIsSelected && (\r\n-                    <Col    style={{overFlow: 'hidden',textOverflow: 'ellipsis'}}  >\r\n+                    <Col style={{ overFlow: 'hidden', textOverflow: 'ellipsis' }}  >\r\n                       <div style={{ color: '#89B03D', fontSize: 24, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', wordWrap: 'break-word' }}></div>\r\n                       <h1 className=\"titre-fiche-prestation\" style={{ color: '#89B03D', fontSize: 24 }} id=\"votre_commande\">\r\n                         Votre commande\r\n                       </h1>\r\n@@ -1169,14 +1169,15 @@\n \r\n                             </p>\r\n                           </div>\r\n \r\n-</div>\r\n-<div>\r\n+                        </div>\r\n+                      \r\n+                     <div>\r\n                           {isTabletOrMobile ? (\r\n                             <Col style={{ width: '100%' }}>\r\n                               <Select\r\n-                             \r\n+\r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n                                   cpState.deliveryModes.value = val.value;\r\n@@ -1185,9 +1186,9 @@\n                               /></Col>\r\n                           ) : (\r\n                             <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n-                              style={{ width: 400 }}\r\n+                                style={{ width: 400 }}\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n@@ -1486,9 +1487,9 @@\n                 setPerPage={setPerPage}\r\n                 pageIndex={pageIndex}\r\n                 setPageIndex={setPageIndex}\r\n                 totalItemsLength={totalServices}\r\n-                pagination={false} \r\n+                pagination={false}\r\n                 isLoading={isPending}\r\n                 handleParentEvent={handleParentEvent}\r\n               >\r\n               </ArtisanNavListePrestations>\r\n"
                },
                {
                    "date": 1717655103905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1186,9 +1186,9 @@\n                               /></Col>\r\n                           ) : (\r\n                             <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n-                                style={{ width: 400 }}\r\n+                                style={{ width: '100%' }}\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717655120567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1186,9 +1186,9 @@\n                               /></Col>\r\n                           ) : (\r\n                             <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n-                                style={{ width: '100%' }}\r\n+                                style={{ width: '500' }}\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717655146959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1173,9 +1173,9 @@\n                         </div>\r\n                       \r\n                      <div>\r\n                           {isTabletOrMobile ? (\r\n-                            <Col style={{ width: '100%' }}>\r\n+                            <Col style={{ width: '600' }}>\r\n                               <Select\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n@@ -1186,9 +1186,9 @@\n                               /></Col>\r\n                           ) : (\r\n                             <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n-                                style={{ width: '500' }}\r\n+                                style={{ width: 500 }}\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n                                   const cpState = { ...state };\r\n"
                },
                {
                    "date": 1717655155314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1173,9 +1173,9 @@\n                         </div>\r\n                       \r\n                      <div>\r\n                           {isTabletOrMobile ? (\r\n-                            <Col style={{ width: '600' }}>\r\n+                            <Col style={{ width: 500 }}>\r\n                               <Select\r\n \r\n                                 {...state.deliveryModes}\r\n                                 onChange={(val) => {\r\n"
                },
                {
                    "date": 1717655259866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1172,9 +1172,9 @@\n \r\n                         </div>\r\n                       \r\n                      <div>\r\n-                          {isTabletOrMobile ? (\r\n+                          {isTabletOrMobile && false ? (\r\n                             <Col style={{ width: 500 }}>\r\n                               <Select\r\n \r\n                                 {...state.deliveryModes}\r\n"
                },
                {
                    "date": 1717655384922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1172,9 +1172,9 @@\n \r\n                         </div>\r\n                       \r\n                      <div>\r\n-                          {isTabletOrMobile && false ? (\r\n+                          {isTabletOrMobile   ? (\r\n                             <Col style={{ width: 500 }}>\r\n                               <Select\r\n \r\n                                 {...state.deliveryModes}\r\n@@ -1196,8 +1196,19 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               />\r\n                             </Col>\r\n+                            <Col>\r\n+                             <RadioButton\r\n+                             {...state.deliveryModes}\r\n+                             onChange={(val) => {\r\n+                               const cpState = { ...state };\r\n+                               cpState.deliveryModes.value = val.value;\r\n+                               setState(cpState);\r\n+                             }}\r\n+\r\n+                           />\r\n+                           </Col>\r\n                           )}\r\n \r\n                         </div>\r\n                       </div>\r\n"
                },
                {
                    "date": 1717655478970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1184,8 +1184,9 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n+                            {/*\r\n                             <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n                                 style={{ width: 500 }}\r\n \r\n@@ -1195,22 +1196,22 @@\n                                   cpState.deliveryModes.value = val.value;\r\n                                   setState(cpState);\r\n                                 }}\r\n                               />\r\n+                              */}\r\n+                               <RadioButton\r\n+                      {...state.deliveryModes}\r\n+                      onChange={(val) => {\r\n+                        const cpState = { ...state };\r\n+                        cpState.deliveryModes.value = val.value;\r\n+                        setState(cpState);\r\n+                      }}\r\n+                    />\r\n                             </Col>\r\n-                            <Col>\r\n-                             <RadioButton\r\n-                             {...state.deliveryModes}\r\n-                             onChange={(val) => {\r\n-                               const cpState = { ...state };\r\n-                               cpState.deliveryModes.value = val.value;\r\n-                               setState(cpState);\r\n-                             }}\r\n-\r\n-                           />\r\n-                           </Col>\r\n+                            \r\n                           )}\r\n \r\n+\r\n                         </div>\r\n                       </div>\r\n                     </Col>\r\n                   )}\r\n"
                },
                {
                    "date": 1717655496475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1184,10 +1184,11 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n+                            \r\n+                            <Col style={{ width: '100%' }}  >\r\n                             {/*\r\n-                            <Col style={{ width: '100%' }}  >\r\n                               <Select\r\n                                 style={{ width: 500 }}\r\n \r\n                                 {...state.deliveryModes}\r\n"
                },
                {
                    "date": 1717656945630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1170,11 +1170,11 @@\n                             </p>\r\n                           </div>\r\n \r\n                         </div>\r\n-                      \r\n-                     <div>\r\n-                          {isTabletOrMobile   ? (\r\n+\r\n+                        <div>\r\n+                          {isTabletOrMobile ? (\r\n                             <Col style={{ width: 500 }}>\r\n                               <Select\r\n \r\n                                 {...state.deliveryModes}\r\n@@ -1184,11 +1184,11 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               /></Col>\r\n                           ) : (\r\n-                            \r\n+\r\n                             <Col style={{ width: '100%' }}  >\r\n-                            {/*\r\n+                              {/*\r\n                               <Select\r\n                                 style={{ width: 500 }}\r\n \r\n                                 {...state.deliveryModes}\r\n@@ -1198,18 +1198,18 @@\n                                   setState(cpState);\r\n                                 }}\r\n                               />\r\n                               */}\r\n-                               <RadioButton\r\n-                      {...state.deliveryModes}\r\n-                      onChange={(val) => {\r\n-                        const cpState = { ...state };\r\n-                        cpState.deliveryModes.value = val.value;\r\n-                        setState(cpState);\r\n-                      }}\r\n-                    />\r\n+                              <RadioButton\r\n+                                {...state.deliveryModes}\r\n+                                onChange={(val) => {\r\n+                                  const cpState = { ...state };\r\n+                                  cpState.deliveryModes.value = val.value;\r\n+                                  setState(cpState);\r\n+                                }}\r\n+                              />\r\n                             </Col>\r\n-                            \r\n+\r\n                           )}\r\n \r\n \r\n                         </div>\r\n"
                },
                {
                    "date": 1718012692883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1293,14 +1293,22 @@\n \r\n               </Container>\r\n \r\n               {isDesktopOrLaptop && (\r\n-                <Breadcrumb\r\n-                  crumbs={[\r\n-                    { name: \"Accueil\", path: \"/\" },\r\n-                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n-                  ]}\r\n-                />\r\n+              <Link\r\n+              to={'/'}\r\n+              style={{ fontSize: '14px' ,color: \"rgb(0, 0, 0)\" }}\r\n+              >\r\n+              \r\n+             Accueil \r\n+              </Link>\r\n+              &nbsp; >  &nbsp;\r\n+              <Link\r\n+              to={'/univers/' +slugIdUniverse}\r\n+              style={{ fontSize: '14px' ,color: \"rgb(0, 0, 0)\" }}\r\n+             >\r\n+            {universe.name}\r\n+          </Link>\r\n               )}\r\n \r\n               <Container className=\"col-md-8 col-sm-3 col-lg-8\" style={{ marginTop: 0 }}>\r\n                 <div style={{\r\n"
                },
                {
                    "date": 1718012731343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1292,9 +1292,9 @@\n \r\n \r\n               </Container>\r\n \r\n-              {isDesktopOrLaptop && (\r\n+              {isDesktopOrLaptop && (<Container>\r\n               <Link\r\n               to={'/'}\r\n               style={{ fontSize: '14px' ,color: \"rgb(0, 0, 0)\" }}\r\n               >\r\n@@ -1307,10 +1307,11 @@\n               style={{ fontSize: '14px' ,color: \"rgb(0, 0, 0)\" }}\r\n              >\r\n             {universe.name}\r\n           </Link>\r\n-              )}\r\n-\r\n+              </Container>\r\n+)}\r\n+              \r\n               <Container className=\"col-md-8 col-sm-3 col-lg-8\" style={{ marginTop: 0 }}>\r\n                 <div style={{\r\n                   textAlign: 'center', marginBottom: 25, paddingLeft: 20, color: '#465a61', lineHeight: 2\r\n                 }}><div style={{ color: '#4E5860', fontSize: 32, fontFamily: 'Poppins', fontWeight: '700', wordWrap: 'break-word' }}>Découvrez mes prestations </div></div>\r\n"
                },
                {
                    "date": 1718095001470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n   const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n   const [xserviceIsSelected, setXServiceIsSelected] = useState(true);\r\n   const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n   const [benefits, setBenefits] = useState([]);\r\n-  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n+  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 013px)\" });\r\n   const isDesktopOrLaptop = useMediaQuery({\r\n     query: \"(min-width: 994px)\",\r\n   });\r\n   const openLightbox = (photo, index) => {\r\n@@ -1293,25 +1293,25 @@\n \r\n               </Container>\r\n \r\n               {isDesktopOrLaptop && (<Container>\r\n-              <Link\r\n-              to={'/'}\r\n-              style={{ fontSize: '14px' ,color: \"rgb(0, 0, 0)\" }}\r\n-              >\r\n-              \r\n-             Accueil \r\n-              </Link>\r\n+                <Link\r\n+                  to={'/'}\r\n+                  style={{ fontSize: '14px', color: \"rgb(0, 0, 0)\" }}\r\n+                >\r\n+\r\n+                  Accueil\r\n+                </Link>\r\n               &nbsp; >  &nbsp;\r\n-              <Link\r\n-              to={'/univers/' +slugIdUniverse}\r\n-              style={{ fontSize: '14px' ,color: \"rgb(0, 0, 0)\" }}\r\n-             >\r\n-            {universe.name}\r\n-          </Link>\r\n+                <Link\r\n+                  to={'/univers/' + slugIdUniverse}\r\n+                  style={{ fontSize: '14px', color: \"rgb(0, 0, 0)\" }}\r\n+                >\r\n+                  {universe.name}\r\n+                </Link>\r\n               </Container>\r\n-)}\r\n-              \r\n+              )}\r\n+\r\n               <Container className=\"col-md-8 col-sm-3 col-lg-8\" style={{ marginTop: 0 }}>\r\n                 <div style={{\r\n                   textAlign: 'center', marginBottom: 25, paddingLeft: 20, color: '#465a61', lineHeight: 2\r\n                 }}><div style={{ color: '#4E5860', fontSize: 32, fontFamily: 'Poppins', fontWeight: '700', wordWrap: 'break-word' }}>Découvrez mes prestations </div></div>\r\n"
                }
            ],
            "date": 1717054762572,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport imgMaintenence from \"../../assets/images/img-page-maintenace.svg\";\r\nimport ArtisanNavListePrestations from \"../../components/front/artisanNavListePrestations\";\r\nimport { ListFichePrestation } from \"../../assets/styles/frontGlobalStyle\";\r\nimport BonusReparation from \"./ficheUniversParts/bonusreparation\";\r\nimport ListePrestationFiche from \"../../components/front/listePrestationFiche\";\r\nimport { ButtonDef } from \"../../components/ui\";\r\nimport RadioButton from \"../../components/ui-elements/radioButton\";\r\nimport {\r\n  BackStyle,\r\n  PropositionStyle,\r\n  ContentFichePrestation,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport {\r\n  BlocFilterStyle,\r\n  ContentPageStyle,\r\n} from \"../../assets/styles/frontGlobalStyle\";\r\nimport { SearchIcon } from \"../../assets/styles/icons\";\r\nimport SelectCat from \"../../components/categories/selectCat\";\r\nimport FoundPage from \"../../components/foundPage\";\r\nimport BannerRepairMan from \"../../components/front/bannerRepairMan\";\r\nimport BannerYourCommand from \"../../components/front/bannerYourCommand\";\r\nimport RatingBox from \"../../components/ui-elements/ratingBox\";\r\nimport * as vars from \"../../vars\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Loader from \"../../components/loader\";\r\nimport Breadcrumb from \"../../components/ui-elements/breadcrumb\";\r\nimport InputAutoComplete from \"../../components/ui-elements/inputAutoComplete\";\r\nimport InputSearchKeyword from \"../../components/ui-elements/inputSearchKeyword\";\r\nimport Select from \"../../components/ui-elements/select\";\r\nimport endPoints from \"../../config/endPoints\";\r\nimport ROUTES from \"../../config/routes\";\r\nimport connector from \"../../connector\";\r\nimport { clearErrors } from \"../../helper/form\";\r\nimport Base from \"../../theme/front/base\";\r\nimport FicheUnivers from \"./ficheUnivers\";\r\nimport ArtisanPrestationItemBonus from \"../../components/front/artisanPrestationItemBonus\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\nimport {\r\n  getMsgError,\r\n  getPathImage,\r\n  getUniqueListBy,\r\n  parentCategories,\r\n  sortObjects,\r\n} from \"../../helper/functions\";\r\nimport {\r\n  AdresseIcon,\r\n  BackIcon,\r\n  FacebookColorIcon,\r\n  InstagramColorIcon,\r\n  LinkedinColorIcon,\r\n  TwitterColorIcon,\r\n  WebIcon,\r\n  YoutubeColorIcon,\r\n} from \"../../assets/styles/icons\";\r\n\r\nimport GalerieSlide from \"../../components/galerieSlide\";\r\nimport { max } from \"moment\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function ArtisanListePrestations() {\r\n  const [stateImage, setStateImage] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const auth = useSelector((store) => store.auth);\r\n  const [dataGallery, setDataGallery] = useState([]);\r\n  const isDisplayFilter = true;\r\n  const [isDisplayListeProduits, setDisplayListeProduits] = useState(true);\r\n  const [xserviceIsSelected, setXServiceIsSelected] = useState(true);\r\n  const [isDisplayPrestationsArtisan, setDisplayPrestationsArtisan] = useState(false);\r\n  const [benefits, setBenefits] = useState([]);\r\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 593px)\" });\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: \"(min-width: 994px)\",\r\n  });\r\n  const openLightbox = (photo, index) => {\r\n    setCurrentImage(index);\r\n    setStateImage(true);\r\n  };\r\n\r\n  const [toggleFilter, setToggleFilter] = useState(false);\r\n  const history = useHistory();\r\n  const [defaultKeywordId] = useState(localStorage.getItem(\"keywordId\"));\r\n  const [defaultKeywordBy] = useState(localStorage.getItem(\"keywordBy\"));\r\n  const [defaultKeywordVal] = useState(localStorage.getItem(\"keywordVal\"));\r\n  const [defaultCategory, setDefaultCategory] = useState(\r\n    parseInt(localStorage.getItem(\"defaultCategory\"))\r\n  );\r\n  const [defaultSubCategory, setDefaultSubCategory] = useState(\r\n    JSON.parse(localStorage.getItem(\"defaultSubCategory\") || null)\r\n  );\r\n  const [defaultCodePostal] = useState(localStorage.getItem(\"codePostal\"));\r\n  const [defaultLatitude] = useState(\r\n    parseFloat(localStorage.getItem(\"latitude\"))\r\n  );\r\n  const [defaultLongitude] = useState(\r\n    parseFloat(localStorage.getItem(\"longitude\"))\r\n  );\r\n\r\n  const perPageDesMob = isDesktopOrLaptop ? 20 : 8;\r\n  const { slugIdUniverse, slugIdService, slugIdBenefit } = useParams();\r\n  const { slugIdRepairman } = useParams();\r\n  const [fromServiceClick, setServiceClicked] = useState([]);\r\n  const [currentBenefit, setCurrentBenefit] = useState(false);\r\n\r\n  const [fromServiceClickCompleteData, setCompletDataClicked] = useState([]);\r\n\r\n  const [placeIsSelected, setPlaceIsSelected] = useState(false);\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isAlreadySet, setIsAlreadySet] = useState(false);\r\n\r\n  const [isPendingLatLng, setIsPendingLatLng] = useState(true);\r\n  const [checkAuto, setCheckAuto] = useState(false);\r\n  const [repairmanIsPending, setRepairmanIsPending] = useState(false);\r\n  const [repairMan, setRepairMan] = useState([]);\r\n  const [repairManBenefits, setRepairManBenefits] = useState([]);\r\n  const [universe, setUniverse] = useState([]);\r\n  const [benefit, setBenefit] = useState(false);\r\n  const [perPage, setPerPage] = useState(perPageDesMob);\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [services, setServices] = useState([]);\r\n  const [xServices, setXServices] = useState([]);\r\n  const [xPrestations, setXPrestations] = useState([]);\r\n  const [deliveryModeTypes, setDeliveryModeTypes] = useState([]);\r\n  const [universRepairman, setUniversRepairman] = useState([]);\r\n\r\n\r\n  const closeLightbox = () => {\r\n    setStateImage(false);\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    deliveryModes: {\r\n      label: \"Modes de délivrance\",\r\n      placeholder: \"Modes de délivrance\",\r\n      id: \"delivrance_radio\",\r\n      options: [],\r\n      value: \"\",\r\n      name: \"deliveryModes\",\r\n      typeService: null,\r\n    },\r\n  });\r\n  const getDeliveryModeTypes = () => {\r\n    connector({\r\n      method: \"get\",\r\n      url: endPoints.DELIVERY_MODE_TYPES,\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"hydra:member\"] || [];\r\n        console.log(\"ALP 0.99x delivery\", arrayObj);\r\n        let options = [];\r\n        for (let i = 0; i < arrayObj.length; i++) {\r\n          options.push({ value: arrayObj[i].id, label: arrayObj[i].name });\r\n        }\r\n        setDeliveryModeTypes(options);\r\n\r\n      },\r\n      catch: (error) => {\r\n        // console.log(error);\r\n      },\r\n    });\r\n  };\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [totalServices, setTotalServices] = useState(0);\r\n  const [paramsUrlService, setParamsUrlService] = useState(\"\");\r\n  const universeSelector = useSelector((state) => state.universe);\r\n  const [filter, setFilter] = useState({\r\n    universe: {\r\n      label: \"Univers\",\r\n      placeholder: \"Choisir dans la liste\",\r\n      options: [{ label: \"Tous les univers\", value: \"\", category: [] }],\r\n      value: \"\",\r\n      category: [],\r\n      nameCategory: \"\",\r\n      nameSubCategory: \"\",\r\n      requireSearchSubCategory: false,\r\n      isSearchable: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner un univers dans la liste pour lancer une recherche\",\r\n    },\r\n    deliveryModeTypes: {\r\n      label: \"Mode de délivrance\",\r\n      name: \"deliveryModeTypes\",\r\n      placeholder: \"Tous\",\r\n      options: [],\r\n      value: [],\r\n      hideOptions: true,\r\n    },\r\n    category: {\r\n      label: \"Catégorie(s)\",\r\n      placeholder: \"Choisir dans la liste\",\r\n      options: [],\r\n      value: null,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner une catégorie dans la liste pour lancer une recherche\",\r\n    },\r\n    subCategory: {\r\n      label: \"Sous-catégorie(s)\",\r\n      placeholder: \"Affiner votre recherche\",\r\n      options: [],\r\n      value: null,\r\n      hideOptions: true,\r\n      error: false,\r\n      infoBull: false,\r\n      textInfoBulle:\r\n        \"Veuillez sélectionner une sous-catégorie dans la liste pour lancer une recherche\",\r\n    },\r\n    keyword: {\r\n      label: \"Réparer quoi\",\r\n      type: \"text\",\r\n      name: \"keyword\",\r\n      placeholder: \"Rentrer un mot clé\",\r\n      value: defaultKeywordVal ? defaultKeywordVal : \"\",\r\n      options: [],\r\n      active:\r\n        defaultKeywordBy && defaultKeywordId\r\n          ? { id: defaultKeywordId, by: defaultKeywordBy }\r\n          : {},\r\n      error: false,\r\n      required: false,\r\n    },\r\n  });\r\n  const [filterMap, setFilterMap] = useState({\r\n    codePostal: {\r\n      name: \"codePostal\",\r\n      type: \"text\",\r\n      label: \"Où\",\r\n      placeholder: \"Saisir un code postal\",\r\n      value:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultCodePostal\r\n          : \"\",\r\n      latitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLatitude\r\n          : null,\r\n      longitude:\r\n        defaultCodePostal && defaultLatitude && defaultLongitude\r\n          ? defaultLongitude\r\n          : null,\r\n      error: false,\r\n      required: true,\r\n      infoBulle: false,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (toggleFilter) {\r\n      document.body.classList.add(\"menu-is-show\");\r\n    } else {\r\n      document.body.classList.remove(\"menu-is-show\");\r\n    }\r\n  }, [toggleFilter]);\r\n\r\n  useEffect(() => {\r\n    if (universeSelector.allUniverses) {\r\n      let cpFilter = { ...filter };\r\n      cpFilter.universe.options = [];\r\n      for (let i = 0; i < universeSelector.allUniverses.length; i++) {\r\n        let o = universeSelector.allUniverses[i];\r\n        cpFilter.universe.options.push({\r\n          label: o.name,\r\n          value: o.id,\r\n          slug: o.slug,\r\n        });\r\n      }\r\n      cpFilter.universe.value = parseInt(slugIdUniverse.split(\"-\").pop());\r\n      setFilter(cpFilter);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [universeSelector, slugIdUniverse]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"codePostal\")) {\r\n      getUniverse();\r\n    } else {\r\n      localStorage.setItem(\"errorcCodePostal\", \"codePostal non define\");\r\n      history.push(ROUTES.HOME.url);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [slugIdUniverse]);\r\n\r\n  useEffect(() => {\r\n\r\n    document.addEventListener(\"Universe\", function (event) {\r\n      if (event?.detail?.url && event?.detail?.id) {\r\n        const cpFilter = { ...filter };\r\n        cpFilter.keyword.value = \"\";\r\n        cpFilter.keyword.active = { id: \"\", by: \"\", index: 0 };\r\n        cpFilter.keyword.options = [];\r\n        localStorage.setItem(\"keywordVal\", \"\");\r\n        localStorage.setItem(\"keywordBy\", \"\");\r\n        localStorage.setItem(\"keywordId\", \"\");\r\n        localStorage.setItem(\"defaultCategory\", \"\");\r\n        localStorage.setItem(\"defaultSubCategory\", \"\");\r\n        setDefaultCategory(null);\r\n        setDefaultSubCategory(null);\r\n        setFilter(cpFilter);\r\n\r\n      } else {\r\n        console.log(\"error event params.\");\r\n      }\r\n    });\r\n\r\n    let serviceId = slugIdService?.split('-').pop();\r\n    let repairmanId = slugIdRepairman?.split('-').pop();\r\n\r\n    if (typeof serviceId == 'undefined') {\r\n      setXServiceIsSelected(false);\r\n\r\n    }\r\n    else {\r\n      console.log(\"ALP 0.01 getBenefitIdFromService\", serviceId, repairmanId);\r\n\r\n      if (serviceId && !isAlreadySet) {\r\n        getBenefitIdFromService(serviceId, repairmanId);\r\n        console.log(\"ALP 0.02 getBenefitIdFromService\", serviceId, repairmanId);\r\n        setIsAlreadySet(true);\r\n\r\n      }\r\n    }\r\n  }, []);\r\n\r\n\r\n  function getBenefitIdFromService(serviceId, repairmanId) {\r\n    setRepairmanIsPending(true);\r\n    getUserRepairmanBenefits(repairmanId);\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (repairmanIsPending) {\r\n      //console.log(\"Just wait\");\r\n    }\r\n    else {\r\n      let serviceId = slugIdService?.split('-').pop();\r\n      console.log(\"looking fir slug repairman servuce\", repairManBenefits, serviceId);\r\n      let zfound = false;\r\n\r\n      Object.entries(repairManBenefits).forEach(entry => {\r\n        const [key, benefit] = entry;\r\n        //console.log(\"looking detail SEARCH and FOUND benefit servuce\", benefit?.service?.id,\"===\", serviceId);\r\n        if ((benefit?.service?.id == serviceId) && (!zfound)) {\r\n          zfound = true;\r\n\r\n          //console.log(\"looking detail FOUND service\", benefit?.service, key, serviceId);\r\n          getBenefit(benefit.id);\r\n          let data = [];\r\n          data['id'] = serviceId;\r\n          data['slug'] = \"service\";\r\n          data['benefit_to_display'] = benefit.id;\r\n          setServiceClicked(data);\r\n          //let xSlugIdService = fromServiceClick['slug'] + \"-\" + fromServiceClick['id'];\r\n          //let xSlugIdBenefit = 'prestations-' + fromServiceClick['benefit_to_display'];\r\n        }\r\n      });\r\n\r\n      setRepairmanIsPending(false);\r\n\r\n    }\r\n\r\n  }, [repairmanIsPending]);\r\n\r\n\r\n\r\n\r\n\r\n  const getUserRepairmanBenefits = (id) => {\r\n    console.log(\"ALP STEP 0.4 repairmanbenefit loading.. \");\r\n    connector({\r\n      method: \"get\",\r\n      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"benefits\"] || [];\r\n\r\n        setRepairManBenefits(arrayObj);\r\n        //console.log(\"ALP STEP 0.5 servuce repairmanbenefit is loaded.. \", arrayObj);\r\n        //console.log(\"ALP STEP 0.6 repairman id servuce\", repairMan);\r\n        //console.log(\"ALP STEP 0.7 repairman benefit servuce\", repairManBenefits);\r\n\r\n        setRepairmanIsPending(false);\r\n      },\r\n      catch: (error) => {\r\n        setRepairmanIsPending(false);\r\n        console.log(\"ALP STEP 0.99 Error.. \", error);\r\n\r\n      },\r\n    });\r\n  };\r\n\r\n  const getRepairMan = (repairmanId) => {\r\n    setRepairmanIsPending(true);\r\n    console.log(\"ALP STEP 0.1 repairman is loading.. \");\r\n    connector({\r\n      method: \"get\",\r\n      url: `${endPoints.USERS_REPAIRMAN_PUBLIC}?order[enterprise]=asc&id=` + repairmanId,\r\n      data: {},\r\n      success: (response) => {\r\n        const arrayObj = response.data[\"hydra:member\"] || [];\r\n\r\n        setRepairMan(arrayObj);\r\n\r\n        if (arrayObj[0].achievements && arrayObj[0].achievements.length) {\r\n\r\n          let dataGallery = [];\r\n          for (let i = 0; i < arrayObj[0].achievements.length; i++) {\r\n            dataGallery.push({\r\n              source: getPathImage(arrayObj[0].achievements[i]),\r\n            });\r\n          }\r\n          setDataGallery(dataGallery);\r\n\r\n        }\r\n        getUserRepairmanBenefits(repairmanId);\r\n        getUserRepairmanBenefitsUniverses(repairmanId);\r\n\r\n\r\n      },\r\n\r\n      catch: (error) => {\r\n        setRepairmanIsPending(false);\r\n        console.log(error);\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (universe && !isPendingLatLng) {\r\n      getServices(true, null);\r\n\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isPendingLatLng, pageIndex, perPage]);\r\n  const [currentRepairmanId, setCurrentRepairmanId] = useState(0);\r\n  useEffect(() => {\r\n    const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n    if (currentRepairmanId !== repairmanId) {\r\n      // affiche la banner du repairman\r\n      getRepairMan(repairmanId);\r\n    }\r\n    else\r\n      setCurrentRepairmanId(repairmanId);\r\n\r\n    if (slugIdService) {\r\n      const serviceId = parseInt(slugIdService.split(\"-\").pop());\r\n      //console.log(\"ALP 1:022 Service Id\", serviceId);\r\n      // Traiter les données du composant enfant\r\n      const data = [];\r\n      data['benefit_to_display'] = serviceId;\r\n      //setServiceClicked(data);\r\n    }\r\n  }, []);\r\n\r\n  const getBenefit = (id) => {\r\n    //const id = slugIdBenefit.split(\"-\").pop();\r\n    if (id) {\r\n      setIsPending(true);\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_BENEFIT}/${id}/details?${defaultLatitude && defaultLongitude\r\n          ? `latitude=${defaultLatitude}&longitude=${defaultLongitude}`\r\n          : \"\"\r\n          }`,\r\n        success: (response) => {\r\n\r\n          const obj = response.data || {};\r\n          setBenefit(response.data || {});\r\n          //console.log(\"ALP STEP 0.3  getBenefit\", response.data);\r\n          if (obj?.user?.achievements && obj.user.achievements.length) {\r\n            let dataGallery = [];\r\n            for (let i = 0; i < obj.user.achievements.length; i++) {\r\n              dataGallery.push({\r\n                source: getPathImage(obj.user.achievements[i]),\r\n              });\r\n            }\r\n            setDataGallery(dataGallery);\r\n          }\r\n          if (obj?.deliveryModes && obj.deliveryModes.length) {\r\n            let cpState = { ...state };\r\n            let options = [];\r\n            for (let i = 0; i < obj.deliveryModes.length; i++) {\r\n              const row = obj.deliveryModes[i];\r\n              options.push({\r\n                value: row.id,\r\n                checked: false,\r\n                label: row?.deliveryModeType?.name,\r\n                row: obj.typeService === \"forfait\" ? row : false,\r\n                id: `delivrance_checkbox_${row.id}`,\r\n              });\r\n            }\r\n            cpState.deliveryModes.options = options;\r\n            cpState.deliveryModes.typeService = obj.typeService;\r\n            if (options.length == 1) {\r\n              cpState.deliveryModes.value = options[0].value;\r\n            }\r\n            setState(cpState);\r\n          }\r\n          if (obj?.user?.id) {\r\n            getUserRepairmanBenefits(obj.user.id);\r\n          } else {\r\n            setIsPending(false);\r\n          }\r\n        },\r\n        catch: (error) => {\r\n          setIsPending(false);\r\n          NotificationManager.error(getMsgError(error), \"\");\r\n        },\r\n      });\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getUserRepairmanBenefitsUniverses = (id) => {\r\n    connector({\r\n      method: \"get\",\r\n      url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${id}/benefits`,\r\n      success: (response) => {\r\n        if (response.data?.benefits) {\r\n          let subCategories = [];\r\n          response.data.benefits.map((benefit) => {\r\n            if (benefit?.service?.categories) {\r\n              subCategories = [...subCategories, ...benefit.service.categories];\r\n            }\r\n          });\r\n          const cpCategories = parentCategories(subCategories);\r\n          setCategories(cpCategories);\r\n          if (cpCategories.length > 0) {\r\n            let cpUniversRepairman = [];\r\n            cpCategories.map((cat) => {\r\n              if (cat?.universe) {\r\n                cpUniversRepairman.push({\r\n                  id: cat.universe.id,\r\n                  name: cat.universe.name,\r\n                  slug: cat.universe.slug,\r\n                  position: cat.universe.position,\r\n                });\r\n              }\r\n            });\r\n            setUniversRepairman(\r\n              sortObjects(\r\n                getUniqueListBy(cpUniversRepairman, \"id\"),\r\n                \"position\",\r\n                \"asc\"\r\n              )\r\n            );\r\n          }\r\n        }\r\n        setIsPending(false);\r\n      },\r\n      catch: (error) => {\r\n        setIsPending(false);\r\n        NotificationManager.error(getMsgError(error), \"\");\r\n      },\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const checkClient = () => {\r\n\r\n    if (!state.deliveryModes.value) {\r\n      NotificationManager.error(\"Veuillez choisir un mode de délivrance.\", \"\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (auth?.user && auth?.roles) {\r\n      if (auth.roles.includes(vars.ROLES.ROLE_CLIENT)) {\r\n\r\n\r\n        let xSlugIdService = fromServiceClick['slug'] + \"-\" + fromServiceClick['id'];\r\n        let xSlugIdBenefit = 'prestations-' + fromServiceClick['benefit_to_display'];\r\n\r\n        history.push(\r\n          `/univers/${slugIdUniverse}/${xSlugIdService}/${xSlugIdBenefit}/demande/${state.deliveryModes.value}`\r\n        );\r\n      } else if (auth.roles.includes(vars.ROLES.ROLE_REPAIRMAN)) {\r\n        NotificationManager.error(\r\n          \"Veuillez créer un compte client, vous ne pouvez pas passer une commande en tant que réparateur\",\r\n          \"\"\r\n        );\r\n      } else if (auth.roles.includes(vars.ROLES.ROLE_ADMIN)) {\r\n        NotificationManager.error(\r\n          \"Veuillez créer un compte client, vous ne pouvez pas passer une commande en tant que admin\",\r\n          \"\"\r\n        );\r\n      }\r\n    } else {\r\n      setCheckAuto(true);\r\n      document.dispatchEvent(\r\n        new CustomEvent(\"eventHeader\", { detail: \"openModalClient\" })\r\n      );\r\n    }\r\n  };\r\n  const getServices = (refresh = true, index = null) => {\r\n    index = index != null ? index : pageIndex;\r\n    setPageIndex(index);\r\n\r\n    // if (!placeIsSelected) { msgErrors({ codePostal: true, }); return; }\r\n\r\n    if (!isPending || refresh) {\r\n      setIsPending(true);\r\n      setFilter(clearErrors(filter));\r\n      setFilterMap(clearErrors(filterMap));\r\n\r\n      if (refresh || (filterMap.codePostal.latitude && filterMap.codePostal.value)) {\r\n        let condition = \"\";\r\n        if (filter.category.value) {\r\n          condition += `&categories.parent.id=${filter.category.value}`;\r\n        }\r\n        if (filter.subCategory.value && filter.subCategory.value.length) {\r\n          for (let i = 0; i < filter.subCategory.value.length; i++) {\r\n            condition += `&categories.id[]=${filter.subCategory.value[i].value}`;\r\n          }\r\n        }\r\n        if (filterMap.codePostal.latitude && filterMap.codePostal.longitude) {\r\n          condition += `&latitude=${filterMap.codePostal.latitude}&longitude=${filterMap.codePostal.longitude}`;\r\n        }\r\n        const parent_univ_id = slugIdUniverse.split(\"-\").pop();\r\n        //perpage\r\n        const cpParamsUrlService = `page=${parseInt(index) + 1}&itemsPerPage=1000&categories.parent.universe.id=${parent_univ_id}${condition}`;\r\n        const repairmanId = parseInt(slugIdRepairman.split(\"-\").pop());\r\n        let repairman = [];\r\n        let repairmanBenefit = [];\r\n        if (refresh || cpParamsUrlService !== paramsUrlService) {\r\n\r\n\r\n          connector({\r\n            method: \"get\",\r\n            url: `${endPoints.ANONYMOUS_USER_REPAIRMAN}/${repairmanId}/benefits`,\r\n            success: (response) => {\r\n              repairmanBenefit = response.data[\"benefits\"] || [];\r\n\r\n\r\n\r\n            },\r\n            catch: (error) => {\r\n              console.log(\"ALP STEP 1.02 Error.. \", error);\r\n\r\n            },\r\n          });\r\n\r\n          setParamsUrlService(cpParamsUrlService);\r\n\r\n          connector({\r\n            method: \"get\",\r\n            url: `${endPoints.ANONYMOUS_SERVICES_CATALOG}?${cpParamsUrlService}`,\r\n            success: (response) => {\r\n              let xServices = [];\r\n              let xPrestations = [];\r\n\r\n              setServices(response.data[\"hydra:member\"] || []);\r\n              setTotalServices(response.data[\"hydra:totalItems\"] || 0);\r\n\r\n              let xi = 0;\r\n              // Lecture des services et extraction de ceux pour lequels une prestation\r\n              // de l'artisan existe OK\r\n              Object.entries(response.data[\"hydra:member\"]).forEach(entry => {\r\n                //service 130 Talons escarpins\r\n                const [key, service] = entry;\r\n\r\n                //console.log(' ALP STEP 1.151.01 : Service a analyser:', service);\r\n                // le but est de voir si l'artisan est dans la table benefit(propose ses prestations pour ce service)\r\n                Object.entries(service).forEach(entry => {\r\n\r\n\r\n                  const [key, prestations] = entry;\r\n                  if (key === 'universe') {\r\n                    //console.log(\" ALP STEP 1.151.0101 service key universe\", prestations);\r\n                  }\r\n                  if (key === 'benefits') {\r\n                    //console.log('ALP STEP 1.151.1 STEP prestations rattachées a ce service:', prestations);\r\n                    Object.entries(prestations).forEach(entry => {\r\n                      const [key, prestation] = entry;\r\n                      // console.log('ALP STEP 1.151.2 STEP la prestation', key, prestation);\r\n                      //console.log('ALP STEP 1.151.3 looking for prestation repairman in his benefit id', prestation[\"id\"]);\r\n                      //console.log('ALP STEP 1.151.4 looking for prestation repairmanBenefit', repairmanBenefit);\r\n                      Object.entries(repairmanBenefit).forEach(entry => {\r\n                        const [key, value] = entry;\r\n                        if (value['id'] === prestation['id']) {\r\n\r\n                          // console.log(\"ALP STEP 1.151.8B looking for service benefits\", prestation['id']);\r\n                          // console.log(\"ALP STEP 1.151.8B +++++++++++++++++++++++++++++++++++++++++++++++++++++++++\", value['id']);\r\n                          // trouver le complement d'informations sur la prestations non trouvé par ailleurs\r\n                          //\r\n                          //value = prestation;\r\n                          //console.log('ALP STEP 1.151.8 id repairman is found ***Benefit detail',benefit);\r\n                          service['benefit_to_display'] = value['id'];\r\n                          //setBenefit(value['id']); COORECTION BUG AFFICHAGE\r\n\r\n                          xServices.push(service);\r\n                          xPrestations.push(value);\r\n                          xi++;\r\n\r\n                          //getBenefit(value['id']); COORECTION BUG AFFICHAGE\r\n                          return false;\r\n                        }\r\n\r\n                      });\r\n\r\n                      //console.log('ALP STEP 1.175 STEP prestations artisan', repairmanBenefit);\r\n\r\n                    });\r\n                  }\r\n                });\r\n\r\n\r\n              });\r\n              //console.log(\"ALP STEP 1.151.9 Services a affiché\", xServices, xServices.length);\r\n              setXServices(xServices);\r\n              setXPrestations(xPrestations);\r\n              setCompletDataClicked(xPrestations);\r\n\r\n              setTotalServices(xi);\r\n\r\n              setIsPending(false);\r\n            },\r\n            catch: (error) => {\r\n              console.log(error);\r\n              setIsPending(false);\r\n            },\r\n          });\r\n        } else {\r\n          setIsPending(false);\r\n        }\r\n      } else {\r\n        msgErrors({\r\n          codePostal: !(filterMap.codePostal.latitude && filterMap.codePostal.value),\r\n        });\r\n        setIsPending(false);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const getUniverse = () => {\r\n    const id = slugIdUniverse.split(\"-\").pop();\r\n    if (id) {\r\n      connector({\r\n        method: \"get\",\r\n        url: `${endPoints.ANONYMOUS_UNIVERSE}${id}/categories`,\r\n        success: (response) => {\r\n          const arrayObj = response.data || { categories: [] };\r\n          setUniverse(arrayObj);\r\n\r\n          let cpFilter = { ...filter };\r\n          cpFilter.category.options = [];\r\n\r\n          cpFilter.category.value = null;\r\n          cpFilter.subCategory.value = null;\r\n          cpFilter.subCategory.options = [];\r\n\r\n          if (response.data?.nameCategory) {\r\n            cpFilter.category.label = response.data.nameCategory;\r\n          }\r\n\r\n          if (response.data?.nameSubCategory) {\r\n            cpFilter.subCategory.label = response.data.nameSubCategory;\r\n          }\r\n\r\n          if (response.data?.requireSearchSubCategory != undefined) {\r\n            cpFilter.universe.requireSearchSubCategory =\r\n              response.data.requireSearchSubCategory;\r\n          }\r\n\r\n          for (let i = 0; i < arrayObj.categories.length; i++) {\r\n            let o = arrayObj.categories[i];\r\n\r\n            if (o.id == defaultCategory) {\r\n              cpFilter.category.value = defaultCategory;\r\n              cpFilter.subCategory.value = defaultSubCategory;\r\n              for (let j = 0; j < o.children.length; j++) {\r\n                cpFilter.subCategory.options.push({\r\n                  label: o.children[j].name,\r\n                  value: o.children[j].id,\r\n                });\r\n              }\r\n            }\r\n            cpFilter.category.options.push({ label: o.name, value: o.id });\r\n          }\r\n          setFilter(cpFilter);\r\n        },\r\n        catch: (error) => {\r\n          console.log(error);\r\n          if (error.response?.data?.code !== undefined) {\r\n            if (error.response.data.code === 401) {\r\n              NotificationManager.error(\"Univers introuvable.\", \"\");\r\n            } else if (error.response.data.message !== undefined) {\r\n              NotificationManager.error(error.response.data.message, \"\");\r\n            }\r\n          }\r\n          setUniverse(null);\r\n        },\r\n      });\r\n    } else {\r\n      NotificationManager.error(\"Quelque chose s'est mal passé.\", \"\");\r\n    }\r\n  };\r\n\r\n  const refreshSubCategory = (cpFilter, cpCategories) => {\r\n    const index = cpCategories.findIndex(\r\n      (cat) => cat.id === cpFilter.category.value\r\n    );\r\n    cpFilter.subCategory.options = [];\r\n    let subCat = [];\r\n    if (index > -1) {\r\n      subCat = cpCategories[index].children;\r\n    } else {\r\n      const allSubCategory = [];\r\n      for (let i = 0; i < cpCategories.length; i++) {\r\n        allSubCategory.push(...cpCategories[i].children);\r\n      }\r\n      subCat = allSubCategory;\r\n    }\r\n    for (let i = 0; i < subCat.length; i++) {\r\n      cpFilter.subCategory.options.push({\r\n        label: subCat[i].name,\r\n        value: subCat[i].id,\r\n      });\r\n    }\r\n    if (cpFilter.category.value) cpFilter.subCategory.value = [];\r\n    return cpFilter;\r\n  };\r\n\r\n  const msgErrors = (e) => {\r\n    const cpFilter = { ...filter };\r\n    if (e.universe !== undefined) {\r\n      cpFilter.universe.error = e.universe;\r\n      cpFilter.universe.infoBull = e.universe;\r\n    }\r\n    if (e.category !== undefined) {\r\n      cpFilter.category.error = e.category;\r\n      cpFilter.category.infoBull = e.category;\r\n    }\r\n    if (e.subCategory !== undefined) {\r\n      cpFilter.subCategory.error = e.subCategory;\r\n      cpFilter.subCategory.infoBull = e.subCategory;\r\n    }\r\n\r\n    if (e.notice !== undefined) NotificationManager.error(e.notice, \"\");\r\n    setFilter(cpFilter);\r\n\r\n    const cpFilterMap = { ...filterMap };\r\n    if (e.codePostal !== undefined) {\r\n      cpFilterMap.codePostal.error = e.codePostal;\r\n      cpFilterMap.codePostal.infoBulle = e.codePostal;\r\n    }\r\n    setFilterMap(cpFilterMap);\r\n  };\r\n\r\n  if (universe === false) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const handleParentEvent = (data, completeData) => {\r\n    // Traiter les données du composant enfant\r\n    setServiceClicked(data);\r\n    if (currentBenefit === data['benefit_to_display']) {\r\n      console.log(\"ALPS 1.01 a refactorer\", completeData);\r\n      console.log(\"ALPS 1.01 a envoyer  a la banner artisan  data\", data);\r\n    }\r\n    else {\r\n      setCurrentBenefit(data['benefit_to_display']);\r\n      getServices(true, 0);\r\n      getBenefit(data['benefit_to_display']);\r\n\r\n\r\n    }\r\n\r\n    setXServiceIsSelected(true);\r\n    // anchor\r\n\r\n    var element_to_scroll_to = document.getElementById('votre_commande');\r\n    if (element_to_scroll_to) element_to_scroll_to.scrollIntoView();\r\n  }\r\n  const getDatafromServiceClick = () => {\r\n    let data = fromServiceClick;\r\n    return (data);\r\n\r\n  }\r\n  const getCompleteDatafromServiceClick = () => {\r\n    let otherData = fromServiceClickCompleteData;\r\n    return (otherData);\r\n\r\n  }\r\n\r\n\r\n\r\n  let dataFromServiceClick = getDatafromServiceClick();\r\n  let dataComplement = getCompleteDatafromServiceClick();\r\n  let labelservice = dataFromServiceClick['name'];\r\n\r\n\r\n  let descriptionService = dataFromServiceClick['description'];\r\n  let sneakers = dataFromServiceClick['name'];\r\n  let maxPrice = dataFromServiceClick['maxPrice'];\r\n  let minPrice = dataFromServiceClick['minPrice'];\r\n  let benefit_to_display = dataFromServiceClick['benefit_to_display'];\r\n  let picture = dataFromServiceClick['picture'];\r\n  let modePriseEnCharge = \"Aucune infos\";\r\n  let typeService = \"non spécifié\";\r\n  let priceQuote = \"0\";\r\n\r\n  // alimentation des datas avec le complement\r\n  Object.entries(dataComplement).forEach(entry => {\r\n    const [key, value] = entry;\r\n    //console.log(\"BYC 1.00 Props\", entry['1']['typeService']);\r\n    //console.log(\"BYC 1.00 Props\", entry['1']['precisionQuote']);\r\n    //console.log(\"BYC 1.00 Props\", entry['1']['id']);\r\n    if (entry['1']['id'] === dataFromServiceClick['id']) {\r\n      modePriseEnCharge = entry['1']['precisionQuote'];\r\n      typeService = entry['1']['typeService'];\r\n      priceQuote = entry['1']['priceQuote'];\r\n\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n  });\r\n\r\n  return (\r\n    <Base>\r\n      {universe ? (\r\n\r\n        <>\r\n          <ContentPageStyle>\r\n            <Container>\r\n              <BannerRepairMan\r\n                universe={universe}\r\n                repairMan={repairMan}\r\n                toggleFilter={toggleFilter}\r\n                setToggleFilter={setToggleFilter}\r\n              />\r\n              {dataGallery.length ? (\r\n                <Row style={{\r\n                  marginLeft: 0, marginTop: 30, marginBottom: 20,\r\n                  overFlow: 'clip',\r\n                  textOverflow: 'ellipsis',\r\n                  paddingBottom: 30, marginBottom: 30, width: '100%', height: '100%', background: 'white', boxShadow: '0px 0px 12px rgba(0, 0, 0, 0.10)'\r\n                }}>\r\n\r\n                  <Col lg={8}>\r\n                    <ContentFichePrestation style={{\r\n                      marginLeft: 0, marginTop: 30, marginBottom: 20\r\n                    }}>\r\n\r\n\r\n                      <div className=\"bloc-realisation\" style={{ width: '150%' }}>\r\n                        <h2 className=\"titre-bloc-prestation\">Réalisations :</h2>\r\n                        <GalerieSlide\r\n                          children={dataGallery}\r\n                          onClick={openLightbox}\r\n                        />\r\n                        <ModalGateway>\r\n                          {stateImage ? (\r\n                            <Modal onClose={closeLightbox}>\r\n                              <Carousel\r\n                                currentIndex={currentImage}\r\n                                views={dataGallery}\r\n                              />\r\n                            </Modal>\r\n                          ) : null}\r\n                        </ModalGateway>\r\n                      </div>\r\n                    </ContentFichePrestation>\r\n                  </Col>\r\n\r\n                </Row>\r\n              ) : (\r\n                <></>\r\n              )}\r\n\r\n\r\n\r\n\r\n\r\n              <Container>\r\n                <Row>\r\n\r\n                  <Col>\r\n                    {!xserviceIsSelected && (\r\n\r\n                      <div style={{ width: '100%', height: '100%', paddingLeft: 20, paddingRight: 20, paddingTop: 10, paddingBottom: 10, background: 'white', boxShadow: '0px 0px 12px rgba(0, 0, 0, 0.10)', borderRadius: 4, flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 13, display: 'inline-flex' }}>\r\n                        <div style={{ height: 137, flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 20, display: 'flex' }}>\r\n                          <div style={{ flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 10, display: 'flex' }}>\r\n                            <div classname=\"titre-proposition\" >Votre commande</div>\r\n                          </div>\r\n\r\n                          <div style={{ width: 298, color: '#A1A1A1', fontSize: 14, fontFamily: 'Poppins', fontStyle: 'italic', fontWeight: '400', wordWrap: 'break-word' }}>Aucune prestation sélectionnée</div>\r\n                          <div style={{ justifyContent: 'flex-start', alignItems: 'center', gap: 78, display: 'inline-flex' }}>\r\n                            <div style={{ paddingLeft: 20, paddingRight: 20, paddingTop: 8, paddingBottom: 8, background: '#89B03D', borderRadius: 2, justifyContent: 'center', alignItems: 'center', gap: 10, display: 'flex' }}>\r\n                              <div style={{ color: 'white', fontSize: 16, fontFamily: 'Poppins', fontWeight: '500', wordWrap: 'break-word' }}>Choisissez une prestation</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Col>\r\n                  {xserviceIsSelected && false && (\r\n\r\n                    <Col lg={4} className=\"proposition-bloc\">\r\n\r\n                      <PropositionStyle>\r\n                        <div className=\"content-proposition\">\r\n                          <div className=\"bloc-titre-fiche mb-3\">\r\n                            <p className=\"titre-proposition\">Nom du service</p>\r\n                            <h1 className=\"titre-fiche-prestation\">\r\n                              {benefit?.service?.name}\r\n                            </h1>\r\n                          </div>\r\n                          <p className=\"titre-proposition\">\r\n                            Proposition(s) du réparateur :\r\n                          </p>\r\n                          {isTabletOrMobile || true ? (\r\n                            <Select\r\n                              {...state.deliveryModes}\r\n                              onChange={(val) => {\r\n                                const cpState = { ...state };\r\n                                cpState.deliveryModes.value = val.value;\r\n                                setState(cpState);\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <RadioButton\r\n                              {...state.deliveryModes}\r\n                              onChange={(val) => {\r\n                                const cpState = { ...state };\r\n                                cpState.deliveryModes.value = val.value;\r\n                                setState(cpState);\r\n                              }}\r\n                            />\r\n                          )}\r\n\r\n                          {benefit.typeService === \"forfait\" && (\r\n                            <ButtonDef\r\n                              textButton=\"Commander\"\r\n                              onClick={() => checkClient()}\r\n                            />\r\n                          )}\r\n\r\n                          {benefit.typeService === \"devis\" && (\r\n                            <>\r\n                              <div className=\"bloc-price-devis\">\r\n\r\n                                <span className=\"price-devis\">\r\n                                  {benefit.priceQuote\r\n                                    ? `${benefit.priceQuote?.toFixed(2)} € TTC`\r\n                                    : \"GRATUIT\"}\r\n                                </span>\r\n                              </div>\r\n                              {benefit.precisionQuote && (\r\n                                <div className=\"bloc-precision\">\r\n                                  <p className=\"titre-precision\">\r\n                                    Précision de prise en charge du devis:\r\n                                  </p>\r\n                                  <p>{benefit.precisionQuote}</p>\r\n                                </div>\r\n                              )}\r\n                              <ButtonDef\r\n                                textButton=\"Faire un devis\"\r\n                                onClick={() => checkClient()}\r\n                              />\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </PropositionStyle>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n                <Row>\r\n                  {xserviceIsSelected && (\r\n                    <Col    style={{overFlow: 'hidden',textOverflow: 'ellipsis'}}  >\r\n                      <div style={{ color: '#89B03D', fontSize: 24, fontFamily: 'Helvetica Neue LT Std', fontWeight: '500', wordWrap: 'break-word' }}></div>\r\n                      <h1 className=\"titre-fiche-prestation\" style={{ color: '#89B03D', fontSize: 24 }} id=\"votre_commande\">\r\n                        Votre commande\r\n                      </h1>\r\n                      <div style={{\r\n                        width: '100%', height: '100%', padding: 20, background: 'white', boxShadow: '0 4px 51px 0 rgba(182, 172, 251, 0.42)', borderRadius: 4,\r\n                        flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', display: 'inline-flex'\r\n                      }}>\r\n                        <div style={{ width: '95%', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 45, display: 'inline-flex' }}>\r\n\r\n                          <div style={{ justifyContent: 'flex-start', alignItems: 'center', gap: 20, display: 'flex' }}>\r\n                            <div style={{ height: 90, justifyContent: 'flex-start', alignItems: 'center', gap: 9, display: 'flex' }}>\r\n                              <div style={{ width: 300, height: 90, flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'flex-start', gap: 4, display: 'inline-flex' }}>\r\n                                <div className=\"bloc-titre-fiche mb-3\">\r\n                                  <p className=\"titre-proposition\">Nom du service</p>\r\n                                  <h1 className=\"titre-fiche-prestation \" style={{ fontSize: 20 }}>\r\n                                    {benefit?.service?.name}\r\n                                  </h1>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"bloc-titre-fiche mb-3\">\r\n                              <p className=\"titre-proposition\">Type de service</p>\r\n                              <h1 className=\"titre-fiche-prestation \" style={{ fontSize: 20 }}>   {benefit?.typeService} </h1>\r\n                              {(maxPrice > 0) &&\r\n                                <span style={{ color: '#929292', fontSize: 14, fontWeight: '400', wordWrap: 'break-word' }}>\r\n\r\n                                  Fourchette estimée :\r\n\r\n                                  <br />{maxPrice}€ - {minPrice}€*</span>\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"bloc-titre-fiche\" style={{ width: '30%' }}>\r\n                            <p className=\"titre-proposition\">  Propositions du réparateur </p>\r\n                            <p className=\"titre-precision\" style={{ color: '#373737', fontSize: 20, fontWeight: '400' }}>\r\n                              {/* Précision de prise en charge du devis: */}\r\n\r\n                              {benefit.typeService === \"devis\" && (\r\n                                <>\r\n                                  <div className=\"bloc-price-devis\" style={{ color: '#373737', fontSize: 16, width: \"90%\" }}>\r\n                                    {benefit.priceQuote\r\n                                      ? `${benefit.priceQuote?.toFixed(2)} € TTC`\r\n                                      : \"\"}\r\n\r\n                                  </div>\r\n\r\n                                  {benefit.precisionQuote && (\r\n                                    <div className=\"bloc-precision\" style={{ fontSize: 14, width: \"90%\" }}>\r\n                                      <p>{benefit.precisionQuote}</p>\r\n                                    </div>\r\n                                  )}\r\n\r\n\r\n                                </>\r\n\r\n                              )}\r\n\r\n\r\n                            </p>\r\n                          </div>\r\n\r\n\r\n\r\n                          {isTabletOrMobile ? (\r\n                            <Col style={{ width: '100%' }}>\r\n                              <Select\r\n                                {...state.deliveryModes}\r\n                                onChange={(val) => {\r\n                                  const cpState = { ...state };\r\n                                  cpState.deliveryModes.value = val.value;\r\n                                  setState(cpState);\r\n                                }}\r\n                              /></Col>\r\n                          ) : (\r\n                            <Col style={{ width: '100%' }}>\r\n                              <RadioButton\r\n\r\n                                {...state.deliveryModes}\r\n                                onChange={(val) => {\r\n                                  const cpState = { ...state };\r\n                                  cpState.deliveryModes.value = val.value;\r\n                                  setState(cpState);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                          )}\r\n\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Container className=\"col-md-8 col-sm-3 col-lg-8\" style={{ marginTop: 75 }}>\r\n                      <div style={{\r\n                        textAlign: 'center', marginBottom: 25, paddingLeft: 20, color: '#465a61', lineHeight: 2\r\n                      }}><div style={{ color: '#4E5860', fontSize: 32, fontFamily: 'Poppins', fontWeight: '700', wordWrap: 'break-word' }}>\r\n                          {benefit.typeService === \"forfait\" && (\r\n                            <>\r\n                              <button\r\n\r\n                                style={{\r\n\r\n                                  backgroundColor: '#89B03D',\r\n                                  boxShadow: '3px 3px 20px 0 rgba(182,172,251,0.42)',\r\n                                  borderRadius: 20,\r\n                                  color: '#fff',\r\n                                  fontFamily: \"Poppins,sans-serif\",\r\n                                  fontWeight: 700,\r\n                                  border: '1px solid #89B03D',\r\n                                  padding: '6px 20px 20px',\r\n                                  fontSize: 14,\r\n                                  height: '45px',\r\n                                  transition: '0.5s ease-in-out',\r\n                                  fontSize: 14\r\n\r\n                                }}\r\n\r\n                                onClick={() =>\r\n                                  checkClient()\r\n                                } >Commander</button>\r\n\r\n\r\n                            </>\r\n                          )}\r\n                          {benefit.typeService === \"devis\" && (\r\n                            <>\r\n                              <button\r\n\r\n                                style={{\r\n\r\n                                  backgroundColor: '#89B03D',\r\n                                  boxShadow: '3px 3px 20px 0 rgba(182,172,251,0.42)',\r\n                                  borderRadius: 20,\r\n                                  color: '#fff',\r\n                                  fontFamily: \"Poppins,sans-serif\",\r\n                                  fontWeight: 700,\r\n                                  border: '1px solid #89B03D',\r\n                                  padding: '6px 20px 20px',\r\n                                  fontSize: 14,\r\n                                  height: '45px',\r\n                                  transition: '0.5s ease-in-out',\r\n                                  fontSize: 14\r\n\r\n                                }}\r\n\r\n                                onClick={() =>\r\n                                  checkClient()\r\n                                } >Demander un devis</button>\r\n\r\n\r\n                            </>\r\n                          )}\r\n\r\n                        </div></div>\r\n                    </Container>\r\n\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Container>\r\n\r\n              {isDesktopOrLaptop && (\r\n                <Breadcrumb\r\n                  crumbs={[\r\n                    { name: \"Accueil\", path: \"/\" },\r\n                    { name: universe.name, path: \"/univers/\" + slugIdUniverse },\r\n                  ]}\r\n                />\r\n              )}\r\n\r\n              <Container className=\"col-md-8 col-sm-3 col-lg-8\" style={{ marginTop: 0 }}>\r\n                <div style={{\r\n                  textAlign: 'center', marginBottom: 25, paddingLeft: 20, color: '#465a61', lineHeight: 2\r\n                }}><div style={{ color: '#4E5860', fontSize: 32, fontFamily: 'Poppins', fontWeight: '700', wordWrap: 'break-word' }}>Découvrez mes prestations </div></div>\r\n\r\n\r\n\r\n              </Container>\r\n\r\n              {isTabletOrMobile && (\r\n                <div\r\n                  className=\"btn-toggle-filter toggel-filter-universe\"\r\n                  onClick={() => {\r\n                    setToggleFilter(!toggleFilter);\r\n                  }}\r\n                >\r\n                  <SearchIcon /> Rechercher une prestation\r\n                </div>\r\n              )}\r\n\r\n              {isDisplayListeProduits && (\r\n                <BlocFilterStyle className=\"filter-universe\" open={toggleFilter} style={{ display: 'none' }}>\r\n                  {isTabletOrMobile && (\r\n                    <button\r\n                      className=\"menu-burger is-opened\"\r\n                      onClick={() => {\r\n                        setToggleFilter(false);\r\n                      }}\r\n                    >\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                    </button>\r\n                  )}\r\n\r\n                  <div className=\"item-filter\">\r\n                    <Select\r\n                      {...filter.universe}\r\n                      element={filter.universe}\r\n                      setElement={(element) => {\r\n                        const cpFilter = { ...filter };\r\n                        cpFilter.universe = element;\r\n                        setFilter(cpFilter);\r\n                      }}\r\n                      onChange={(e) => {\r\n                        if (e.value && e.slug) {\r\n                          document.dispatchEvent(\r\n                            new CustomEvent(\"Universe\", {\r\n                              detail: {\r\n                                url: `/univers/${e.slug}-${e.value}`,\r\n                                id: e.value,\r\n                              },\r\n                            })\r\n                          );\r\n                          history.push(`/univers/${e.slug}-${e.value}`);\r\n\r\n                          msgErrors({\r\n                            universe: false,\r\n                            category: false,\r\n                            subCategory: false,\r\n                            codePostal: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"item-filter\">\r\n                    <Select\r\n                      {...filter.category}\r\n                      element={filter.category}\r\n                      setElement={(element) => {\r\n                        const cpFilter = { ...filter };\r\n                        cpFilter.category = element;\r\n                        setFilter(cpFilter);\r\n                      }}\r\n                      onChange={(e) => {\r\n                        if (filter.category.value !== e.value) {\r\n                          let cpFilter = { ...filter };\r\n                          cpFilter.category.value = e.value;\r\n                          cpFilter.category.error = false;\r\n                          localStorage.setItem(\"defaultCategory\", e.value);\r\n                          cpFilter = refreshSubCategory(\r\n                            cpFilter,\r\n                            universe.categories\r\n                          );\r\n                          if (e.value == \"\") {\r\n                            cpFilter.subCategory.value = \"\";\r\n                          }\r\n                          cpFilter.subCategory.error = false;\r\n                          cpFilter.subCategory.infoBull = false;\r\n                          setFilter(cpFilter);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  {filter.category.value && (\r\n                    <div className=\"item-filter\">\r\n                      <SelectCat\r\n                        {...filter.subCategory}\r\n                        element={filter.subCategory}\r\n                        setElement={(element) => {\r\n                          const cpFilter = { ...filter };\r\n                          cpFilter.subCategory = element;\r\n                          setFilter(cpFilter);\r\n                        }}\r\n                        onChangeCallback={(response) => {\r\n                          const cpFilter = { ...filter };\r\n                          cpFilter.subCategory.value = response;\r\n                          cpFilter.subCategory.error = false;\r\n                          localStorage.setItem(\r\n                            \"defaultSubCategory\",\r\n                            JSON.stringify(response)\r\n                          );\r\n                          setFilter(cpFilter);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* <div className=\"item-filter\">\r\n                  <InputSearchKeyword\r\n                    filter={filter}\r\n                    setFilter={setFilter}\r\n                    universe={universe}\r\n                  />\r\n                </div> */}\r\n\r\n                  <div className=\"item-filter\">\r\n                    <InputAutoComplete\r\n                      filter={filterMap}\r\n                      setFilter={setFilterMap}\r\n                      placeIsSelected={placeIsSelected}\r\n                      setPlaceIsSelected={setPlaceIsSelected}\r\n                      isPendingLatLng={isPendingLatLng}\r\n                      setIsPendingLatLng={setIsPendingLatLng}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"item-filter btn-filter-banner\">\r\n                    <button\r\n                      className=\"btn-search-filter\"\r\n                      onClick={() => {\r\n                        if (\r\n                          isTabletOrMobile &&\r\n                          placeIsSelected &&\r\n                          filterMap.codePostal.latitude &&\r\n                          filterMap.codePostal.value\r\n                        ) {\r\n                          setToggleFilter(false);\r\n                        }\r\n\r\n                        if (\r\n                          filter.universe.value &&\r\n                          filter.category.value &&\r\n                          ((Array.isArray(filter.subCategory.value) &&\r\n                            filter.subCategory.value.length > 0) ||\r\n                            !filter.universe.requireSearchSubCategory) &&\r\n                          placeIsSelected\r\n                        ) {\r\n                          getServices(false, 0);\r\n                        } else {\r\n                          msgErrors({\r\n                            universe: !filter.universe.value,\r\n                            category:\r\n                              filter.universe.value && !filter.category.value,\r\n                            subCategory:\r\n                              filter.universe.value &&\r\n                              filter.category.value &&\r\n                              !(\r\n                                Array.isArray(filter.subCategory.value) &&\r\n                                filter.subCategory.value.length > 0\r\n                              ) &&\r\n                              filter.universe.requireSearchSubCategory,\r\n                            codePostal: !placeIsSelected,\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      {isDesktopOrLaptop && (\r\n                        <>\r\n                          <SearchIcon />\r\n                        </>\r\n                      )}\r\n                      {isTabletOrMobile && <>Recherche</>}\r\n                    </button>\r\n                  </div>\r\n                </BlocFilterStyle>\r\n              )}\r\n\r\n              <ArtisanNavListePrestations\r\n                data={xServices}\r\n                completeData={fromServiceClickCompleteData}\r\n                perPage={perPage}\r\n                setPerPage={setPerPage}\r\n                pageIndex={pageIndex}\r\n                setPageIndex={setPageIndex}\r\n                totalItemsLength={totalServices}\r\n                pagination={true}\r\n                isLoading={isPending}\r\n                handleParentEvent={handleParentEvent}\r\n              >\r\n              </ArtisanNavListePrestations>\r\n            </Container>\r\n          </ContentPageStyle>\r\n        </>\r\n      ) : (\r\n        <FoundPage\r\n          noBase\r\n          title=\"Univers en cours de développement\"\r\n          image={imgMaintenence}\r\n        />\r\n      )\r\n      }\r\n    </Base >\r\n  );\r\n}\r\n"
        }
    ]
}