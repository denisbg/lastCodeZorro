{
    "sourceFile": "src/views/front/tunnel/universeStep/initmap.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1706610502829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1706610502829,
            "name": "Commit-0",
            "content": "/**\r\n * @license\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n * SPDX-License-Identifier: Apache-2.0\r\n */\r\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\r\n\r\nasync function initMap() {\r\n  // Request needed libraries.\r\n  const { Map, InfoWindow } = await google.maps.importLibrary(\"maps\") as google.maps.MapsLibrary;\r\n  const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary(\"marker\") as google.maps.MarkerLibrary;\r\n\r\n  const map = new google.maps.Map(\r\n    document.getElementById(\"map\") as HTMLElement,\r\n    {\r\n      zoom: 3,\r\n      center: { lat: -28.024, lng: 140.887 },\r\n      mapId: 'DEMO_MAP_ID',\r\n    }\r\n  );\r\n\r\n  const infoWindow = new google.maps.InfoWindow({\r\n    content: \"\",\r\n    disableAutoPan: true,\r\n  });\r\n\r\n  // Create an array of alphabetical characters used to label the markers.\r\n  const labels = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n  // Add some markers to the map.\r\n  const markers = locations.map((position, i) => {\r\n    const label = labels[i % labels.length];\r\n    const pinGlyph = new google.maps.marker.PinElement({\r\n      glyph: label,\r\n      glyphColor: \"white\",\r\n    })\r\n    const marker = new google.maps.marker.AdvancedMarkerElement({\r\n      position,\r\n      content: pinGlyph.element,\r\n    });\r\n\r\n    // markers can only be keyboard focusable when they have click listeners\r\n    // open info window when marker is clicked\r\n    marker.addListener(\"click\", () => {\r\n      infoWindow.setContent(position.lat + \", \" + position.lng);\r\n      infoWindow.open(map, marker);\r\n    });\r\n    return marker;\r\n  });\r\n\r\n  // Add a marker clusterer to manage the markers.\r\n  new MarkerClusterer({ markers, map });\r\n}\r\n\r\nconst locations = [\r\n  { lat: -31.56391, lng: 147.154312 },\r\n  { lat: -33.718234, lng: 150.363181 },\r\n  { lat: -33.727111, lng: 150.371124 },\r\n  { lat: -33.848588, lng: 151.209834 },\r\n  { lat: -33.851702, lng: 151.216968 },\r\n  { lat: -34.671264, lng: 150.863657 },\r\n  { lat: -35.304724, lng: 148.662905 },\r\n  { lat: -36.817685, lng: 175.699196 },\r\n  { lat: -36.828611, lng: 175.790222 },\r\n  { lat: -37.75, lng: 145.116667 },\r\n  { lat: -37.759859, lng: 145.128708 },\r\n  { lat: -37.765015, lng: 145.133858 },\r\n  { lat: -37.770104, lng: 145.143299 },\r\n  { lat: -37.7737, lng: 145.145187 },\r\n  { lat: -37.774785, lng: 145.137978 },\r\n  { lat: -37.819616, lng: 144.968119 },\r\n  { lat: -38.330766, lng: 144.695692 },\r\n  { lat: -39.927193, lng: 175.053218 },\r\n  { lat: -41.330162, lng: 174.865694 },\r\n  { lat: -42.734358, lng: 147.439506 },\r\n  { lat: -42.734358, lng: 147.501315 },\r\n  { lat: -42.735258, lng: 147.438 },\r\n  { lat: -43.999792, lng: 170.463352 },\r\n];\r\n\r\ninitMap();\r\nexport { };\r\n"
        }
    ]
}